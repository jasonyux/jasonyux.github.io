<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator><link href="/lectures/feed.xml" rel="self" type="application/atom+xml" /><link href="/lectures/" rel="alternate" type="text/html" /><updated>2023-01-22T18:00:58-05:00</updated><id>/lectures/feed.xml</id><title type="html">Lecture Notes</title><subtitle>An inexhaustive collection of markdown/latex(PDF) notes that I took since college. </subtitle><entry><title type="html">APPH4010 Intro to Nuclear</title><link href="/lectures/2022@columbia/APPH4010_Intro_to_Nuclear.html/" rel="alternate" type="text/html" title="APPH4010 Intro to Nuclear" /><published>2022-12-20T00:00:00-05:00</published><updated>2022-12-20T00:00:00-05:00</updated><id>/lectures/2022@columbia/APPH4010_Intro_to_Nuclear</id><content type="html" xml:base="/lectures/2022@columbia/APPH4010_Intro_to_Nuclear.html/"><![CDATA[<p>Equations and Concepts for Intro to Nuclear</p>

<h1 id="1-basic-concepts">1. Basic Concepts</h1>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Name of Concept/Equation</th>
      <th style="text-align: left">Definition/Equation</th>
      <th style="text-align: left">Notes</th>
      <th style="text-align: left">Example</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">Isotopes</td>
      <td style="text-align: left">same atomic number but different neutrons</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Electron Volt</td>
      <td style="text-align: left">energy equal to the amount gained to accelerate rest electron through a potential difference of 1 volt</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Atomic Mass Unit/Dalton</td>
      <td style="text-align: left">1/12 of the mass of a neutral atom of $^{12}_6C$</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Magnetic Moment</td>
      <td style="text-align: left">Magnetic Dipole Moment associated with spin of nucleus</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Spin Quantum Number</td>
      <td style="text-align: left">nucleons have spin of 1/2 in units of $h / (2\pi)$</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Mass to Energy</td>
      <td style="text-align: left">$E^2 = p^2c^2 + m_0^2 c^2$</td>
      <td style="text-align: left">$m_0$ is rest mass, and if at rest, $p=0$</td>
      <td style="text-align: left">$E_{\mathrm{electron}}=511keV$</td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">$E_{\mathrm{amu}}=931.5keV$</td>
    </tr>
    <tr>
      <td style="text-align: center">Binding Energy</td>
      <td style="text-align: left">Energy required to separate its constituent nucleus</td>
      <td style="text-align: left">using $E=mc^2$</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$B = [Z\cdot m_H + N\cdot m_N - m(A,Z)]c^2$</td>
      <td style="text-align: left">energy used for binding, so the actual atomic mass $m(A,Z)$ is smaller</td>
      <td style="text-align: left">consider for carbon $^{12}_6C$ we have $m(A,Z)=12$, but $m_H=1.007825$ and $m_N=1.008665$</td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">$m_H$ is mass of hydrogen so that it includes weight of electron</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Binding Energy Curve</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221013004334846.png" alt="image-20221013004334846" /></td>
      <td style="text-align: left">$B/A$ plotted because binding energy increases just as there are more proton to hold</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">the more $A$, much much more $B$ is needed due to short range of internuclear force</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">but the above only works until a point where there is only a fixed number of neutrons affecting a proton</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">since higher $B$ also means more energy required to break = more energy released when making bonds, we want fission to go from right</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Nuclide Stability Curve</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221013005606999.png" alt="image-20221013005606999" /></td>
      <td style="text-align: left">more neutrons is needed for more protons, hence this stability curve in the middle</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">so above it is more proton then needed = proton rich</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Properties of Radioactivity</td>
      <td style="text-align: left">Decay is a random process, but the probability of occurring can be modelled, and macro quantity such as $t_{1/2}$ can be computed</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">usually an unstable nuclide “parent” transforms into a more stable nuclide “daughter”</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">radioactivity measured in Becquerel = 1 decay per second</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">often heavy nuclei gives $\alpha$, and light nuclei $\beta$</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Alpha Emission Properties</td>
      <td style="text-align: left">$(A,Z) \to (A-4, Z-2)$</td>
      <td style="text-align: left">preferred by heavy nuclides</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$\alpha$-particle is preferred because it is <strong>very</strong> stable, hence net effect of decay releases energy</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">(see below)</td>
    </tr>
    <tr>
      <td style="text-align: center">Decay Energy Released</td>
      <td style="text-align: left">$Q = \Delta m c^2 =  (m_{\mathrm{left}}-m_{\mathrm{right}})c^2$</td>
      <td style="text-align: left">if net mass loss = net energy released = RHS more stable = RHS less actual mass</td>
      <td style="text-align: left">U(238)$\to$ Th(234) + He(4)</td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$Q_\alpha = \mathrm{KE}<em>{\mathrm{daughter}}+ \mathrm{KE}</em>{\mathrm{\alpha}}$</td>
      <td style="text-align: left">for alpha decay</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$Q_\alpha = E_\alpha[1+ \frac{m_\alpha}{m_D}]$</td>
      <td style="text-align: left">conservation of momentum</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">since $Q_\alpha,m_\alpha/m_D$ is known, this means KE energy spectrum for $\alpha$ will be discrete in this case</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Beta Decay Properties</td>
      <td style="text-align: left">for proton-rich nuclides, often see $\beta^+$ decay or electron capture to convert $P \to N$</td>
      <td style="text-align: left">$p \to n + e^+ + \nu$</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">$p+e^- \to n + \nu$</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">otherwise, light nuclides often have $\beta^-$, which is $N\to P$</td>
      <td style="text-align: left">$n \to p + e^- + \bar{\nu}$</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221013014759439.png" alt="image-20221013014759439" /></td>
      <td style="text-align: left">KE Spectrum of electron becomes continuous because you have three particles released</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Gamma Decay Property</td>
      <td style="text-align: left">occurs when excited nucleus lose energy $\Delta E$ as photons</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Rate of Radioactive Decay</td>
      <td style="text-align: left">$\frac{dN}{dt} = -\lambda N$</td>
      <td style="text-align: left">Given that macroscopically the rate is proportional to number of radioactive nuclei</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$N(t)=N_0e^{-\lambda t}$</td>
      <td style="text-align: left">$\lambda$ is probability per unit time that a nuclide decays</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$A=\lambda N$</td>
      <td style="text-align: left">since $\lambda$ is prob/time, activity is rate of decay of a sample, measured in Becquerel</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Relativistic Effect</td>
      <td style="text-align: left">$\Delta T’ = \gamma \Delta T$</td>
      <td style="text-align: left">high energy particle emitted so that $v \approx c$, then the actual half life becomes $\Delta T’$</td>
      <td style="text-align: left">$v=0.995c$ when $\nu$ is released with large energy</td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$\gamma = \frac{1}{\sqrt{1-v^2/c^2}}$</td>
      <td style="text-align: left">is Lorentz fraction</td>
      <td style="text-align: left"> </td>
    </tr>
  </tbody>
</table>

<h1 id="5-interaction-of-radiation-and-matter">5. Interaction of Radiation and Matter</h1>

<p>Nuclear radiation normally consists of ==any particle with energy== or photons (particle radiation is the <strong>radiation of energy by means of fast-moving subatomic particles</strong>). Its <strong>interactions with matter</strong> gives us opportunity for all experimental work. Therefore, this chapter we consider:</p>

<ul>
  <li>how charged particle interact with matter</li>
  <li>how uncharged particle interact with matter</li>
  <li>how photons interact with matter</li>
</ul>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Name of Concept/Equation</th>
      <th style="text-align: left">Definition/Equation</th>
      <th style="text-align: left">Notes</th>
      <th style="text-align: left">Example</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">Num Atoms and Atom Density</td>
      <td style="text-align: left">$N = \frac{m}{M}N_A$</td>
      <td style="text-align: left">$m$ is mass of the substance you care, $M$ is the atomic weight of it</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$N/V = \frac{m}{V\cdot M}N_A = \frac{\rho}{M}N_A$</td>
      <td style="text-align: left">$\rho$ is the density of the substance you are</td>
      <td style="text-align: left">$H_2O$ has $\rho \approx 1g/\mathrm{cm}^3$, and $M=18.0153$</td>
    </tr>
    <tr>
      <td style="text-align: center">Heavy Charged Particles Interaction Properties</td>
      <td style="text-align: left">Two Ways of Interaction:<br />1) its electric field can ionize atoms in its passage<br />2) collision (e.g. with electrons)</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">Deflect very little from path because its heavy</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">Well-defined range, depending on its energy, mass, charge, and the stopping medium</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$\Delta E \approx E_\alpha(\frac{4m_e}{M_\alpha})$</td>
      <td style="text-align: left">max energy lost per collision</td>
      <td style="text-align: left">incident alpha particle</td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">Though short range, as it can produce ionization = excited nuclei produces x-rays = need thicker $&gt;R$ protection layer</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Stopping Power</td>
      <td style="text-align: left">Rate at which a particle loses energy per unit path length</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221013235440171.png" alt="image-20221013235440171" /></td>
      <td style="text-align: left">Bethe-Bloch Formula</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Energy Dependence of Stopping Power</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221013235351944.png" alt="image-20221013235351944" style="zoom:50%;" /></td>
      <td style="text-align: left">variation of stopping power with energy if incident proton. This general shape works for any charged ion</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221025164843434.png" alt="image-20221025164843434" style="zoom: 33%;" /></td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$\frac{dE}{dx} \approx \frac{\mathrm{const}}{E^k},k\approx 0.8$</td>
      <td style="text-align: left">the faster the ion travels, the less chance it interacts with stopping medium, hence negative slope</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$R=\int_{E}^0 dE/(dE/dx) \propto E^{k+1}$</td>
      <td style="text-align: left">derived from above</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Projectile Dependence of Stopping Power</td>
      <td style="text-align: left">$dE/dx \propto z^2 f(v)$</td>
      <td style="text-align: left">depends on particle charge</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$R \propto (m/z^2) F(v)$</td>
      <td style="text-align: left">range depends on incident particle mass and charge, derived from above</td>
      <td style="text-align: left">if two charged particle has the same energy, then $R_1/R_2 = (m_1/m_2)(z_2/z_1)^2$ because velocity is the same</td>
    </tr>
    <tr>
      <td style="text-align: center">Stopping Medium Dependence of Stopping Power</td>
      <td style="text-align: left">$\frac{R_1}{R_2} \approx \frac{\rho_2 \sqrt{A_1}}{\rho_1 \sqrt{A_2}}$</td>
      <td style="text-align: left">depends on stopping medium’s density and mass number</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Bragg Curve</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221014000422271.png" alt="image-20221014000422271" /></td>
      <td style="text-align: left">utilize the fact that stopping power increases when energy decreases</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">particle travels slower = can produce more ions per unit path</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">hence Brag Peak = peak stopping power = peak ionization energy</td>
      <td style="text-align: left">hit tumor at this distance</td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">when all energy is lost, it does nothing and stops/halts</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Electrons/$\beta$-particle Properties</td>
      <td style="text-align: left">Two Ways of Interaction:<br />1) its electric field can ionize atoms in its passage<br />2) collision (e.g. with electrons)</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">a zig-zag path</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">a much faster speed = less stopping force</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">less well-defined range, hence uses mean-free-path</td>
      <td style="text-align: left">mean free path is the average distance over which a moving particle travels before substantially changing its direction or energy</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">you can also use max-range $R_{\max}$ as a measure, in which case$\rho  R_{\max} \propto E_{\max}$</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Stopping Power v.s. Electron Energy</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221014142135607.png" alt="image-20221014142135607" /></td>
      <td style="text-align: left">as electrons accelerate by rapidly changing directions, it emits a lot of Bremsstrahlung radiation meaning $-\frac{dE}{dx}_{\mathrm{rad}}$ contributes a lot to stopping power</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Reaction Cross Sections</td>
      <td style="text-align: left">measures area within which if you hit the particle near the target $T$, reaction will occur</td>
      <td style="text-align: left">can be used for both Neutron and Photon</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">hence measures how strongly target $T$ reaction will occur</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Microscopic Cross Section</td>
      <td style="text-align: left">$\sigma = \sigma(E)$</td>
      <td style="text-align: left">$E$ is energy of incident particle</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">unit is uslaly $\mathrm{cm}^2$ or in Barnes ($10^{-24}\mathrm{cm}^2$)</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$\sigma_{\mathrm{total}} = \sigma_{\mathrm{abs}}+\sigma_{\mathrm{sca}}+\sigma_{\mathrm{n,2n}}+…$</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Reaction Rate</td>
      <td style="text-align: left">$R=N \cdot \sigma \phi = \Sigma \phi$</td>
      <td style="text-align: left">$N$ is atomic density, $\phi$ is particle flux (particle per cm$^2$ per second)</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">$\sigma \phi$ measures number of reactions triggered per second</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Macroscopic Cross Section</td>
      <td style="text-align: left">$\Sigma \equiv N \sigma$</td>
      <td style="text-align: left">is the macroscopic cross section</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Gamma Ray Interaction Properties</td>
      <td style="text-align: left">Primary ways of interaction:<br />1) photo-electric effect<br />2) Campton scattering<br />3) pair production</td>
      <td style="text-align: left">because gamma rays are very energetic and they are photons</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">we consider attenuation coefficient $\mu_m$ as a measure of <strong>probability the photon interact with material = photon vanished</strong></td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Photoelectric Effect</td>
      <td style="text-align: left">photon absorbed by electrons (near nucleus for conservation of momentum) to be ejected</td>
      <td style="text-align: left">hence that photon disappeared = attenuated</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$T=E_\gamma - B_e = hv - B_e$</td>
      <td style="text-align: left">$T$ is the emitted photoelectron and $B_e$ is the binding energy of the electron</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">secondary reactions might occur if<br />1) rest of the electrons rearrange themselves for de-excitation and release $\gamma$-ray<br />1) eject low energy electrons for de-excitation and hence <strong>Auger</strong> electrons  to deal with the excess energy</td>
      <td style="text-align: left">The Auger effect is a physical phenomenon in which the filling of an inner-shell vacancy of an atom, by an electron, is accompanied by the <em>emission of another electron</em> from the same atom <em>instead of releasing energy</em>.</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$\sigma_{PE} \propto z^5 / E_\gamma^{3.5}$</td>
      <td style="text-align: left">free electron = low probability of reaction</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">higher electron binding energy = more tightly bound electron has a higher chance (also for <strong>conservation of momentum</strong>)</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Campton Scattering</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221014150725380.png" alt="image-20221014150725380" /></td>
      <td style="text-align: left">$\gamma$ ray scattered off electron and hence we get an electron recoiling and a lower energy photon</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$T = E_\gamma - E_{\gamma ‘} = E_{\text{KE of elec}}$</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$E_{\gamma ‘} = E_{\text{KE of elec}} = E_e - m_ec^2$</td>
      <td style="text-align: left">for $E_e$ is the total energy of the recoil electron</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$E_{\gamma ‘} = \frac{E_\gamma}{1+(E_\gamma/mc^2)(1-\cos \theta)}$</td>
      <td style="text-align: left">energy of scattered photon from conservation of energy and momentum</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">a problem for shielding in real life as $\gamma$ photon didn’t disappear</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Pair Production</td>
      <td style="text-align: left">creates an electron-positron pair (when heavy nucleus is near to conserve momentum)</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$E_\gamma = 2m_ec^2 + T_- + T_+$</td>
      <td style="text-align: left">$2m_ec^2$ is the rest mass energy of positron and electron</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">has secondary effect when positron recombine with electron $\to$ annihilate and produce two oppositely traveling photon $\to$ can do PE or scattering</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Photon Attenuation</td>
      <td style="text-align: left">from the three mechanism above, photon either disappear or scattered = not observed by detector = attenuated</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221014151515070.png" alt="image-20221014151515070" /></td>
      <td style="text-align: left">can measure and find out attenuation dependence on the three mechanism</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221014151526416.png" alt="image-20221014151526416" /></td>
      <td style="text-align: left">difficult to measure</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Collimated Photon Attenuation</td>
      <td style="text-align: left">$dI = - N\sigma I dx$</td>
      <td style="text-align: left">$x$ is thickness of the material, $N$ is material atomic density, and $\sigma$ is interaction cross section</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$\mu \equiv N\sigma$</td>
      <td style="text-align: left">linear attenuation coefficient</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">represents the probability per unit path length of a photon undergoing an interaction that would remove it from the beam</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$I = I_0 e^{-N\sigma x} = I_0 e^{-\mu x}$</td>
      <td style="text-align: left">intensity observed is $I$</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$\mu_m = \mu / \rho$</td>
      <td style="text-align: left">mass attenuation coefficient</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Photon Attenuation Coefficient Graph</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221014152131327.png" alt="image-20221014152131327" /></td>
      <td style="text-align: left">again, there are three phenomenon contributing to $\sigma$ hence $\mu_m$</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Neutron Interactions</td>
      <td style="text-align: left">A variety of interactions but mostly nuclear reactions:<br />1) fission if neutrons at few MeV<br />2) scattering<br />3) slowed neutrons can give neutron absorption</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Fission Fragments</td>
      <td style="text-align: left">When $N$ and $_{238}U$ react, it will create two <strong>fission fragment</strong> and 2-3 neutrons</td>
      <td style="text-align: left">hence neutron attenuated</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">those neutrons can then start chain reactions</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">requires low neutron energy</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Neutron Moderation</td>
      <td style="text-align: left">if elastic collision, can calculate energy $E$ of neutron with initial energy $E_0$ <strong>after colliding</strong> with some target nucleus at rest</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$n = (1/\varepsilon) \ln(E_0 / E_n)$</td>
      <td style="text-align: left">$n$ is the number of collisions of neutrons</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">$E_n$ is the energy of neutron after $n$ collisions</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$\varepsilon = (2/A) - (4/(3A^2))$</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">if reached low neutron energy = thermal neutron, can do fission</td>
      <td style="text-align: left">hence attenuated (see above)</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Attenuation in Neutrons</td>
      <td style="text-align: left">$\sigma_T \approx \sigma_a + \sigma_s$</td>
      <td style="text-align: left">mostly scattering and absorption</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$I = I_0 e^{-N \sigma_T x}$</td>
      <td style="text-align: left">same equation as photon attenuation</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$I = I_0 e^{-\Sigma x} = I_0 e^{- x/\lambda}$</td>
      <td style="text-align: left">same $\Sigma = N\sigma_T$ as before</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$\lambda = 1 / \Sigma$</td>
      <td style="text-align: left">mean attenuation length = <strong>mean free path</strong></td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$1/\lambda = (1/\lambda_a) + (1/\lambda_s)$</td>
      <td style="text-align: left">since $\Sigma = \Sigma_a + \Sigma_s$ from the first equation</td>
      <td style="text-align: left"> </td>
    </tr>
  </tbody>
</table>

<h1 id="6-detectors-and-instrumentation">6. Detectors and Instrumentation</h1>

<p>Here, we consider the principle at systems for</p>

<ul>
  <li>detection radiation</li>
  <li>producing controlled beams of radiation</li>
</ul>

<p>In general, any detector gets its signal from the <strong>interaction of radiations with matter</strong>:</p>

<ul>
  <li>collect charge released by ionization of gas (cased by radiation)</li>
  <li>excitation of electrons in semi-conductors (cased by radiation)</li>
  <li>observing fluorescent photons emitted due to de-excitation (cased by radiation)</li>
  <li>making ionization trails visible in film/solid gas (cased by radiation)</li>
</ul>

<p>and in addition to detecting those radiations, we also want detectors to tell us more information such as <strong>energy of the radiation</strong>, type of the radiation, dose rate, etc.</p>

<ul>
  <li>
    <p><strong>dose rate</strong> is quantity of radiation absorbed or delivered per unit time</p>
  </li>
  <li>
    <p>Dose equivalent (or effective dose) combines the amount of radiation absorbed and the medical effects of that type of radiation.</p>
  </li>
</ul>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Name of Concept/Equation</th>
      <th style="text-align: left">Definition/Equation</th>
      <th style="text-align: left">Notes</th>
      <th style="text-align: left">Example</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">Observe Current by Collecting Charge</td>
      <td style="text-align: left">$Q = \int_{0}^t i(t)dt$</td>
      <td style="text-align: left">typically, radiation interact with matter and produces an electric charge (and ion)</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221014155430476.png" alt="image-20221014155430476" /></td>
      <td style="text-align: left">can collect that charge using an electric field = observe a current</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">notice the <strong>pulse like shape</strong></td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221014155617597.png" alt="image-20221014155617597" /></td>
      <td style="text-align: left">In reality, since radiation is random, it is better described by Poisson statistics</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">Poisson statistics = probability of a given number of events occurring in a fixed interval of time if the events occur with a known average rate and independently of the time since the last event</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Modes of Detector Operation</td>
      <td style="text-align: left">Pulse mode: when low radiation flux hence each radiation can be recorded as separate pulse</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">Current mode: high particle flux hence average current is recorded</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Detectors Figures of Metric</td>
      <td style="text-align: left">Things to check for a detector:<br />1) Energy Resolution<br />2) Detection Efficiency<br />3) Dead Time</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Energy Resolution</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221014161258795.png" alt="image-20221014161258795" /></td>
      <td style="text-align: left">$E_0$ peak is the source, the Gaussian curve is the fitted energy spectrum <em>measured</em></td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">measures Full-Width at Half Maximum (FWHM)</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221014161426020.png" alt="image-20221014161426020" /></td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">measured in units of energy or percent of its peak energy $E_0$</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">since it is usually first fitted to a Gaussian curve, then FWHM$=2.35\sigma$</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221014161543558.png" alt="image-20221014161543558" /></td>
      <td style="text-align: left">in reality due to all different effects <em>reaching the device</em></td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Detection Efficiency</td>
      <td style="text-align: left">Measures how much radiation it can capture, and if captured, how much it can record</td>
      <td style="text-align: left">capture = radiation reaches it<br />record = radiation reached AND recorded</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">usually easy to detect charged particles $\alpha$ and $\beta$, but be careful as they have short range</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">harder to deal with $\gamma, n$ because they have deposit little energy per unit path</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221014161857546.png" alt="image-20221014161857546" /></td>
      <td style="text-align: left">depends on geometry of the device</td>
      <td style="text-align: left">if device is liquid so that source submerges in it, then it is $4\pi$ full coverage</td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221014161905351.png" alt="image-20221014161905351" /></td>
      <td style="text-align: left">actual performance, dependent on detector material and thickness, and radiation type and energy</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Dead Time</td>
      <td style="text-align: left">due to physical/electronical problem, there will be dead-time when device becomes <strong>unresponsive</strong> between events</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">e.g. takes time for the captured electron to travel to the cathode</td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">events almost overlap</td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$\tau$ =  dead time</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221014162158239.png" alt="image-20221014162158239" /></td>
      <td style="text-align: left">so non-paralyzable can recover 4</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">paralyzable has the problem of <strong>extended dead time</strong></td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Dead Time Corrections</td>
      <td style="text-align: left">Paralyzable detector: $n=me^{n\tau}$</td>
      <td style="text-align: left">$n=$ true interaction rate, $m$ = recorded interaction rate, $\tau$ = deadtime</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">Nonparalyzable detector: $n= m/(1-m\tau)$</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221014162313018.png" alt="image-20221014162313018" /></td>
      <td style="text-align: left">when true radiation $n$ is high, paralyzable can mistake it for a low $m$!</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Principles of Gas Detectors</td>
      <td style="text-align: left">detectors by using gas to be ionized by the radiation $\to$ record those ions</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">three types of detectors on this principle<br />1) ionization chamber<br />2) proportional counter?<br />3) GM counter</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Ionization Chamber</td>
      <td style="text-align: left">works by measuring ionization (of gas molecules) produced <em>solely</em> by incident ionizing particles (e.g. $\alpha$ radiation)</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221014162757533.png" alt="image-20221014162757533" /></td>
      <td style="text-align: left">ionizing particles creates ionized gas $\to$ have a high enough field to prevent recombination $\to$ those ions complete the circuit by having electron goes to anode and positive ion to cathode</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">but usually needs an amplifier as current produced could be small</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">need a certain amount of electric field applied</td>
      <td style="text-align: left">see above</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$A$ = #ions per sec produced $\times$ charge per ion</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">source disposing $1GeV\,s^{-1}$ energy per second and air in the chamber ionizes with $34$eV</td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">#ions per sec produced = $10^9 / 34$</td>
    </tr>
    <tr>
      <td style="text-align: center">Pulse Amplitude v.s. Voltage Applied in Gas Detector</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221014163205531.png" alt="image-20221014163205531" /></td>
      <td style="text-align: left">the fundamental reason why we have three types of gas detectors</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">pulse <strong>amplitude</strong> can give you information of the <strong>energy</strong> of ionizing particles!</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">region I: increase $V$ means less recombination of ions</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">region II: full charge collection = no recombination</td>
      <td style="text-align: left">Ionization Chamber</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">region where output is independent of applied voltage</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">Gas Amplification Factor (GAF) = 1</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">region III: electrons become more energized $\to$ can cause secondary ionization during collision. Those secondary ionized electrons can further produce ionizations</td>
      <td style="text-align: left">proportional chamber</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">amplification of current = Townsend Avalanche</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">GAF up to about $10^5$, but still proportional to the original ionization</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">region V: electrons so energized that it can excite inner electrons $\to$ UV radiation from de-excitation $\to$ ionizes other irrelevant atoms in the chamber</td>
      <td style="text-align: left">Geiger-Mueller Counter</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">can’t distinguish initial input energy of those ionizing particles</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">hence can only know the presence of those radiations</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Proportional Chamber</td>
      <td style="text-align: left">electric field increased beyond region II, so that secondary ionizations occur</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">pulse amplitude still tells you energy of input ionizing particles</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221014164005297.png" alt="image-20221014164005297" /></td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Geiger-Mueller Counter</td>
      <td style="text-align: left">electric field increased so much that everything is ionized = pulse amplitude does not depend on the energy of input ionizing particles</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">hence can only measure the presence of radiation</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Scintillation Detector Mechanics</td>
      <td style="text-align: left">energy of radiation $\to$ excitation of electrons of scintillation material $\to$ de-excitation/Compton scattering which emits UV/visible light</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">those light photons are directed to the photosensitive surface $\to$ emit photo-<strong>electrons</strong> $\to$ amplified in PMT $\to$ observe pulse of current</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221021173557853.png" alt="image-20221021173557853" /></td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Scintillation Materials</td>
      <td style="text-align: left">need high effiiency of converting energy to photons</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">linear conversion: output proportional to deposited energy from radiation</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">short decay time = quick flash = short dead time</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">maximize conversion to output fluorescence</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">transparent to its own emission (which is photon, which is <em>also</em> energy)</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Scintillation Types</td>
      <td style="text-align: left">Fluorescence=emit visible radiation with emission time approx. 10 ns</td>
      <td style="text-align: left">preferred</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">Delayed fluorescence=above but loner emission time</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">Photofluorescence=longer wavelength and longer emission time</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Semi-Conductor Detector Mechanics</td>
      <td style="text-align: left">energy of radiation creates electron-hole pair $\to$ electron move in the direction of applied field $\to$ current</td>
      <td style="text-align: left">works only if those e-h pairs do not recombine or get trapped in regions of impurity</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Semi-Conductor Detector Properties</td>
      <td style="text-align: left">only requires 3-4 $eV$ to create e-h pair, whereas to create ion pair in gas requires 30 $eV$</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">better energy resolution</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">faster charge collection = shorter dead time</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Semi-Conductor Detector Types</td>
      <td style="text-align: left">diode</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">high purity $Ge$</td>
      <td style="text-align: left">see above</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">lithium drifted $Si$ or $Ge$</td>
      <td style="text-align: left">alternatives to high purity, use $Li$ for drifting as dopant atoms</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Thermoluminscent Detector</td>
      <td style="text-align: left">operates by accumulating radiation energy and read altogether at the end</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">therefore, we want crystals to de-excite as slow as possible when absorbed radiation</td>
      <td style="text-align: left">opposite of scintillation</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">mechanism: electron and holes are elevated but below conduction band, hence “trapped”</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Neutron Detectors Properties</td>
      <td style="text-align: left">cannot detect neutrons directly, but secondary radiation, such as $(n,p)$</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">depending on how fast the neutrons are, there are two types of neutron detectors</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Slow Neutron Detectors Mechanism</td>
      <td style="text-align: left">for slow, thermal neutrons, nuclear reactions such as $(n,p),(n,\alpha), (n,f)$ have large cross section $\sigma \propto 1/v$</td>
      <td style="text-align: left">basically can be triggered easily</td>
      <td style="text-align: left">$(n,p)$ means the reaction of $A+n \to B+p$</td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">mechanics: neutron $\to$ nuclear reactions $\to$ charged outputs (e.g. fission fragments) cause ionization $\to$ which can be measured</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">$^{10} B(n,\alpha)^7 Li$</td>
    </tr>
    <tr>
      <td style="text-align: center">Slow Neutron Detector Types</td>
      <td style="text-align: left">Proportional Counter</td>
      <td style="text-align: left">$BF_3$ proportional counter performs $^{10} B(n,\alpha)^7 Li$ which a large cross section of 4010 b for thermal neutrons, and $Q=2.79MeV$</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">utilizes $(n,\alpha)$</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">Fission Counters: coat detector with fissionable material</td>
      <td style="text-align: left">utilizes $(n,f)$</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">Activation Counter: using activation foils composed of material sensitive of neutron of different energies</td>
      <td style="text-align: left">utilizes neutron capture</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Fast Neutron Detector</td>
      <td style="text-align: left">use plastic or liquid organic scintillation material instead</td>
      <td style="text-align: left">$1/v$ means slow neutron detectors become not efficient</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">in general, materials of rich hydrogen $\to$ recoiling protons produce energy for scintillation</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Particle Identification</td>
      <td style="text-align: left">since radiation = any particle with energy, we might also want to know which particle it is</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">PI: Counter Telescope</td>
      <td style="text-align: left">stack two or more detectors, and can measure $\Delta E$ between detectors and $E$ total</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$\Delta E$ can tell you stopping power</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$E\times \Delta E \propto mz^2$</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">PI: Time of Flight</td>
      <td style="text-align: left">measure time between detectors, hence determine $v$</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">if radiation is pulsed beam, then you can just measure arrival time at detector and actual beam pulse</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">PI: Magnetic Analysis</td>
      <td style="text-align: left">use spectrometer with magnetic field to measure the deflection of charged particles</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$r = mv/qB$, can measure mass to charge if known velocity</td>
      <td style="text-align: left">based on Lorentz Force $F=qv\times B$</td>
      <td style="text-align: left"> </td>
    </tr>
  </tbody>
</table>

<h1 id="midterm-concepts">Midterm Concepts</h1>

<p>Chapter 1</p>

<ul>
  <li>atomic structure
    <ul>
      <li>plum pudding model, Rutherford model and its problems, Quantum Theory and its model, Bohr Model and its energy levels</li>
      <li>Rutherford scattering experiment, result</li>
    </ul>
  </li>
  <li>equivalence of energy and momentum
    <ul>
      <li>mass-energy equation</li>
    </ul>
  </li>
  <li>uncertainty principle</li>
  <li>nuclear models
    <ul>
      <li>liquid drop, shell model, their differences</li>
    </ul>
  </li>
  <li>electron volt, alternative mass unit</li>
  <li>binding energy, mass excess, and Q calculation</li>
  <li>binding energy curve (reproduce)</li>
  <li>nuclear stability curve (reproduce)</li>
  <li>radioactivity equation and activity</li>
  <li>secular equilibrium</li>
  <li>alpha decay
    <ul>
      <li>energy is discrete, etc</li>
    </ul>
  </li>
  <li>beta decay
    <ul>
      <li>continuous energy up to a cut-off</li>
    </ul>
  </li>
  <li>auger electron</li>
  <li>number of atoms and atomic densities calculations</li>
</ul>

<p>Chapter 5</p>

<ul>
  <li>stopping power
    <ul>
      <li>two components, use Bremsstrahlung</li>
    </ul>
  </li>
  <li>Bethe-Bloch that
    <ul>
      <li>stopping power goes $z^2 / v^2$</li>
    </ul>
  </li>
  <li>stopping power v.s. energy curve
    <ul>
      <li>bragg peak curve</li>
    </ul>
  </li>
  <li>heavy charged particles
    <ul>
      <li>how it loses energies, ionizing them and/or exciting them</li>
    </ul>
  </li>
  <li>light charged particles
    <ul>
      <li>zig zag, no well-defined range</li>
    </ul>
  </li>
  <li>cross sections
    <ul>
      <li>reaction rates, linear attenuation coefficient $\mu$</li>
      <li>attenuation and its differential equation</li>
    </ul>
  </li>
  <li>photon ways of interacting
    <ul>
      <li>three ways of how they work, but not formula</li>
    </ul>
  </li>
  <li>neutrons interactions
    <ul>
      <li>three ways, elastic, inelastic, or reaction</li>
      <li>thermal neutrons</li>
    </ul>
  </li>
</ul>

<p>Chapter 6</p>

<ul>
  <li>
    <p>detector two operation mode</p>
  </li>
  <li>
    <p>detectors figure of merit</p>

    <ul>
      <li>equation of FWHM/$E_0$</li>
      <li>efficiency, especially uncharged particles</li>
      <li>definitions of absolute/intrinsic effiency</li>
    </ul>
  </li>
  <li>
    <p>dead time</p>

    <ul>
      <li>paralyzable v.s. non-paralyzable</li>
      <li>dead time correction equation</li>
      <li>dead time curves</li>
    </ul>
  </li>
  <li>
    <p>will need to draw a detector</p>
  </li>
  <li>
    <p>three types of ionization chambers</p>
  </li>
  <li>
    <p>gas-field detector v.s voltage</p>

    <ul>
      <li>its five regions and the graph itself</li>
    </ul>
  </li>
  <li>
    <p>scintillation detector mechanism</p>
  </li>
  <li>
    <p>semi-conductor detector mechanism</p>
  </li>
  <li>
    <p>TLDs</p>
  </li>
  <li>
    <p>Neutron Detectoros</p>

    <ul>
      <li>slow.v.s fast needs hydrogen = moderates</li>
      <li>fission counter</li>
    </ul>
  </li>
  <li>
    <p>particle identification</p>

    <ul>
      <li>
        <p>time-of-flight gives velocity + magnetic anlaysis</p>
      </li>
      <li>
        <p>none of the detector mechanisms except in the particle identification to tell us particle type</p>
      </li>
    </ul>
  </li>
</ul>

<h1 id="nuclear-structure">Nuclear Structure</h1>

<p>Aim:</p>

<ul>
  <li>understanding what happens <strong><em>inside</em></strong> nucleus
    <ul>
      <li>e.g. understand its properties by understanding what <strong>forces are responsible</strong></li>
    </ul>
  </li>
  <li>no complete theory today fully describes the structure and behavior of complex nuclei</li>
</ul>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Name of Concept/Equation</th>
      <th style="text-align: left">Definition/Equation</th>
      <th style="text-align: left">Notes</th>
      <th style="text-align: left">Example</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">liquid drop model</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">nucleus regarded as a <strong><em>collection</em></strong> of neutrons and protons forming a droplet of incompressible fluid</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">good for <strong>systematic behaviors</strong> such as nucleon binding energy</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">discrepancies in liquid drop model = there is an ORDERED STRUCTURE within the nucleus in which neutrons and protons are arraged in stable quantum states in a potential well</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Shell (Single-particle Model)</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">loosely held individual outer nucleons, which account for many of the nucleus’s properties</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">very alike the electron shell model and how electrons arrange themselves</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Nuclear Force</td>
      <td style="text-align: left">binds nucleons in nucleus, n-n, p-p, p-n</td>
      <td style="text-align: left">extremely complicated, derivation from first principle</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Nuclear Force Properties</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">short range</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221214025855146.png" alt="image-20221214025855146" style="zoom:50%;" /></td>
      <td style="text-align: left">for very small separations, nucleons begin to repel = no clump</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">nuclear density approx constant for different sized nuclei = liquid drop</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Nuclear Force Charge Dependency</td>
      <td style="text-align: left">charge symmetric: same nuclear force for  p-p as for n-n</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Nuclear Force Spin Dependency</td>
      <td style="text-align: left">Average force for p-n &gt; p-p or n-n by a factor of about 2</td>
      <td style="text-align: left">both n and p are fermions = obey Pauli Exclusion for spin</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">so for p-p and n-n, you have to have different spin, net $S=0$</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">n-p can have be either anti-parallel or paralell. <strong>Force in $S = 1$ state is stronger</strong> than force in $S = 0$ state. Therefore, avg. force for p-n is greater than that for p-p or n-n (by about factor of 2).</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">Explains why can have bound n-p (deuteron), but not bound n-n or p-p (i.e., nuclear force not strong enough to bind the latter two configurations)</td>
      <td style="text-align: left">p-p repulsion;  n-n free particles + not strong enough force</td>
    </tr>
    <tr>
      <td style="text-align: center">Nuclear Force Spin-Orbit Coupling</td>
      <td style="text-align: left">$\text{Spin-orbit Force}=L \cdot S$</td>
      <td style="text-align: left">$L,S$ being angular momentum and spin, respectively</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">Force is attractive if S and L are parallel, and repulsive if they are anti-parallel</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">zero on average inside an atom</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Semi-Empirical Mass Formula</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221214030640303.png" alt="image-20221214030640303" /></td>
      <td style="text-align: left">estimating <strong>binding energy</strong>, which can then be used to estimate the <strong>actual nuclear masses</strong> for unknown nuclei (but known $A$ and $N$)</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">based on liquid-drop = estimates <strong>collective properties of a nucleus</strong></td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">SEMF Volume Energy</td>
      <td style="text-align: left">$a_vA$ term</td>
      <td style="text-align: left">nucleon feels the force only from its nearest neighbors and the nucleon density is approx constant = force is constant = <strong>B/A is approx constant</strong> in the interior of the nucleus.</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">SEMF Surface Term</td>
      <td style="text-align: left">$A^{2/3}$ since the first $A\propto \mathrm{Volume}$</td>
      <td style="text-align: left"><strong>reduced</strong> by a factor proportional to the <strong>surface area</strong> of the nucleus</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221214110550694.png" alt="image-20221214110550694" /></td>
      <td style="text-align: left">nucleons on the surface of the nucleus experience the nuclear force from nucleons inside the nucleus, but no force from the outside. hence reduced</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">SEMF Coulomb Term</td>
      <td style="text-align: left">$\propto {Z^2}/{A^{1/3}}$</td>
      <td style="text-align: left">Coulomb repulsion would further reduce binding energy</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">protons repel each other with a long-range Coulomb force; <br />Mean radius of the nucleus is proportional to $R\propto A^{1/3}$<br />Coulomb force also $\propto Z^2$</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">SEMF Symmetry Term</td>
      <td style="text-align: left">$\propto (N-Z)^2$</td>
      <td style="text-align: left">nucleus becomes more <strong>unstable</strong> the greater the difference between <strong>Z and N</strong>. Has the most effect for <strong>light nuclei</strong></td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">shell model result. The term is zero for $Z = N$ and becomes less important for heavy nuclei (high A), where $N &gt; Z$</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">SEMF Pairing Term</td>
      <td style="text-align: left">$\Delta$</td>
      <td style="text-align: left">nucleons tend to <strong><em>couple pairwise</em></strong> into more stable configurations</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">Δ &gt; 0 if N and Z are both even</td>
      <td style="text-align: left">from Pauli Exclusion Principle</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">Δ &lt; 0 if N and Z are both odd</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">Δ = 0 if either N or Z is odd (i.e., A odd)</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Nuclear Fission Energy Barrier</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221214111507480.png" alt="image-20221214111507480" /></td>
      <td style="text-align: left">barrier to fission is called the fission barrier or activation energy</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">for <strong>Heavy</strong> Nuclei</td>
      <td style="text-align: left">As s $A$ increases, the relative importance of the Coulomb repulsion term increases = it becomes energetically possible for the nucleus to split if it becomes <strong>deformed</strong> enough</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">Odd nuclei (($U_{92}^{235}$)) have very low activation energies, <strong>since the pairing term is zero</strong>, and can fission with low energy neutrons.</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Isobaric Nuclei</td>
      <td style="text-align: left">same number of total nucleons but swapped #neutrons and #protons</td>
      <td style="text-align: left">will affect the coulomb term in SEMF</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Vibrational Model</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221214112515740.png" alt="image-20221214112515740" /></td>
      <td style="text-align: left"><strong><em>SEMF assumed sphere shape,</em></strong> but in reality can deform</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">vibration can actually be modelled with liquid-drop model</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Rotational States</td>
      <td style="text-align: left">rotation doesn’t produce any change of state</td>
      <td style="text-align: left">Collective rotational states can <strong>only occur in non-spherical nuclei</strong> (otherwise how do you know it is rotating?)</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Shell (Independent Particle) Model</td>
      <td style="text-align: left">aims to model energy level of nucleons</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">neutrons and protons fill energy level in the nucleus according to the Pauli Exclusion Principle</td>
      <td style="text-align: left">similar to electron energy levels</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">those structure like properties are not predicted by SEMF, which only deals with collective states</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">“islands of stability” corresponding to “closed shells,” also called “magic numbers,”</td>
      <td style="text-align: left">2 (1s), 8 (2s, 1p), 20, 28, …</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Nuclear Potential Energy</td>
      <td style="text-align: left">predict <strong><em>energy levels</em></strong> in the nucleus, need to know $V(r)$</td>
      <td style="text-align: left">arises from interactions with other nucleons.</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">infinite well = simplest model</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Woods-Saxon Potential</td>
      <td style="text-align: left">$V(r) = -\frac{V_0}{1+e^{(r-R)/a}}$</td>
      <td style="text-align: left">quite a good approximate</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center">Spin-Orbital Potential</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221214113711983.png" alt="image-20221214113711983" /></td>
      <td style="text-align: left">more complicated but <strong>accounted for more splittings</strong> of energy level</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">splittings due to spin $s$ and angular momentum $l$. If <strong>aligned</strong>, $s\cdot l$ positive hence binding energy is increased</td>
      <td style="text-align: left"> </td>
    </tr>
  </tbody>
</table>

<h1 id="nuclear-instability">Nuclear Instability</h1>

<p>Aim: Predict/explain <strong><em>why</em></strong></p>

<ol>
  <li>some <em><strong>half-lives are short</strong> and others are long</em>, and</li>
  <li>why <strong><em>certain energy transitions take place</em></strong> and others don’t</li>
</ol>

<p>In general there will be a) electromagnetic force; b) weak force; c) strong force</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Name of Concept/Equation</th>
      <th style="text-align: left">Definition/Equation</th>
      <th style="text-align: left">Notes</th>
      <th>Example</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">Gamma Emission Mechanism</td>
      <td style="text-align: left">Excited nucleus may de-excite through $\gamma$-emission</td>
      <td style="text-align: left">help understand why certain gamma decay have longer half-lives than another</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">gamma is “everywhere” in the sense that many radioactive decay accompanies gamma emission (see below, due to excited daughter nucleus)</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Characteristic $\gamma$-emission</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">actually come from the transitions among the energy levels of the <strong>daughter</strong> nucleus.</td>
      <td><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221218182726846.png" alt="image-20221218182726846" style="zoom:67%;" /></td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
      <td>the above means we have two decays:<br /><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221218182834669.png" alt="image-20221218182834669" style="zoom: 15%;" />and then<img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221218182846700.png" alt="image-20221218182846700" style="zoom:10%;" /></td>
    </tr>
    <tr>
      <td style="text-align: center">Selection rules</td>
      <td style="text-align: left">derived from consideration of conservation of ==angular momentum and parity==, <strong><em>specify the allowable transitions</em></strong> among energy levels</td>
      <td style="text-align: left">answers: “why are some gamma more likely to happen than others?”</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">1. Photon that carries away energy has angular momentum $L&gt;0$</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">2. Conservation of Angular Momentum: $\vert l_i - l_f\vert \le L \le \vert l_i + l_f\vert$</td>
      <td style="text-align: left">$l_i$, $l_f$ is the angular momentum of the initial and final nuclear state</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">3. Parity (wavefunction even or odd) is also conserved in EM transitions</td>
      <td style="text-align: left">whether or not a parity changed decides $\to$</td>
      <td><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221218204404711.png" alt="image-20221218204404711" style="zoom:50%;" /></td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
      <td><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221218204529542.png" alt="image-20221218204529542" style="zoom:50%;" /></td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">do <strong><em>not</em></strong> provide information on the probability of its occurrence, only if it <em>can</em> occur</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Competing Process in $\gamma$</td>
      <td style="text-align: left">as gamma usually comes from de-excitaton, other processes such as de-excite with electron is competing (also comes from de-excitation)</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">e.g. Internal Conversion</td>
      <td style="text-align: left">transfer energy to an orbital electron (K-shell or further out), ejecting it from the nucleus</td>
      <td>another way to de-excite = the parent and child would be the same <em>as if performed gamma decay</em></td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"><strong>Single energy peak</strong> for each orbital electron transition unlike continuous β spectrum.</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">$\gamma$ Transition Rates</td>
      <td style="text-align: left">Weisskopf Single Particle γ Transition Rates</td>
      <td style="text-align: left"> </td>
      <td><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221218204742112.png" alt="image-20221218204742112" /></td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$E_1$ is greatly favored</td>
      <td style="text-align: left"> </td>
      <td>Selection rules allow E2, M3, E4, M5, and E6 transitions, but the E2 radiation is strongly favored.</td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
      <td><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221218214350669.png" alt="image-20221218214350669" /></td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">If transitions have <em>high multipolarity</em>, T$_{1/2}$ may be considerable</td>
      <td style="text-align: left">basically for E6, M6, etc above,  the probabiility is low = long half lives</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Mixed $\gamma$ transitions</td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">can substantially <strong><em>raise the probability</em></strong> that a particular energy γ-ray will be emitted</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">can’t characterize transition probability using the single particle model</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Beta Decay Equations</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221218214832570.png" alt="image-20221218214832570" /></td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">allowed reactions = conservation of <strong><em>energy/momentum/charge/lepton number</em></strong></td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">can find the end point of the continous $\beta$ spectrum</td>
      <td style="text-align: left">recall that $Q$ gives the kinetic energy difference $Q = K_f - K_i = (m_i -m_f)c^2$</td>
      <td>$T_{end} = E_0 - m_e c^2$, the end point of the β spectrum. $E_0$ = total energy of the transition.</td>
    </tr>
    <tr>
      <td style="text-align: center">Fermi’s Golden Rule</td>
      <td style="text-align: left">Probability of beta decay, determine the <em>transition rate</em> between an initial state (i) and a final state (f) for $\beta$ decay</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221218220413602.png" alt="image-20221218220413602" /></td>
      <td style="text-align: left">$\lambda$ measures the transition probability</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Electron Capture</td>
      <td style="text-align: left">competes with β+-decay when both modes are possible<img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221218220610791.png" alt="image-20221218220610791" style="zoom:25%;" /></td>
      <td style="text-align: left">all $\beta$ are due to ==weak interaction==</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Factor affecting EC probability/rate</td>
      <td style="text-align: left">depends on the <strong>overlap</strong> of the electron’s and the nucleus’s wave functions</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">1. electron is most likely to be captured when it is <strong><em>closer</em></strong> to the nucleus</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">2. higher Z = being attracted more = size of $K$-orbit electrons orbit is smaller = being captured</td>
      <td style="text-align: left">EC importance over β+ decay increases with Z</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Alpha Decay</td>
      <td style="text-align: left">common decay mode for <strong>heavy radionuclides</strong></td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">Shed four units of mass (two neutrons and two protons) in one decay.</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">QM “tunneling” in Alpha Decay</td>
      <td style="text-align: left">heavy nucleus like uranium has barrier of 20MeV, but emitted alpha particle from it can be <em>as low as 5 MeV</em>. now we know it is due to non-zero wave function</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">requires $Q&gt;0$</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221218221142073.png" alt="image-20221218221142073" /></td>
      <td style="text-align: left">explanation of QM tunneling</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Preformation Probability</td>
      <td style="text-align: left">for alpha decay to happen, you need to first form the alpha particle in the nucleus</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221218221306606.png" alt="image-20221218221306606" /></td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
  </tbody>
</table>

<h1 id="nuclear-reactions">Nuclear Reactions</h1>

<p>Study a bit further on <strong><em>how/when reaction happens</em></strong></p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Name of Concept/Equation</th>
      <th style="text-align: left">Definition/Equation</th>
      <th style="text-align: left">Notes</th>
      <th>Example</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">Types/Classification of Reactions</td>
      <td style="text-align: left"><strong>Elastic</strong> scattering: a + A $\to$ a + A</td>
      <td style="text-align: left">scattering = Incident and outgoing particles are the same</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><strong>Inelastic</strong> scattering: a + A $\to$ a + $A^*$</td>
      <td style="text-align: left">some energy goes into exciting internal levels in A, and later will go off $\gamma$ decay</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><strong>Knockout</strong>: a particle is emitted (“knocked out”) from the nucleus</td>
      <td style="text-align: left"> </td>
      <td>e.g. stripping of a proton from a carbon nucleus</td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><strong>Stripping</strong> reaction if the transfer is from the projectile to the target.</td>
      <td style="text-align: left">Transfer reaction: 1 or 2 nucleons are transferred between the projectile and target.</td>
      <td>C-12 + alpha -&gt; C-8* + alpha*</td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><strong>Pickup</strong> reaction if the transfer is from the target to the projectile.</td>
      <td style="text-align: left">Transfer reaction, i.e. target nucleus gained</td>
      <td>He-3 + p -&gt; He-4* + gamma</td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><strong>Direct</strong> nuclear reactions: formation of a “new” nucleus typically involve the transfer of <em>just a few nucleons</em> (protons or neutrons) between the colliding nuclei.</td>
      <td style="text-align: left">without the creation of an intermediate compound nucleus.</td>
      <td>e.g. scattering</td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><strong>Compound</strong> nuclear reactions: results in the formation of an intermediate compound nucleus, and can result in the emission of several particles</td>
      <td style="text-align: left">involve the transfer of <em>many nucleons</em> between the colliding nuclei</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><strong>Resonance</strong> reaction: incoming particle has right energy to excite an energy level in the target nucleus, greatly <em>increasing the cross section</em></td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Discern what Reaction happened with Energy Spectrum</td>
      <td style="text-align: left">can distinguish different mechanism because they give rise to outgoing particles have different energy</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221218222924675.png" alt="image-20221218222924675" /></td>
      <td style="text-align: left"><strong>Discrete</strong> energy peaks at high energies from direct reactions</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">At lower energies, peaks correspond to more closely spaced energy levels can’t be resolved</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">At still lower energies, compound nuclei are formed, where neutrons and protons <strong>share</strong> the incoming particle energy and “evaporate” from the nucleus in a continuous spectrum</td>
      <td>evaporate: formed compound nucleus $\to$ an equilibrium is reached so the compound nucleus <em>loses its energy slowly over time by emitting particles,</em> mostly protons and neutrons</td>
    </tr>
    <tr>
      <td style="text-align: center">Angular Distributions</td>
      <td style="text-align: left">angle of output particles relative to input particle</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Angular Distributions for Direct Reactions</td>
      <td style="text-align: left"><em>Direct</em> collisions (few nucleons take part) usually produce forward peaked reaction products</td>
      <td style="text-align: left">forward peak = products traveling in the <strong>same direction</strong> as input</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><em>Direct</em> collisions = exhibit <em>oscillations</em> as a function of scattering angle due to the wave nature of the particles</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Angular Distributions for Compound Reactions</td>
      <td style="text-align: left">Angular spectrum of evaporated particles from a <em>compound</em> nucleus is more <em>isotropic</em></td>
      <td style="text-align: left">since the emitted particles “<strong>have no memory</strong>” of the direction of the incoming particle</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221218223426199.png" alt="image-20221218223426199" /></td>
      <td style="text-align: left">y-axis = prob of observing this</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Reaction rate</td>
      <td style="text-align: left">each reaction has its own cross-section = own reaction rate</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$R =\sigma N_A \phi=\Sigma \phi$</td>
      <td style="text-align: left">σ = reaction cross section<br />φ = particle (e.g., neutron) flux<br />$N_A$ = the number of target atoms per unit volume</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221218223905002.png" alt="image-20221218223905002" /></td>
      <td>DD reaction cross section = higher E better because this is <em>fusion</em></td>
    </tr>
    <tr>
      <td style="text-align: center">Classical Estimate of Reaction Cross Section Assumptions</td>
      <td style="text-align: left">calculate cross section itself (before we were given this)</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">assumptions = reaction happens when come close enough together for the strong nuclear force to act</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Classical Estimate of Uncharged Particles</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221218224237587.png" alt="image-20221218224237587" style="zoom: 33%;" /></td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$\sigma= \pi (R_1 + R_2)^2 = \pi R^2$</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Classical Estimates of Charged Particles</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221218224450325.png" alt="image-20221218224450325" style="zoom:150%;" /></td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">Impact parameter, $b$ replaces $R$.<br />$\sigma = \pi b^2 = \pi R^2 (1-B/E)$</td>
      <td style="text-align: left">means if $B&gt;E$ reaction cannot occur</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">QM Estimate</td>
      <td style="text-align: left">classical works when particles is more ‘particle-like’</td>
      <td style="text-align: left">classical approximation of reaction cross section is only decent for particles with <strong>de Broglie wavelength less than the size of the nucleus</strong></td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">also kind of works if we are <em>heavy ions</em> = wavelength often smaller than nuclear dimensions</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">but if wave functions coincide, then reaction occur = can occur even if $B&gt;E$</td>
      <td style="text-align: left">in reality, high energy = looks like particle; low energy = looks like wave</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Usage of Elastic Scattering for Nuclear Structure</td>
      <td style="text-align: left">force causing scattering depends on the <em>spatial distribution of nucleus</em> =&gt; by analyzing the way particles scatterd = know about the size and distribution of <em>force field</em> = know about the <em>nucleus</em></td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><strong>Electrons</strong> make good probes of the nucleus since they are not absorbed and interact via the well-know electromagnetic force with the protons</td>
      <td style="text-align: left">if we take particles such as $\alpha$, then it interacts strongly once inside the nucleus = lose its identity and not reappear in the entrance channel</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Compound Nuclear Reaction Mechanism</td>
      <td style="text-align: left">Many nuclear reactions proceed in two or more steps</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">1.  the <em>incoming</em> particle is absorbed by, and excites, the nucleus</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">2. the nucleus <em>loses</em> its excitation energy (decays) through one of several different, possible exit channels (decay branches or decay channels)</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Compound Nuclear Reaction Rate</td>
      <td style="text-align: left"><em>Each decay channel</em> is characterized by a probability and mean lifetime, $\lambda = 1/\tau$</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">for compound reaction $A+a\to C\to B+b$<br /> reaction rate is $\sigma_{\alpha, \beta} = \sigma_c (\Gamma_\beta / \Gamma)$</td>
      <td style="text-align: left">$\sigma_c$ is the cross section of forming the compound nucleus<br />$\Gamma_\beta / \Gamma$ is fractional decay width into the final channel $B+b$</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">basically, need $C$ to happen, and then also $\beta$ to happen</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Energy width of Compound Nuclear Reaction</td>
      <td style="text-align: left">due to the Uncertainty Principle, uncertainties in $\lambda$ and $\tau$ $\to$ <em>uncertainties in energies of the states</em> $\to$ energy spread</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221218230238702.png" alt="image-20221218230238702" /></td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Cross Section Thresholds</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221218230654380.png" alt="image-20221218230654380" /></td>
      <td style="text-align: left">each decay mode <em>also has its own ‘excitation energy’</em> required</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Heavy ion particle accelerator’s goal</td>
      <td style="text-align: left">Heavy ion particle accelerators are used to cause reactions where the <em>target nuclei are blown apart</em> or to attempt to create <em>new heavy elements through absorption</em>.</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
  </tbody>
</table>

<h1 id="fission">Fission</h1>

<p>This section will focus on <strong>induced fission from neutron absorption</strong></p>

<ul>
  <li>Some heavy “transuranic” (near uranium) nuclei can undergo induced fission if supplied with sufficient energy (7-8 MeV)</li>
  <li>about 6 MeV comes from binding of an extra <strong><em>neutron</em></strong> by the <strong><em>strong force</em></strong> and the rest from external sources</li>
  <li>an extra 1-2 MeV from pairing (depends on if your $N$ is odd or even)</li>
</ul>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Name of Concept/Equation</th>
      <th style="text-align: left">Definition/Equation</th>
      <th style="text-align: left">Notes</th>
      <th>Example</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">Why is Fission Energetic Useful?</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221218235727825.png" alt="image-20221218235727825" style="zoom: 33%;" /></td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">Fissile nuclei can fission with <em>low energy, “thermal,” neutrons</em></td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Energy during/Mechanism of Fission</td>
      <td style="text-align: left">1. normally, the SEMF surface term provides a restoration force, like disturbing surface tension on water</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">2. if sufficient energy is supplied, the shape will deform to such an extent that the Coulomb repulsion force will dominate = strong force only works locally = nucleus starts to break</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">3. repulsive force will drive the (usually) 2 fission fragments apart and potential energy is <em>converted into kinetic energy</em></td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219000721638.png" alt="image-20221219000721638" style="zoom: 33%;" /></td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Fission Activation Energy</td>
      <td style="text-align: left">The energy required to overcome the fission barrier = deform</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219000459450.png" alt="image-20221219000459450" style="zoom: 33%;" /></td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Properties of Fission</td>
      <td style="text-align: left">Energetically preferred to have one heavy group and one light group as fission fragment</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219000902306.png" alt="image-20221219000902306" /></td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">When a fissionable nucleus absorbs a neutron and forms a compound nucleus, there is a <strong>competition between fission and gamma emission</strong> to release excitation energy, which doesn’t lead to fission</td>
      <td style="text-align: left">$\sigma_a = \sigma_f + \sigma_\gamma$</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Discovery of Neutron</td>
      <td style="text-align: left">James Chadwick found that if the energetic alpha particles emitted from polonium fell on certain light elements, specifically beryllium, an <em>unusually penetrating radiation</em> was produced (not gamma ray)</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219001726268.png" alt="image-20221219001726268" style="zoom:33%;" /></td>
      <td style="text-align: left">this radiation’s range, etc. can be measured by placing paraffin a distance away to <strong>perform (n,p) reaction</strong></td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">the first ‘weird’ event that happened about this was: Walther Bothe and Herbert Becker = discovered that when energetic α-particles from the decay of polonium impinged on certain light materials, they would <strong><em>eject high energy, very penetrating, neutral radiation</em></strong>; they thought they were γ-rays</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219002009283.png" alt="image-20221219002009283" /></td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">‘Discovery of Fission’</td>
      <td style="text-align: left">Otto Hahn and Frederick Strassmann</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">Observed presence of barium and other middle-weight elements in a uranium sample bombarded by neutrons and noted <em>large release of energy</em>.</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">12/2/1942 – Enrico Fermi – 1st controlled fission chain reaction in Chicago Pile 1</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Start of Nuclear Weapon</td>
      <td style="text-align: left">7/16/1945 – 1st nuclear weapon test: <strong><em>Trinity</em></strong> in White Sands Proving Grounds, New Mexico.</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">called “The Gadget.” 20 kT (84 TJ). Pu implosion device</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Types of Nuclear Weapons Mechanism</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219002342388.png" alt="image-20221219002342388" style="zoom: 25%;" /></td>
      <td style="text-align: left">normal <strong>plutomium</strong> okay, but densely pressed is not = can go over critical mass</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219002349437.png" alt="image-20221219002349437" style="zoom:25%;" /></td>
      <td style="text-align: left">simply have separate halfs of sphere = explosion <strong>combine</strong> them = increase density = go react<br />now it is <strong>uranium</strong></td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">Why no Pu+Gun Barrel? <br />1. Because plutonium is less dense than HEU, it would require a larger mass to reach criticality<br />2. even trace amounts of Pu-240 in the plutonium would release enough neutrons from <strong>spontaneous fission</strong> = wouldn’t explode but fizzle</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Nuclear Power Plant</td>
      <td style="text-align: left">12/20/1951 – <strong>EBR-1</strong>, Idaho National Lab, Idaho Falls, Idaho. First generation of electric power from nuclear power plant</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Delayed Energy and Delayed Neutrons</td>
      <td style="text-align: left">nuclear reactor core and spent fuel <em>continue to emit considerable energy</em> even after the nuclear chain reaction process has <em>stopped</em>. This happens because</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">1. fission fragments as a by-product are themselves every radio-active = release energy</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">2. delayed neutrons play a critical role in the control of nuclear fission reactions because they are emitted at a <em>slower rate than prompt neutrons</em>, which are emitted immediately following the fission event = helpful to make power change smoother = but still are neutrons</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219003325304.png" alt="image-20221219003325304" /></td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Neutron Economics</td>
      <td style="text-align: left">each fission produces 2-3 neutrons of about 2MeV, but <em>prompt fission neutrons must be thermalized</em> to about 0.025 MeV</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">In the slowing down process, must avoid <br />1. absorption by other nuclei <br />2. leakage out of the system.</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">3. (uncontrollable) absorbed neutron but gave non-fission reaction</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Chain Reaction</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219003615062.png" alt="image-20221219003615062" style="zoom:33%;" /></td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Neutron Multiplication Factor</td>
      <td style="text-align: left">measure if your chain reaction is sustaining/increasing/decreasing</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219004107957.png" alt="image-20221219004107957" style="zoom: 25%;" /></td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219004140291.png" alt="image-20221219004140291" style="zoom:25%;" /></td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219004201393.png" alt="image-20221219004201393" style="zoom:25%;" /></td>
      <td style="text-align: left">recall the section on neutron economics</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Thermal Fission Factor</td>
      <td style="text-align: left"><em>probability of a fission event occurring</em> when a neutron collides with a nucleus</td>
      <td style="text-align: left">Not all neutrons absorbed in fuel cause fission</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219004515942.png" alt="image-20221219004515942" /></td>
      <td style="text-align: left">basically $\sigma_f + \sigma_a = \sigma_T$</td>
      <td>if 99.3% U-238 and 0.7% U-235, then the ratio is<br />$\frac{0.7*\sigma_f(^{235}U)}{(0.7\sigma_T(^{235}U)+99.3\sigma_T(^{238}U))}$</td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"> </td>
      <td>because only $^{235}U$ can fission = Most nuclear reactors and all nuclear weapons <strong>require higher U-235 enrichment</strong></td>
    </tr>
    <tr>
      <td style="text-align: center">Methods for U-235 Enrichment</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219005126907.png" alt="image-20221219005126907" style="zoom: 25%;" /></td>
      <td style="text-align: left">Gaseous Diffusion Enrichment: since U238 is a <strong>little bit heavier</strong> (cannot separate them chemically as they are the same, but physicaly not). Therefore smaller would go through more readily at the top</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">and you can repeat this process over and over</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219005222054.png" alt="image-20221219005222054" style="zoom:25%;" /></td>
      <td style="text-align: left">Gas Centrifuge Enrichment: again, U238 is a little bit heavier than U235, so another approach is to spin it very fast</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Enrichment Definitions</td>
      <td style="text-align: left">LEU – Low Enrichment Uranium: &lt; 20% U-235</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">HEU – High Enrichment Uranium: &gt; 20% U-235</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">Weapons Grade Uranium: &gt; 90% U-235</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Components in a Nuclear Power Plant</td>
      <td style="text-align: left"><strong>Fuel pellets</strong> – typically, sintered UO2 enriched to 3-5% in 235U.</td>
      <td style="text-align: left">Fuel pellets and fuel rods are both used to store and transport nuclear fuel in nuclear reactors.</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><strong>Fuel rods</strong> – typically, clad in Zircalloy to contain fission products and gases</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><strong>Control</strong> rods – neutron absorbers among fuel assemblies</td>
      <td style="text-align: left">to regulate the number of neutrons available to sustain the chain reaction</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">Reactor core – typically, “square cylinder” shape</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">Coolant/<strong>moderator</strong> – light water most common</td>
      <td style="text-align: left">to slow down neutrons to thermal</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><strong>Structural</strong> material – alloys of steel (absorber/reflector)</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">PWR and BWR</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219005748886.png" alt="image-20221219005748886" style="zoom: 33%;" /></td>
      <td style="text-align: left">pressurized, transfer of heat energy</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219005817822.png" alt="image-20221219005817822" style="zoom: 33%;" /></td>
      <td style="text-align: left">could have secondary radiation, but more efficient</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">PWR Schematic</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219005940524.png" alt="image-20221219005940524" style="zoom:50%;" /></td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
  </tbody>
</table>

<h1 id="fusion">Fusion</h1>

<p>Why could fusion be useful if we had fission already?</p>

<ul>
  <li>much less radioactive waste</li>
  <li>but the major problem is it is <strong>technically harder</strong></li>
</ul>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Name of Concept/Equation</th>
      <th style="text-align: left">Definition/Equation</th>
      <th style="text-align: left">Notes</th>
      <th>Example</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">Why is Fusion Energetic Useful?</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219013327992.png" alt="image-20221219013327992" style="zoom:50%;" /></td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Extra Requirement for Fusion</td>
      <td style="text-align: left">since nuclei are positively charged, so must impart <strong>high kinetic energies</strong> to the to overcome the repulsive Coulomb barrier = close enough for <strong>strong force</strong> to form new nucleus</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">1. high temperature (i.e., kinetic energy)</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">2. high density (close enough)</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">3. confinement time: amount of time that the plasma must be confined in order for the reactions to occur</td>
      <td style="text-align: left">later on will see that density and confinement determines how much energy can be gained</td>
      <td><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219014048587.png" alt="image-20221219014048587" style="zoom: 50%;" /></td>
    </tr>
    <tr>
      <td style="text-align: center">Magnetic Confinement Basics</td>
      <td style="text-align: left">confine plasma using magnetic fields = quite complicated setup</td>
      <td style="text-align: left">because plasma = lot of <strong><em>charged</em></strong> particles in gaseous form</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">works based on Lorentz Force</td>
      <td style="text-align: left">but will lose them if they move in parallel of the field!</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219015741263.png" alt="image-20221219015741263" style="zoom:33%;" /></td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Inertial Confinement</td>
      <td style="text-align: left">Heat and fuse ions so rapidly that they do not have time to escape.</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">typically use laser beams to compress and heat fuel pellets.</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Fusion Reaction Examples</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219014333643.png" alt="image-20221219014333643" /></td>
      <td style="text-align: left">Most uses isotopes of hydrogen to ==minimize repulsion==</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">the highlighted ones have high cross section, and non-gamma energy release = can be more easily retrained</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">Helium as a product is ==very stable==, hence releases a lot of energy!</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Properties of DT Fusion Reactions</td>
      <td style="text-align: left">high cross section</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">produces a lot of energy</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">produces an alpha particle, which can be <strong><em>re-used to heat up the plasma</em></strong></td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">shield against neutrons, which are also very energetic</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">tritium (T) don’t occur naturally, so often need to be bred in the reactor factory</td>
      <td style="text-align: left">can be bred from Lithium</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Why would DT be preferred?</td>
      <td style="text-align: left">1. requires lower energy<br />2. produces more energy</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219015116694.png" alt="image-20221219015116694" /></td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Reaction Rate of Fusion</td>
      <td style="text-align: left">Reaction prob per unit time = $n_2 \sigma v$</td>
      <td style="text-align: left">$v$ speed of the particles<br />$n_2$ is density of particle 2</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">considers prob of particle 1 interacting with particle 2</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">total reaction rate per unit volume: $R=n_1n_2\sigma v$</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">$R=n_1n_2 \lang \sigma v \rang$</td>
      <td style="text-align: left">since plasma = gas particles = velocity is defined by Boltzmann distribution</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Fusion Energy Output and Break-Even</td>
      <td style="text-align: left">Fusion energy output = $E_f=n_1n_2\lang \sigma v\rang Q \tau$</td>
      <td style="text-align: left">$\tau$ is ==confinement time==!<br />$Q$ is energy released per reaction</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">also includes ==density $n_1,n_2$==</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">Break-Even $n\tau &gt; \frac{12kT}{\lang v \sigma \rang Q}$</td>
      <td style="text-align: left"><strong>Lawson Criteria</strong>: need to achieve this to get more energy out than input</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219015523087.png" alt="image-20221219015523087" /></td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Magnetic Bottle Confinement</td>
      <td style="text-align: left">1. Closed-field geometry (e.g., torus)</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">2. <strong>Toroidal field</strong> (TF) – Coils external and perpendicular to toroidal containment vessel generate TF</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">3. <strong>Poloidal field</strong> (PF) – pass current around axis of torus. Compensates for weakening TF with increasing $r$</td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219015910587.png" alt="image-20221219015910587" style="zoom: 25%;" /></td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">==Tokamak== is one famous example!</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Inertial Confinement Mechanism</td>
      <td style="text-align: left">1. the energy from the laser or particle beam pulses is absorbed by the fuel target, heating it to extremely high temperatures and causing it to undergo a rapid <strong>expansion</strong>.</td>
      <td style="text-align: left">difficulty is to generate sufficient power to achieve this</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">2. This expansion creates a shock wave that <strong>compresses</strong> the fuel target, increasing the density and temperature of the plasma and creating conditions suitable for fusion reactions.</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left">therefore, requires lasers and <strong>fuel pellets</strong></td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">National Ignition Facility</td>
      <td style="text-align: left">NIF: 192 laser beams focused onto small target, uses Indirect target</td>
      <td style="text-align: left"> </td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"><img src="/lectures/images/2022-12-20-APPH4010_Intro_to_Nuclear/image-20221219020446322.png" alt="image-20221219020446322" /></td>
      <td style="text-align: left">Laser pulse vaporizes the heavy metal case, generating intense <strong>x-rays inside the hohlraum</strong>, which compresses and heats the DT fuel</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: left"> </td>
      <td style="text-align: left">Hohlraum = the metal cylinder</td>
      <td> </td>
    </tr>
  </tbody>
</table>

<h1 id="final">Final</h1>

<ul>
  <li>Nuclear sturcture
    <ul>
      <li>spin has an effect on energy</li>
      <li>know every term in SEMF, what it represents</li>
      <li>pairing term</li>
      <li>vibrational harmnoics shapes</li>
      <li>nuclear potential energy</li>
    </ul>
  </li>
  <li>Nuclear Instability
    <ul>
      <li>gamma emission comes from nucleus, actually comes fro the daughter</li>
      <li>selection rules for gamma emission, including the table</li>
      <li>transition ratess</li>
      <li>Decay schemes
        <ul>
          <li>high polarity and high half life</li>
        </ul>
      </li>
      <li>internal conversion (eject electron)</li>
      <li>beta decay three possible transitions
        <ul>
          <li>tell by excess protons or neutrons whether if it goes beta plus or beta minus</li>
        </ul>
      </li>
      <li>alpha decay
        <ul>
          <li>QM consideration that as long as Q is positive it will happen</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Nuclear Reactions
    <ul>
      <li>classification
        <ul>
          <li>scattering, inelastic scattering; knockout</li>
          <li>direct reactions and compound-nucleus decay</li>
        </ul>
      </li>
      <li>cross section and density equation and reaction rate
        <ul>
          <li>estimate the cross section such as assuming no coulomb interactions with $\pi R^2$; but with intearaction $\pi b^2$</li>
          <li>cross section calculation for charged particles</li>
          <li>no need to know partial waves</li>
          <li>compound nuclear reactions equation</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Fission
    <ul>
      <li>binding energy curve and why fission is possible</li>
      <li>high cross section with thermal neutrons</li>
      <li>fission activation energy - when you pass the poit of this yuo can fission</li>
      <li>fission history and discovery of neutron</li>
      <li>chain reaction graph of uranium
        <ul>
          <li>neutron multiplication factor</li>
          <li>reactors would want to stay at $k=1$, which is controlled by control rods</li>
          <li>why enrichment is needed</li>
        </ul>
      </li>
      <li>nuclear reactor basics
        <ul>
          <li>fuel pellets</li>
          <li>Pressurized WR and BWR designs; difference is that water doesn’t boil and goes into heat exchange</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Fusion
    <ul>
      <li>why fusion is possible in binding energy curve
        <ul>
          <li>but the hard part is to have a high temperature, etc.</li>
          <li>magnetic confinement v,s, inertial confinement: heating them so quickly</li>
        </ul>
      </li>
      <li>reaction rate for fusion equation with $R=n_1n_2 \sigma v$</li>
      <li>triple product and lawson criterion</li>
      <li>toroidal fields, know stuff like this exists
        <ul>
          <li>tokamak</li>
        </ul>
      </li>
      <li>inertial confinement
        <ul>
          <li>using lasers</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>some shared topisc shuch as alpha and beta decay</p>
  </li>
  <li>Energy calculation, very practical</li>
</ul>]]></content><author><name></name></author><category term="2022@Columbia" /><summary type="html"><![CDATA[Equations and Concepts for Intro to Nuclear]]></summary></entry><entry><title type="html">ELEN6885 Reinforcement Learning part2</title><link href="/lectures/2022@columbia/ELEN6885_Reinforcement_Learning_part2.html/" rel="alternate" type="text/html" title="ELEN6885 Reinforcement Learning part2" /><published>2022-12-20T00:00:00-05:00</published><updated>2022-12-20T00:00:00-05:00</updated><id>/lectures/2022@columbia/ELEN6885_Reinforcement_Learning_part2</id><content type="html" xml:base="/lectures/2022@columbia/ELEN6885_Reinforcement_Learning_part2.html/"><![CDATA[<h1 id="rl-packages">RL packages</h1>

<p>Now we start to discuss using DL for modeling. Some commonly used packages include</p>

<p><strong>Mainly for this course</strong></p>

<ul>
  <li>openAI <code class="language-plaintext highlighter-rouge">gym</code> mainly an online environment for bench-marking for algorithm performance</li>
</ul>

<p><strong>Other</strong></p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">stable-baselines3</code> implementations of many modern RL algorithms</li>
  <li><code class="language-plaintext highlighter-rouge">rllib</code> includes ray tuning</li>
</ul>

<blockquote>
  <p>Resources</p>

  <ul>
    <li>colab tutorial: https://colab.research.google.com/github/araffin/rl-tutorial-jnrr19/blob/sb3/1_getting_started.ipynb</li>
    <li>openai doc: https://www.gymlibrary.dev/</li>
    <li>stable-baselines3 doc: https://stable-baselines3.readthedocs.io/en/master/</li>
  </ul>
</blockquote>

<h2 id="openai-gym">OpenAI Gym</h2>

<blockquote>
  <ul>
    <li>Separate the ==implementation of the environment== from the implementation of the learning algorithm.</li>
    <li>Make it easy to compare various RL algorithms on the same/standardized environment.</li>
  </ul>
</blockquote>

<ul>
  <li>
    <p>installation, e.g. <code class="language-plaintext highlighter-rouge">gym[mujoco]</code></p>
  </li>
  <li>
    <p>has many environments which can be treated as <strong>benchmark</strong> “datasets”</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Control</th>
          <th style="text-align: center">Atari</th>
          <th style="text-align: center">Mujoco</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221028153609045.png" alt="image-20221028153609045" style="zoom:33%;" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221028161012225.png" alt="image-20221028161012225" style="zoom: 33%;" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221028161048421.png" alt="image-20221028161048421" style="zoom:33%;" /></td>
        </tr>
      </tbody>
    </table>

    <p>and many more</p>
  </li>
</ul>

<p>As basically they are interactive environments, the <code class="language-plaintext highlighter-rouge">environment</code> is what is implemented, meaning your job is to <strong>determine what action to take</strong> (i.e. your model) given your state (e.g. history of rgb pixels of the game), and <strong>environment gives you a reward and next state</strong></p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221028161310313.png" alt="image-20221028161310313" style="zoom:50%;" /></p>

<p>Specifically the <code class="language-plaintext highlighter-rouge">environment</code> will give you</p>

<ul>
  <li><strong>observation</strong>: the new state simulated by the environment</li>
  <li><strong>reward</strong>: defined and computed by the environment</li>
  <li><strong>done</strong>: A boolean indicating if episode has finished</li>
  <li><strong>info</strong>: additional info used only for debugging</li>
</ul>

<p>And the most important is the ==observation &amp; action space== for each environment:</p>

<ul>
  <li>it will have an <code class="language-plaintext highlighter-rouge">action_space</code> specifying what are the legal actions
    <ul>
      <li><code class="language-plaintext highlighter-rouge">Discrete</code>: A discrete space where $a(s) \in {0,1,…,n}$</li>
      <li><code class="language-plaintext highlighter-rouge">Box</code>: An n dimensional continuous space with optional bounds</li>
      <li><code class="language-plaintext highlighter-rouge">Dict</code>: A dictionary of space instances such as <code class="language-plaintext highlighter-rouge">Dict({"position": Discrete(2), "velocity": Discrete(3)})</code></li>
    </ul>
  </li>
  <li>it will have an <code class="language-plaintext highlighter-rouge">observation_space</code> specifying what will be returned
    <ul>
      <li>e.g. RGB pixel values of the screen</li>
    </ul>
  </li>
</ul>

<hr />

<p><em>Examples: Cliff Walking Environment</em></p>

<p>The board is a 4x12 matrix, with (using NumPy matrix indexing):</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">[3, 0]</code> as the start at bottom-left</li>
  <li><code class="language-plaintext highlighter-rouge">[3, 11]</code> as the goal at bottom-right</li>
  <li><code class="language-plaintext highlighter-rouge">[3, 1..10]</code> as the cliff at bottom-center</li>
</ul>

<p>If the agent steps on the cliff, it returns to the start. An episode terminates when the agent reaches the goal.</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221028161926749.png" alt="image-20221028161926749" style="zoom: 50%;" /></p>

<p><strong>Reward</strong></p>

<ul>
  <li>Each time step incurs -1 reward, and stepping into the cliff incurs -100 reward.</li>
</ul>

<p><strong>Action Space</strong>: There are 4 discrete deterministic actions:</p>

<ul>
  <li>0: move up</li>
  <li>1: move right</li>
  <li>2: move down</li>
  <li>3: move left</li>
</ul>

<p><strong>Observation Space</strong>: returned as a flattened index to represent the coordinate of the system</p>

<ul>
  <li>There are 3x12 + 1 possible states. In fact, the agent cannot be at the cliff, nor at the goal (as this results in the end of the episode). It remains all the positions of the first 3 rows plus the bottom-left cell.</li>
  <li>The observation is simply the current position encoded as flattened index. You can easily convert back to coordinate system with <code class="language-plaintext highlighter-rouge">np.unravel_index</code></li>
</ul>

<hr />

<p><em>Example: Mujoco Humanoid</em></p>

<p>The 3D bipedal robot is designed to <strong>simulate a human</strong>. It has a torso (abdomen) with a pair of legs and arms. The legs each consist of two links, and so the arms (representing the knees and elbows respectively). The goal of the environment is to walk forward as fast as possible without falling over.</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221028162424416.png" alt="image-20221028162424416" /></p>

<p><strong>Action space</strong> is a <code class="language-plaintext highlighter-rouge">Box(-1, 1, (17,), float32)</code>. An action represents the <strong>torques</strong> applied at the hinge joints.</p>

<ul>
  <li>
    <p>action is a box has 17 different joints, each controlling torque from <code class="language-plaintext highlighter-rouge">[-1.0,1.0]</code></p>
  </li>
  <li>
    <p>example joints you can control: <code class="language-plaintext highlighter-rouge">hip_1 (front_left_leg), angle_1 (front_left_leg), hip_2 (front_right_leg), right_hip_x (right_thigh), right_hip_z (right_thigh), ...</code></p>
  </li>
</ul>

<p><strong>Observation Space</strong></p>

<ul>
  <li>Observations consist of <strong>positional</strong> values of different body parts of the Humanoid, followed by the <strong>velocities</strong> of those individual parts (their derivatives) with all the positions ordered before all the velocities</li>
</ul>

<p><strong>Rewards</strong>: the reward consists of four parts:</p>

<ul>
  <li>
    <p><code class="language-plaintext highlighter-rouge">healthy_reward</code>: Every timestep that the humanoid is alive</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">forward_reward</code>: A reward of walking forward</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">ctrl_cost</code>: A negative reward for penalizing the humanoid if it has too large of a control force.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">contact_cost</code>: A negative reward for penalizing the humanoid if the external contact force is</p>
  </li>
</ul>

<h2 id="using-openai-gym">Using OpenAI Gym</h2>

<p>A minimal working example would be:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">gym</span>
<span class="n">env</span> <span class="o">=</span> <span class="n">gym</span><span class="p">.</span><span class="n">make</span><span class="p">(</span><span class="s">"CartPole-v1"</span><span class="p">)</span> 
<span class="n">state</span> <span class="o">=</span> <span class="n">env</span><span class="p">.</span><span class="n">reset</span><span class="p">()</span>
<span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1000</span><span class="p">):</span>
    <span class="n">env</span><span class="p">.</span><span class="n">render</span><span class="p">()</span>  <span class="c1"># show a window on your screen. In colab notebook more needs to be done
</span>    <span class="n">action</span> <span class="o">=</span> <span class="n">env</span><span class="p">.</span><span class="n">action_space</span><span class="p">.</span><span class="n">sample</span><span class="p">()</span>  <span class="c1"># random policy
</span>    <span class="n">state</span><span class="p">,</span> <span class="n">reward</span><span class="p">,</span> <span class="n">done</span><span class="p">,</span> <span class="n">info</span> <span class="o">=</span> <span class="n">env</span><span class="p">.</span><span class="n">step</span><span class="p">(</span><span class="n">action</span><span class="p">)</span> 
    <span class="k">if</span> <span class="n">done</span><span class="p">:</span>
        <span class="n">state</span> <span class="o">=</span> <span class="n">env</span><span class="p">.</span><span class="n">reset</span><span class="p">()</span> 
<span class="n">env</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="stable-baselines-3">Stable-Baselines-3</h2>

<blockquote>
  <p>Stable Baselines3 (SB3) is a set of reliable <strong>implementations of reinforcement learning algorithms</strong> in PyTorch.</p>
</blockquote>

<p>Where OpenAI gym focuses on the environment, stable-baselines-3 focuses on the learning. But of course it is easily integratable with OpenAI <code class="language-plaintext highlighter-rouge">gym</code>. Smoe additional features include</p>

<ul>
  <li>access to most popular deep reinforcement learning algorithms. Ex: DQN, PPO, A2C, DDPG</li>
  <li>allow you to implement deep reinforcement learning solutions in just a few lines</li>
  <li>==vectorized training in parallel== (e.g. instantiate parallel copies of agents)</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">gym</span>
<span class="kn">from</span> <span class="nn">stable_baselines3</span> <span class="kn">import</span> <span class="n">PPO</span>

<span class="n">env</span> <span class="o">=</span> <span class="n">gym</span><span class="p">.</span><span class="n">make</span><span class="p">(</span><span class="s">"CartPole-v1"</span><span class="p">)</span>  <span class="c1"># use mode='rgb_array' to return game image as state
</span>
<span class="c1"># training
</span><span class="n">model</span> <span class="o">=</span> <span class="n">PPO</span><span class="p">(</span><span class="s">"MlpPolicy"</span><span class="p">,</span> <span class="n">env</span><span class="p">,</span> <span class="n">verbose</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span> <span class="c1"># multilayer perceptron + feedin environment
</span><span class="n">model</span><span class="p">.</span><span class="n">learn</span><span class="p">(</span><span class="n">total_timesteps</span><span class="o">=</span><span class="mi">10_000</span><span class="p">)</span>

<span class="c1"># testing
</span><span class="n">obs</span> <span class="o">=</span> <span class="n">env</span><span class="p">.</span><span class="n">reset</span><span class="p">()</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1000</span><span class="p">):</span>
    <span class="n">action</span><span class="p">,</span> <span class="n">_states</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">predict</span><span class="p">(</span><span class="n">obs</span><span class="p">,</span> <span class="n">deterministic</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span> 
    <span class="n">obs</span><span class="p">,</span> <span class="n">reward</span><span class="p">,</span> <span class="n">done</span><span class="p">,</span> <span class="n">info</span> <span class="o">=</span> <span class="n">env</span><span class="p">.</span><span class="n">step</span><span class="p">(</span><span class="n">action</span><span class="p">)</span>
    <span class="n">env</span><span class="p">.</span><span class="n">render</span><span class="p">()</span>
    <span class="k">if</span> <span class="n">done</span><span class="p">:</span>
        <span class="n">obs</span> <span class="o">=</span> <span class="n">env</span><span class="p">.</span><span class="n">reset</span><span class="p">()</span> 
<span class="n">env</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></div></div>

<h1 id="function-approximation">Function Approximation</h1>

<p>Recall that all evaluation and control algorithms we discussed are <strong>tabular methods</strong> (e.g. $Q(s,a)$)</p>

<p><img src="https://miro.medium.com/max/622/1*fe1eyEAcfj6KHWFXHUNHbQ.png" style="zoom:50%;" /></p>

<ul>
  <li>Each update will only change the value of one state or one state-action pair, i.e., an entry in the lookup table</li>
  <li>The lookup table <strong>may become unmanageable</strong> when the number of “states” or “state-action” pairs goes up. For instance, what if we have a <strong>continuous action space</strong>?</li>
  <li>also needed a way to keep exploring, because we needed to estimate values of a lot of states to be accurate</li>
</ul>

<blockquote>
  <p><strong>Use function approximation</strong> to treat $V(s)$ or $Q(s,a)$ as functions, i.e. we consider instead of tables, ==parameters of a function== such that:</p>

  <ul>
    <li>for $V$: $S\to \mathbb{R}$</li>
    <li>for $Q: S,A \to \mathbb{R}$</li>
  </ul>

  <p>so we consider $V(s,w)$ and $Q(s,a,w)$ for $w$ being the weights/parameters of the function</p>
</blockquote>

<p>Function approximation methods has <strong>advantages</strong> for cases such as</p>

<ul>
  <li>evaluate/predict $v(s)$ and $q(s, a)$ for large or high-dimension state space</li>
  <li>evaluate/predict $v(s)$ and $q(s, a)$ for continuing tasks (non-episodic)</li>
  <li>evaluate/predict $v(s)$ and $q(s, a)$ for partially observable problems
    <ul>
      <li>because we can <strong>extrapolate</strong> from the experienced samples (e.g. states)</li>
    </ul>
  </li>
</ul>

<p>and is usally trained with ==supervised training==</p>

<ul>
  <li>e.g. given a $(s,G_t(s))$ pair, ask the model to do learn it</li>
  <li>use SGD to minimize the objective function such as MSE between $\hat{V}(s,w)$ and $V(s)$</li>
</ul>

<h2 id="value-function-approximation">Value Function Approximation</h2>

<p>We would like to consider $\hat{V}(s,w)$ and $\hat{Q}(s,a,w)$ parameterized by $w$:</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221104083159491.png" alt="image-20221104083159491" style="zoom:33%;" /></p>

<p>where the target $V_\pi(s)$ and $Q_\pi(s,a)$ are basically predefined by the specific algorithms we want to use and our model aims to model them.</p>
<ul>
  <li>In general we can have three types of modelling, where the last one modelling $Q$ from $V$ is not used often in practice</li>
  <li>for MC methods, bascially $V_\pi(s) = G_t$ is used as target, and it differs if you do TD(0), for instance</li>
  <li>since those are aimed to improve on tabular methods, dimensoinaltiy of $w$ is typically much smaller of states $\vert S\vert$, and highly related to how many features you want to encode in each state</li>
  <li>finally, notice that updating one weight will influence value for all states (cf. tabular methods)</li>
</ul>

<p>There are <strong>many ways</strong> to construct your function approximator, e.g.:</p>

<ul>
  <li>
    <p><strong>Linear:</strong> consider we having <em>three features</em> of a state $s=[s_1,s_2, s_3]^T$.  Then we can do:</p>

\[V(s,w) = s_1 w_w + s_2 w_2 + s_3 w_3 = [s_1, s_2,s_3]^T 
\begin{bmatrix}w_1\\
w_2\\
w_3\end{bmatrix}\]

    <p>or you can construct nonlinear features usch as $w_1*w_2$</p>
  </li>
  <li>
    <p><strong>non-linear:</strong> using neural networks</p>
  </li>
  <li><strong>decision tree</strong></li>
  <li>etc.</li>
</ul>

<blockquote>
  <p>Here we consider ==differentiable== function approximation methods.</p>
</blockquote>

<p>For instance, let $w$ be a column vector. Then we can consider</p>

\[J(w) = \mathbb{E}[ (\hat{V}(s,w) - V_\pi(s) )^2 ]\]

<p>to minimize this loss using SGD (single sample per batch) type approach to consider</p>

\[\Delta w = - \frac{1}{2} \alpha \nabla_w J(w)\]

<p>if you perform the chain rule and take derivatives you get:</p>

\[\Delta w = \alpha \mathbb{E}_\pi [(v_\pi(s) - \hat{v}(s,w)) \nabla_w \hat{v}(s,w)]\]

<p>Finally, as we are doing SGD:</p>

\[\Delta w = \alpha  \underbrace{(v_\pi(s) - \hat{v}(s,w))}_{\text{prediction error}} \underbrace{\nabla_w \hat{v}(s,w)}_{\text{gradient}}\]

<p>note that</p>
<ul>
  <li>the above form is ==generic if you use MSE==</li>
  <li>$v_\pi(s)$ depends on what algorithm you use, e.g. MC means $v_\pi(s) = G_t$ is calculated at the end of episode.</li>
</ul>

<hr />

<p><em>Example: Simple SGD updates</em></p>

<p>Let the target be $y$, and the input features are 1-D $x$. So that you get the following dataset</p>

\[(x_1, y_1), (x_2, y_2), \dots, (x_n, y_n)\]

<p>Suppose your approximator has two parameters:</p>

\[\hat{V}(x) = w_1  + w_{2} x\]

<p>Then your MSE loss is simply:</p>

\[J(w) = \sum\limits_{i=1}^{n} (\hat{V}(x_i) - y_i)^2 = \sum\limits_{i=1}^{n} (w_1 + w_2 x_i - y_i)^2\]

<p>Therefore, in the case of SGD your per step weight update with learning rate $\eta$ is</p>

\[\begin{bmatrix} 
    w_1\\
    w_2 
\end{bmatrix} \gets
\begin{bmatrix} 
    w_1\\
    w_2
\end{bmatrix} - \eta \nabla_w J(w)
= \begin{bmatrix} 
    w_1\\
    w_2
\end{bmatrix} - \eta
\begin{bmatrix} 
    2(w_1 + w_2 x_i - y_i)\\
    2x_i(w_1 + w_2 x_i - y_i)
\end{bmatrix}\]

<h2 id="rl-prediction-with-value-approximation">RL Prediction with Value Approximation</h2>

<p>Now, we employ VFA  methods to perform RL. Recall that in general we need two things:</p>

<ul>
  <li><strong>evaluation/prediction</strong> of $v_\pi(s)$ and $q_\pi(s,a)$</li>
  <li><strong>control/planning</strong> to find optimal policy (usually by using $q_\pi(s,a)$)</li>
</ul>

<p>Here, we first discuss the problem of prediction. As essentially it becomes supervised learning</p>
<ol>
  <li>agent interact using policy $\pi$ to collect experience/dataset</li>
  <li>since the collected signals are only <strong>rewards</strong>, you usually need to then specify a <strong>target</strong> for the model to learn</li>
  <li>now you have a supervised dataset, and you can use SGD to train your model</li>
</ol>

<p><em>For instance</em>:</p>

<ul>
  <li>
    <p>if you are using MC methos, then your computed target is simply $G_t = \sum\limits_{k=t}^{T} \gamma^{k-t} r_k$ so that your weight updates become</p>

\[\nabla w = \alpha \underbrace{( \textcolor{red}{G_t} - \hat{v}(S_t,w) )}_{\text{prediction error}} \nabla_w \hat{v}(S_t,w)\]
  </li>
  <li>
    <p>if you are using TD methods, then ==technically your target is $R_{t+1}+\gamma V_\pi(S_{t+1})$==, but since you don’t know $V_\pi$, you consider:</p>

\[\nabla w = \alpha \underbrace{( \textcolor{red}{R_{t+1}+\gamma \hat{v}(S_{t+1},w)} - \hat{v}(S_t,w) )}_{\text{prediction error}} \nabla_w \hat{v}(S_t,w)\]

    <p>note that as our target is technically also parametrized by $w$ but we did not take its gradient, it is also called <strong>semi-stochastic gradient descent</strong>. (e.g. in DQN, we would use old $\hat{v}(S_{t+1},w^-)$ as targets and update it over time)</p>
  </li>
  <li>
    <p>for TD($\lambda$), the target is $G_t^\lambda$:</p>

\[\nabla w = \alpha \underbrace{( \textcolor{red}{G^{\lambda}_t} - \hat{v}(S_t,w) )}_{\text{prediction error}} \nabla_w \hat{v}(S_t,w)\]

    <p>which is the forward-view. The <strong>backward-view</strong> update is shown in the section <a href="#TD($\lambda$)_with_Value_Function_Approximation">TD($\lambda$) with Value Function Approximation</a></p>
  </li>
</ul>

<h3 id="linear-function-approximation">Linear Function Approximation</h3>

<p>We can consider a simple case study of using linear function approximation to predict $v_\pi(s)$.</p>

<p>Your general pipeline would be:</p>

<ol>
  <li>determine your feature representation $x(s)$ for each state $s \in S$:</li>
</ol>

\[\boldsymbol{x}(S) = \begin{bmatrix} 
      x_1(S)\\
      \vdots\\
      x_n(S) 
  \end{bmatrix}\]

<ol>
  <li>
    <p>define your <strong>model</strong>. Here we consider a linear approximator, we consider:</p>

\[\hat{v}(S, w) = \boldsymbol{x}(S)^{T} \boldsymbol{w} = \sum\limits_{j=1}^{n} x_{j} (S)w_j\]
  </li>
  <li>
    <p>define your <strong>objective</strong>: consider given the true value $v_\pi(S)$:</p>

\[J(\boldsymbol{w}) = \mathbb{E}_\pi[(v_\pi(S) - \boldsymbol{x}(S)^{T} \boldsymbol{w} )^2]\]
  </li>
  <li>
    <p>perform gradient descent. Using SGD the update rule for weights become:</p>

\[\begin{align*}
 \nabla_{w} \hat{v}(S, w) &amp;= \boldsymbol{x}(S)\\
 \Delta w &amp;= \alpha \underbrace{(v_\pi(S) - \boldsymbol{x}(S)^{T} \boldsymbol{w} )}_{\text{prediction error}} \boldsymbol{x}(S)\\
\end{align*}\]
  </li>
</ol>

<p>Note that in practice:</p>
<ul>
  <li>very important to choose the right features and the representations</li>
  <li>for linear approximators, the gradient $\nabla_{w} \hat{v}(S, w) = \boldsymbol{x}(S)$ is just the feature vectors</li>
</ul>

<p><strong>Special Example: modelling table look up</strong></p>

<p>We can actually use a linear approximator and ==get back tabular methods==.</p>
<ul>
  <li>we can make feature to be onehot of states</li>
  <li>then weights are basically the values in the table lookup</li>
</ul>

\[\boldsymbol{x}(S) = \begin{bmatrix} 
    1(S=s_1)\\
    \vdots\\
    1(S=s_n)
\end{bmatrix}\]

<p>Then a linear approximator gives</p>

\[\hat{v}(S, w) = \boldsymbol{x}(S) = \begin{bmatrix} 
    1(S=s_1)\\
    \vdots\\
    1(S=s_n)
\end{bmatrix} \cdot  \begin{bmatrix} 
    w_1\\
    \vdots\\
    w_n 
\end{bmatrix}\]

<p>so that essentially $\hat{v}(S_i) = w_i$ is like a table lookup.</p>

<h3 id="mc-with-value-function-approximation">MC with Value Function Approximation</h3>

<p>Recall that for MC methods, we consider a target of $G_t$. Therefore:</p>

<ol>
  <li>
    <p>experiences $(S_i, A_i, R_i)$ and compute $(S_i, G_i)$ pairs to get training data</p>

\[(S_1, G_1), (S_2, G_2), \dots, (S_T, G_T)\]
  </li>
  <li>
    <p>then just perform supervised learning to train your model</p>
  </li>
</ol>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221104092845712.png" alt="image-20221104092845712" style="zoom: 50%;" /></p>

<p>Note that</p>

<ul>
  <li><strong>theoretically</strong>, in order to guarantee convergence, $\alpha$ should be decreasing but needs infinite visit of all states (the usual stochastic assumption) $\sum \alpha = \infty, \sum \alpha^2 &lt; \infty$, for instance $\alpha = \frac{1}{t}$</li>
  <li>but in reality people just use constant $\alpha$ and it works fine</li>
</ul>

<h3 id="td0-with-value-function-approximation">TD(0) with Value Function Approximation</h3>

<p>Recall that the TD Target $R_{t+1} + \gamma \hat{v}(S_{t+1},w)$ is <strong>biased</strong> as we are using $\hat{v}(S_{t+1},w)$ to estimate $v\pi(S_{t+1})$.</p>

<p>But you can still regardless compute the supervised signal as $(S_i, R_{i+1} + \gamma \hat{v}(S_{i+1},w))$ hence</p>

<ol>
  <li>
    <p>collect experience hence a dataset of</p>

\[(S_1, R_2 + \gamma \hat{v}(S_2,w)), (S_2, R_3 + \gamma \hat{v}(S_3,w)), \dots, (S_{T-1}, R_T + \gamma \hat{v}(S_T,w))\]
  </li>
  <li>
    <p>then again supervised training on your $\hat{v}(S,w)$ with SGD:</p>

\[\nabla \boldsymbol{w} = \alpha \underbrace{(R_{t+1} + \gamma \hat{v}(S_{t+1},w) - \hat{v}(S_t,w))}_{\text{prediction error}} \nabla \hat{v}(S_t,w)\]

    <p>or sometimes people just write (as TD is used often)</p>

\[\nabla \boldsymbol{w} = \alpha \delta \nabla \hat{v}(S_t,w)\]
  </li>
</ol>

<p>Then the rest of the algorithm is basically the same as the MC version. Note that</p>
<ul>
  <li>again, this is not fully stochastic = semi-stochastic gradient as that target $R_{i+1} + \gamma \hat{v}(S_{i+1},w)$ is parameterized yet no gradient is taken</li>
  <li>examples of this type of algorithm is DQN, and active research is on improving this semi-gradient algorithm</li>
</ul>

<h3 id="tdlambda-with-value-function-approximation">TD($\lambda$) with Value Function Approximation</h3>

<p>The target for TD($\lambda$) is $G_t^\lambda$, which is a weighted sum of TD targets and is still biased of the true value $v_\pi(S_t)$.</p>

<p>But regardless:</p>
<ol>
  <li>
    <p>collect experience hence a dataset of</p>

\[(S_1, G_1^\lambda), (S_2, G_2^\lambda), \dots, (S_T, G_T^\lambda)\]
  </li>
  <li>
    <p>then again supervised training on your $\hat{v}(S,w)$ with SGD. First the ==forward view== is simply:</p>

\[\nabla \boldsymbol{w} = \alpha \underbrace{(G_t^\lambda - \hat{v}(S_t,w))}_{\text{prediction error}} \nabla \hat{v}(S_t,w)\]
  </li>
  <li>
    <p>then we derive the update rule being the ==backward view==:</p>

\[\begin{align*}
\delta_{t} &amp;= R_{t+1} + \gamma \hat{v}(S_{t+1},w) - \hat{v}(S_t,w)\\
E_{t} &amp;= \gamma \lambda E_{t+1} + \nabla \hat{v}(S_t,w) \\
\nabla \boldsymbol{w} &amp;= \alpha \delta_{t} E_{t}
\end{align*}\]
  </li>
</ol>

<p>So we get the algorithm being:
<img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221104155114.png" style="zoom:50%;" /></p>

<h3 id="convergence-of-prediction-algorithms">Convergence of Prediction Algorithms</h3>

<p>In general TD methods are fast to learn but are unstable.</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221104155252.png" style="zoom:50%;" /></p>

<h2 id="rl-control-with-function-approximation">RL Control with Function Approximation</h2>

<blockquote>
  <p>How do we find the <strong>optimal policy</strong> once we estimated the value or action-value function using VFA?</p>
</blockquote>

<p>Recall that as we are in the case of model-free control, we generally consider:</p>
<ul>
  <li>estimate ==action-value== function $Q_\pi(S,A)$</li>
  <li>policy improvement using $\epsilon$-greedy policy of $Q_\pi(S,A)$</li>
</ul>

<p>Hence the general policy iteration (still applies) basically looks like</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221104093515112.png" alt="image-20221104093515112" style="zoom:50%;" /></p>

<blockquote>
  <p>As policy improvement is based on $Q_\pi(S,A)$, all we need to do is to <strong>estimate $Q_\pi(S,A)$ using VFA.</strong> This essentially is the same as fitting $V_\pi(S)$ but use $Q$ instead in formulas.</p>
</blockquote>

<p>Hence our model considers</p>

\[\hat{q}(S,A,w) \approx \hat{q}_\pi(S,A)\]

<p>then to fit it, we consider</p>

\[J(\boldsymbol{w}) = \mathbb{E}_{\pi}[(\hat{q}(S,A,w) - q_\pi(S,A))^2]\]

<p>and using SGD the gradient is</p>

\[\nabla w = \alpha \underbrace{(q_\pi(S,A) - \hat{q}(S,A,w))}_{\text{prediction error}} \nabla \hat{q}(S,A,w)\]

<p>and based on different algorithms you use different targets to compute $q_\pi(S,A)$</p>

<p>As it is basically the same as the value function case, we will quickly show:</p>

<ul>
  <li>
    <p>for MC methods, the target is $G_t$</p>

\[\nabla w = \alpha \underbrace{(\textcolor{red}{G_t} - \hat{q}(S_t,A_t,w))}_{\text{prediction error}} \nabla \hat{q}(S_t,A_t,w)\]
  </li>
  <li>
    <p>for TD(0), the target is the estimated TD target $R_{t+1} + \gamma \hat{q}(S_{t+1},A_{t+1},w)$</p>

\[\nabla w = \alpha \underbrace{(\textcolor{red}{R_{t+1} + \gamma \hat{q}(S_{t+1},A_{t+1},w)} - \hat{q}(S_t,A_t,w))}_{\text{prediction error}} \nabla \hat{q}(S_t,A_t,w)\]
  </li>
  <li>
    <p>for <em>forward-view</em> TD($\lambda$) the target is $G_t^\lambda$</p>

\[\nabla w = \alpha \underbrace{(\textcolor{red}{G_t^\lambda} - \hat{q}(S_t,A_t,w))}_{\text{prediction error}} \nabla \hat{q}(S_t,A_t,w)\]

    <p>and the <strong>backward view update</strong> rule is</p>

\[\begin{align*}
\delta_{t} &amp;= R_{t+1} + \gamma \hat{q}(S_{t+1},A_{t+1},w) - \hat{q}(S_t,A_t,w)\\
E_{t} &amp;= \gamma \lambda E_{t+1} + \nabla \hat{q}(S_t,A_t,w) \\
\nabla \boldsymbol{w} &amp;= \alpha \delta_{t} E_{t}
\end{align*}\]
  </li>
</ul>

<p>the algorithms are again basically the same as the value function case.</p>

<h3 id="convergence-of-control-algorithms">Convergence of Control Algorithms</h3>

<p>Problem mostly occurs when you do TD and Non-linear function approximation.</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221104160154.png" style="zoom:40%;" /></p>

<h2 id="batch-method-for-rl-applications">Batch Method for RL Applications</h2>

<p>Before, we are talking about SGD which uses a sample and throw it away after updates.</p>

<blockquote>
  <p><strong>Aim</strong>: We can be more sample efficient by sampling a batch and perform updates. Additionally, it also provides a better estimate to solve the least square problem.</p>
</blockquote>

<p>Consider a given experience dataset $D$ consisting of state-value pairs provided:</p>

\[\mathcal{D} = \{ (s_1, v_1^{\pi}), (s_2, v_2^{\pi}), ..., (s_T, v_T^{\pi}) \}\]

<p>then the best parameter that ==best fits $v_\pi$== obviously needs to perform least square on ==all of them==</p>

\[LS(\boldsymbol{w}) = \sum_{t=1}^T (v_t^{\pi} - \hat{v}(s_t,w))^2
= T \cdot  \mathbb{E}_{\pi}[(v^{\pi} - \hat{v}(s,w))^2]\]

<p>or $T$ times the average error you make. Naive SGD for each sample would not work as recall</p>
<ul>
  <li>each piece of experience would be correlate as they will come from real experience</li>
  <li>but fitting VFA assumes that the samples are <strong>independent</strong></li>
</ul>

<p>therefore, they will be techniques such as experience replay to shuffle the order so data appears IID:</p>

<ol>
  <li>
    <p>given an experience consisting of state value pairs</p>

\[\mathcal{D} = \{ (s_1, v_1^{\pi}), (s_2, v_2^{\pi}), ..., (s_T, v_T^{\pi}) \}\]
  </li>
  <li>repeat
    <ol>
      <li>
        <p>sample state, value for experience</p>

\[(s_t, v_t^{\pi}) \sim \mathcal{D}\]
      </li>
      <li>
        <p>update the parameters using SGD</p>

\[\Delta w = \alpha (v_t^{\pi} - \hat{v}(s_t,w)) \nabla \hat{v}(s_t,w)\]
      </li>
    </ol>
  </li>
  <li>
    <p>converges to LS solution:</p>

\[\boldsymbol{w} = \arg\min_{w} LS(\boldsymbol{w})\]
  </li>
</ol>

<p>This basically is the SGD version of <strong>experience replay</strong> in DQN.</p>

<hr />

<p><em>Brief Introduction of DQN</em>:</p>

<p>Here we will deal with non-linear function approximation and the problem of <strong>correlation</strong>.</p>

<blockquote>
  <p><strong>Non-linear neural networks</strong>: needs a static training set + uncorrelated IID data during training</p>
</blockquote>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221104090857675.png" alt="image-20221104090857675" style="zoom: 33%;" /></p>

<p>DQN uses ==experience replay== to remove correlations between consecutive samples of data and ==fixed Q-target== to stabilize the learning process.</p>

<p>The overall algorithm consists of:</p>

<ol>
  <li>take action $a_t$ in state $s_t$ and observe reward $r_t$ and next state $s_{t+1}$</li>
  <li>store transition $(s_t, a_t, r_t, s_{t+1})$ in replay memory $D$</li>
  <li><strong>sample random minibatch</strong> of transitions $(s_j, a_j, r_j, s_{j+1})$ from $D$</li>
  <li>
    <p>compute Q-learning targets w.r.t to <strong>old network $\boldsymbol{w}^-$</strong> and optimize MSE:</p>

\[L(\boldsymbol{w}) = \mathbb{E}_{(s_j, a_j, r_j, s_{j+1}) \sim D}[(r_j + \gamma \max_{a'} Q(s_{j+1}, a', \boldsymbol{w^{-}}) - Q(s_j, a_j, \boldsymbol{w}))^2]\]
  </li>
  <li>batch gradient descent on $L(\boldsymbol{w})$ to update $\boldsymbol{w}$</li>
</ol>

<h1 id="policy-gradient">Policy Gradient</h1>

<p>Recall that our task is to find the best policy given some environment that we can interact with:</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221112013422.png" style="zoom:30%;" /></p>

<p>The environment transit and returns new $s_{t+1}, r_{t+1}$ to the agent, <strong>and agent needs to spit out a $a_t$ given a state $s_t$</strong>.</p>

<p>The previous section considers first learnig an action-value function $Q_\theta(s,a)$ and then using it to find the optimal policy $\pi_\theta(a\vert s)$, e.g. doing greedy/epsilon-greedy policy, e.g. learn a $Q$ using MC, TD, SARSA, etc.</p>

<blockquote>
  <p><strong>can we perhaps directly learn a policy $\pi(a\vert s)$?</strong></p>
  <ul>
    <li>though we often still need some estimate of $Q$ to do policy improvement, but we can ==avoid doing $\arg\max$ over all actions to get a policy==</li>
  </ul>
</blockquote>

<p><strong>Advantages</strong></p>

<ul>
  <li>now action probability changes more smoothly, meaning better convergence</li>
  <li>easly for encoding exploratoin</li>
  <li>avoid the need of $\arg\max q(s,a)$ which can be costly if $\vert S\vert \times \vert A\vert$ is large</li>
</ul>

<p><strong>Disadvantages</strong></p>

<ul>
  <li>value-based could more efficient for a small number of states and actions</li>
  <li>hard to get an unbiased estimate through sampling (you will see that the gradient has an expected value term)</li>
  <li>many current approaches are still based on MC, hence many has high variance and could lower convergence speed</li>
</ul>

<h2 id="policy-objective-functions">Policy Objective Functions</h2>

<blockquote>
  <p>The first thing is to design an objective function to minimize. Note that we <strong>do not know a true policy</strong> but only an environment</p>

  <ul>
    <li>for $Q$/$V$ estimates, we can easily compute a loss from a target such as $r+\gamma Q$</li>
  </ul>
</blockquote>

<p>Approaches: we need some measure ==(a single score $\in \mathbb{R}$)== of how good a policy then:</p>

<ul>
  <li>
    <p>in episodic environments, we can use the <strong>value function of the start state</strong></p>

\[J_1(\theta) = V^{\pi_\theta}(s_0) = \mathbb{E}_{\pi_\theta}[v_1]\]
  </li>
  <li>
    <p>in continuing environments, we can use the <strong>expected return</strong> (which is the average of all possible returns)</p>

\[J_{avV}(\theta) = \sum\limits_{s} d^{\pi_\theta} (s) V^{\pi_\theta}(s)\]

    <p>which is basically the average of all possible returns, where $d^{\pi_\theta}(s)$ is the state distribution of the states under the policy $\pi_\theta$</p>
  </li>
  <li>
    <p>in general, we can also use an average reward per time-step:</p>

\[J_{avR}(\theta) = \sum\limits_{s} d^{\pi_\theta} (s) \mathbb{E}_{\pi_\theta}[r]
 = \sum\limits_{s} d^{\pi_\theta} (s) \sum\limits_{a} \pi_\theta(a|s) \mathcal{R}_s^{a}\]
  </li>
</ul>

<p>and our aim is to ==maximize them==. Given this, we now need to do gradient ascent:</p>

\[\Delta \theta = \alpha * \nabla_\theta J(\theta)\]

<p>and no minus sign in front. But what is this gradient?</p>

<ul>
  <li>to perform back-propagation, you need to have a derivative form of each operation = backed by math equation</li>
  <li>but considering the gradient above it is unclear what to do with the <strong>distribution of states $d^{\pi_\theta}(s)$ is also parameterized by $\theta$</strong></li>
</ul>

<h2 id="policy-gradient-theorem">Policy Gradient Theorem</h2>

<blockquote>
  <p><strong>Aim</strong>: manipulate the expression of gradient so that it does not need to do the summations</p>
</blockquote>

<p>In a single step MDP problem we can fix the distribution of states:</p>

\[\begin{align*}
   \nabla J(\theta) 
   &amp;= \nabla \sum\limits_{s} d^{\pi_\theta} (s) \sum\limits_{a} \pi_\theta(a|s) \mathcal{R}_s^{a} \\
   &amp;= \sum\limits_{s} d^{\pi_\theta} (s) \nabla \sum\limits_{a} \pi_\theta(a|s) \mathcal{R}_s^{a} \\
   &amp;= \sum\limits_{s} d^{\pi_\theta} (s) \sum\limits_{a} \nabla \pi_\theta(a|s) \mathcal{R}_s^{a} \\
   &amp;= \sum\limits_{s} d^{\pi_\theta} (s) \sum\limits_{a} \pi_\theta(a|s) \frac{\nabla \pi_\theta(a|s) }{ \pi_\theta(a|s) } \mathcal{R}_s^{a}\\
   &amp;= \sum\limits_{s} d^{\pi_\theta} (s) \sum\limits_{a} \pi_\theta(a|s) \underbrace{\nabla \ln \pi_\theta(a|s) }_{\text{score function} } \mathcal{R}_s^{a}\\
   &amp;= \sum\limits_{s} d^{\pi_\theta} (s) \mathbb{E}_{\pi_\theta}[\nabla_\theta \ln \pi_\theta(a|s) \mathcal{R}_s^{a}]
\end{align*}\]

<p>Overall (proof in the book), the theorem looks like:</p>

<blockquote>
  <p><strong>Policy Gradient Theorem</strong>: we can estimate the gradient for any differentiable policy $\pi_\theta$ and for any policy objective functions $J=J_1, J_{avR}$ or $\frac{1}{1-\gamma} J_{avV}$</p>

\[\begin{align*}
\nabla_\theta J(\theta)
&amp;= \nabla_\theta \sum\limits_{s} d^{\pi_\theta} (s) \sum\limits_{a} \pi_\theta(a|s) Q^{\pi_\theta}(s,a) \\
&amp;\propto \sum\limits_{s} d^{\pi_\theta} (s) \sum\limits_{a} Q^{\pi_\theta}(s,a) \nabla_\theta \ln \pi_\theta(a|s)
=\mathbb{E}_{s \sim \pi_\theta} \left[ \sum\limits_{a} Q^{\pi_\theta}(s,a) \nabla_\theta \ln \pi_\theta(a|s) \right]
\end{align*}\]

  <p>so that ==gradient does not flow through distribution $d$==! note that the proportional up to a constant is fine because that can be absored into the learning rate $\alpha$</p>
</blockquote>

<hr />

<p><em>Example</em>: gradient of Softmax policy using linear function approximation</p>

<p>Consider an naive modelling of $\pi$:</p>

\[\pi_\theta(s,a) = x(s,a)^T \theta\]

<p>but recall that $\pi \in [0,1]$, yet this does not satisfy such a constraint. Hence we can consider</p>

\[\pi = \mathrm{softmax}(x(s,a)^T \theta)\]

<p>for $\theta$ is a vector here. In this specific case, the <strong>score function of this form</strong> can be further computed as</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221111085101851.png" alt="image-20221111085101851" style="zoom: 33%;" /></p>

<p>and you can use it do the policy gradient.</p>

<p>However, <strong>what if your action is continous?</strong> For a continous probability, prob is zero given a state/action. Therefore, we need to instead model a PDF:</p>

\[a \sim \mathcal{N}(\mu(s), \sigma^2), \quad \mu(s) = x(s,a)^T \theta\]

<p>essentially modelling the mean to be modelled using VFA, and variance can either be pre-defined or also parametrized.</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221112025330.png" style="zoom:40%;" /></p>

<p>where each state has its own distribution, and the x-axis is the available actions you can take. Now, we can <strong>choose which action to take given a state we are at by sampling</strong> from the distribution.</p>

<p>Finally, in this case the score function is:</p>

\[\nabla_\theta \ln \pi_\theta(a|s) = \frac{a-\mu(s)}{\sigma^2} x(s,a)\]

<h2 id="mc-policy-gradient-reinforce">MC Policy Gradient (REINFORCE)</h2>

<p>Now we have already learned:</p>
<ol>
  <li>objective function for policy</li>
  <li>gradient ascent methods</li>
  <li>can compute gradient using gradient theorem
    <ul>
      <li>also specific forms if policy being softmax or Gaussian if continous</li>
    </ul>
  </li>
</ol>

<p>Recall that by policy gradient theorem:</p>

\[\nabla J(\theta) \propto \mathbb{E}_{s \sim \pi_\theta} \left[ \sum\limits_{a} Q^{\pi_\theta}(s,a) \nabla_\theta \ln \pi_\theta(a|s) \right]\]

<blockquote>
  <p><strong>Reinforce</strong>: MC policy gradient method considers</p>
  <ul>
    <li>use return $G_t$ as an unbiased estimator of $Q^{\pi_\theta}(s,a)$</li>
    <li>use one state $S_t$ and action $A_t$ to estimate the gradient</li>
    <li>therefore stochastic gradient ascent and consider</li>
  </ul>

\[\Delta \theta_t = \alpha \nabla_\theta \ln \pi_\theta(A_t|S_t) G_t\]

</blockquote>

<p>and the algorithm looks like:</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221111090125607.png" alt="image-20221111090125607" style="zoom:33%;" /></p>

<h2 id="actor-critic-methods">Actor-Critic Methods</h2>

<blockquote>
  <p><strong>Aim:</strong> as MC methods using $G_t$ have a high variance, we can perhaps directly estimate $Q^{\pi_\theta}(s,a)$ and use it to estimate the gradient</p>
  <ul>
    <li>this can also tell you how good is the new policy/improved</li>
  </ul>
</blockquote>

<p>Use a ==critic== to estimate the action-value function:</p>

\[Q_w(s,a) \approx Q^{\pi_\theta}(s,a)\]

<p>So we can directly compute the policy gradient:</p>

\[\nabla J(\theta) \propto \mathbb{E}_{s \sim \pi_\theta} \left[ \sum\limits_{a} Q_w(s,a) \nabla_\theta \ln \pi_\theta(a|s) \right]\]

<blockquote>
  <p>Therefore <strong>Actor-Critic methods</strong> are:</p>
  <ol>
    <li>Critic: update action-value function parameters $w$ (e.g. using TD(0) or TD($\lambda$), basically our previous section on VFA)</li>
    <li>Actor: update policy parameters $\theta$ using policy gradient suggested by critic</li>
  </ol>
</blockquote>

<p>Finally we approximate the policy gradient by stochastic sampling:</p>

\[\Delta \theta = \alpha \nabla_\theta \ln \pi_\theta(A_t|S_t) Q_w(S_t,A_t)\]

<p>An example using TD(0)-based estimate of Q, the Actor-Critic Algorithm looks like</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221111091952917.png" alt="image-20221111091952917" style="zoom:40%;" /></p>

<p>where basically:</p>

<ul>
  <li>
    <p>line 5, 6 is data collection through interaction</p>
  </li>
  <li>
    <p>line 7 is TD error and with line 9 for improving the critic (derived from gradient descent of MSE objective)</p>
  </li>
  <li>
    <p>line 8 is policy gradient update</p>
  </li>
</ul>

<h3 id="compatible-function-approximation-theorem">Compatible Function Approximation Theorem</h3>

<p>A problem with actor-critic methods above is that approximating the policy gradient could <strong>introduce bias</strong>.</p>

<p>But it turns out that if we can choose VFA carefully, we can avoid introducing any bias</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221111092902627.png" alt="image-20221111092902627" style="zoom:40%;" /></p>

<p>(proof skipped)</p>

<h2 id="policy-gradient-with-advantage-function">Policy Gradient with Advantage Function</h2>

<blockquote>
  <p><strong>Aim:</strong> we can ==reduce the variance== of this existing policy gradient:</p>

\[\nabla_\theta J(\theta) \propto \mathbb{E}_{s \sim \pi_\theta} \left[ \sum\limits_{a} Q^{\pi_\theta}(s,a) \nabla_\theta \ln \pi_\theta(a|s) \right]\]

  <p>because variance could come from how you estimate $Q^{\pi_\theta}(s,a)$, and the stochastic sampling of $S_t$ and $A_t$. This can be done by subtracting the baseline:</p>

\[Q^{\pi_\theta}(s,a) \to Q^{\pi_\theta}(s,a) - b(s)\]

  <p>so that intuitively, picking $b(s)=V(s)$ can “re-center” all the $Q^{\pi_\theta}(s,a)$ and therefore reduce the variance</p>
</blockquote>

<p>However, we could like our performance to <strong>still be unbiased</strong>, and it can be shown that this holds as long as baseline <strong>$b(s)$ a function not of $a$.</strong></p>

<p><em>Proof</em>: Consider the new gradient:</p>

\[\nabla \ln \pi_\theta (s,a) * [Q_w(s,a) - B(s)]\]

<p>we want to make sure the gradient is the same as the original one, therefore, $\mathbb{E}[\nabla \ln \pi * B(s)] = 0$ needs to be proved.</p>

<p>By definitino of expectation</p>

\[\begin{align*}
   \mathbb{E}_{s\sim \pi_\theta}[\nabla \ln \pi_\theta(s,a) * B(s)] 
   &amp;= \sum\limits_{s} d(s) \sum\limits_{a} \pi_\theta(a|s) \nabla \ln \pi_\theta(s,a) * B(s) \\ 
   &amp;= \sum\limits_{s} d(s) \sum\limits_{a} \pi_\theta(a|s) \frac{\nabla \pi_\theta(a|s)}{\pi_\theta(a|s)} B(s) \\
   &amp;= \sum\limits_{s} d(s) \sum\limits_{a} \nabla \pi_\theta(a|s) B(s) \\
   &amp;= \sum\limits_{s} d(s) B(s) \nabla \sum\limits_{a} \pi_\theta(a|s) \\
   &amp;= 0
\end{align*}\]

<p>since $\sum \pi = 1$ is constant, therefore the last $\nabla$ is zero. ==Notice that this worked because $B(s)$ does not depend on action==</p>

<p>What is a good $B(s)$ to choose? One example is to use $V(s)$, hence the advantage funtion</p>

<blockquote>
  <p><strong>Policy Gradient with Advantage Function</strong>:
the advantage function using $V(s)$ is:</p>

\[A^{\pi_\theta}(s,a) = Q^{\pi_\theta}(s,a) - V^{\pi_\theta}(s)\]

  <p>then the policy gradient is:</p>

\[\nabla J(\theta) \propto \mathbb{E}_{s \sim \pi_\theta} \left[ \sum\limits_{a} A^{\pi_\theta}(s,a) \nabla_\theta \ln \pi_\theta(a|s) \right]\]

</blockquote>

<p>So how do we estimate the advantage function?</p>

<ul>
  <li>
    <p>estimate both $V$ and $Q$ separately, need two more set of paramters</p>
  </li>
  <li>
    <p>or we can estimate only using one (i.e. the value function)</p>

    <p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221111093932628.png" alt="image-20221111093932628" style="zoom:40%;" /></p>

    <p>so you only need to estimate $V$</p>
  </li>
</ul>

<h3 id="actor-and-critic-at-different-time-scales">Actor and Critic at Different Time Scales</h3>

<p>A final nuiances is that the we can vary how <strong>far ahead we look ahead</strong> by changing the time scale of actor and critic.</p>
<ul>
  <li>critic: estimating the critic can use TD($0$) until $G_t$</li>
  <li>actor: estimating  the actor can use different estiamte based on $V$</li>
</ul>

<p>When estimating $Q$, we can also have actor at different time scales</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221111094240856.png" alt="image-20221111094240856" style="zoom:40%;" /></p>

<p>We estimating the policy gradient, if we have only a value estimate $V^{\pi_\theta}$:</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221112033819.png" style="zoom:38%;" /></p>

<h2 id="summary-of-policy-gradient-algorithms">Summary of Policy Gradient Algorithms</h2>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221112033925.png" style="zoom:35%;" /></p>

<h1 id="planning-and-learning">Planning and Learning</h1>

<p>Here, we shift focus back to the problem of <strong>planning/control</strong>. We consider situations where:</p>

<ul>
  <li>
    <p>if you have access to a model, but your state/action space is enormous (DP is not a good idea), what is a <strong>good planning algorithm</strong>?</p>
  </li>
  <li>
    <p>if you have enough data and you can fit a model reasonably well, how do you use it to <strong>further improve your planning algorithms</strong> (such as SARSA)?</p>

    <ul>
      <li>
        <p>in reality the convergence of model could be faster than fitting value/action function because the later needs information to propagate</p>
      </li>
      <li>
        <p>but of course, fitting a model is not an easy task</p>
      </li>
    </ul>
  </li>
</ul>

<blockquote>
  <p><strong>Model-based</strong> methods rely on planning as their primary component, while <strong>model-free</strong> methods primarily rely on learning.</p>

  <ul>
    <li>Model-based: DP, and MCTS (this chapter). Also called the problem of <em>planning</em></li>
    <li>Model-free: Q-learning, SARSA, etc. Also called the problem of <em>learning</em></li>
  </ul>

  <p>Of course, there are also hybrids, so that you can use a model/learned model to improve model-free algorithms, such as Dyna (this chapter)</p>
</blockquote>

<h2 id="rollout-algorithms-and-tree-search">Rollout Algorithms and Tree Search</h2>

<p>First, we discuss the model-based planning where model of the world is given.</p>

<p>For instance, consider the rule of Go game</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221118132038782.png" alt="image-20221118132038782" style="zoom:50%;" /></p>

<p>so that to <strong>plan each step, we need to think ahead</strong>. Therefore, it might make sense to consider ==simulation as part of planning==: if I take this step here, what happens next and can I win? So rollout algorithms in general involve</p>

<ul>
  <li>try <strong>all</strong> potentially high reward possibilities/moves <strong>starting from the current position</strong></li>
  <li><strong>estimate those moves=actions</strong> by simulation=rollout, and sometimes in combination with some value function estimate</li>
  <li>pick the best move (e.g. UCB), and repeat</li>
</ul>

<blockquote>
  <p>Rollout algorithms are ==decision-time planning algorithms== based on Monte Carlo control applied to simulated trajectories that all ==begin at the current environment state==.</p>

  <ul>
    <li>They estimate action values for a given policy by averaging the returns of many simulated trajectories that start with each possible action and then follow the given rollout policy.</li>
    <li>When the action-value estimates are considered to be accurate enough, the action (or one of the actions) having the highest estimated value is executed, after which the process is carried out anew from the resulting next state.</li>
  </ul>
</blockquote>

<p>This is also important as we talk about the details of an rollout algorithm: MCTS, which is that</p>

<blockquote>
  <p>It can be said the aim of a rollout algorithm (e.g. MCTS) is to ==improve upon the rollout policy; not to find an optimal policy==.</p>

  <ul>
    <li>In some applications, a rollout algorithm can produce good performance even if the rollout policy is completely random.</li>
    <li>But the performance of the improved policy depends on properties of the rollout policy and the ranking of actions (e.g. Upper Confidence Bound) produced by the Monte Carlo value estimates.</li>
    <li>Intuition suggests that the <strong>better the rollout policy and the more accurate the value estimates</strong>, the ==better the policy produced== by a rollout algorithm (e.g. MCTS) is likely be (but see Gelly and Silver, 2007, and in AlphaGo it more human-like policy instead of better policy may be better).</li>
  </ul>
</blockquote>

<h3 id="upper-confidence-bounds">Upper Confidence Bounds</h3>

<blockquote>
  <p><strong>Upper Confidence Bound:</strong> get a <em>better</em> balance between exploration and exploitation, besides e-greedy and softmax approach we have seen before.</p>

  <ul>
    <li>e-greedy action selection forces the non-greedy actions to be tried, but indiscriminately, with no preference for those that are nearly greedy or particularly uncertain.</li>
    <li>It would be better to select among the non-greedy actions <strong>according to their potential for actually being optimal</strong>, taking into account both how close their estimates are to being maximal and the uncertainties in those estimates.</li>
  </ul>
</blockquote>

<p>The ultimate form of the simple version of UCB looks like, for a one-step MDP problem (i.e. without states)</p>

\[a_t = \arg\max_a \left[ Q_t(a) + c \sqrt{\frac{\ln n_t}{N_t(a)}} \right]\]

<p>where:</p>

<ul>
  <li>$n_t$ is the total number of actions you have taken until time $t$, and $N_t(a)$ is the total number of times an action $a$ is taken up to time $t$</li>
  <li>
    <p>$Q_t(a)$ is your current estimated return of action $a$</p>
  </li>
  <li>the $\arg\max$ is because we are doing the <em>upper confidence bound</em></li>
  <li>essentially the left term is your <strong>exploitation</strong>, and right term is <strong>exploration</strong> trying to visit less-visited states</li>
</ul>

<p>This form is derived from modeling the regret of each action you made, and ==minimize your regret==.</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221118134055442.png" alt="image-20221118134055442" style="zoom: 50%;" /></p>

<p>What does this have to do with UCB?</p>

<ul>
  <li>Lai and Robbins showed that the regret for the multi-armed bandit has to <strong>grow at least logarithmically w.r.t. the number of plays $n$</strong></li>
  <li>UCB is proved to ==grow the regret logarithmically in that case== (by choosing actions from UCB), hence is optimal in that case</li>
</ul>

<p>We can visualize what UCB is doing to be first estimating the “confidence” of your current estimate, and then pick the ones that are most promising</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Confidence Bound</th>
      <th style="text-align: center">Upper Confidence Bound Action</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221118084108912.png" alt="image-20221118084108912" style="zoom:33%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221118084255212.png" alt="image-20221118084255212" style="zoom:25%;" /></td>
    </tr>
  </tbody>
</table>

<p>But in reality, UCB might not be easy to work with. Consider a realistic problem where you could have a large state space:</p>

\[a_t = \arg\max_a \left[ Q_t(s,a) + c \sqrt{\frac{\ln n_t}{N_t(s,a)}} \right]\]

<p>the $N_t(s,a)$ for many combinations will be zero until explored. Hence in those cases simple e-greedy of softmax could also work as well and is much simpler.</p>

<h3 id="monte-carlo-tree-search">Monte Carlo Tree Search</h3>

<p>Now we can talk about MCTS. The objective is to do planning given a model, and specifically to improve upon a rollout policy (by significant margin, e.g. improvement in computer Go from a weak amateur level in 2005 to a grandmaster level (6 dan or more) in 2015.)</p>

<blockquote>
  <p>At its base, <strong>MCTS is a rollout algorithm</strong> as described above, but enhanced by the addition of a means for accumulating value estimates obtained from the Monte Carlo simulations in order to successively <strong>direct simulations toward more highly-rewarding trajectories</strong>.</p>
</blockquote>

<p>At its core, on high level the following is happening</p>

<ul>
  <li>MCTS is executed after encountering <strong>each new state</strong> to select the agent’s action for that state; it is <strong>executed again to select the action for the next state, and so on</strong>.</li>
  <li>MCTS incrementally extends the tree by <strong>adding nodes representing states that look promising</strong> based on the results of the simulated trajectories</li>
  <li>Outside the tree and at the leaf nodes the rollout policy is used for action selections, but at the states inside the tree something better is possible. For these states we have value estimates for at least some of the actions, so we can <strong>pick among them using an informed policy, called the tree policy, that balances exploration (e.g. using UCB)</strong>.</li>
</ul>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221118135457036.png" alt="image-20221118135457036" style="zoom: 50%;" /></p>

<p>In more details and to explain what the above means, consider the overall algorithm iteratively performing</p>

<ol>
  <li>MCTS continues executing these four steps, starting each time at the tree’s root node, until no more time is left
    <ol>
      <li><strong>Selection</strong>. Starting at the root node, a ==tree policy (e.g. UCB) based on the action values== attached to the edges of the tree traverses the tree to ==select a leaf node==</li>
      <li><strong>Expansion</strong>. The tree is expanded <strong>from the selected leaf node</strong> by ==adding one or more child nodes== reached from the selected node via unexplored actions</li>
      <li><strong>Simulation</strong>. From the selected node, or from one of its newly-added child nodes (if any), ==simulation of a complete episode== is run with actions selected by the ==rollout policy==.
        <ul>
          <li>The result is a Monte Carlo trial with <strong>actions selected first by the tree policy and beyond the tree by the rollout policy</strong>.</li>
        </ul>
      </li>
      <li><strong>Backup</strong>. The ==return== generated by the simulated episode is ==backed up to update, or to initialize, the action values== attached to the edges of the tree traversed by the tree policy in this iteration of MCTS. <strong>No values are saved for the states and actions visited by the rollout policy</strong> beyond the tree, as shown by the little triangle branch being dotted and discarded. Simulation result is only used to <strong>backup the existing tree</strong>
        <ul>
          <li>basically update my estimates of how good each action is based on simulation (+ value estimate in AlphaGO)</li>
        </ul>
      </li>
    </ol>
  </li>
  <li>Then, finally, an <strong>action</strong> from the root node (=<strong>the current state</strong> of the environment) is <strong>selected</strong> according to some mechanism that depends on the accumulated statistics in the tree; for example, e.g. largest action value accumulated by UCB</li>
  <li>After the environment transitions to a <strong>new state, MCTS is run again from the first step</strong> (often starting with a tree containing any descendants of this node left over from the tree constructed by the previous execution of MCTS)</li>
</ol>

<blockquote>
  <p>What does the accumulated estimate $Q(s,a)$ at each action node correspond to? In rollout algorithms where $s$ is the current state and ==$\pi$ is the rollout policy==, averaging the returns of the simulated trajectories produces ==estimates of $q_\pi(s,a)$== for each action $a$.</p>

  <p>Then the policy that selects an action in s that maximizes these estimates and thereafter follows $\pi$ (during simulation) is a good candidate for a policy that <strong>improves over $\pi$.</strong> The result is ==like one step of the policy-iteration algorithm of dynamic programming==</p>

  <ul>
    <li>you will see in AlphaGO we can potentially do better to estimate $q_*(s,a)$ hence choose the optimal action instead of just improvement</li>
  </ul>
</blockquote>

<hr />

<p><em>For example</em>: Let us be playing a game of GO. Let us say we have some tree already, and we would like to use UCB based on action value to be our <strong>tree policy</strong> to select a node</p>

<ol>
  <li>
    <p>Selection:</p>

    <p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221118145758200.png" alt="image-20221118145758200" style="zoom:33%;" /></p>

    <p>where here, we have already made 7 simulations/rollouts hence the top node stores 7.</p>

    <ul>
      <li>
        <p>the $2/3$ at black node (at second level) means it’s <strong>black’s turn to act</strong>, but after this white action <strong>white has won $2/3$ times</strong> in the simulation</p>
      </li>
      <li>
        <p>if we are computing the UCB of each node for instance at the second level:</p>

\[\mathrm{UCB}(2/3) =\frac{2}{3} + \sqrt{2} \sqrt{\frac{\ln 7}{3}}\]

        <p>for using $c=\sqrt{2}$.</p>
      </li>
    </ul>
  </li>
  <li>
    <p>Expansion: we have selected a node and we want to explore some actions by adding a child node:</p>

    <p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221118150319119.png" alt="image-20221118150319119" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>Simulation: we simulate from the <strong>newly added node</strong> using a rollout policy (e.g. a <em>fast</em> agent trained supervised from online GO games)</p>

    <p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221118150456863.png" alt="image-20221118150456863" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>Back-Propagation: we <strong>discard the simulation trajectory</strong> but utilize the results to update our existing tree</p>

    <p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221118150603388.png" alt="image-20221118150603388" style="zoom:33%;" /></p>

    <p>notice that all we need to update is the ==branch==. (Recall that the white $1/1$ means its white’s turn but black has won $1/1$, hence the previous black node becomes $1/2$ as there are now in total $1+1=2$ simulations done and white lost one of them)</p>
  </li>
</ol>

<p>But of course, no algorithm is yet perfect:</p>

<table>
  <thead>
    <tr>
      <th>Pros</th>
      <th>Cons</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Tree growth focuses on more promising areas</td>
      <td>Memory intensive: entire tree in memory</td>
    </tr>
    <tr>
      <td>Can stop algorithm anytime to get search results</td>
      <td>For complex problems, enhancement needed for good performance</td>
    </tr>
    <tr>
      <td>Avoid the problem of globally approximating an action-value function (as in DP)</td>
      <td> </td>
    </tr>
    <tr>
      <td>Convergence to minimax solution</td>
      <td> </td>
    </tr>
    <tr>
      <td><strong>High controllability = can insert your prior domain knowledge into tree policy, for instance</strong></td>
      <td> </td>
    </tr>
  </tbody>
</table>

<h3 id="alphago">AlphaGO</h3>

<p>The famous AlphaGO in essence is a MCTS algorithm, but <strong>enhanced by several changes</strong>, e.g. make the GO simulation computationally fast using value functions.</p>

<p>The overall pipeline of AlphaGO involves:</p>

<ol>
  <li>
    <p>train a <strong>supervised policy $p_\sigma$</strong> cloning the plays of experts.</p>
  </li>
  <li>
    <p>use <strong>policy gradient</strong> to train another agent $p_\rho$, which can consistently beats (more than 80% of the time) $p_\sigma$</p>
  </li>
  <li>
    <p>obtain <strong>value function $V_\rho$</strong> from the strongest player $p_\rho$, hoping that $V_\rho \approx V_*$ of the optimal play</p>
  </li>
  <li>
    <p>use MCTS to play by</p>

    <ul>
      <li>
        <p>tree policy is UCB</p>
      </li>
      <li>
        <p>==expansion is done using the prior from $p_\sigma$==, which is found to perform better than $p_\rho$ as the former is more diverse and human-like</p>
      </li>
      <li>
        <p>==backpropagation uses both simulation results and $V_\rho$==, so that the value for each leaf node is</p>

\[V(s_L) = (1-\lambda) v_\theta (s_L) + \lambda z_L\]

        <p>and each edge/action is the mean evaluation of all simulations through that edge</p>

\[Q(s,a) = \frac{1}{N(s,a)}\sum_{i=1}^n \mathbb{1}(s,a,i)V(s_L^i)\]

        <p>so that $\mathbb{1}(s,a,i)$ indicates if the edge $(s,a)$ was traversed during the $i$-th simulation.</p>
      </li>
      <li>
        <p>at the end of simulation/MCTS, ==play policy== is to select action with most visited state:</p>

\[a = \arg\max_{a} N(s,a)\]
      </li>
    </ul>
  </li>
</ol>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221118152145169.png" alt="image-20221118152145169" style="zoom:40%;" /></p>

<p>more details see paper: https://www.nature.com/articles/nature16961</p>

<h2 id="sample-based-planning">Sample-Based Planning</h2>

<p>Now we have covered planning if given model: for small spaces DP can be gone, but more often MCTS which selectively expands search space is more tractable. However, what if we don’t know the model, i.e. model-free? Do we have to only use Q-learning/SARSA etc?</p>

<blockquote>
  <p>If model is unknown, we can <strong>first learn the model</strong> and then <strong>plan</strong>.</p>

  <ul>
    <li>once the model is fitted, we can do planning using DP, value iteration, policy iteration, MCTS, etc.</li>
    <li>or, we can use the model to <strong>generate <em>more</em> samples</strong> to fit $Q$ functions</li>
  </ul>
</blockquote>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221118152715124.png" alt="image-20221118152715124" style="zoom:33%;" /></p>

<p>Recall that for a model, we need to ==spit out next state and reward==:</p>

\[S_{t+1} \sim \mathcal{P}_\eta (S_{t+1}|S_t, A_t)\\
R_{t+1} \sim \mathcal{R}_\eta (S_{t+1}|S_t, A_t)\\\]

<p>for a model parameterized by $\eta$, and we typically can assume independence so that:</p>

\[\mathbb{P}(S_{t+1},R_{t+1}|S_t, A_t) = \mathbb{P}(S_{t+1}|S_t, A_t)\mathbb{P}(R_{t+1}|S_t, A_t)\]

<p>This then would be useful when learning a distribution model.</p>

<blockquote>
  <p>Some models produce a description of all possibilities and their probabilities; these we call ==distribution models==. Other models produce just one of the possibilities, sampled according to the probabilities; these we call ==sample models==.</p>

  <ul>
    <li>e.g. consider modeling the sum of a dozen dice. A distribution model would produce all possible sums and their probabilities of occurring, whereas a sample model would produce an individual sum drawn according to this probability distribution.</li>
  </ul>

  <p>For algorithms such as Q-learning and SARSA, we just need a <strong>sample model</strong>. But for DP, we would need a <strong>distribution model</strong>.</p>
</blockquote>

<p>It is typically easier to learn a sample model, which can be done using <strong>supervised learning</strong></p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221118092918058.png" alt="image-20221118092918058" style="zoom: 50%;" /></p>

<hr />

<p><em>For Example</em>: Small Table Lookup Example.</p>

<p>For small state spaces, you can learn a <strong>distribution model</strong> by simply counting:</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221118153701401.png" alt="image-20221118153701401" style="zoom: 45%;" /></p>

<p>So in the case of the following experience/data, you can easily fit a distribution model:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Experience</th>
      <th style="text-align: center">Model Learned</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221118093255770.png" alt="image-20221118093255770" style="zoom: 33%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221118093308625.png" alt="image-20221118093308625" style="zoom: 33%;" /></td>
    </tr>
  </tbody>
</table>

<p>in this case we calculated the model without supervised learning but directly computing, but the idea is the same.</p>

<p>Then, once we have a model, we can <em>sample</em> from it to do MC control, for instance:</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221118153938347.png" alt="image-20221118153938347" style="zoom: 40%;" /></p>

<p>Or of course, we can plan given a model directly by doing DP or MCTS.</p>

<h2 id="integrating-learning-and-planning">Integrating Learning and Planning</h2>

<p>There is also an approach to try to do <strong>learning and planning</strong>:</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221118154633165.png" alt="image-20221118154633165" style="zoom:33%;" /></p>

<blockquote>
  <p>Within a planning agent, there are at least two roles for real experience:</p>

  <ul>
    <li><strong>model-learning:</strong> it can be used to improve the model (to make it more accurately match the real environment)</li>
    <li><strong>direct RL:</strong> it can be used to directly improve the value function and policy using the kinds of reinforcement learning methods we have discussed</li>
  </ul>

  <p>Note how experience can improve value functions and policies either directly or <strong>indirectly via the model</strong>. It is the latter, which is sometimes called ==indirect reinforcement learning==, that is involved in planning.</p>
</blockquote>

<p>An example algorithm is Dyna-Q: which combines Q-learning and model learning as shown below</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221118095038634.png" alt="image-20221118095038634" style="zoom: 45%;" /></p>

<p>notice that step a)-d) is basically Q-learning, and step e)-f) further update your Q function using the model</p>

<ul>
  <li>
    <p>the intuition is that if you can explore more from your previous $(S,A)$, you could <strong>make better decisions sooner</strong> in the future when you met similar states, whereas just doing Q-learning makes that part slower</p>
  </li>
  <li>
    <p>For instance, as you can see here the more simulated experienced you gave to Q, it makes better decisions earlier and hence converge faster. i.e. <strong>While walking around the world according to the experience</strong>, I am changing dynamically/<strong>planning at each step as well</strong></p>

    <p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221118095318251.png" alt="image-20221118095318251" style="zoom: 40%;" /></p>

    <p>the idea of updating a bit sooner than until the end is like TD v.s. MC.</p>
  </li>
</ul>

<h2 id="unified-view-of-planning-and-learning">Unified View of Planning and Learning</h2>

<p>Just like how we Generalized Policy Iteration to contextualize model-free algorithms, the overall framework of planning and learning <strong>also shares high level similarity</strong>. The unified view we present in this chapter is that all state-space planning methods share a common structure</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221118155344361.png" alt="image-20221118155344361" style="zoom: 45%;" /></p>

<ol>
  <li>all state-space planning methods involve computing value functions as a key intermediate step toward improving the policy, and</li>
  <li>they compute value functions by updates or backup operations applied to simulated experience.</li>
</ol>

<h1 id="deep-reinforcement-learning">Deep Reinforcement Learning</h1>

<p>Deep L can model any components in RL such as policy, model, value function, but Deep L + RL is unstable and hard to get convergence</p>

<p>Current approaches, modeling:</p>

<ul>
  <li>value-based RL
    <ul>
      <li>approximating value function $Q^<em>$ or $V^</em>$ using a NN with weight $w$ or $\theta$</li>
      <li>e.g. Q-learning, SARSA, MC methods, TD methods, etc.</li>
    </ul>
  </li>
  <li>policy-based RL
    <ul>
      <li>search for and approximate the optimal policy function $\pi^*$</li>
      <li>stochastic policy = policy model outputs a distribution of actions (e.g. by Softmax, or Gaussian distribution), and then you sample from it</li>
      <li>deterministic policy = find a function that gives the action directly</li>
    </ul>
  </li>
  <li>model-based RL
    <ul>
      <li>build a model (transition function and reward) from samples</li>
      <li>when obtained a model, do planning</li>
    </ul>
  </li>
</ul>

<h2 id="dl-for-value-functions">DL for Value Functions</h2>

<p>Here we will discuss on algorithm that has been successful and can be used for control (by simply taking $a = \arg\max_a Q(s,a)$)</p>

<h3 id="deep-q-network-dqn">Deep Q-Network (DQN)</h3>

<p>As we have mentioned before, this aims to model the Q network</p>

\[Q(s,a,w)\approx Q^\pi (s,a)\]

<p>and your target is simply based on the Q-learning target, which gives you a loss function:</p>

\[\mathcal{L}(w) = \mathbb{E}\left[ \left( \underbrace{r+\gamma \max_{a'} Q(s',a',w)}_{\text{target}} - Q(s,a,w)  \right)^2 \right]\]

<p>notice that you need to forward pass twice for $(s,a)$ and $(s’,a’)$.</p>

<ul>
  <li>
    <p>Could there be some correlation there? Keep that in mind</p>
  </li>
  <li>
    <p>note that $a’$ will be computed by the 1) can model $Q(s,a) \to \mathbb{R}^{\vert A\vert }$ and then <em>index into the action $a$ to get the $Q$ value</em>. 2) then in this method, picking $\arg\max Q$ can be one <strong>using only one forward pass</strong></p>
  </li>
</ul>

<p>then you perform gradient descent, which would look like the same descent in Q-learning</p>

\[\frac{\partial \mathcal{L}(w)}{\partial w} = \mathbb{E}\left[ \left( r+\gamma \max_{a'}Q(s',a',w)-Q(s,a,w) \right) \frac{\partial Q(s,a,w)}{\partial w} \right]\]

<blockquote>
  <p>However, <strong>naive Q-learning oscillates or diverges with neural nets</strong></p>

  <ul>
    <li>data is sequential, hence there are correlations between successive samples</li>
    <li>policy could change rapidly with slight change in $Q$-values</li>
    <li>correlation between $Q$-value and target value during the loss computation</li>
    <li>scale of rewards and $Q$-values could vary and hence gradient might be unstable</li>
  </ul>
</blockquote>

<p>There are the core issues that DQN attempts to solve:</p>

<blockquote>
  <p>DQN provides a stable solution to deep value-based RL</p>

  <ul>
    <li>==experience replay== to break correlation in <em>data/experience</em></li>
    <li>freeze ==target $Q$-network== (periodically, for example update only after 10k steps) to break correlations between $Q$-network and target, and avoid policy changes too rapidly</li>
    <li>==clip or normalize reward== so network can work adaptively to ranges of Q-values = robust gradients</li>
  </ul>
</blockquote>

<p>Therefore the algorithm below</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221202090538120.png" alt="image-20221202090538120" style="zoom:40%;" /></p>

<h2 id="dl-for-policy-functions">DL for Policy Functions</h2>

<p>Here we aim to directly learn a policy, and we will cover methods such as</p>

<ul>
  <li>Actor-critic methods: DDPG, A3C</li>
  <li>Optimization methods: TRPO, GPS</li>
</ul>

<p>In general, policy gradient based methods are quite popular today, especially when continuous action spaces.</p>

<h3 id="deterministic-policy-gradient">Deterministic Policy Gradient</h3>

<p>Recall that during stochastic policy approximation, we considered modeling the (real) policy:</p>

\[\pi_\theta(a|s) \to \mathbb{P}[a|s;\theta]\]

<p>where we could do this by taking a Softmax of the output, or modeling parameters of a Gaussian distribution for continuous action space. But here, we might consider a ==deterministic policy==:</p>

\[\mu_\theta(s)\to a\]

<p>Why does this matter? As $\mu_\theta$ is the network, and it <strong>no longer models a probability</strong> the stochastic policy gradient theorem we had before (using probability):</p>

\[\nabla J(\theta) \propto \mathbb{E}_{s \sim \pi_\theta} \left[ \sum\limits_{a} Q^{\pi_\theta}(s,a) \nabla_\theta \ln \underbrace{\pi_\theta(a|s)}_{\text{prob.}} \right]\]

<p><strong>no longer makes sense</strong> as using $\ln \mu_\theta(s)$ does not make sense any more. Therefore, people proved that there is a policy gradient for deterministic case:</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221202110405667.png" alt="image-20221202110405667" style="zoom:50%;" /></p>

<p>where the objective function in this case would be:</p>

\[J(\theta) = \mathbb{E}[r_1 + \gamma r_2 + \gamma^2 r_3 + ....] = \mathbb{E}_{\mu_\theta}[G]\]

<p>basically the expected return if we follow policy $\mu_\theta$</p>

<blockquote>
  <p>But why use/prefer deterministic policy? Difference in practice?</p>

  <ul>
    <li>
      <p>when the variance in stochastic tends to zero, it <strong>became the deterministic case</strong></p>
    </li>
    <li>stochastic needs gradient descent in $\mathbb{E} [\nabla \pi_\theta(s,a)*G_t ]$, meaning we for a single state we need action spaces combined for a good estimate v.s. deterministic case in practice <strong>needs only to scan over a much smaller actions</strong>
      <ul>
        <li>therefore can outperform significantly <strong>when action space is high dimensional</strong></li>
      </ul>
    </li>
    <li>
      <p>stochastic encourages more exploration as in the end you are sampling from the distribution v.s. deterministic policy <strong>might not explore other possibilities</strong>. For instance</p>

\[a = \mu_\theta(s) + \text{Noise}\]

      <p>so then all your exploration is the noise term</p>
    </li>
  </ul>
</blockquote>

<h3 id="deep-deterministic-policy-gradient">Deep Deterministic Policy Gradient</h3>

<p>The overall idea is basically <strong>combining DL + DPG + Actor Critic Method</strong> by:</p>

<ul>
  <li>use actor-critic method to compute DPG gradient</li>
  <li>model your actor and critic using deep learning</li>
  <li>(solve instability issues with soft updates)</li>
</ul>

<p>Therefore, first we consider modeling a policy/actor with DL:</p>

\[a = \pi(s,u)\]

<p>with weights $u$, and a critic network $Q(s,a,w)$ with weights $w$. Then the gradient updates are simply:</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221202093643427.png" alt="image-20221202093643427" style="zoom: 40%;" /></p>

<p>so in total here we have two networks, where the critic update is basically no $\max$ version of DQN updates, then use that to calculate gradient for actor</p>

<blockquote>
  <p>Again, naive actor-critic method oscillates or diverges with neural network</p>
</blockquote>

<p>Then in DDPG, we use</p>

<ul>
  <li>
    <p><strong>experience replay</strong> as in DQN for <strong>both actor and critic</strong></p>
  </li>
  <li>
    <p>four networks where <strong>soft target update</strong> is used instead of freezing</p>
  </li>
</ul>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221202093702826.png" alt="image-20221202093702826" style="zoom:60%;" /></p>

<h3 id="asynchronous-advantage-actor-critic-a3c">Asynchronous Advantage Actor-Critic (A3C)</h3>

<p>Again, building on top of actor-critic method but being</p>

<ul>
  <li><strong>Asynchronous</strong>: initiate multiple agents, each interact with the environment independently, and report update back to global network</li>
  <li><strong>Advantage</strong>: using advantage function instead of $Q$ to update policy</li>
</ul>

<p>Therefore overall it looks like:</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221202093940740.png" alt="image-20221202093940740" style="zoom: 40%;" /></p>

<p>So in a sense data correlation is removed automatically because <strong>each agent has independent interactions</strong> = no need to maintain an experience buffer.</p>

<p>The overall algorithm then looks like:</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221202094115629.png" alt="image-20221202094115629" style="zoom: 60%;" /></p>

<p><strong>Why A3C over other actor-critic methods?</strong></p>

<ul>
  <li>naturally has <strong>decoupled</strong> correlation, v.s. in DQN and DDPG an experience buffer is used</li>
  <li>runs many agents in parallel to collect samples for updates, hence <strong>fast</strong> in computing/updates as well</li>
  <li>each agent can use <strong>different exploration policy</strong>, which can maximize diversity and further decorrelate</li>
  <li>can run on multi-core CPU threads on a single machine to reduce communication overhead</li>
</ul>

<h3 id="trust-region-policy-optimization-trpo">Trust Region Policy Optimization (TRPO)</h3>

<p>Basically a new form of loss function/objective, other than the simple ones such as $J(\theta)=\mathbb{E}<em>{\mu</em>\theta}[G]$</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221202102143093.png" alt="image-20221202102143093" style="zoom: 50%;" /></p>

<h2 id="dl-for-model-functions">DL for Model Functions</h2>

<p>Now, we can also use a model to learn the world model, i.e. the transition functions</p>

\[p(r,s'|s,a)\]

<p>so that after this, we can:</p>

<ul>
  <li>use it to collect more data and improve value function estimates</li>
  <li>do planning directly, such as MCTS</li>
</ul>

<h3 id="alphago-zero">AlphaGo Zero</h3>

<blockquote>
  <p>Recall that the first version <a href="#AlphaGO">AlphaGO</a>, we used</p>

  <ul>
    <li>
      <p>one network for roll-out policy, another for SL policy, both from <strong>human data</strong></p>
    </li>
    <li><strong>self-play to improve policy network</strong>: learn a RL policy network <em>and a value network</em> as well</li>
    <li><strong>MCTS</strong> based on the tree policy (RL network) and UCB
      <ul>
        <li>expand using rollout policy and combine with value function</li>
        <li>pick action based on UCB</li>
      </ul>
    </li>
  </ul>
</blockquote>

<p>For AlphaGo Zero, the emphasis is to learn ==without human knowledge entirely==. The core idea is that it is solely based on reinforcement learning and MCTS to improve.</p>

<ol>
  <li>
    <p>start with a <strong>single model</strong> producing both the move probability/policy and the value function</p>

\[f_\theta(s) = (p_\theta(a|s), V_\theta(s))\]
  </li>
  <li>
    <p>since the model does not care which player you are, it can self-play. But additionally, here we consider self-play using MCTS instead of just the policy $f_\theta$ because MCTS can usually result in selecting a much stronger move, hence an be treated as a <strong>policy improvement operator</strong></p>
  </li>
  <li>
    <p>Then, we have effectively gathered $(\pi,z)$, where $\pi$ is the MCTS probability and $z$ is the game winner. This game winner $z$ can be seen as a <strong>policy evaluation operator</strong>, which we can use to improve $V_\theta(s)$ estimate as well.</p>

    <p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221207111925758.png" alt="image-20221207111925758" style="zoom: 40%;" /></p>
  </li>
  <li>
    <p>but how exactly do we model $\pi$ probabilities in the MCTS? AlphaGo Zero models this to be:</p>

\[\pi_a \propto N(s,a)^{1/ \tau}\]

    <p>so that the more popular a move is the higher the probability. Then how does it select those moves?</p>

    <p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221207112607316.png" alt="image-20221207112607316" style="zoom: 40%;" /></p>

    <p>essentially it uses $f_\theta$ to help expand the tree so that each edge stores the $P(s,a),N(s,a),Q(s,a)$ where</p>

    <ol>
      <li>each simulation step ==selects== a move that maximizes upper confidence bound $Q(s,a)+U(s,a)$, where $U(s,a)\propto P(s,a)/(1+N(s,a))$ until a leaf node is encountered. This basic form is also used in Alpha Go</li>
      <li>the leaf node is then evaluated and ==expanded== only once using the prior probability and value $(P(s’,\cdot), V(s’) = f_\theta(s’))$. Notice no rollout here!</li>
      <li>each edge $(s,a)$ traversed is then ==updated== to increment its visit count $N(s,a)$ and its action value to be the mean evaluation $Q(s,a)=\sum V(s’)/N(s,a)$.</li>
      <li>once done, a winner $z={+1,-1}$ is stored, and the MCTS probability $\pi_a$ is computed</li>
    </ol>
  </li>
  <li>
    <p>Finally, you have basically had a improved policy and value $(\pi,z)$, you <strong>update your network</strong> to match those parameters to achieve policy improvement and policy evaluation</p>

\[\mathcal{L}=(z-v_\theta)^2 - \pi^T \log p_\theta + c||\theta||^2\]

    <p>where the last term is simply a regularization.</p>
  </li>
  <li>
    <p>==Note== that at the end of training/during actually play, you ==also perform the same MCTS procedure above== and select move based on the play policy $\pi$</p>
  </li>
</ol>

<blockquote>
  <p><strong>Note that</strong> some key difference with Alpha Go include</p>

  <ul>
    <li>
      <p>learn RL network + value network during <strong>self-play from scratch</strong> without human knowledge</p>
    </li>
    <li>
      <p>modified MCTS to</p>

      <ul>
        <li>
          <p>use value network <strong>without roll-out</strong></p>
        </li>
        <li>
          <p>modified UCB $\mathrm{UCB}(s,a)=Q(s,a)+U(s,a)$, where $U(s,a)\propto P(s,a)/[1+N(s,a)]$</p>
        </li>
        <li>
          <p>final play policy $\pi$ becomes <strong>stochastic</strong> (is <em>not</em> the tree policy which is UCB)</p>

\[\pi(a|s) = \frac{N(s,a)^{1/\tau}}{\sum_b N(s,b)^{1/\tau}}\]

          <p>which is then used to instruct the model $p_\theta$ to achieve policy improvement.</p>
        </li>
      </ul>
    </li>
  </ul>

</blockquote>

<p>And just to re-iterate the key aspects in the paper (borrowing the author’s words)</p>

<blockquote>
  <p>The AlphaGo Zero self­play algorithm can similarly be understood as an <strong>approximate policy iteration</strong> scheme in which MCTS is used for both policy improvement and policy evaluation.</p>

  <ul>
    <li>Policy improvement starts with a neural network policy, executes an MCTS based on that policy’s recommendations, and then projects the (much stronger) search policy back into the function space of the neural network.</li>
    <li>Policy evaluation is applied to the (much stronger) search policy: the outcomes of self­play games are also projected back into the function space of the neural network. These projection steps are achieved by training the neural network parameters to match the search probabilities and self­play game outcome respectively.</li>
  </ul>
</blockquote>

<h1 id="other-rl-topics">Other RL Topics</h1>

<p>There are many other topics of RL we haven’t discussed, including:</p>

<ul>
  <li>various other methods for <strong>balancing exploration and exploitation</strong></li>
  <li>
    <p><strong>Federated Reinforcement Learning</strong>, e.g. using edge devices</p>
  </li>
  <li><strong>Multi-agent Reinforcement Learning</strong>.
    <ul>
      <li>Recent breakthrough achieving human level performance in Stratego, “solving” incomplete information problem</li>
    </ul>
  </li>
</ul>

<h2 id="more-on-exploration-and-exploitation">More on Exploration and Exploitation</h2>

<p>Online decision has a fundamental trade-off between exploration and exploitation. Here we want to discuss various <strong>different schemes</strong> that you can use to balance such as trade-off</p>

<ul>
  <li>e.g. MCTS contains search using tree policy = exploitation, but expands using <strong>UCB</strong>, which helps exploration</li>
</ul>

<p>Some design principles for exploration include</p>

<ul>
  <li><strong>Naive Exploration</strong>. e.g. DDPG adding <strong>noise</strong> to a policy for exploration</li>
  <li><strong>Optimistic Initialization:</strong> initialize $\hat{Q}$ to be larger than expected reward in the beginning</li>
  <li><strong>Optimistic in the face of uncertainty</strong>: UCB as an example
    <ul>
      <li>compute uncertainty over time, and prefer actions with uncertain values for exploration</li>
    </ul>
  </li>
  <li><strong>Probability Matching</strong>: choose action according to some “model” you have about the reward distribution</li>
  <li><strong>Information state search</strong>: lookahead search</li>
</ul>

<blockquote>
  <p>For many examples below, we will ==assume a Multi-arm Bandit== problem, meaning there will be no state for simplicity</p>
</blockquote>

<h3 id="optimistic-initialization">Optimistic Initialization</h3>

<p>One very simple and practical idea to guarantee exploration is to <strong>initialize $Q(a)$ to be high</strong>(er than expected reward). So that:</p>

<ul>
  <li>for actions that perform lower than that, we <strong>automatically explore</strong> other actions</li>
</ul>

<p>In practice, we can do this by:</p>

<ol>
  <li>
    <p>initialize high $Q$</p>
  </li>
  <li>
    <p>Update action value by incremental MC evaluation</p>

\[\hat{Q}_t(a_t) = \hat{Q}_{t-1} + \frac{1}{N_t(a_t)}(r_t - \hat{Q}_{t-1})\]
  </li>
</ol>

<p>However, this can <strong>still lock onto sub-optimal actions over time</strong>, as you will see later that both greedy/$\epsilon$-greedy + optimistic initialization will have ==linear== total regret.</p>

<h3 id="regret">Regret</h3>

<blockquote>
  <p>Recall that regret aims to measure the <strong>opportunity loss</strong>, which can be measured by the difference between the optimal and your chosen action.</p>

\[l_t = \mathbb [ V^* - Q(a_t)]\]

  <p>then the total regret over time is</p>

\[L_t = \mathbb{E} \left[ \sum_{\tau=1}^t V^* - Q(a_\tau) \right]\]

  <p>so minimizing regret = maximize cumulative reward</p>
</blockquote>

<p>But regret can then be reformulated using the gap $\Delta_a = V^*-Q(a)$ for every action:</p>

\[\begin{align*}
L_t 
&amp;= \mathbb{E} \left[ \sum_{\tau=1}^t V^* - Q(a_\tau) \right]\\
&amp;= \sum_{a \in \mathcal{A}} \mathbb{E}[N_t(a)] (V^* - Q(a)) \\
&amp;= \sum_{a \in \mathcal{A}} \mathbb{E}[N_t(a)] \Delta_a
\end{align*}\]

<p>So for a good algorithm, we want to</p>

<ul>
  <li><strong>have large $N$ for small $\Delta_a$, and vice versa</strong> to minimize this (of course you need to get an accurate measure of $\Delta_a$ first)</li>
  <li>idea is so that you would want to choose that small $\Delta_a$ action over and over.</li>
</ul>

<p>How does some simple approach perform in this metric? For multi-arm bandit:</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221209083335260.png" alt="image-20221209083335260" style="zoom:50%;" /></p>

<p>so that we would like to look for a way to get <strong>sub-linear total regret</strong>.</p>

<ul>
  <li>
    <p>if you never explore, your regret will increase lienearly.</p>
  </li>
  <li>
    <p>for epsilon greedy, similar but slightly better</p>
  </li>
  <li>
    <p>sub-linear: We graduating decrease $\epsilon$ over time, having more exploitation over time.</p>

    <ul>
      <li>
        <p>decaying needs some decaying schedule. An example would be</p>

        <p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221209083723566.png" alt="image-20221209083723566" style="zoom:33%;" /></p>

        <p>the longer time/steps we have sampled, the less exploration. Also if $d$ is big, meaning currently making <strong>big mistakes</strong>, we want to reduce exploration</p>
      </li>
    </ul>
  </li>
</ul>

<p>But remember that $d$ or $\Delta_a$ is still hard to calculate in practice as we don’t know $V^*$</p>

<h3 id="upper-confidence-bound">Upper Confidence Bound</h3>

<blockquote>
  <p>What is the lower bound on Multi-arm bandit in terms of regret? Maybe we can get an algorithm <strong>if we know the lower bound?</strong></p>
</blockquote>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221209084140380.png" alt="image-20221209084140380" style="zoom: 40%;" /></p>

<p>For instance, let us say we have three actions, and let us model $\hat{Q}(a)$ and we are <strong>unsure of our estimate</strong>:</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221209084355759.png" alt="image-20221209084355759" style="zoom:50%;" /></p>

<p>so that uncertainty for each action would be this breadth. The idea is ==the more uncertain we are about an action, the more important it is to explore it==</p>

<ul>
  <li>
    <p>action $a_1$ has the highest breadth/uncertainty, hence pick this first</p>
  </li>
  <li>
    <p>after picking blue, we would be less uncertain as this <strong>distribution shifts</strong>, and more likely to pick other actions</p>

    <p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221209084614203.png" alt="image-20221209084614203" style="zoom:33%;" /></p>
  </li>
</ul>

<blockquote>
  <p>Therefore, we are ==optimistic in the face of uncertainty== by hoping those highly uncertain actions to be potentially very beneficial</p>
</blockquote>

<p>An example algorithm to do this is UCB</p>

<ul>
  <li>$U_t(a)$, if you never tried an action $a$, then this will be very high/high uncertainty</li>
  <li>combine with current estimate $Q$ to combine exploration and exploitation $\hat{Q}_t(a) + \hat{U}_t(a)$</li>
</ul>

<p>so we select action maximizing UCB</p>

\[a_t = \arg\max_{a \in \mathcal{A}} \hat{Q}_t(a) + \hat{U}_t(a)\]

<p>But what is $\hat{U}_t$? It is motivated by the Hoeffding’s Inequality</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221209085118183.png" alt="image-20221209085118183" style="zoom:40%;" /></p>

<p>which makes sense in the context of MAB because if we have large uncertainty, then this probability is small. Then we can use this to solve for a form of $U$:</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221209114450959.png" alt="image-20221209114450959" style="zoom:40%;" /></p>

<p>and we knw that this UCB1 achieves sublinear regret on on Multi-arm bandit</p>

<h3 id="baysesian-bandits">Baysesian Bandits</h3>

<p>So far made no assumptions about the reward distribution, and this methods basically <strong>exploit prior knowledge of rewards</strong> by specifying a prior distribution</p>

<blockquote>
  <p>Have a prior to shape the reward distribution, and use <strong>posterior</strong> to guide exploration</p>
</blockquote>

<p>So that we essentially estimate the posterior based on the (prior probability and the sample) you get:</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221209090030872.png" alt="image-20221209090030872" style="zoom:50%;" /></p>

<p>where $\alpha$ is number of times the arm gives you success, $\beta$ number of times if failed. Consider $\theta$ modeling reward we will get form this action. Consider a “success” being a reward $+1$ is given, failure gives $0$ reward</p>

<ul>
  <li>in the begnning, no idea so $\alpha=\beta=1$ meaning the machine can give you any reward</li>
  <li>if we lost, then the average value drifts to the left</li>
  <li>in the end, you see the average reward is about $0.7$</li>
</ul>

<p>Once done, now we have a distribution an action. We can repeat this to get a <strong>distribution for each action</strong>.</p>

<p>Then, how do we decide which action to pick? Since we are doing <strong>probability matching</strong>, we want take actions respecting those probability. For instance, say you have got three distribution with mean $0.1,0.7,1.0$</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221209115006625.png" alt="image-20221209115006625" style="zoom: 25%;" /></p>

<ol>
  <li><strong>sample</strong> a reward from each curve, say $r_1=0.1,r_2=0.9,r_3=0.7$</li>
  <li>choose an action according to the <strong>biggest reward in the sample</strong>. Hence action $a_2$</li>
</ol>

<p>Other more well-fleshed idea is <strong>Thompson Sampling</strong>:</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221209115340909.png" alt="image-20221209115340909" style="zoom: 33%;" /></p>

<p>which also achieves the lower bound!</p>

<p>Intuitively, this way you can <strong>naturally achieve exploration</strong>.</p>

<blockquote>
  <p>This is also ==optimistic in the face of uncertainty==, because those uncertain actions could have higher probability being $\max$ during sampling</p>
</blockquote>

<h2 id="federated-reinforcement-learning">Federated Reinforcement Learning</h2>

<blockquote>
  <p>Federated reinforcement learning is a type of reinforcement learning in which multiple agents or agents <strong>across multiple devices</strong> learn to solve a common problem while maintaining the privacy and autonomy of their local data.</p>
</blockquote>

<p>This can be useful in situations where the data that is used to train the learning algorithm is distributed across multiple devices or agents, and where it is not feasible or desirable to centralize the data. (somewhat similar to A3C idea)</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221209092706109.png" alt="image-20221209092706109" style="zoom: 60%;" /></p>

<ul>
  <li><strong>Advantages</strong>: No need for centralized training data collection and centralized, data privacy, edge intelligence, learning quality</li>
  <li><strong>Disadvantages</strong>: New threats and attacks to distributed participants (e.g., <strong>backdoor attack</strong>), <strong>communications overhead</strong>, varying data quality, selection of FL participant</li>
  <li>to some extent this is similar to A3C</li>
</ul>

<p>Another approach is learning on the edge:</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221209093137300.png" alt="image-20221209093137300" style="zoom: 33%;" /></p>

<p>Or you could also have a fully distributed workflow</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221209115720811.png" alt="image-20221209115720811" style="zoom:33%;" /></p>

<h2 id="multi-agent-reinforcement-learning">Multi-Agent Reinforcement Learning</h2>

<p>Categories in MARL:</p>

<ul>
  <li>agents are <strong>cooperative</strong></li>
  <li>agents are <strong>competitive</strong></li>
  <li><strong>hybrid</strong>, intra-group cooperation but inter-group competitive</li>
</ul>

<p>Architectures can look like:</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221209115820150.png" alt="image-20221209115820150" style="zoom:50%;" /></p>

<p>An example success if DeepNash, where the there is <strong>incomplete information</strong> in the game as well</p>

<p><img src="/lectures/images/2022-12-20-ELEN6885_Reinforcement_Learning_part2/image-20221209093550846.png" alt="image-20221209093550846" style="zoom: 33%;" /></p>

<blockquote>
  <p>From the paper abstract:</p>

  <ul>
    <li>We introduce DeepNash, an autonomous agent that plays the imperfect information game Stratego at a human expert level.</li>
    <li>Stratego requires long- term strategic thinking as in chess, but it also requires dealing with <strong>imperfect information</strong> as in poker.</li>
    <li>The technique underpinning DeepNash uses a game-theoretic, model-free deep reinforcement learning method, <strong>without search</strong>, that learns to master Stratego through <strong>self-play from scratch</strong>.</li>
  </ul>
</blockquote>

<h1 id="rl-part-2-review">RL Part 2 Review</h1>

<ul>
  <li>VFA: estimate $Q \gets \hat{Q}$
    <ul>
      <li>linear approach doing $\hat{Q}=x(s,a)W$</li>
      <li>define loss function using MSE</li>
      <li>gradient has the form $\mathbb{E}[2(\cdot ) \nabla x]$
        <ul>
          <li>if using Q-learning, then the omitted part will be $r+\max_a Q(s’,a’)-Q(s,a)$, etc</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Policy Gradient: score function that the gradient of the loss for improving policy is $Q\cdot\nabla \ln \pi / \mu$
    <ul>
      <li>probably a question on calculating this</li>
    </ul>
  </li>
  <li>Planning and Learning: planning and learning loop, MCTS</li>
  <li>DRL: differences between DPG and PG, the latter being stochastic policy. More efficient since the action space don’t need to integrated over</li>
  <li>This chapter: trade off between exploration and exploitation, and different methods</li>
</ul>]]></content><author><name></name></author><category term="2022@Columbia" /><summary type="html"><![CDATA[RL packages]]></summary></entry><entry><title type="html">ASCE1359 Intro to China</title><link href="/lectures/2022@columbia/ASCE1359_Intro_to_China.html/" rel="alternate" type="text/html" title="ASCE1359 Intro to China" /><published>2022-12-19T00:00:00-05:00</published><updated>2022-12-19T00:00:00-05:00</updated><id>/lectures/2022@columbia/ASCE1359_Intro_to_China</id><content type="html" xml:base="/lectures/2022@columbia/ASCE1359_Intro_to_China.html/"><![CDATA[<p>Intro to East Asia: China</p>

<p>My timeline: https://time.graphics/line/691984</p>

<h1 id="introduction">Introduction</h1>

<p>Order of Major Dynasty you should now:</p>

<ul>
  <li>商，周，秦，汉；隋，唐，宋；元，明，清，Republic of China</li>
</ul>

<p>And that China has evidences of many pre-history humans living:</p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220908161314858.png" alt="image-20220908161314858" style="zoom: 33%;" /></p>

<h1 id="neolithic-age-ca-8000-2000-bce">Neolithic Age (ca. 8000-2000 B.C.E)</h1>

<p>Neolithic Age, 新石器时代, is discovered mostly because of the <strong>distinct style of jar</strong> unearthed (Neolithic Period (3300 - 2050BC):</p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220908161504480.png" alt="image-20220908161504480" style="zoom: 25%;" /></p>

<p>Additionally, features of Neolithic age except for jars include its</p>

<ul>
  <li>
    <p><strong>Agriculture</strong>: the most important factor for what to plant is ==weather + water==</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220908161923132.png" alt="image-20220908161923132" style="zoom: 50%;" /></p>

    <p>note that already in the Neolithic age:</p>

    <ul>
      <li><strong>rice</strong> (水稻) grows in sunny + area with lots of irrigation. Hence near river</li>
      <li><strong>wheat/millet</strong> (to make noodles) grows in area that prefers a moderate level of irrigation. Hence more near the north
        <ul>
          <li>note that in the past (i.e. Neolithic age), the north of China has <em>not</em> been arid like now: its reasonably wet</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p><strong>Domestication of Animals</strong> (e.g. dogs)</p>
  </li>
  <li>
    <p><strong>Fixed Human Settlements</strong> (see next section)</p>
  </li>
</ul>

<h2 id="major-neolithic-cultures">Major Neolithic Cultures</h2>

<p>Around 5000 B.C.E, we have a brief map of major cultures:</p>

<p>| <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220908163052642.png" alt="image-20220908163052642" style="zoom: 33%;" /> | <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220908163117632.png" alt="image-20220908163117632" style="zoom: 33%;" /> |
| :———————————————————-: | :———————————————————-: |</p>

<p>where our focus would be the 仰韶 and 龙山 culture, how they are related and different.</p>

<hr />

<p><strong>Yangshao Culture</strong> (5000-3000 BCE), who lives many on agriculture with meat supplies from hunting</p>

<ul>
  <li>
    <p>==colorful==, painted pots</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220908163446439.png" alt="image-20220908163446439" style="zoom: 25%;" /></th>
          <th style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220908163450866.png" alt="image-20220908163450866" style="zoom: 25%;" /></th>
          <th style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220908163454693.png" alt="image-20220908163454693" style="zoom: 25%;" /></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center">3500-3000 B.C.E</td>
          <td style="text-align: center"> </td>
          <td style="text-align: center"> </td>
        </tr>
      </tbody>
    </table>

    <p>with many emphasis on fish/animals and interesting shapes such as spirals.</p>
  </li>
  <li>
    <p>human settlement: ==Banpo==</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Banpo Model (c.a. 4000 B.C.E)</th>
          <th style="text-align: center">Second Bury</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220908163705259.png" alt="image-20220908163705259" style="zoom: 25%;" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220908163711564.png" alt="image-20220908163711564" style="zoom: 50%;" /></td>
        </tr>
      </tbody>
    </table>

    <p>where we notice that:</p>

    <ul>
      <li>its various size and placement indicates a <strong>lineage/kinship</strong> relationship</li>
      <li>there are no walls for the Banpo model. This could be indicative of them being <strong>non-violent</strong> and friendly people, no protection is needed from outsiders</li>
      <li>already practices of <strong>burial</strong>: bury once to wait until decomposition, and bury again with others</li>
    </ul>
  </li>
</ul>

<hr />

<p><strong>Longshan Culture</strong> (3000 - 2000 B.C.E)</p>

<ul>
  <li>
    <p>==black== potteries, distinct from Yangshuo (hence indication of a separate culture)</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220908164202703.png" alt="image-20220908164202703" style="zoom: 33%;" /></p>

    <p>created from rustic material, but has very sophisticated patterns while being extremely thin (0.2mm).</p>

    <ul>
      <li>production of which surely requires high effort, hence indication of ==social stratification==/concentration of wealth</li>
      <li>but it could also be a practice of certain religion, yet the previous would be more supported by other evidences</li>
    </ul>
  </li>
  <li>
    <p>==Shimao== site, Longshan Settlement:</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220908164516923.png" alt="image-20220908164516923" style="zoom: 33%;" /></p>

    <p>note that we begin to see</p>

    <ul>
      <li>
        <p>a structure of inner city and outer/taller city</p>
      </li>
      <li>presence of walls</li>
      <li>has a lot of spear heads and other weapons</li>
    </ul>

    <p>indicating <strong>social stratification</strong> (as compared to Yangshuo) and <strong>foreshadowing the bronze age</strong></p>
  </li>
</ul>

<hr />

<p>Finally, note that it appears Longshan culture immediately proceeds Yangshuo culture, cultural interactions is always a non-linear process:</p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220908165024512.png" alt="image-20220908165024512" style="zoom: 33%;" /></p>

<p>where there are many other cultures being present, and theories explaining those in relation to the two major culture include:</p>

<ul>
  <li><strong>nuclear area theory:</strong> all starts from Yangshuo, and other cultural development radiated outwards</li>
  <li><strong>interactive sphere theory:</strong> each culture has its own sphere, but they trade and interact, and eventually, converge.</li>
  <li>etc.</li>
</ul>

<p>Without decisive evidences, it is hard to say what IS really the origin of all.</p>

<h1 id="xia-dynasty-ca-2100---1600-bce">Xia Dynasty (ca. 2100 - 1600 B.C.E)</h1>

<blockquote>
  <p>The Xia dynasty was the first of many ancient Chinese ruling houses, thought to exist from around 2070 B.C.E. until 1600 B.C.E. Yet <strong>the actual existence of this dynasty and culture has been debated</strong>.</p>

  <ul>
    <li>in China, a lot of government funding has been provided to prove the existence of Xia dynasty.</li>
    <li>however, one should be careful as those evidences could be biased as well.</li>
  </ul>
</blockquote>

<p>One major culture that are hypothesized to be related to Xia Dynasty and anyway preceeds to the Shang Dynasty is the ==Erlitou Culture== (c.a. 1750-1520 BCE), located in 河南洛阳, 二里头遗址</p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220908165557551.png" alt="image-20220908165557551" style="zoom: 33%;" /></p>

<p>Some interesting aspect of the Erlitou Culture include:</p>

<ul>
  <li>
    <p>Erlitou’s ==settlement== layout:</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Erlitou Layout</th>
          <th style="text-align: center">Central Palace Reconstruction</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220908165818245.png" alt="image-20220908165818245" style="zoom: 33%;" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220908165842753.png" alt="image-20220908165842753" style="zoom: 33%;" /></td>
        </tr>
      </tbody>
    </table>

    <p>where many scholars hypothesize that the central palace could be the <strong>capital of Xia</strong></p>
  </li>
  <li>
    <p>Start of ==Bronze== vessels (proceeds Bronze Age) and some made of <strong>Jade</strong></p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Turquoise-inlaid Bronze Plaques (板)</th>
          <th style="text-align: center">Turquoise Dragon and Bronze Bell</th>
          <th style="text-align: center">Clay Vessels</th>
          <th style="text-align: center">Bronze ding Vessel</th>
          <th style="text-align: center">Yue Jade</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220908170113582.png" alt="image-20220908170113582" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220908170118996.png" alt="image-20220908170118996" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220908170123643.png" alt="image-20220908170123643" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220908170129141.png" alt="image-20220908170129141" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220908170135071.png" alt="image-20220908170135071" /></td>
        </tr>
      </tbody>
    </table>

    <p>all of which are highly likely to be produced by the workshop near the palace, found in large quantity in Erlitou. This could indicate that:</p>

    <ul>
      <li>Erlingtou must be a central and powerful place, perhaps like that of a government</li>
      <li>however, without much written records those are still speculations</li>
    </ul>
  </li>
  <li>
    <p><strong>Lack of written records</strong></p>

    <p>the possibility of Xia dynasty comes from 史记 (司马迁), where he mentioned annals of Xia:</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Shiji (91BC)</th>
          <th style="text-align: center">Symbols Excavated from Near Erlitou</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220908170705110.png" alt="image-20220908170705110" style="zoom: 33%;" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220908170725577.png" alt="image-20220908170725577" style="zoom: 25%;" /></td>
        </tr>
      </tbody>
    </table>

    <p>where we see some lack of written records for Xia, only left with some symbols on potteries, hence no way of confirming whether if Xia really existed.</p>
  </li>
</ul>

<blockquote>
  <p><em>According to tradition</em>, the Xia dynasty was established by the legendary <strong>Yu the Great (禹)</strong>, after Shun (舜), the last of the Five Emperors (三皇五帝), gave the throne to him. In traditional historiography, the Xia was later succeeded by the Shang dynasty.</p>

  <ul>
    <li>三皇五帝is regarded as the demi-gods/emperors who significantly improved peoples lives by teaching them how to use fire and etc.</li>
  </ul>
</blockquote>

<h1 id="shang-dynasty-ca-17661600---1045-bce">Shang Dynasty (ca. 1766/1600 - 1045 B.C.E)</h1>

<p>Between Shang and Xia (if it existed), there is a piece of text from the Shiji 史记 that is worth to know. Basically:</p>

<ul>
  <li>Xie (偰) of Yin (殷) was the son of Jiandi (简狄), who (Jiandi) is a women of the Song nomad tribe</li>
  <li>Xie was born because Jiandi became the second consort of the Emperor Ku. This happened because “Once, when Jiandi was bathing with two other women, a <strong>dark bird (玄鸟) flew past and dropped an egg down to them</strong>. Jiandi retrieved it and swallowed it whole. Accordingly, she became pregnant”</li>
  <li>When Xie grew up, he <strong>assisted Yu</strong> (considered the founding father of ==Xia==) in taming the great flood. Thereupon, Emperor Shun charged Xie with the following orders: “The hundred clans do not cleave to one another and the five ranks are not in accord. Assume the office of Governor of Conduct and attentively spread the five teachings, whose essential lesson is broad tolerance. Then Shun bestowed upon Xie <strong>a patrician estate in ==Shang== and the surname Zi</strong>.</li>
</ul>

<p>Note that 殷 is often refered to as 安阳, which is the captial of the last period of Shang. Hence, 殷 can often be referred to as ==Shang== as well.</p>

<blockquote>
  <p>==Note==: Most of the content below show be viewed together with summaries of the book chapter  <a href="#Ch.1 Beginnigns of the Written Record">Ch.1 Beginnigns of the Written Record</a>.</p>
</blockquote>

<blockquote>
  <p>Even though Shang is universally considered as actually existed today, it was not in the past, until recent excavations at Anyang and Sanxingdui.</p>

  <ul>
    <li>basically Shang’s existence was establiashed by the large quantity of text found on <strong>oracle bones</strong>.</li>
    <li>a lot of doubts were there for Shang because it is portrayed during the Zhou that times before were “barbaric” and “uncultured”</li>
  </ul>
</blockquote>

<p><strong>Discovery of Oracle Bones:</strong></p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Location of Yin</th>
      <th style="text-align: center">Oracle Bone Pit, Anyang</th>
      <th style="text-align: center">Shang Ox Scapula</th>
      <th style="text-align: center">Shang Plastron</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220913215118561.png" alt="image-20220913215118561" style="zoom: 25%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220913215121937.png" alt="image-20220913215121937" style="zoom: 25%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220913215241025.png" alt="image-20220913215241025" style="zoom:25%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220913215314497.png" alt="image-20220913215314497" style="zoom:25%;" /></td>
    </tr>
  </tbody>
</table>

<p>where the scripts on the oracle bones are largely reflective of the <strong>elite life at Shang</strong>, since using them requires the Emperor</p>

<ul>
  <li>
    <p>the word 卜 comes from this, because its sound “Puk!” mimics that of the cracking of oracle bones. Hence 卜 has the meaning of divination now.</p>
  </li>
  <li>
    <p>an example of text from the oracle bone:</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220911155732457.png" alt="image-20220911155732457" style="zoom: 67%;" /></p>

    <p>however, we are not to conclude that women are having less more than men, as there are cases where giving birth to daughters are considered auspicious according to records.</p>
  </li>
</ul>

<p><strong>Warefare and Polity</strong>: consider from the extracted text:</p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220913220045932.png" alt="image-20220913220045932" style="zoom: 33%;" /></p>

<p>where Di refers to 帝, a Shang deity; suffix of “fang” means enemies. From here we also see the role of oracle bones to warfare. But what about polity?</p>

<ul>
  <li>Qiang people were being slaves and used for sacrifise. In many Shang’s work large labor is needed. Qiang people might be the man power.</li>
  <li>Concentration of power and wealth was greatly at the elite. And even artisan (e.g. making potteries) are much better off than peasants.</li>
</ul>

<p><strong>The role of Women: the case of Lady Hao:</strong></p>

<ul>
  <li>it is unclear what normal women’s life are like at Shang due to lack of records (all oracle bones with scripts are used by/for the Emperor)</li>
  <li>but what is known is that elite women (e.g. Lady Hao) and elite dead ancestors (e.g. Emperor’s Grandmother) had influence and power
    <ul>
      <li>e.g. Lady Hao’s tomb had great amount of lavish goods</li>
      <li>Lady Hao during her time was “<strong>hard as the bronze, soft as the jade</strong>” as she was great both at war/fighting to extend Shang’s border, but also raising the kids. She was also being well respected by the people.</li>
    </ul>
  </li>
</ul>

<p><strong>Shang’s Piece-mold Technique</strong>: for more details check out the book chapter  <a href="#Ch.1 Beginnigns of the Written Record">Ch.1 Beginnigns of the Written Record</a>.</p>

<ul>
  <li>very pottery based, hence explains why artisans could have a better life</li>
  <li>bronze casting required much material and technique. Hence it is <strong>mostly restricted to elites’ use</strong>. Most people use stone vessels as alternatives.</li>
</ul>

<p><strong>Shang’s Bronze: Ritual Purposes</strong></p>

<ul>
  <li>
    <p>the bronze used at Shang typically had intricate patterns featuring animals such as fish, snakes, dragons, etc. This is because they believed animals to be related to Shaman, and hence are an intermediary for connecting <strong>human and the spirits</strong></p>
  </li>
  <li>
    <p>among the animal motifs, one dominates: tao-tie 饕餮 (a beast with insatiable greed)</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220913221801597.png" alt="image-20220913221801597" style="zoom: 25%;" /></p>

    <p>until today we are not entirely sure why this is preferred/appear so often on the bronze vessels. Religious purposes? Artistic purpose?</p>
  </li>
</ul>

<p><strong>Masks of Sanxingdui</strong>: made of bronze but appears completely different from that of Shang. It seems to require less technical intricacy, but also very different in look.</p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220913222138172.png" alt="image-20220913222138172" style="zoom: 25%;" /></p>

<ul>
  <li>what could this be used for? We don’t know either.</li>
  <li>it is found to the south west of China (四川), where people at the center (中原) sees as uncultured.</li>
  <li>after examination, it appears to be techniques mixed from many different regions.</li>
</ul>

<p><strong>Chinese Texts</strong>: its feature of being pictographic and having a 1) radical and 2) phonetic component is discussed in the book chapter summary  <a href="#Ch.1 Beginnigns of the Written Record">Ch.1 Beginnigns of the Written Record</a>.</p>

<ul>
  <li>
    <p>but it is interesting to see the evolution from past texts to today</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220913222715903.png" alt="image-20220913222715903" style="zoom:33%;" /></p>
  </li>
</ul>

<p><strong>Summary</strong>:</p>

<ul>
  <li>Oracle bones: disc. by accident, tortoise plastrons and ox scapula used in ritual divination, contain archaic form of Chinese writing and corroborate later written historical accounts, tells the Shang political and religious system</li>
  <li>Ritual bronzes: primarily for ritual purposes, funerary/ancestral sacrifice, taotie</li>
  <li>Lady Hao’s tomb</li>
  <li>Sanxingdui: another Bronze civilization in China</li>
  <li>Bronze age: development of city-states that control territory; <strong>Erlitou and Yin are dense urban centers</strong> and centers of a regional economy, ruled by ‘royal houses’ (connecting Xia and Shang)</li>
</ul>

<h1 id="western-zhou-ca-1046---771-bce">Western Zhou (c.a. 1046 - 771 B.C.E)</h1>

<p>On a broader picture, this is the rough timeline of how Shang relates to Western Zhou.</p>

<ul>
  <li>Zhou Kingdom, once tributary state to the Shang, deposes the Shang in 1045 BCE</li>
</ul>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220915195207991.png" alt="image-20220915195207991" style="zoom:50%;" /></p>

<p>But before diving into evidences and stories of Zhou, we need to take a note of the difference between how Western Historians see Chinese histories and how Chinese scholars investigates it:</p>

<ul>
  <li><strong>Western</strong>: “wie es eigentlich gewesen ist (“how it really was”). They are interested in knowing what <strong>exactly</strong> has happened</li>
  <li><strong>Chinese</strong>: moralistical interpretation of the past, want to use history as a moralistic lesson to descendants (in fact many histories ARE written that way)</li>
</ul>

<p><strong>Records related to Zhou</strong>: in general there are texts that are recorded by the Zhou people/people alive near the Zhou period, and the ones written much later</p>

<ul>
  <li>Confucian Classics
    <ul>
      <li>Shangshu 尚書 – contains alleged speeches of the early W. Zhou kings</li>
      <li>Shijing 詩經 – Liturgical hymns (W. Zhou) and folk songs (Spring &amp; Autumn)</li>
      <li>Zhouyi 周易 – Divination manual</li>
    </ul>
  </li>
  <li>Later Histories
    <ul>
      <li>Shiji 史記 by Sima Qian 司馬遷 (145 – c. 86 BCE) – synthetic Chinese history of first century BCE</li>
      <li>Bamboo Annals (zhushu jinian 竹書紀年) – annalistic history of bamboo slips composed in 298 BCE and rediscovered in 279 C</li>
    </ul>
  </li>
</ul>

<p><strong>Bronze Vessel = Power</strong>: though often used for ritual purposes (still), making exquisite vessels still takes time and money</p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220915200737872.png" alt="image-20220915200737872" style="zoom:33%;" /></p>

<ul>
  <li>therefore, bronze vessels is still an <strong>embodiment of power</strong>, making them suitable for gifts when Kings awarded to lords</li>
  <li>mostly concentrated and controlled by the elites. This can also be inferred from the high uniformity of style across vessels = is regulated/controlled</li>
  <li>many inscribed text on the bronze vessels, which can be used to study Zhou’s culture (but <strong>whether if this is a faithful</strong> representation of the history is debatable, as those vessels are used for ritual purposes)</li>
</ul>

<p><strong>From Shang to Zhou</strong>:</p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220915201853489.png" alt="image-20220915201853489" style="zoom:50%;" /></p>

<ul>
  <li><strong>Battle of Muye</strong> was a battle fought between the rebel Zhou state (King Wu of Zhou 周) and the defending army King Zhou (纣) of Shang, captured their capital Yin and ended the Shang dynasty.</li>
  <li>Zhou then settled their captical in Xi’an, near wastern side of the Wei river.</li>
</ul>

<p><strong>Settlements of Western Zhou</strong>:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Settlements</th>
      <th style="text-align: center">Overall “Border”</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220915202742768.png" alt="image-20220915202742768" style="zoom: 33%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220915202924427.png" alt="image-20220915202924427" style="zoom: 33%;" /></td>
    </tr>
  </tbody>
</table>

<ul>
  <li>as you can see, most settlements are to the west/north of the Wei river.</li>
  <li>==Chengzhou== (modern-day Luoyang) constructed soon after the Zhou conquest and served as the administrative center of the Western Zhou state on the eastern plain
    <ul>
      <li>later when Western Zhou got defeated and had to move to the east, they went to Chengzhou, captial of ==Eastern Zhou==</li>
    </ul>
  </li>
</ul>

<p><strong>Western Zhou Kings and Shiqiang pan 史墙盘</strong></p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Western Zhou Kings</th>
      <th style="text-align: center">Shiqiang Pan</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220915203525367.png" alt="image-20220915203525367" style="zoom:50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220915203534257.png" alt="image-20220915203534257" style="zoom:50%;" /></td>
    </tr>
  </tbody>
</table>

<ul>
  <li>
    <p>Shiqiang Pan contains two pages of texts, seemed as the “first concious attempt in China to write history”</p>
  </li>
  <li>
    <p>on the Shiqiang pan, it contained, in order: a) extol of former kings b) extols of former ancestors c) dedication of the vessel</p>

    <ul>
      <li>but there are attemps found that recorded texts are too “good”</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220915203753379.png" alt="image-20220915203753379" style="zoom:25%;" /></p>
  </li>
</ul>

<p><strong>Reducing Power in Late Westerm Zhou</strong>:</p>

<ul>
  <li>in Lai Pan, the structure became to extol ancestors first, but not the Kings</li>
</ul>

<p><strong>Invasion of the Rong</strong> (non-chinese people)</p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220915204207788.png" alt="image-20220915204207788" style="zoom:33%;" /></p>

<ul>
  <li>along with Zhou, Zhou’s territory including Qin state (秦, which later took over and start ==Qin Dynasty==) relocated towards their other captial Chengzhou (today Luoyang)</li>
</ul>

<h1 id="eastern-zhou-770---256-bce">Eastern Zhou (770 - 256 B.C.E)</h1>

<p>Again, a brief outline of the periods:</p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220920131742743.png" alt="image-20220920131742743" style="zoom:50%;" /></p>

<p>even though Zhou dynasty is the longest in history, ==Zhou== Kings has <strong>declining power starting/becomes a figure head</strong> from 771 B.C.E.</p>

<ul>
  <li>Qin King called him self Qin Emperor, hence imperial period</li>
</ul>

<p>Geograohically, the two period looks like:</p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220920132124104.png" alt="image-20220920132124104" style="zoom:50%;" /></p>

<ul>
  <li>Western Zhou: capital in area of modern day <strong>Xi’an</strong></li>
  <li>Eastern Zhou: capital in west sacked, moved east to <strong>Luoyang</strong></li>
</ul>

<p>And then Easter Zhou is (long hence) divided into two halves: 春秋 and 战国</p>

<h2 id="spring-and-autumn-period-722---481-bce">Spring and Autumn Period (722 - 481 B.C.E)</h2>

<p>At the Start of 春秋, the distribution of polities (resulting from declining Zhou King influence):</p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220920132300350.png" alt="image-20220920132300350" style="zoom:50%;" /></p>

<ul>
  <li>decline of Zhou power, rise of vassal states</li>
  <li>early china composed of a large collection of different polities</li>
</ul>

<p>Among the several vassal states, the major ones include 晋,齐,秦,楚:</p>

<p>| <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220920132542198.png" alt="image-20220920132542198" style="zoom: 40%;" /> | <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220920133003347.png" alt="image-20220920133003347" style="zoom: 33%;" /> |
| :———————————————————-: | :———————————————————-: |</p>

<ul>
  <li>these polities are also the hegemons
    <ul>
      <li>hegemon: something (such as a political state) having dominant influence or authority over others</li>
      <li>this means that those states can interefere with sucecesion, hold meeting inter-states, etc.</li>
    </ul>
  </li>
  <li>one important hegemon is the ==晋文公==, who was in “exile” for 19 years in Di, but came back and become the Duke for Jin, and reformed Jin’s military power to become one of the hegemons</li>
  <li>another important hegemon is the ==Qin==, who were initially non-chinese/considered by people at the central plain as less cilivilized. They were adopted as “chinese” by donaintg troops to Zhou King
    <ul>
      <li>the Qin state <strong>absorbed cultures from two of the Four Barbarians from the west and north</strong>, which made the other warring states see their culture in low esteem</li>
    </ul>
  </li>
  <li>overall, this period is very violent, due to inceases in tension between states, insecurity, and betrayal. Yet there are some courtesy for battles and benevolence (e.g. not wipe out the entire lineage)</li>
</ul>

<p>Besides the central states 中国, the <strong>four important non-chinese neighbors</strong> are important to mention:</p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220920133632653.png" alt="image-20220920133632653" style="zoom: 33%;" /></p>

<p>where mostly the boundaries are made for geographical terms, meaning their is still culture diversity/similarity between them</p>

<ul>
  <li>e.g. Duke Wen of Jin born by a woman in <em>Rong</em>, went to <em>Di</em> during exile</li>
  <li>The Master said, “The Yi and Di tribes, even with their rulers, are still inferior to the Chinese states without their rulers.” ––Analects, 3.5</li>
</ul>

<p>453 BC Jin fell apart, partition of ==Jin== between rival families into the three states of ==Han==, ==Zhao== and ==Wei==</p>

<ul>
  <li>this event is also the <strong>watershed between the Spring and Autumn and Warring States periods</strong>, refers to the division of the State of Jin between</li>
</ul>

<p>| <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220920134035087.png" alt="image-20220920134035087" style="zoom:33%;" /> | <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220920134420548.png" alt="image-20220920134420548" style="zoom:50%;" /> | <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220920134431303.png" alt="image-20220920134431303" style="zoom: 33%;" /> |
| ———————————————————— | :———————————————————-: | :———————————————————-: |</p>

<p>Under this turmultous condition gives birth of thinkers: Confucious (ca.551–479BCE), Kong zi, Master Kong</p>

<ul>
  <li>
    <p>born in <em>Lu</em>, full of internal division within. <em>Lu</em> later becomes very weak and is absorbed by Qi</p>
  </li>
  <li>Confucious is perhaps the author of <em>The Spring and Autumn Period</em> and <em>the Odes</em>.</li>
  <li>wanted to be advisor, but never succeeded, hence became a private tutor and <strong>earn a living teaching</strong> (a lot are aristocrates learning some courtesy)</li>
  <li>want students to be actively learning</li>
  <li>always think about “why did China become like this? How can we restore the order?”
    <ul>
      <li>believe that this is because the Zhou’s ritual and order is not properly practiced by people, hence this mess</li>
      <li>hence also aspires one of the first rulers in Zhou, leading the people with benevolent and virtue</li>
      <li>gives rise to the ==ru儒 class==, being people who are specialized in practicing rituals</li>
    </ul>
  </li>
</ul>

<p><strong>Analects 论语</strong>: collection of conversations assembled after Confucious death</p>

<ul>
  <li>
    <p>“analects” means fragments—requires reader to connect fragments.  The Chinese title, Lun Yu, means “assorted conversations.”</p>
  </li>
  <li>
    <p>it is <em>not</em> an essay that follows an argument structure, but structured around some key terms (e.g. <em>li</em> 礼)</p>
  </li>
  <li>
    <p>some <strong>most important concepts</strong> involve</p>

    <ul>
      <li>
        <p><em>li</em> (ritual), some aspects of which this key concept is about includes:</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220920135228733.png" alt="image-20220920135228733" style="zoom:33%;" /></p>

        <ul>
          <li>worship: how to make offertings to gods</li>
          <li>rites: how to marry; how to mourn the dead, etc.</li>
          <li>daily decorum: how to interact with one’s lord, parents, partners, etc.</li>
          <li>morally appropriate, proper, right.</li>
        </ul>
      </li>
      <li>
        <p><em>ren</em> (benevolence, humane, etc)</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220920135607372.png" alt="image-20220920135607372" style="zoom: 33%;" /></p>
      </li>
      <li>
        <p><em>junzi</em>: the gentleman/noble person is not a vessel</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220920135724904.png" alt="image-20220920135724904" style="zoom:33%;" /></p>

        <p>he believes a gentlemen is not a person of a specific capacity— not limited to one capability. Instead, the gentleman attends to the entirety and integrity of his person—he tends to his de (moral force; magnitude of character)</p>

        <ul>
          <li>redefined that nobility does not come with birth, but through learning</li>
        </ul>
      </li>
      <li>
        <p><em>social roles</em>:</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220920135955877.png" alt="image-20220920135955877" style="zoom:33%;" /></p>

        <p>against social flux, even though his teaching could be a proponent for it.</p>

        <ul>
          <li>not the first time there is “some” contradiction within him</li>
          <li>another one mentioned in the book is his claim of 述而不作</li>
        </ul>
      </li>
      <li>
        <p><em>morality and legality</em></p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220920140105597.png" alt="image-20220920140105597" style="zoom: 33%;" /></p>
      </li>
    </ul>
  </li>
</ul>

<p><strong>How did tradition</strong>, transmitted by classicists such as Confucius, <strong>view the first Zhou kings</strong>?</p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220920140523978.png" alt="image-20220920140523978" style="zoom:33%;" /></p>

<ul>
  <li>Duke of Zhou consolidating the foundation Western Zhou, being a very capable leader</li>
  <li>seems him as a very <strong>upright</strong> person: succeeded power from young cousin (normally father-to-son succession) and promised to gave away when he is older. In the end he made his promise.</li>
  <li>Confucius is inspired by Duke of Zhou (paragon of <em>de</em> (virtue) and human excellence) to define his Dao/way of teaching</li>
  <li>Confucius thinks we should <strong>return</strong> to the period of order/patrician society. But rulers at this time rejected this idea as it is too dangerous to their own establishments power. Therefore, unfortunately during his period, his teaching remain a <strong>minority</strong> view</li>
</ul>

<p><strong>Servicemen (shi 士) class during the Zhou period</strong></p>

<ul>
  <li>constant warefare in Spring and Autumn experience a ==decline in aristorcracy==, with infantry + crossbows being effective army = transformed the <em>shi</em> class
    <ul>
      <li><em>shi</em> started as the nobility/aristocrats for warriors in Western Zhou</li>
      <li>early Zhou (feudal order): mounted knights; special retainers. late Zhou (Warring States): need specialists, technicians in all kinds of fields (e.g. defense)</li>
      <li>Therefore, there are many social fluxes, including warriors to advisors, ministers, etc, and enables man of humble origin to climb = <em>**shi</em> class ** becomes a mix of people from non-noble classes specialized at different things (using education)</li>
      <li>after ==Qin== dynasty (imperial era), especially in the ==Song==, <em>shi</em> beame officials; scholars</li>
    </ul>
  </li>
  <li>the changing definition of <em>Shi</em> shows a ==decline of nobility== (and is later critical for the emergence of 科举), that throughout periods it is <strong>talent and knowledge people are seeking</strong>.</li>
</ul>

<h2 id="warring-states-453221-bce">Warring States (453–221 B.C.E.)</h2>

<p><strong>Previously in 春秋</strong></p>

<ul>
  <li>If Western Zhou was “golden age” portrayed by ==Confucian== (who wants to go back to those glory Zhou period) school, Eastern Zhou is a time of <strong>political fragmentation, incessant warfare, and moral decline</strong></li>
  <li>Confucius’ portrays himself as a restorer of tradition, but could be viewed as reformer; his legacy is continually contested, reinterpreted by followers
    <ul>
      <li>yet remember that his school of thought remain a minority view during his period</li>
    </ul>
  </li>
  <li>key Confucian ideas captured in fragments through the Analects, compiled by disciples (bamboo strips 3rd c./books 2nd c.); emphasizing ideas of ritual (<em>li</em>), benevolence (<em>ren</em>), filial piety (<em>xiao</em>), and the virtues of the gentleman <em>junzi</em>.</li>
</ul>

<p><strong>Overall situation in Warring States</strong></p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220922131924653.png" alt="image-20220922131924653" style="zoom: 33%;" /></p>

<ul>
  <li>disintegration of ==Zhou== order and inter-state competition &amp; warfare</li>
  <li>states such as Chu and ==Qin== became very powerful (most smaller, weak states are already conquered)
    <ul>
      <li>“ally your self with distant enemies, and conquer near enemies”</li>
    </ul>
  </li>
  <li>at the end of the period, we know that Qin conquered all other states</li>
</ul>

<p><strong>Major changes in the Warring States</strong></p>

<ul>
  <li>
    <p>during 春秋, battles involve using chariots and training few elite warriors; but during 战国, concentrates on <strong>training large infantry</strong></p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220922132256947.png" alt="image-20220922132256947" style="zoom:33%;" /></p>

    <p>and the importance of <strong>strategies</strong> (e.g. induce the enemy to destroy themselves). In <em>The Art of War</em>, a lot of idea is about how to “outsmart” your competitor without physically engaging, hence useful in many modern situations as well</p>
  </li>
  <li>
    <p><strong>usage of iron</strong> both for agriculture and weapons</p>
  </li>
  <li>
    <p>need money to maintain large army</p>

    <ul>
      <li>increase in the practice of <strong>taxation</strong></li>
      <li>argiculture and commercial development: the use of <strong>money</strong></li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220922132826183.png" alt="image-20220922132826183" style="zoom:33%;" /></p>

    <p>note that Qin used the round coin. Later we found different coins scatter everywhere, meaning existance of wide trading.</p>
  </li>
  <li>
    <p>dynamic market for <strong>specializations</strong></p>

    <ul>
      <li>lots of trading, city grows in size, population grows</li>
      <li>noble class no longer hold monopoly on intelligence, much change in social hierarchy (e.g. advisor, the <em>shi</em> class)</li>
    </ul>
  </li>
</ul>

<p><strong>Features of <em>Shi</em></strong> 士</p>

<ul>
  <li>these specialists were itinerant, traveling from state to state for employment.
    <ul>
      <li>most attractive were methods of state-strengthening and governance.</li>
      <li>emphasis on governance is a common feature of Chinese thought.</li>
    </ul>
  </li>
  <li><strong>famous specialists</strong> with pupils were referred to with the “<em>zi</em>” suffix after their surname, which means the “Master” of a teaching</li>
</ul>

<p><strong>Different “schools” (jia 家) of thought</strong></p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220922133324153.png" alt="image-20220922133324153" style="zoom:50%;" /></p>

<ul>
  <li>not necessarily an actual institutional school—instead, think of a school as a taxonomic “family” whose members exhibit family <strong>resemblance</strong>.</li>
  <li>many ideas are shared across groups:
    <ul>
      <li>==filial piety== not exclusive to “Classicists” or followers of Confucius.</li>
      <li>“Daoists” teach about the “Way” (==dao 道==)—the principles of the world and how to live in it—but all masters use this term, but in different ways.</li>
    </ul>
  </li>
  <li>most concern with how to ==govern==</li>
</ul>

<p><strong>Mozi: <em>兼爱</em></strong></p>

<ul>
  <li>most followeres are commoners/artisans</li>
  <li>very influential during the period (perhaps because they are specialists in artisan = defense), but died out durint Qin</li>
  <li>兼爱: love for all, no special regard for parents, etc. <strong>Against confucious</strong>, who believe that family relationship is the most importatnt.
    <ul>
      <li>hence rejection of offensive wars; military engineering and technology</li>
    </ul>
  </li>
  <li>additionally, ritual and music is for ruling class, and is fundementally <em>selfish</em> since you are mourning your own lineage. Hence Mozi is against it.</li>
  <li>Developed systematic rules of ==logic== to persuade people
    <ul>
      <li>deep commitment to reason: argue in a rational fashion</li>
      <li>Why obsession of logic: let people of different origin understand and accept their ideas</li>
    </ul>
  </li>
</ul>

<p><strong>Mencius: <em>Human Nature is Good</em></strong></p>

<ul>
  <li>namd the second sage after Confucious
    <ul>
      <li>regarded himself as a follower of Confucious</li>
      <li>his book <em>Mencius</em> is later used for 科举</li>
      <li>occupied high political power in Qi</li>
    </ul>
  </li>
  <li>believes that “<strong>Human Nature is Good</strong>”
    <ul>
      <li>everyone has the potential to become a sage (developed their moral throgh long and hard study and reflection)</li>
      <li>human are born with <em>benevolence, rightenousness, ritual, wisdom</em>. But you need to cultivate them through learning.</li>
      <li><strong>believes in every man’s potential to become a sage</strong></li>
    </ul>
  </li>
  <li>against Mozi, as Mencius believes it is impossible to show same love to others, because human beings are inclined to love their own families more</li>
</ul>

<p><strong>Laozi: <em>Dao道</em></strong> (and Daodejing)</p>

<ul>
  <li>
    <p>Dao today refers to idea from <em>Daodejing</em>, and the book <em>Zhuangzi</em></p>
  </li>
  <li>
    <p>many messages in Daodejing is debatable and mysterious</p>

    <ul>
      <li>
        <p>Dao cannot be described</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220922135121167.png" alt="image-20220922135121167" style="zoom: 33%;" /></p>
      </li>
      <li>
        <p>but Dao is the way of nature</p>
      </li>
    </ul>
  </li>
  <li>
    <p><em>Confucious</em> Dao: the way for <strong>human beings to behave</strong> ethically and moral. <em>Laozi</em> and <em>Zhuangzi’s</em> Dao: <strong>the way how universe/nature works.</strong></p>

    <ul>
      <li>Laozi/Zhuangzi believes that Confucious exaggerated the importance of human being. Others ranging from the useful and the useless in nature should also be considered as well</li>
      <li>“human is a small part of the nature”, and in the end achievement of certain goals cannot be done without nature</li>
    </ul>
  </li>
  <li>
    <p>therefore, emphasis on <em>wuwei</em> ==无为==</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220922135532501.png" alt="image-20220922135532501" style="zoom:33%;" /></p>

    <ul>
      <li>non-interference, and have no excessive desires</li>
      <li>believes that persuing non-intereference will have positive impacts on the society</li>
    </ul>

    <p>for example, for government you should also not interfere with people too much</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220922135712574.png" alt="image-20220922135712574" style="zoom:33%;" /></p>

    <p>so the ruler should stop acting when the system is inplace.</p>
  </li>
  <li>
    <p><em>relativity of value</em></p>

    <p>| <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220922135857820.png" alt="image-20220922135857820" style="zoom:33%;" /> | <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220922140019729.png" alt="image-20220922140019729" style="zoom: 33%;" /> |
| :———————————————————-: | :———————————————————-: |</p>

    <ul>
      <li>advantage of the weak, strong and weak can become each other</li>
    </ul>
  </li>
</ul>

<p><strong>Zhuangzi: 自然</strong> (another Daoist)</p>

<ul>
  <li>dreamt himself of butterfly, ==questions knowledge and beliefs== we taken as granted</li>
  <li>the narrative style of Zhuangzi is different from other philosophers. Other philosophers teach in an opaque way, but he does it with playfulness and examples</li>
  <li>Confucious portrayed as a proper learner, but Zhuangzi appears eccentric and unpredictable</li>
  <li>both Laozi and Zhuangzi see <em>Dao</em> as the nature they must accord with, but there are differences
    <ul>
      <li>Laozi discusses about governness, and protecting the weak</li>
      <li>Zhuangzi is not interested in politics (recluse), celebrated ritual freedom. Searching for conception of life</li>
    </ul>
  </li>
</ul>

<p><strong>Different thoughts of Masters</strong>: “when your parents die, how should they be mourned?”</p>

<ul>
  <li>
    <p><strong>Confucious</strong>: three year mourning period</p>
  </li>
  <li>
    <p><strong>Mencius</strong>: just do what <em>your heart believes</em> is correct.</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220922141619545.png" alt="image-20220922141619545" style="zoom:33%;" /></p>
  </li>
  <li>
    <p><strong>Mozi</strong>: a limited resource should be used to the right places/==frugality==</p>
  </li>
  <li>
    <p><strong>Zhuangzi</strong>: life and death is part of the natural process, it just part of the natural changes. So it would be foolish to attach yourself to changing things.</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220922141924289.png" alt="image-20220922141924289" style="zoom:33%;" /></p>

    <p>i.e. you should not try too hard to change things.</p>
  </li>
</ul>

<p><strong>Legalist: 法</strong> (very ==pragmatic==)</p>

<ul>
  <li>
    <p>Han Feizi as an example of Legalist, a student of <em>Xunzi (Xunzi thinks human nature is evil, and coersion, strict teaching is needed</em></p>

    <ul>
      <li>has a high noble origin</li>
      <li>the only ruler took his teaching is Qin, which also become the emperor and united China</li>
      <li>but note that “the <strong>Legalist teachings</strong> 法家 in Qin was so repelled, by Xunzi, but they proposed a radically new way of organizing the state and its subject that allows its adherets to ==unite the realm for the first time==”. So while Xunzi believes in the important of education to make the society behave, later legalist believed in coersion/law/punishmnets.</li>
    </ul>
  </li>
  <li>
    <p>believes that people are naturally anti-social (e.g. killed girls to favor boys at birth)</p>

    <ul>
      <li>evilness of human nature the root of trouble = political unrest</li>
      <li>so <strong>ruler must be always on guard</strong> even for his advisors, officials, etc</li>
    </ul>
  </li>
  <li>
    <p>disagree that Confucious notion that government should be based on moral and ritual, and ==emphasized laws and praticality==</p>

    <ul>
      <li>must be easy to follow</li>
      <li>must be consistent</li>
      <li>must be backed by substantial reward and heavy punishment</li>
    </ul>

    <p>people should be controlled by punishments and rewards</p>
  </li>
  <li>
    <p>different interpretation of <em>wuwei</em></p>

    <ul>
      <li>The ruler should <strong>conceal</strong> his motives and desires, for then the true characters of the ministers will be plain; otherwise the ministers will “polish themselves accordingly”</li>
      <li>Let the ministers do the work: the ruler take the credit; ministers take the blame</li>
      <li>in a sense defend the position of power. note that Han Feizi is noble.</li>
    </ul>

    <p>essentially for a ruler, <strong>law applied to everybody except the ruler</strong></p>
  </li>
  <li>
    <p>but note that the aim is ==not to punish people==, but to ==improve/correct people via laws/controls==</p>
  </li>
</ul>

<h1 id="qin-dynasty-221---207-bce">Qin Dynasty (221 - 207 B.C.E.)</h1>

<p><strong>Previously on the Warring States</strong></p>

<ul>
  <li>
    <p>political disunity, lots of wars $\to$ disversity of political thought</p>
  </li>
  <li>
    <p>many thinkers (Daoist, Han Feizi, etc.) have <em>different idea as compared to Confucious</em></p>

    <ul>
      <li>Followers of Confucius: <em>Mencius</em> (Meng Zi) and <em>Xun Zi</em> systematize Confucian framework, elaborate on theories of governance and human nature (good/bad)</li>
      <li><em>Mozi</em> (the Mohists) known for doctrine of universal compassion</li>
      <li><em>Laozi</em> and <em>Zhuangzi</em>—contemplative recluse, philosophical relativist—presents counterpoint to classic Confucian ideas</li>
      <li><em>Han Feizi</em> —the rule of law, all men treated equally except the ruler
        <ul>
          <li>Diversity of philosophical approaches during Warring States is unsurpassed in Ch. hist; some schools–Legalism, Daoism–peak later; others (<em>Mohists</em>) disappear</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>Repeated <strong>cycle of union and division</strong>, which is a basic paradigm in chinese history</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220927132049739.png" alt="image-20220927132049739" style="zoom:33%;" /></p>
  </li>
</ul>

<p><strong>The rise of the Qin state</strong></p>

<ul>
  <li>
    <p>Qin became the main power during the Warring period, but were seen as a barbaric state by other states</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220927132433325.png" alt="image-20220927132433325" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>however, because this is a place easy to defend as it is on the <em>outskirt</em>, and it is easy to launch attacks</p>

    <ul>
      <li>can weaken power of nobility, later on realized by Lord Shangyang $\to$ perform <strong>talent recruitment</strong></li>
      <li>western troops interaction/contact made Qin advanced in <strong>military technology and capability</strong>
        <ul>
          <li>later on Qin developed a system of non-hereditary ranks, where one can rise in rank purely from achievement during war</li>
          <li>Qin king maintained a centralized control over all people, especially the troops</li>
        </ul>
      </li>
    </ul>

    <p>all of which is only possible because the power of nobility is weak/no hereditary hierarchy, and contributed to the rise of Qin</p>
  </li>
  <li>
    <p>the entire conquest of Qin on other states happened during 230 - 221 BC, which is <strong>very quick</strong>!</p>
  </li>
</ul>

<p><strong>Qin’s foreigner minister: Lord Shang (Shang Yang)</strong></p>

<ul>
  <li>in 361BC he become the <strong>chief minister of Qin</strong>, and wanted to make Qin a more powerful state $\to$ <strong>Legalist State</strong></li>
  <li>changes he introduced include
    <ul>
      <li>suppressed the hereditary nobility; ranks achieved by military merit; established bureaucracy</li>
      <li>country divided into county + officials, state penetration into the villages
        <ul>
          <li>i.e. local farmers no longer controlled the local nobility, but by the government</li>
        </ul>
      </li>
      <li>supervision between each other in a family unit</li>
      <li>distribution of land by offering to farmers, but <strong>land still belongs to the country</strong> = lending ownership temporarily</li>
      <li>direct taxation from people ot the state, instead of given to local nobility</li>
      <li>shrunk the family into atomic family units $\to$ can tax more people; $\to$ prevent large group which could start rebellion</li>
      <li>laws applied equally except for the emperor</li>
    </ul>
  </li>
  <li>overall employed harsh rules, which effectively made <strong>Qin a legalist state and laid a foundation of Qin’s sucess</strong>. But had a tragic death due to harsh rules as well.</li>
</ul>

<p><strong>King Zheng (247-221BC)</strong></p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220927134150999.png" alt="image-20220927134150999" style="zoom:33%;" /></p>

<ul>
  <li>
    <p>First ==Emperor== of Unified China, King Yin Zheng. Named himself Emperor instead of King signifies his power presiding over the entire China</p>

    <ul>
      <li>
        <p>some viewed him as a passive beneficiary of smart officials and weak other states, hence sucess of reunification</p>
      </li>
      <li>
        <p>but it could also be that King Yin Zheng is a controlling figure: failure of assassination prior to the unifcation of China</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220927134402347.png" alt="image-20220927134402347" style="zoom:33%;" /></p>

        <p>where in the figure, the person on the left that has a dagger is the assassin. The assassin Jin Ke in from the <strong>Yan state</strong> to ==fake for a peace treaty== hence surrender, but he failed and King Zheng became infuriated and speeded up the conquer later on. This might reflect King Zheng of being a powerful figure/driving force of the country as:</p>

        <ul>
          <li>usually if ministers are the smart/driving forces, then the simples way is to bribe ministers/assassinate ministers</li>
          <li>but assassinating King Zheng means he is the driving force, hence he could be powerful</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>rised into power when he is age of 13</p>
  </li>
</ul>

<p><strong>Qin Dynasty</strong>: lasted for only 14 years but impact is long-lasting</p>

<ul>
  <li>
    <p>established the political and law structure until the end of imperial era in 1911</p>
  </li>
  <li>
    <p>notice the difference betweem ==Fengjian and Central== system</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220927135211385.png" alt="image-20220927135211385" style="zoom:33%;" /></p>

    <p>notice that now the Emperor almost had a direct control over the people.</p>

    <ul>
      <li>the Fengjian has the structure of dispersing sons/relatives with lands $\to$ let them control diverse pieces</li>
      <li>While this was designed to maintain Zhou authority as it expanded its rule over a larger amount of territory, many of these became major states when the dynasty weakened.</li>
      <li>Li Si opposed it, and believed the Central Bureaucracy by Shang Yang is better, as it could <strong>prevent the dispersion of power/rebels</strong></li>
    </ul>
  </li>
  <li>
    <p>Later Li Si’s plan is favored, and the following organization of the territory is used</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220927135459829.png" alt="image-20220927135459829" style="zoom:33%;" /></p>

    <p>now the emperor has the peak power and <strong>everybody in this hierarchy has to listen to him</strong></p>

    <ul>
      <li>
        <p>the entire bureucracy is funded by the universal agricultural taxation system</p>
      </li>
      <li>at the same time, weaken wealthy clans/party, so no one can influence King’s power. e.g. sometimes taken extreme measures such as <em>reallocated all powerful clans/local nobility to captical</em></li>
      <li>all walls for military defense is abolished, and melt down all weapons (so no more civil war)</li>
    </ul>
  </li>
</ul>

<p><strong>Economic Standardization in Qin</strong></p>

<ul>
  <li>
    <p>erased diversity by <strong>unifying weights and measures</strong></p>

    <ul>
      <li>produce in markets can be compared and priced equivalently</li>
      <li>weights measured by weigh</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220927140044752.png" alt="image-20220927140044752" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>another important standardization is <strong>currency</strong>: faciliates trading</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Other Curreny to Qin</th>
          <th style="text-align: center">Qin’s Currency</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220927140136547.png" alt="image-20220927140136547" style="zoom:33%;" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220927140220842.png" alt="image-20220927140220842" style="zoom:33%;" /></td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <p>unification of <strong>script</strong>. For instance the word for “horse”</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220927140308102.png" alt="image-20220927140308102" style="zoom:33%;" /></p>

    <p>which is advantageous for <strong>communications</strong> between each other/different states</p>

    <ul>
      <li>done by Li Si, by rationalizing the Zhou script</li>
      <li>symbolizes the ==cultural unity== that Qin intended</li>
    </ul>
  </li>
  <li>
    <p>more than standardization: ==knowledge control==</p>

    <ul>
      <li>burying of scholars alive (uncertain): Confusious preferred Zhou’s structure, but Li Si is the chancelor and is totally against it
        <ul>
          <li>Confucious hated Qin, hence people afterwards, e.g. in Han dynasty, who are followers of Confucious could be biased</li>
        </ul>
      </li>
      <li>buring of books (confirmed, 213BC): burned all Confucian classics, and whoever buys it will be executed (view this as an enemy of Qin’s progress).</li>
    </ul>

    <p>happens because Qin wants people to forget about Zhou/past, and corroberates current policies. But it does not mean to abandon all values from the past as well, e.g. lack of filiaty is still punished</p>
  </li>
  <li>
    <p><strong>legal standardization</strong>: standarized rules for all (except ruler)</p>

    <ul>
      <li>
        <p>later Han dynasty described Qin rules being very harsh</p>
      </li>
      <li>
        <p>but the truth is complicated: low ranking offical Xi’s tomb in 睡虎地 found</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220927141158609.png" alt="image-20220927141158609" style="zoom:33%;" /></p>

        <p>Qin books on laws, which is <strong>not that harsh but rather detailed and meticulous</strong></p>

        <table>
          <thead>
            <tr>
              <th style="text-align: center">Logics on Punishment</th>
              <th style="text-align: center">Women v.s. Men</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220927141404034.png" alt="image-20220927141404034" style="zoom:33%;" /></td>
              <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220927141535014.png" alt="image-20220927141535014" style="zoom:33%;" /></td>
            </tr>
          </tbody>
        </table>

        <p>additionally, we also see some <strong>much more power of man than wives</strong></p>
      </li>
    </ul>
  </li>
</ul>

<p><strong>Qin Transportation System:</strong> e.g. road network (4000+ miles)</p>

<ul>
  <li>
    <p>strength economic ties between regions</p>
  </li>
  <li>
    <p>wall built during Ming Dynasty, but some foundation was laid out during Qin</p>

    <ul>
      <li>as expression for shielding off enemies, like in Longshan period</li>
      <li>wanted to <strong>wall out non-chinese tribes to north (Xiongnu)</strong> and wests</li>
      <li>Qin recognizes its limits of power, by delineating is boundary <em>clearly</em> for the first time</li>
    </ul>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Existing Walls during Qin</th>
          <th style="text-align: center">Great Wall we see today</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220927141911239.png" alt="image-20220927141911239" style="zoom:33%;" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220927141955179.png" alt="image-20220927141955179" style="zoom:33%;" /></td>
        </tr>
      </tbody>
    </table>

    <p>where essentially Qin is linking the existing walls together. Note that during this period, Qin assigned a <strong>military official</strong> because</p>

    <ul>
      <li>those walls are on the outskirts, hence skirmishes would happen a lot</li>
      <li>need to managed a large group of people, which is a skill more common within military</li>
    </ul>
  </li>
</ul>

<p><strong>Qin’s Death: Terra-Cotta Army</strong></p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220927142246854.png" alt="image-20220927142246854" style="zoom:33%;" /></p>

<ul>
  <li>
    <p>used for Qin emperor to fight during the underworld (belief in afterlife, that military he defeated will prusue him in afterlife)</p>
  </li>
  <li>
    <p>soldiers were originally colorful</p>
  </li>
</ul>

<h1 id="han-dynasty-202bc---220ad">Han Dynasty (202BC - 220AD)</h1>

<p><strong>Previous on Qin Dynasty</strong></p>

<ul>
  <li>230-221 BCE: ==Qin== conquest ends the ==Warring States period==, results in unification</li>
  <li>221-210 BCE: King Ying Zheng of ==Qin== proclaims himself ‘emperor’ Huangdi, reigns as first emperor (Qin Shihuang)
    <ul>
      <li><strong>Liu Bang</strong> (Emperor Gaozu): the founder of the Han</li>
      <li>Qin state began as a politically and culturally marginal power, which is strengthened by <strong>Shang Yang’s reform</strong></li>
      <li>then Han is corroberates by <strong>Emperor Wu (Wudi)</strong></li>
      <li>Shang Yang’s reforms majorly included bureaucratic government, merit-based appointment, and administrative and tax reforms—direct relation to ruled</li>
      <li><strong>Li Si,</strong> after the conquest, builds upon Shang Yang’s model, extends bureaucratic framework to standardization of weights and measures, currency, script, thought control</li>
    </ul>
  </li>
  <li><strong>Laws of Qin</strong> exresses legalist principles, but seen as were harsh by later people
    <ul>
      <li>portrayed as repressive and tyrannical, but recent scholars are rejecting prejudices and acknowledges its centralizing measures and its legal codes far from arbitrary</li>
    </ul>
  </li>
</ul>

<p><strong>The Collapse of the Qin Empire</strong></p>

<ul>
  <li>
    <p>In brief: 221BC Qin unification. 210BC Shi Huangdi died; his unpopular son, Huhai, succeeded the throne. 209BC Rebellions broke out. 207BC Qin ended by Liu Bang and Xiang Yu, both from ==Chu state== (Liu Bang won at the very end).</p>
  </li>
  <li>
    <p>Qin suffered from strong resistance on the conquered people (tax, lots of construction work), because the <strong>restructure/unification of China within a short period</strong> is bound to invoke dissent</p>

    <ul>
      <li>Especially ==Chu== state had grudges, since Qin once broke alliance with Chu and masaacre a lot of people in Chu</li>
    </ul>
  </li>
  <li>
    <p>Rebellions broke out. Some key rebellion leaders (both from Chu) include:</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Xiang Yu’s Military Capabilty</th>
          <th style="text-align: center">Liu Bang’s Social Capability</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220929132146778.png" alt="image-20220929132146778" style="zoom:33%;" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220929132155103.png" alt="image-20220929132155103" style="zoom:33%;" /></td>
        </tr>
      </tbody>
    </table>

    <p>and the interesting is they have exactly different personalities and abilities</p>
  </li>
  <li>
    <p>Liu Bang won at the very end, and started ==Han dynasty==, named himself <strong>Han Gaozu</strong>汉高祖</p>
  </li>
  <li>
    <p>Han is also divided into <strong>two periods</strong>, almost identical to the shift for Western Zhou and Easter Zhou</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220929132518552.png" alt="image-20220929132518552" style="zoom:33%;" /></p>

    <p>essentially almost identical to Zhou, and we <strong>start with Western Han</strong>, but later moved captial to Luoyang, hence <strong>Eastern Han</strong></p>
  </li>
</ul>

<p><strong>Liu Bang’s New Empire</strong></p>

<ul>
  <li>
    <p>Liu Bang’s first decision was whether to keep the bureaucray of Qin or start a new one (most people associated centralization of power with tyrannay at this point, due to Qin dynasty)</p>
  </li>
  <li>
    <p>in the end, he retained most of the structure, central bureucracy, still uses commanderies, counties, appointed officials by talent, but on <strong>had a benign implementation</strong> (rules are more flexible)</p>
  </li>
  <li>
    <p>decided to share power with his relatives, starting vassal states.</p>

    <ul>
      <li>hence only western portion, about 1/3 of the entire territory is under direct control</li>
      <li>easter ones are controlled by his relatives (so when he died, family still has control)</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220929132736301.png" alt="image-20220929132736301" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>also didn’t like Confucious, so prohibitted Confucious didactic books</p>
  </li>
  <li>
    <p>so in general, most policties are aligned with Lord Shang, with few changes:</p>

    <ul>
      <li>relaxed the laws of Qin a bit, by relaxing the implemenation. e.g. you can plead to the judge</li>
      <li>Liu Bang hated Confucious but judges of crime valued filial piety. This is no direct contraversy because the idea of filial piety is in fact common on lots of idealities, including legalism (e.g. violating filial piety will be punished)</li>
      <li>but thinks Confucious scholar is useful</li>
    </ul>
  </li>
</ul>

<p><strong>Emperor Wudi</strong> (Liu Che刘徹)</p>

<ul>
  <li>==strongest of all Han emperoros==: lots of achievements during his reign, especially his expansion of China</li>
  <li>Wudi is a <strong>posthumouns title</strong> due to his achievements in military, and china’s territoy expansion</li>
  <li>had much control over vassal states</li>
  <li>made Confucianism state ideoligy</li>
</ul>

<p><strong>Emperor Wudi: reshaping economy and politics</strong></p>

<ul>
  <li>centralizing the government
    <ul>
      <li>instead of forcibly remove the large estate landowners, decreed lord’s land shared with heirs (so that in the long run Emperor wins)</li>
      <li>hence smaller control, and Wudi have more power</li>
      <li>periodically, rich and influential family relocated to the captial to be under supervision (similar to Qin)</li>
    </ul>
  </li>
  <li>significant revenues come from <strong>state monopolies</strong>
    <ul>
      <li>intent was to not overburden farmers</li>
      <li>hence increased <strong>taxes on private businesses</strong></li>
      <li>monopolies on salt and iron, and later coinages as well
        <ul>
          <li>later debated if salt and iron monopoly is a good idea as they are critical for the people, but very profitable for the Emperor</li>
          <li>in the long run, such monopoly disrupted the private sector of economy, and a political controversy: debate v.s. <strong>Confucianism scholars</strong> at that time on what is proper government</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><strong>Fight Against Xiongnu</strong></p>

<ul>
  <li>
    <p>Wudi puhsed out <strong>Xiongnu</strong> (problem since Shang, exacerbated by Zhou, e.g. making peace through gifts and “peace marriage”)</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220929134528429.png" alt="image-20220929134528429" style="zoom:33%;" /></p>

    <p>but at the same time, Xiongnu tribes fromed the first confederation</p>

    <ul>
      <li>Xiongnu might have been ancestors of European Turkish</li>
    </ul>
  </li>
  <li>
    <p>also had campaigns and subdugate the various kingdoms, defeated Ferghana, got a lot of horses</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220929134933688.png" alt="image-20220929134933688" style="zoom:33%;" /></p>

    <p>and this campaigm <strong>secured trade routes later to central asia</strong></p>
  </li>
  <li>
    <p>other campaigns aimed to make <strong>more tribute states</strong> hence allies to fight against Xiongnu</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220929135055258.png" alt="image-20220929135055258" style="zoom:33%;" /></p>

    <p>some famours campaign leaders:</p>

    <ul>
      <li><strong>Huo Qubing:</strong> defeated 5 Xiongnu tribes in 6 days, killed over 70000 Xiongnu. (but we didn’t find Xiongnu’s records to confirm this)</li>
      <li><strong>Zhang Qian:</strong> his route established later ==silk road==, and later where ==buddism== came in</li>
    </ul>
  </li>
  <li>
    <p>Consequences of Wudi’s expansions</p>
    <ul>
      <li>Positive:
        <ul>
          <li>military security</li>
          <li>established contact with the larger world - later on the silk road</li>
          <li>ambassators of many tribute states $\to$ send princesses to China and returns with periodic gift to vassal states</li>
        </ul>
      </li>
      <li>Problem:
        <ul>
          <li>nearly 10% of state revenue spent on gifts</li>
          <li>Stretched China’s resources; economic well-being weakened</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><strong>Han Confucianism as State Orthodoxy</strong></p>

<ul>
  <li>
    <p><strong>Dong Zhongshu</strong> developed Confucious that matched the mood of the time</p>

    <ul>
      <li><strong>synthesizes</strong> different ideas to Confucian metaphysics, e.g. adapted <em>yin-yang</em> and the <em>five forces</em> (fire, water, earth, metal, and wood) into Confucian metaphysics. Note that Confucious origianlly did not address supernatural</li>
      <li>harmonize the contrasting idea of Mencius and Xunzi, so human’s nature is good but man needs to be guided by the ruler (personification of heaven)</li>
      <li>remade emperor-cnetered, hence Wudi liked it</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220929140431707.png" alt="image-20220929140431707" style="zoom:33%;" /></p>

    <ul>
      <li>essentially, Confucianism became ==more eclectic and emperor-centered==</li>
    </ul>
  </li>
  <li>
    <p>he then made the proposal to Wudi, who liked his idea and adopted it</p>

    <ul>
      <li>even though Wudi’s established rule is in a way very similar to Qin’s legalist principle on military and laws,</li>
      <li><strong>ruled by legalist, but decorated/surfaced by Confucianism idea</strong></li>
      <li>so practically, every state claimed that they follow confucianism even though rules by legalist ideality (due to Qin)</li>
    </ul>
  </li>
  <li>
    <p>another important change include that the government officials needed Confucianism classics as required knowledge</p>

    <ul>
      <li>invenstion of paper in Easter Han helped expanded Confucianism</li>
      <li>but the overall Confucianism has diverged some significant ways</li>
    </ul>
  </li>
</ul>

<p><strong>Emperor Lv</strong>吕后 and <strong>Ban 班Family</strong></p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220929140951519.png" alt="image-20220929140951519" style="zoom:33%;" /></p>

<ul>
  <li>==first woman ruler== (dowager) in imperial china, wife of Liu Bang</li>
  <li>power of empresses family threatened the power of emperor family, hence seen as dangerous
    <ul>
      <li>so historians such as Sima Qian cover her achievments up</li>
    </ul>
  </li>
  <li>Another first woman historican: ==Ban Zhao==
    <ul>
      <li>completed the history of Western Han</li>
      <li>wrote book on <em>Lessons for Women</em>, which is very popular
        <ul>
          <li>emphasized women obligations to husband, cultivation of virtues appropriate to women.</li>
          <li>women and men have different status, hence can be seen as Confucious idea to stick to their role</li>
          <li>but also advocated for equal education for women</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><strong>Sima Qian, the “historian”</strong></p>

<ul>
  <li>
    <p>our vision of ancient china is being shaped a lot from his view of it</p>
  </li>
  <li>
    <p>at that time, historian were more known as Archivist, Astrologer, and/or Scribe</p>

    <ul>
      <li>duties may have included recording events, or keeping “minutes.”</li>
      <li>could access palace archives, such as chronologies, confidential documents.</li>
    </ul>
  </li>
  <li>
    <p><em>Shiji</em> started by his father, finished ==privately== by him (hence less biased v.s. Ban’s version, which is state sponcered)</p>
  </li>
  <li>
    <p><em>Shiji</em> narrates history from beginning to time to Sima Qian’s time</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220929141604353.png" alt="image-20220929141604353" style="zoom:33%;" /></p>

    <p>where all the history was unearthed by him, checking archives, going to places physically, etc.</p>
  </li>
  <li>
    <p>however, there could still be biases:</p>

    <ul>
      <li>during ruling of Han Wudi, he had a castration due to political mistake, hence could have grudge to Han</li>
      <li>dislikes Emperess Lv</li>
      <li>student of Dong ZHongshu, had Confucious influences</li>
    </ul>

    <p>but today seen as he tried his best to be impartial</p>
  </li>
</ul>

<p><strong>Wang Mang Interloper</strong>:</p>

<ul>
  <li>recall that Liu Bang, Empress Lv, and Empreor Wu are all classfied as early Han</li>
  <li>Wang Mang started a rebellion and separated out of the royal clan to start his ==Xin dynasty== (which lasted very shortly) besides ==Han==.
    <ul>
      <li>however, due to the flooding of yellow river at the time and other reasons, Wang Mang’s plan is shortlived</li>
    </ul>
  </li>
  <li>due to rebellion, Han people relocated to Luoyang, <strong>restored the power</strong>, had the ==Eastern Han==
    <ul>
      <li>Eastern Han formally began on 5 August AD 25, when Liu Xiu became Emperor Guangwu of Han, with <strong>capital moved eastward to Luoyang</strong></li>
      <li>still the <strong>Liu</strong> clan being the royalty, but the eunuchs has rose up in power</li>
    </ul>
  </li>
</ul>

<p><strong>End of Han</strong></p>

<ul>
  <li>The end of the Han dynasty refers to the period of Chinese history from 189 to 220 CE, which roughly coincides with the tumultuous reign of the Han dynasty’s last ruler, Emperor Xian.</li>
  <li>During this period, the country was thrown into turmoil by the Yellow Turban Rebellion (184–205). Meanwhile, the Han Empire’s institutions were destroyed by the ==warlord Dong Zhuo== and ==fractured into regional regimes ruled by various warlords==, some of whom were <strong>nobles and officials of the Han imperial court</strong>.</li>
  <li>One of those warlords, Cao Cao, was gradually reunifying the empire, ostensibly under Emperor Xian’s rule</li>
</ul>

<h1 id="six-dynasties-220---589">Six Dynasties (220 - 589)</h1>

<p><strong>Previously on Han Dynasty</strong></p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221004131407632.png" alt="image-20221004131407632" style="zoom: 50%;" /></p>

<ul>
  <li>
    <p><strong>Liu Bang</strong>, or Han Gaozu, founded the Han dynasty</p>
  </li>
  <li>==Han== Dynasty is split into two halves, distinguished by their capitals:
    <ul>
      <li>206BC - 9 CE: Western/Former Han (Chang’an). Then problem incurred by ==Wang Mang== and forced the move of the royal family</li>
      <li>25-220 CE: Eastern Han/Later Han (Luoyang)</li>
    </ul>
  </li>
  <li>under the reign of <strong>Emperor Wu</strong>: we had great territorial expansion, but weakened the economy of empire. Several milestones include:
    <ul>
      <li><strong>Han-Xiongnu War</strong>: Han expansion creates a multilingual, multiethnic empire, enduring political and cultural ties to inner Asia; foundation of silk road and exchange of goods/ideas; but weaken the local economy due to warefare
        <ul>
          <li>note that silk road in reality are a series of <em>short trades</em>, and that it is important to know that many tradings existed <em>before silk road</em> as well. It is just that Wudi made <em>silk road even more trade intensive</em>.</li>
        </ul>
      </li>
      <li><strong>Dong Zhongshu</strong> works to install Confucianism as official state ideology, but draws upon Daoist cosmology; this syncretic Confucianism legitimizes Han order</li>
      <li><strong>Sima Qian</strong>, court astrologer to E. Wu, writes monumental Records of the Grand Historian in the Confucian mold, considered founder of Chinese historiography</li>
      <li><strong>Salt &amp; Iron</strong> monopoly debates (held 81BC) on Emperor Wu’s economic policies</li>
    </ul>
  </li>
  <li>
    <p>==Han== governance marks continuation of Qin law and institutions, ==legalist foundation with new syncretic Confucianist state ideology laid over it==. =&gt; Called the “Han Synthesis,” but the Han is essentially a Legalist state.</p>
  </li>
  <li>
    <p>also recall that in the song, this missing period is essentially the topic of this section: the ==Six Dynasties==</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221004131733439.png" alt="image-20221004131733439" style="zoom: 33%;" /></p>
  </li>
</ul>

<p><strong>Timeline After Han</strong></p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221004131810873.png" alt="image-20221004131810873" style="zoom:50%;" /></p>

<ul>
  <li>first split into Wu吴国, Wei魏国, Shu蜀国, the three kingdom period</li>
  <li>then north have been controlled by alien rulers, e.g. Northern Wei. The southern are controlled by aristocrats migrated from north (e.g. to ==seek refuge==)
    <ul>
      <li>recall that south had high humidity = lots of malaria</li>
      <li><strong>oldest form of spoken Chinese in the South</strong>, such as Fujian, because south had been “stale” while north was changing, e.g. interaction with steppe people.</li>
    </ul>
  </li>
  <li>the name “Six dynasties” come from the six dynasty that had capitals in ==Nanjing== (Eastern Wu, Eastern Jin, Song, Qi, Liang, Chen)
    <ul>
      <li>it also overlapped the ==Sixteen Kingdoms== period = warring in Northern China after fall of Western Jin</li>
      <li>the period of Northern Wei + Southern Song to before Sui is also called the ==Northern and Southern period== 南北朝</li>
    </ul>
  </li>
  <li>Sui dynasty reunified china</li>
</ul>

<p><strong>The Three Kingdoms</strong></p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221004132335086.png" alt="image-20221004132335086" style="zoom:33%;" /></p>

<ul>
  <li>the three rulers slowly rose to power at the end of Han, by being warlords</li>
  <li>by 205, Cao Cao had made themselves dictator of North China. Since there are so many Wei, we added the surname of the leader to give Cao Wei</li>
  <li>later on <strong>Cao Cao</strong> also defated <strong>Xiongnu</strong>, but never able to reunite the other empires, which ended with the <strong>Battle of the Red Cliff 赤壁之战</strong>
    <ul>
      <li>defeated by alliance between Shu and Sun, and the tiredness of his troops due to long distance marching</li>
      <li>he didn’t die there, but just failed to reunite</li>
    </ul>
  </li>
  <li>but <strong>eventually his Wei prevailed</strong> as it has twice the population, and won over the other state</li>
  <li>near the last of Wei’s heirs, Cao Shuang was executed and royal power weakened = rise and eclipsed by the <strong>Sima family</strong>.
    <ul>
      <li>They eventually took over change the dynasty to ==Jin 晋==</li>
      <li>first time a small reunion of China, but fell apart quickly by the <strong>War of Eight Princes</strong> (i.e. family member seeking power)</li>
      <li>subsequently, in 304, civil war within and northern invasion of the ==non-Chinese tribes== collapsed</li>
      <li>Therefore, the north became the ==Sixteen Kingdoms period== and the south is the ==Eastern Jin dynasty==</li>
    </ul>
  </li>
</ul>

<p><strong>Sixteen Kingdoms and Eastern Jin</strong></p>

<ul>
  <li>
    <p>Non-chinese joined the conflicts and made north a battle ground.</p>
  </li>
  <li>
    <p>life in the north was dangerous hence many people, especially Jin, packed up and fled south = ==Eastern Jin==</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221004133417147.png" alt="image-20221004133417147" style="zoom:50%;" /></p>

    <p>but since there are aboriginal people there:</p>

    <ul>
      <li>the local populartion either pushed away or absorbed</li>
      <li>essentially Eastern Jin is still under the Sima Family</li>
    </ul>
  </li>
  <li>
    <p>one reason why Jin so shorted lived is because its choice of Government officials. The rise of aristocracy from Han through Tang</p>

    <ul>
      <li>==Warring States==: on the basis of merit (<em>shi</em> class)</li>
      <li>==Qin==: merit, as a firm principle</li>
      <li>==Han==: by recommendation (rule of avoidance, so officials there are non-local) + exams
        <ul>
          <li>in reality, since officals are non-local, they basically asked people of importance <strong>at that local area</strong> for recommendation</li>
          <li>but later this became a problem, that it still became local recommendation by locals themselves</li>
        </ul>
      </li>
      <li>==Wei== (under Cao Cao): and the whole era of disunity: the <strong>Nine-Grade</strong> system
        <ul>
          <li>every family will be assigned a rank = position in government, hence hereditary in nature</li>
          <li>this rank assignment depends in virtue, reputation, talent</li>
          <li><strong>long survival of elite status</strong>, and many of those clans persisted to the Tang dynasty
            <ul>
              <li>to preserve this, aristocrat should only marry aristocrat</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>==Sui==: exams
        <ul>
          <li>realize that the exam is the fairest way</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><strong>Elite Aesthetics</strong>:</p>

<ul>
  <li>
    <p>in South China, the educated and the well-off <strong>competed in extravagence</strong>, instead of the virtue Confucious wanted</p>
  </li>
  <li>
    <p>these people are interested in mythical things, divination and supernatural (“Seven Sages of the Bamboo Grove” below)</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221004134535212.png" alt="image-20221004134535212" style="zoom:33%;" /></p>

    <p>for example, they loved drinking, and some also took drug.  Hence those elite people always try to be naked</p>

    <ul>
      <li>challenged public moral at the time, of what is virtuely right</li>
      <li>e.g. one was crying when an unmarried man died, but was eating and drinkg wine at his mother funeral = violated Confucious values</li>
    </ul>
  </li>
  <li>
    <p>but also a burst of self-expression in art and poetry</p>
  </li>
</ul>

<p><strong>Northwen Wei Dynasty</strong></p>

<ul>
  <li>
    <p>==Tuoba==, which included tribes who spoke turkish, mongolish, etc. They invaded and controlled he nothern China after the Western Jin</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221004135051914.png" alt="image-20221004135051914" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>however, Tuoba interested in the process of ==Sinicization== (to Sinify: to make Chinese. Latin “Sinai”=Qin=Chinese)</p>

    <ul>
      <li>how can a minority population of Tuoba ($\approx$ 1 million) contorl the vast population of Chinese $\approx$ 20 million?</li>
      <li>one approach is Sinicization, which is wierd but largely because <strong>Emperor Xiaowen himself is admiring Chinese since childhood</strong></li>
      <li>proposed a new system of Equi-field, which is reminiscent of Han to tax individual cultivators
        <ul>
          <li>individual family assigned land depending on how many people they have</li>
          <li>this is to ensure that no-land is neglected, and that <strong>no people wander off</strong> (e.g. don’t want merchant and nomads)</li>
          <li>hence is useful for building a fiscal base</li>
        </ul>
      </li>
      <li><strong>Emperor Xiaowen:</strong> new captial in Luoyang and wanted to ==transform Xianbei鲜卑 into Chinese==
        <ul>
          <li>used chinese surnames</li>
          <li>ordered Chinese clothings in court</li>
          <li>preferred Sinicized Chinese = elites of mixed ethnic backgrounds increasingly became the norm
            <ul>
              <li>Luoyang became popular, many Xianbei nobilities became versed in Chinese</li>
              <li>The cultural and ethnic integration ==laid the foundation for later reunification of the North and South by the Sui==</li>
            </ul>
          </li>
          <li>however, this eventually lead to the problem that military who are mostly Xianbei are being ==treated unfairly== compared to mixed court officials. This can be said to tbe the root cause of the throw off for Emperor Xiaowen</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>the <strong>Ballad of Mulan</strong>, when the Northern Wei (where Mulan is born) was in war with ruan-ruan</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221004135710984.png" alt="image-20221004135710984" style="zoom:33%;" /></p>

    <ul>
      <li>in the Ode the concept of <strong>Khan</strong> is equivalented to the concept of <strong>Son of Heaven</strong></li>
      <li>indicates the sinicization of north</li>
    </ul>
  </li>
  <li>
    <p>Resistance of Sinicization,</p>

    <ul>
      <li>this acceptance of Chinese culture would lead of loss of identities, and Xianbei in military did not enjoy status that sincized Xianbei in the court had</li>
      <li>since those unequal treatment made militaries unhappy, and lead to rebellion in 524</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221004135907298.png" alt="image-20221004135907298" style="zoom: 67%;" /></p>
  </li>
  <li>
    <p>but later they all suffered from sinified Chinese, that a mix of culture differences induced alot of conflict</p>
  </li>
</ul>

<p><strong>Buddhism</strong>:</p>

<ul>
  <li>
    <p>provided a different way of conceving life, death, and cosmos</p>
  </li>
  <li>
    <p>Buddhism originated in India, a lot went to China from the trade routes</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221004140127938.png" alt="image-20221004140127938" style="zoom: 33%;" /></p>
  </li>
  <li>
    <p>instead of a single creed, chinese Buddhism foundd a lot of ideas and practices</p>

    <ul>
      <li>met both ==Theravada== (early buddihism, lesser vehicle) and ==Mahayana== (later buddism, greater vehicle ‘that can carry more people to salvation’)</li>
      <li>problem of translation then was critical</li>
    </ul>
  </li>
  <li>
    <p>since Buddhism is in sanskrit, early translators used Daosim concepts to explain Buddhism</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221004140458180.png" alt="image-20221004140458180" style="zoom: 33%;" /></p>

    <ul>
      <li>in the beginning, had lots of problems such as Nirvana $\to$ Wuwei</li>
      <li>then with ==Kumarajiva== and his translation project coining new terms in Chinese (e.g. Niepan, to preserve the foreign phoenic), it became much more accurate</li>
    </ul>
  </li>
  <li>
    <p>how did <strong>Buddhism change Chinese culture at large</strong>?</p>

    <ul>
      <li>the idea of rebith, and people cycling through life is new to the Chinese</li>
      <li>added the idea of <strong>death is also suffering</strong>, hence Nirvana is important</li>
      <li>reshaped the ==relationship between the living and the ancestors==
        <ul>
          <li>ancestors become “weak” beings needing to be saved (v.s. before, ancestors are made offerings and then gave help in return)</li>
          <li>how do you save them? Death can be lifted by merit, and ==merit can be transferred==, e.g. by ==Buddhist clergy==</li>
          <li>remade the relationship between living and dead. Idea of ancestor are powerful has diminished</li>
        </ul>
      </li>
      <li>From the above, induced the rise of the <strong>importance of Buddhist clergy</strong></li>
    </ul>
  </li>
  <li>
    <p>how did <strong>China change Buddhism</strong>?</p>

    <ul>
      <li>
        <p>Mahayna buddhism became the famous one, China magnifies Mahayana. e.g. extending the influence to Japan as well</p>

        <ul>
          <li>e.g. Chan, or Zen in Japanese, all purely Chinese inventions</li>
        </ul>
      </li>
      <li>
        <p>developed specific Buddhist schools, all Mayhayana sects</p>

        <ul>
          <li><strong>Pure Land</strong>: preach by faith, hence very easy to pratice. Only need to recite the name of Amitabha. Hence welcomed by commoners</li>
          <li><strong>Zen buddism</strong>: needs meditation, more attractive to literate elite</li>
        </ul>
      </li>
      <li>
        <p>an example of locaization of Buddhism deity, Guan Yin of mercy and compassion.</p>

        <table>
          <thead>
            <tr>
              <th style="text-align: center">Original</th>
              <th style="text-align: center">In China</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221004170004118.png" alt="image-20221004170004118" style="zoom:33%;" /></td>
              <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221004141817604.png" alt="image-20221004141817604" style="zoom:25%;" /></td>
            </tr>
          </tbody>
        </table>

        <ul>
          <li>initially Guan Yin is a male in India, but in China, became female</li>
          <li>promoted the idea of <strong>equal gender</strong>: “presentation of gender is provisional, situational, audience-oriented”</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><strong>Rise of Daoism</strong>:</p>

<ul>
  <li>Though Han dynasty with popular with Confucious, there are still believers of Daoism and the notion of <strong>immortality</strong> (e.g. Lady Dai)</li>
  <li>during the Religious Daoism, those sporadic believers (e.g. farmers) suffered from taxations and wars. They ==wish for peaceful lives== (near the end of Han), hence grouped up and <strong>formed a more powerful sect</strong> and started to gain governence in their own regions = the Yellow Turban, etc.</li>
</ul>

<p><strong>Religious Daoism</strong></p>

<ul>
  <li>
    <p>gained insights from Cihinese superstitions, and is for pursuing immortality (e.g. Qin and Emperor Wudi)</p>
  </li>
  <li>
    <p>but in 2nd century, there ermges religous Daoism: organized commual religous due to conflicts/dissent ==near end of Han== (notice that <strong>something new happens near the end of a dynasty is pretty common by now</strong>)</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221004142119564.png" alt="image-20221004142119564" style="zoom:50%;" /></p>

    <ul>
      <li>Laozi is now made into a deity</li>
      <li>had two sects, by Zhang Daoling (五斗米道), and by Zhang Jiao (Yellow Turbans)</li>
      <li>those leaders claim they obtained new revelations and gained a lot believers</li>
    </ul>
  </li>
  <li>
    <p>eventually the growth of Daosim and the incoming Buddhistm lead to strong competition</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221004170739423.png" alt="image-20221004170739423" style="zoom: 33%;" /></p>

    <ul>
      <li>Daoist built temples v.s. Buddhist monasteris</li>
      <li>Daoist claim that they have better spells, soceries for protection and ailness, etc.</li>
    </ul>
  </li>
  <li>
    <p>There have been much efforts of one religion try to use the emperor to <strong>expel religion</strong>: but never had a single religion to dominate</p>

    <ul>
      <li>many western misconception therefore though Chinese religion had high tolerance, e.g. the exclusiveness of Islam and Christian</li>
      <li>but that is not true, the reality is that are also trying to exclude but just never works out</li>
    </ul>
  </li>
</ul>

<h1 id="sui-and-tang-581907">Sui and Tang (581–907)</h1>

<p><strong>Previously on the Age of Division</strong></p>

<ul>
  <li>==Eastern Han==: falls from socioeconomic and environmental strain, and religious (e.g. Yellow Turf), peasant movements. Fractures into short-lived, celebrated Three Kingdoms period.</li>
  <li>==North-South== division remains significant;
    <ul>
      <li>South underdeveloped, only has 1/6 of N.’s population;</li>
      <li>North: had mostly <strong>proto-Mongol or Turkic nomadic people</strong> including 1. Xiongnu, 2. Xianbei, 3. Tuoba establish series of “kingdoms” which are usually brief; Northern kingdoms see a degree of ==Sinicization==, but reverse also occurs; ethnicity and culture are ==fluid==</li>
      <li>Differences in geography, climate, trade routes; the rise of aristocracy</li>
      <li>One of the legacies of the ==Northern Wei== (Tuoba branch of Xianbei) is patronage of Buddhism, which was translated ‘through’ Daoism, (i.e. wuwei and nirvana)</li>
      <li>==Sui== had a series of measures trying to unite and resolve the difference:
        <ul>
          <li>a law code equally applied to all</li>
          <li>the <strong>Grand Canal</strong>, which linked the Huang He and the Ch’ang Rivers and encouraged north-south trade within China</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>==Buddhism== transforms culture; ==Chinese== culture transforms Buddhism
    <ul>
      <li>Religious Daoism: in competion with Buddhism, wanted to get exclusive patronage by the emperors but never work out</li>
    </ul>
  </li>
</ul>

<p><strong>Reunification of Sui</strong></p>

<ul>
  <li>
    <p>some key milestones of Sui and later</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221006132308299.png" alt="image-20221006132308299" style="zoom: 50%;" /></p>

    <ul>
      <li>Reunification under the Sui (581-618) <strong>Yang Jian 杨坚</strong></li>
      <li>Yang Guang杨广, the first emperor’s son when successed build the <strong>Grand Canal</strong> (try to keep China together) but also had extravagant rebuilding of capital at Luotang (critisized)</li>
      <li>Yang Guang’s campaign to Korea later was failed, and rebelliions broke out in China = emperor killed = ==Li Yuan founded Tang==</li>
      <li>Early Tang: mainly ==Emperor Taizong (Li Shimin)== &amp; empire-building+conquering – Tang Cosmopolitanism: Chang’an and material culture</li>
      <li>==Empress Wu (Zetian)==, who reigned for a long time, and the role of women</li>
      <li><strong>An Lushan Rebellion</strong> forced center to cede much power</li>
    </ul>
  </li>
  <li>
    <p><strong>rescined the ban</strong> on Buddhism and Daoism passed by the previous Northern Zhou dynasty in 574</p>

    <ul>
      <li>
        <p>monks were already working on Buddhist text protection in Zhou: digging caves and putting Buddhist texts incised in stone</p>
      </li>
      <li>
        <p>but Sui founder was himself a ==grand donor to Buddhism==, built a lot of monasteries</p>
      </li>
    </ul>
  </li>
  <li>
    <p>mixed nordic and Chinese, a reunification of Chinese northern and southern states</p>

    <ul>
      <li>north and southern could have became a permanent separation</li>
      <li>new centralized bureucracy even stronger than in Han, and enforced it in a short periof of time (like Qin)</li>
    </ul>
  </li>
  <li>
    <p>later in Tang, the division seemed a much undesired situation</p>

    <ul>
      <li>as shown by Tang, unification = longer dynasty e.g. <strong>Han and Tang became an aim of every later ruler</strong></li>
    </ul>
  </li>
  <li>
    <p>since again, ==Sui== are doing a lot but too soon (alike Qin)</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221006132844907.png" alt="image-20221006132844907" style="zoom:33%;" /></p>

    <p>where</p>

    <ul>
      <li>dig a canal to connect north and south, and to ship south resources to north</li>
      <li>faciliated and <strong>symbolizes the political reunification</strong> of south and north</li>
    </ul>
  </li>
  <li>
    <p>new system by exam in ==Sui== = <strong>intended to deprive high aristocracy of power</strong></p>

    <ul>
      <li>opened to a somewhat larger population to serve in government</li>
      <li>but many successful candidates <strong>still correlates to power of rich families</strong></li>
    </ul>
  </li>
  <li>
    <p>second emperor wanted to rebuild the great wall, and build a road (much different from the first emperor of Sui, and very alike Qin)</p>
    <ul>
      <li>he also conmissioned lots of army to vietnam, turko-mongol in the north, and korea</li>
      <li>he did too much, <strong>distrupt dometic ecnomony, and with the failure of Korea, and became overthrown</strong></li>
    </ul>
  </li>
</ul>

<p><strong>Tang Founders</strong>: cosmopolitanism about elite culture</p>

<ul>
  <li>with the disintegration of the Sui dynasty in July 617, ==Li Yuan== – urged on by his second son Li Shimin (李世民, the eventual Emperor Taizong) – rose in rebellion.
    <ul>
      <li>Using the title of “Great Chancellor” (大丞相), Li Yuan installed a puppet child emperor, Yang You, but eventually removed him altogether and established the Tang Dynasty in 618 as Emperor.</li>
      <li>His son and successor ==Li Shimin honoured him as Gaozu (“high founder”)高祖== after his death.</li>
      <li>and later ==Li Shiming become Tang Taizong==, achieved by killing his brother and forced his father to step down
        <ul>
          <li>unethical as it violated Confucian norms, and hence a “legend” arose that emperor was summoned before the King of the dead</li>
          <li>the king of the dead asked why did you do it</li>
          <li>the emperor was terrified, and in the end sacrificied his family for the good of the empire</li>
          <li>shows the belief in afterlife and ==juristication of the courts of the dead==, which is a norm of justice at that time</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>ruling in the north become multi-ethnic
    <ul>
      <li>lots of Tuoba intermariage, different families made different choices</li>
      <li>already in Sui: e.g. wife of the founder of Sui was Turkish, and the crazed son of Emperor Taizong (because his father killed his homosexual lover with a palane entertainer) insist on only speaking <strong>Turkish</strong>. Eventually his wife Wu Zhao took over and became <strong>Empress Wu</strong></li>
      <li>in general, very <strong>mixed identity in the north</strong></li>
    </ul>
  </li>
  <li>Tang followed a lot of Sui policies
    <ul>
      <li>both had a modified form of the ==equal-field system==, which originated from Northern Wei by Dowager Empress Feng</li>
      <li>both retrained militia system of nothern dynasties (very ingrained into the population)</li>
    </ul>
  </li>
  <li>Tang’s founder is the <strong>Li family</strong>
    <ul>
      <li>also mixed ethnic background, spoke both Turkish and Chinese</li>
      <li>hence with <strong>a heavy Tuoba element and steppe culture</strong>, e.g. liked horse riding and hunting
        <ul>
          <li>steppe nomads learned to ride from a young age and were expert horsemen</li>
        </ul>
      </li>
      <li>after An Lushan rebellion, people wanted to draw a more clear ethnic lines</li>
    </ul>
  </li>
  <li>The tang was an age not just for cultural openenss but of <strong>political strength</strong>, and had much control over its citizens
    <ul>
      <li>official supervised markets carefully (e.g. periodically monitored prices), and also kept a close watch on rural residents</li>
    </ul>
  </li>
</ul>

<p><strong>Tang’s military culture: part of the elite identity</strong></p>

<ul>
  <li>
    <p>e.g. from Han, Wudi was a emperor of strong military</p>
  </li>
  <li>
    <p>in case of Tang, it is different from Han because</p>

    <ul>
      <li>
        <p>it is a militarized society, mixed of military <strong>and civilist cultures</strong></p>
      </li>
      <li>
        <p>the <strong>militia system 服兵</strong> made almost every person had some kind of military knowledge</p>

        <ul>
          <li>==Sui and Tang== developed this system, which a way to privde a national army from a local level</li>
          <li>based off from equal-field system, so that given land = tax and <strong>to supply one soldier,</strong> but that soldier is exempt from taxes</li>
        </ul>
      </li>
      <li>
        <p>soldiers are serving by ==rotations== (hence no permanent soldier = less concentrated regional power)</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221006134140581.png" alt="image-20221006134140581" style="zoom:33%;" /></p>

        <ul>
          <li>when off duty = training</li>
          <li>when on duty = go to war if there are wars, otherwise patrols in captials, etc.</li>
          <li>don’t receive salaries, and so need to prepare their own equipmenet, horse, etc, but will have rewards from <strong>won battles</strong>
            <ul>
              <li>e.g. recall Mulan, who had to buy her own horse</li>
            </ul>
          </li>
          <li>won battles for rewards in land, cash, ranks, hence can be a way some family desires</li>
        </ul>
      </li>
      <li>
        <p>using the above system, the cost of launching wars is minimized. Hence lead to a high degree of military knowledge penetrating throughout the population</p>
      </li>
    </ul>
  </li>
  <li>
    <p>using this militia system, Tang got a lot of <strong>expansion success</strong></p>

    <ul>
      <li>
        <p>in 630, conquered Mongols in <strong>Mongolian</strong>. This victory gave Taizong a title “Heavenly Khan”==天可汗==</p>
      </li>
      <li>
        <p>also campaigned western states</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221006134530315.png" alt="image-20221006134530315" style="zoom:33%;" /></p>

        <p>which become mordern day Xinjiang</p>
      </li>
      <li>
        <p>but since a large part of Turkish soldier who were sent from tang’s army settled there, hence they people in Xinjiang speak turkish a lot</p>
      </li>
    </ul>
  </li>
</ul>

<p><strong>Established Six Protectorates</strong></p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221006134820782.png" alt="image-20221006134820782" style="zoom:33%;" /></p>

<ul>
  <li>a protectorates has a local ruler and autonomy</li>
  <li>the protectorate submits to the Tang emperor as the highest sovereign.</li>
  <li>a Tang was to pacified te region</li>
  <li>the protectorates also paied tributes ot the Tang, in return, emperor gave them licenses for trade = trade relationship</li>
</ul>

<p><strong>State-building at home</strong></p>

<ul>
  <li>==Tang Code== of 653 was the earliest code to survive directly, read and copied (before other code was dug up + bamboo)
    <ul>
      <li>principles of crimilal laws, etc.</li>
      <li>many other countries (e.g. Japanase, Korea) adopted a lot of Tang code not for its content, but for the symbol of prosper</li>
      <li>but punishment depends on social status: priviledged, commoners, and inferior people (e.g. slaves)</li>
      <li>the code was also calibrated based on sex, age, and disabilities</li>
      <li><strong>reflected Legalist on appropriate treatment, but also espoused Confucianism values</strong> (e.g. killing own father much worse than killing a stranger)</li>
    </ul>
  </li>
  <li>promoted ==Confusion education==, and expanded the ==civil exam==
    <ul>
      <li>but still Tang’s offcials is only at the early state of change, most still come from wealthy family</li>
      <li>only 20-30 men passes the exam per year, hence bureaucracy still mostly domoinated by aristocrates</li>
      <li>the change is <strong>most intensified during Song</strong></li>
      <li>at the start of the Song, those great families started to fade away, perhaps rebellion targeted at aristocracy at the end of Tang = genocide.</li>
    </ul>
  </li>
</ul>

<p><strong>Tang’s openness</strong>: Changan长安 = eternal peace</p>

<ul>
  <li>recall that <strong>Chengzhou成周=Luoyang, Changan长安= Xi’an</strong></li>
  <li>Chang’an was rebuilt by Sui as a political statement, and was rebuilt by the Tang for the same reason = symbol of power</li>
</ul>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221006135233371.png" alt="image-20221006135233371" style="zoom:33%;" /></p>

<ul>
  <li>
    <p>the city layout is highly planned, had 1 million living inside and approx another million just outside.</p>
  </li>
  <li>
    <p>a lot of walls for security purposes (had curfews, patrols, etc.)</p>
  </li>
  <li>
    <p>today none of the Tang outer walls remain, but only the Ming wall survived, which is approximate only around the palace city area</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221006135408226.png" alt="image-20221006135408226" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>emperor palace in the north, and people lived in the rectangular units = a unit. Rich people lives closer ot the palace, and there are also two <strong>notable markets</strong>, where</p>

    <ul>
      <li>west markets are for foreign trades = most foreign merchant come form west</li>
      <li>east markets are for trading local goods</li>
    </ul>
  </li>
  <li>
    <p>the southern gate also had a <strong>very wide avenue: wide enough for much traffic</strong> (gone today. but below is reconstruction)</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221006135627741.png" alt="image-20221006135627741" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>Emperor Taizong is very interested by Xuanzang玄奘, a Buddhist in search of Buddhist scripture and came back</p>

    <ul>
      <li>He is known for the epoch-making contributions to Chinese Buddhism, the travelogue of his journey to India in 629–645 CE, his efforts to bring over 657 Indian texts to China, and his translations of some of these texts</li>
      <li>inspired the modern novel: <strong>The journey to the West (西天取经)</strong>, to depict Xuanzang’s journey in search of the Buddhist script</li>
    </ul>
  </li>
  <li>
    <p>knowledge of outside world largely <strong>influenced by those exotic goods, central asian musicians, magician</strong>, etc.</p>

    <ul>
      <li>attest the love of Tang elite for cosmopolitan cultures and especially those of the central asia</li>
      <li>but they had a hard time diferentiate those foreign people, <strong>so called them “Hu”</strong></li>
    </ul>
  </li>
</ul>

<p><strong>Who are the Hu 胡?</strong></p>

<ul>
  <li>
    <p>general term for foreigners from the north or west. The origin might be related to homophone “beard.”</p>
  </li>
  <li>
    <p>North influences: steppe peoples, Xiongnu, Xianbei, Mongols.</p>
  </li>
  <li>
    <p>West influences: Sogdians, Parthians, Persians, Turkic.</p>

    <ul>
      <li><strong>Sodigans</strong> was an ancient <strong>Iranian</strong> civilization between the Amu Darya and the Syr Darya, and in present-day Uzbekistan, Turkmenistan, Tajikistan, Kazakhstan, and Kyrgyzstan.</li>
      <li>sodigans were quite useful - important <strong>middle-men of Tang and Byzantine empires.</strong></li>
      <li>Sodigans are also <strong>promininet among military</strong> (e.g. soldiers) and merchants in Tang</li>
      <li>hence have a lot of Sogdian figurines: stablemen, soldiers, musicians.</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221006140016892.png" alt="image-20221006140016892" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>those ==Sogdian people also brought a major changes to Chinese music== (and dance)</p>

    <p>| <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221006140105446.png" alt="image-20221006140105446" style="zoom:33%;" /> | <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221006140445166.png" alt="image-20221006140445166" style="zoom:33%;" /> |
| :———————————————————-: | :———————————————————-: |</p>

    <ul>
      <li>pipa was from western asia, but now is a major musical instrument in China</li>
    </ul>
  </li>
  <li>
    <p>before Tang, all chinese sit on the ground with the formal sitting position, but then in Tang people begins to <strong>sit in the chair</strong> (slowly shifts away to a new pose)</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221006140624154.png" alt="image-20221006140624154" style="zoom:33%;" /></p>
  </li>
</ul>

<p><strong>Tang Trade</strong></p>

<ul>
  <li>
    <p>some people say it is buddhist monks <strong>brought chairs in for trade</strong></p>
  </li>
  <li>
    <p>Samarkand-based Sogdiana and Ferghana supplied fine <strong>horses</strong></p>
  </li>
  <li>
    <p>many exotic foods</p>

    <ul>
      <li>from Central Asia: peas, spinach, garlic.</li>
      <li>from Persia: sesame, pistachios.</li>
      <li>from India: black pepper, cane sugar (native sweetener: malt sugar &amp; honey) • from Mediterranean: coriander.</li>
      <li>grape wine available in Chang’an.</li>
      <li>lychee delivered daily from warm southlands for Consort Yang.</li>
    </ul>
  </li>
  <li>
    <p>Tea became a national drink and a major trade item.</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221006141031697.png" alt="image-20221006141031697" style="zoom:33%;" /></p>

    <ul>
      <li>throught the history people had their own “culture” during their time. In Tang, a specialized tea set above</li>
      <li>added ingredients such as salt, citric peel, etc.</li>
    </ul>
  </li>
</ul>

<p><strong>Life of Commoners and Merchants</strong></p>

<ul>
  <li>merchants much well off than commoners, who need to to menial jobs such as maintaingin gardens</li>
  <li>with the “Tale of Li Wa”, which talked about a <strong>high officials family background</strong> young man came for examination $\to$ attracted to Li Wa, a prostitute $\to$ used up all his money and was abandoned $\to$ became a begger, almost died, saved by employees at funeral shop $\to$ became a famous professional mourner $\to$ father found out and beated him almost to death (assuming the status of polluted, inferior person) $\to$ saved by Li Wa $\to$ studied hard and <strong>became a official</strong></li>
  <li>shows that ==flux of social class is not that encouraged==</li>
</ul>

<p><strong>Examinations in Tang</strong></p>

<ul>
  <li>exams are used to recruit men of good character</li>
  <li>therefore, taking examinations = regularly ==visiting examiners and giving them samples of your writing==</li>
  <li>but the good writings = poetry = only those brought up in a good family could be expected to know</li>
  <li>importance of poetry also lead to <strong>explosion in poetry writing</strong></li>
  <li>but it ended still with majority of the court composing people from families of high social status</li>
</ul>

<p><strong>Religion in Tang</strong></p>

<ul>
  <li>
    <p><strong>Buddhist</strong> and <strong>Daosit</strong> are the major players, and <strong>Confucian</strong> central to states, but more patronized Daoism</p>

    <ul>
      <li>Confucianism thought more like “framework”/structure for organizing the governments, e.g. ==train candidates in Confucian classics==.</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221006141208343.png" alt="image-20221006141208343" style="zoom:33%;" /></p>

    <ul>
      <li>more support for Daoism, because imperial famly claimed their origin can be traced back to Laozi</li>
      <li>influnce of Buddism is still everywhere, a lot of monarsteries</li>
    </ul>
  </li>
</ul>

<p><strong>Tang “soft power” and Japan</strong></p>

<ul>
  <li>
    <p>properous of China attracted much foreign countries who also seek to build an empire (e.g. many <strong>Korean and Japanese</strong> in Chang’an)</p>
  </li>
  <li>
    <p>Japanese connection also became much deeper</p>
    <ul>
      <li>Japan rulers were also tring to establish empire, since Tang had been so powerful</li>
      <li>based their policy on Japanese pepole who travelled to China study stuff and taking back to Japan with them, and relied on a lot of Buddhists</li>
      <li>the capital of Nara built in 618, and then <strong>Kyoto built in 794 are smaller versions of Chang’an</strong>: square in shape, geometrically aligned on a north-south axis; grid structure.</li>
      <li>Kimono is from China, and lots of <strong>Tang scriptures are importanted to Japanese</strong> (who has spoken laguage but not written)</li>
    </ul>
  </li>
</ul>

<p><strong>Dynasty Names Adopted as Ethnic Term for Chinese</strong></p>

<ul>
  <li>==Han== mainly used in mainland China
    <ul>
      <li>in 20th century mainland, China’s national ethnicity is constructed and called “Han”</li>
      <li>national language also called “Han language”</li>
    </ul>
  </li>
  <li>==Tang==, more popular used for the Western, e.g. Tangren Jie=China Town
    <ul>
      <li>because first migration was Cantonese speaking diaspora (control of them was solidified during Tang)</li>
      <li>Tang also had a much broader contact with the <strong>rest of the world</strong></li>
    </ul>
  </li>
</ul>

<p><strong>Empress Wu: only woman emperor in China</strong></p>

<ul>
  <li>previous empres are mostly regent, dowager</li>
  <li>personal name ==Wu Zetian==
    <ul>
      <li>regent, 660-690; as the Emperor of Zhou, 690-705</li>
      <li>ruled very capably, but there exists evidence her approach are sometimes ruthless</li>
    </ul>
  </li>
  <li>her real look must be beutiful (praised by emperor), was borned into a wealth family
    <ul>
      <li>encouraged to read and write in family</li>
      <li>married to emperor family</li>
      <li>interesting story of how she came to power, e.g. was concubine of Taizong, but when Taizong died, bore the first child of Gaozong (from whom she took power from), which indicates incest</li>
    </ul>
  </li>
  <li>
    <p>She successfully succeeded the throne largely because lots of officials also supported her, and ==justified by using Buddism==</p>

    <ul>
      <li>a monk wrote a commentary that told of a female goddess (hint at Empress Wu) who would be reborn as a princess in a small kingdom, etc.</li>
    </ul>
  </li>
  <li>later <strong>Xuanzong</strong> made China the most properperous time, but was built by Empress Wu</li>
  <li>but still since Empress = <strong>upset a balance of nature, hence some scholars are still concerned</strong>
    <ul>
      <li>Confucious idea that natural diasters = emperor problem (Dong Zhongshu, a ruler who did not fullfill = nature diaster)</li>
      <li>earth quake happened, and ministers took it as a problem</li>
      <li>hence, some portray her as a ruthless ruler (e.g. because scribes are mane)</li>
    </ul>
  </li>
  <li>
    <p>avent sponsor of Buddhistm, but to user religion in her favor (e.g. justify her throne)</p>
  </li>
  <li>
    <p>in general Tang people had freeodm and under her, <strong>women (tried) to have better freedom</strong></p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221006142234989.png" alt="image-20221006142234989" style="zoom:33%;" /></p>

    <ul>
      <li>e.g. shifts in beauty standards: women on horse also appealing.</li>
    </ul>
  </li>
  <li>
    <p>The importance to history of Wu Zetian’s period of <strong>political and military leadership includes the major expansion of the Chinese empire</strong>, extending it far beyond its previous territorial limits, deep into Central Asia, and engaging in a series of wars on the Korean Peninsula, first allying with Silla against Goguryeo, and then against Silla over the occupation of former Goguryeo territory.</p>
  </li>
  <li>
    <p>other notable changes in value include:</p>

    <ul>
      <li>as <strong>wife</strong>
        <ul>
          <li>main wife but not cocubine</li>
          <li>men have shorter lifespans than women, so the wife often becomes the only head of the household.</li>
        </ul>
      </li>
      <li>as <strong>mother</strong>
        <ul>
          <li>should continue have influence even when sons become adults</li>
          <li>cocubine is lower in status, hence concubine’s son should regard main wife as mother</li>
        </ul>
      </li>
      <li>as <strong>clan advodate</strong>:
        <ul>
          <li>encouraged women’s position in government, but still install family males to most positions especially to military</li>
          <li>this is anyway too big of a change for a complete equality of gender here</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<blockquote>
  <p><strong>Interesting Note</strong> from primary sources:</p>

  <ul>
    <li>Emperor Taizong’s advice on effective government: land is large, need cooperation = give relatives land. Zhou is a successful model lasted several centuries
      <ul>
        <li>Qin had zero relatives to rely on (Li Si’s plan) hence failed</li>
        <li>Han enfeoffed the land too generously: the Six Kingds harbored ambitions of overthrowing throne</li>
        <li>so the best way is to enfeoff many relatives to even up their power and to have them regulate one another and share responsibilities</li>
        <li>and for government officials: 适才所用</li>
        <li>military cannot be eliminated nor used all the time</li>
        <li>emphasis of literary arts and military arts</li>
      </ul>
    </li>
  </ul>
</blockquote>

<h2 id="the-decline-of-tang">The Decline of Tang</h2>

<p><strong>Previously on Sui and Tang</strong></p>

<ul>
  <li>
    <p>Sui-Tang continuity: Tang was a successor to the Sui and Northern Dynasties</p>
  </li>
  <li>
    <p>Three features of Tang culture (mostly elite)</p>

    <ul>
      <li>
        <p>cosmopolitanism: ethnic diversity, Tang ruling family (Li) as a classic example</p>
      </li>
      <li>
        <p>importance of military pursuits and military cultures to elite identity; a more militarized society than later period</p>
      </li>
      <li>
        <p>aristocracy remained dominant in government (the system of examination is only fully utilized for social flux at Song Dynasty)</p>
      </li>
    </ul>
  </li>
  <li>Tang Empire (618-907) marks <strong>culmination of the turn toward Central Asia</strong> that began in the Han Dynasty, and continued through age of disunity. Tang military institutions, urban culture, silk road trade and religious life look westward
    <ul>
      <li>however, in Late Tang due to much political disunity they withdrawn their troops and lost most of the control in Central Asia</li>
    </ul>
  </li>
  <li>Emperor Wu Zetian is the only woman to rule under her own name; powerful and competent (some ruthless approaches), expanded empire, but disparaged by later generations because she is a woman</li>
</ul>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221011132556798.png" alt="image-20221011132556798" style="zoom: 50%;" /></p>

<p><strong>Emperor Xuanzong: the peak of the Tang</strong></p>

<ul>
  <li>
    <p><strong>Emperor Xuanzong:</strong> early half of his reign: astute ruler, the empire expanded to the high point; patronage of the arts (especially poets)</p>

    <ul>
      <li>Empress Wu had his daughter tried to poison her, trying to become the next empress. So there were some instability, but Emperor Xuanzong made it</li>
      <li>recall that Empress Wu had a lot of her family relatives in government posts, and sponsored a lot of Buddhism, e.g. claimed that she is the incarnation of Bodhisattva. Emperor Xuanzong tried to <strong>redress/reform</strong> those
        <ul>
          <li>he also reformed Equal-Field system due tax problems encountered during their time</li>
        </ul>
      </li>
      <li>there were also threats from the Turks, Tibetans, so he restructured military system and give commanders great authority (among them he particularly gave <strong>An Lushan much power</strong>)</li>
    </ul>
  </li>
  <li>
    <p>change of women’s clothing, don’t reveal shoulders or backs</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221011132658550.png" alt="image-20221011132658550" style="zoom:33%;" /></p>

    <p>yet this type of dress (rightest) is not for commoners, and it is more popular for them to wear men’s clothing = meaning more physical mobility. An example below are all women:</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221011132739433.png" alt="image-20221011132739433" style="zoom:33%;" /></p>

    <p>hence this tells something about the change of attitudes towards women</p>

    <ul>
      <li>
        <p>==freedom of women wearing riding trousers with faces uncovered==, where as in later centuries women of equivalent status would always be veiled, ear robes, and ==be restricted to sedan chairs (Song dynasty)==</p>
      </li>
      <li>
        <p>but unfortunately due to decline of Tang later, it reverted to conversative clothing</p>
      </li>
    </ul>
  </li>
  <li>
    <p>however, at late ages had some problem. He fell in love with Prized-Consort Yang杨贵妃, and gave too much power to her</p>

    <ul>
      <li>falling in love with 杨贵妃, who lacked political sense, even when he is 60</li>
      <li>gave too much power to Yang and her relatives, so they almost monolpolized the government</li>
      <li>basically becomes a femme fatale</li>
      <li>
        <p>An Lushan liked by Emperor, but relative from Yang’s family disliked his power, so ==arrested and executed An Lushan’s supporters in court==</p>
      </li>
      <li>this oral history and gossip recorded in Bai Juyi’s “A Song of Unending Sorrow”</li>
    </ul>
  </li>
  <li>
    <p>however, Yang did show us the standard of beauty at that time is to be a little bit chubby</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221011134021391.png" alt="image-20221011134021391" style="zoom: 33%;" /></p>
  </li>
</ul>

<p><strong>Battle at Talas</strong>: in modern Khazakhstan</p>

<ul>
  <li>suprised by the sudden defection of China’s tribal allies, the Chinese <strong>lost the battle to the Islamic Abbasid caliphate</strong></li>
  <li>marked the beginning when ==region of Central Asia turned away from China towards the Islamic world==</li>
</ul>

<p><strong>General An Lushan’s rebellion (755)</strong></p>

<ul>
  <li>
    <p>recall that Yang Guozhong (cousin of Prized-Consort Yang, chief minister) began to purge members of General An Lushan’s faction due to Yang’s relative’s dominance in court</p>
  </li>
  <li>
    <p>also at that time, due to malfunctioning of equal-field system, ==state relies on soldiers from alien tribes instead of collected from each field==</p>

    <ul>
      <li>problem 1), they <strong>don’t pledge alliance to Tang</strong></li>
      <li>problem 2), they become <strong>long-lasting</strong>, whereas equal-field collected soldiers will go back home</li>
      <li>problem 3), An Lushan was also particularly powerful due to prior likings of Emperor Xuanzong</li>
    </ul>
  </li>
  <li>
    <p>General An Lushan:</p>

    <ul>
      <li>commanded two large frontier armies in the northeast, in modern-day Beijing.</li>
      <li>father was Turkish; mother was Sogdian.</li>
      <li>alarmed that his supporters at court were being arrested and executed.</li>
      <li>==in 755, leads an army of 150K troops towards the capital cities==.</li>
      <li>he first captures Luoyang, the ‘eastern capital’ on the edge of the plains.</li>
      <li>from Luoyang, the fortified Tong Pass blocked westward passage to Chang’an.</li>
      <li>but Yang Guozhong pressed imperial forces to leave the Pass and do battle—and were destroyed by An Lushan. - <strong>frontier troops were professional, war veterans</strong>; capital troops, unseasoned.</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221011134349910.png" alt="image-20221011134349910" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>as a result, Emperor Xuanzong flees from Chang’an to Chengdu (modern-day Sichuan), and eventually abdicates the thrown to his son.</p>

    <ul>
      <li>note that Chengdu is also the capital of Shu, and hence “The road to Shu is steep” from Li Bai is relevant</li>
    </ul>
  </li>
</ul>

<p><strong>Consequences of this rebellion</strong>? A major turning point for Tang: decline of Tang stability</p>

<ul>
  <li>Tang’s forces in central asia has to be recalled for rescue. ==Tibetan Empire and Muslim Caliphate== are also encroaching those areas, so a retreat made Tang a lost of control there, which eventually caused the lost of control of the Silk Road
    <ul>
      <li>Xinjiang ceded to Tibetan empire and Muslim Caliphate</li>
      <li>central asia then changed from Buddhism to Islam</li>
      <li>cut-off from horse supplies due to lost of Silk Road</li>
      <li>became less cosmopolitan in western eyes</li>
      <li>without this buffer zone frontier, capial Changan is more exposed to incursion</li>
    </ul>
  </li>
  <li>rise of regional warlordism: to quell the rebellion, Xuanzong <strong>gave a lot of power for regional governors</strong>.
    <ul>
      <li>then those regional governments <strong>later</strong> made themselves <strong>autonomous</strong>, hence results in political chaos</li>
      <li>but also caused an even further increase in local military knowledge</li>
    </ul>
  </li>
  <li>rebellion resulted from, caused, or simply coincided with
    <ul>
      <li><strong>collapse of the equal-field system</strong> (for collecting tax revenue)
        <ul>
          <li>during quenching rebellions, system of household registration collapsed = does not know how many residents are there = cannot collect tax</li>
          <li>because there is a shortage of land (due to population increase, aristocrats gathered too much land). Government cannot raise enough revenue.</li>
          <li>lost hold of household registrar = ==lost direct control of the people==! Then then had to rely on regional governments to report those numbers, which never works out.</li>
        </ul>
      </li>
      <li><strong>collapse of the militia system</strong>, since no money, hence has to relie on ==foreign solders== who pledged alligence to comamnder bu tnot dynasty</li>
    </ul>
  </li>
  <li>all of those contributed to the collapse of the down fall of Tang</li>
  <li>this is also a period of time hard for ordinary people to survive, e.g. as deadly as first world war
    <ul>
      <li>as the battle happed in the capital, Du Fu and his family fled. This also becomes a major turning point in Du Fu’s life</li>
    </ul>
  </li>
</ul>

<p><strong>Poetry: Li Bai and Du Fu</strong></p>

<ul>
  <li>
    <p>they are friends but differ greatly in work. Li Bai write about nature, especially wine, but ==Du Fu is more for his social consciousness== (e.g. events happening at Tang)</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221011135256440.png" alt="image-20221011135256440" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>the rebellion was also a turning point of Du Fu</p>

    <ul>
      <li>no longer a confident scholar, but become an ordinary person, hence his <strong>writing style becomes much heavier and realistic</strong></li>
      <li>became a helpless pawn, and wanted to write the things he wanted to say (<em>春望</em>: 国破山河在, …)</li>
    </ul>
  </li>
</ul>

<p><strong>Change of Territory</strong></p>

<ul>
  <li>
    <p>Tang is the first dynasty where knowledge of the outside world is really accessible for China commoners lives (e.g. in west markets, and pilgrim, merchants, caravans have been traveling back and forth). Before in Zhou dynasties, and even in Tang, those knowledges are mostly exclusive to the court</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221011140358147.png" alt="image-20221011140358147" style="zoom:33%;" /></p>

    <p>but now, China can no longer see himself as the only civilized nation (e.g. Zhou King once said the others are barbarians). Several other great civilizations exist, for the control of Central Asia trade routes</p>
  </li>
  <li>
    <p>Muhhamad preaches ==Islam==</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221011140615505.png" alt="image-20221011140615505" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>==Arab Caliphate== v.s. Tang, wanted Tang’s submission</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221011140727895.png" alt="image-20221011140727895" style="zoom:33%;" /></p>

    <p>which was before An Lushan, where Tang had some initial success but suffered a decisive defeat shortly before An Lushan Rebellion.</p>

    <ul>
      <li>
        <p>Defeat = those Chinese painters, craftsmen are taken as prisoners in Caliphate  = introduction of paper making and gave technology away</p>
      </li>
      <li>people argue that this also marks the end of Tang’s west expansion</li>
      <li>sooner or later Islam also spread in thos area</li>
    </ul>
  </li>
  <li>
    <p>another force was ==Tibetan Empire== in the mid-7th century</p>

    <p>| <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221011141035756.png" alt="image-20221011141035756" style="zoom:33%;" /> | <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221011141316127.png" alt="image-20221011141316127" style="zoom: 33%;" /> |
| :———————————————————-: | :———————————————————-: |</p>

    <p>the birth of this Empire comes from Songtsen Gampo, lead to organized state and powers</p>

    <ul>
      <li>Tang wanted a peaceful relation, hence had consort sent to Tibetan King, and made alliance with Tibet</li>
      <li>this princess is said to bring agricultural technologies, and to introduce Buddhism</li>
      <li>later, Songtsen Gampo also married a Nepal princess, who had their own version of Buddhism</li>
      <li>after Songtsen Gampo, (esoteric) Buddhism became Tibet’s religion, but very differnt from Buddhism in China</li>
    </ul>

    <p>even though there are some peaceful times, it eventually deteriorated. So after An Lushan, <strong>Tibetan Empire recaptured the land and tried to press on deeper in China</strong></p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221011141657620.png" alt="image-20221011141657620" style="zoom: 50%;" /></p>

    <p>this also caused the direct routes for Silk Road is no longer at Chinese hands</p>
  </li>
</ul>

<p><strong>Examination System In Late Tang</strong>: Bai Juyi</p>

<ul>
  <li>even after all those territorial changes, the system of examination stayed basically the same as in Early Tang</li>
  <li>exams tested on
    <ul>
      <li>classics and literary ability/merit: write essays on a given topic</li>
      <li>==social ability: establish good relations with examiners==
        <ul>
          <li>sons of powerful official families often given high scores, hence still mostly elite families in offices</li>
          <li><strong>In 800, for once the exam is just based on merit, and Bai Juyi passed</strong></li>
          <li>a different structure in Song</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><strong>The Rise of Eunuchs</strong></p>

<ul>
  <li>usually eunuchs are for serving women’s quarters (guard the women’s living areas), and some for messengers and some for spies on military commanders</li>
  <li>but after An Lushan’s rebellion, they began to
    <ul>
      <li>gain control of the emperor’s personal army</li>
      <li>placing adopted sons into different offices, and forming factions with each other</li>
      <li>==hence eventually obtained high positions and controls==</li>
    </ul>
  </li>
  <li>over the ninth century, there are eight more changes of emperor where each accession was <strong>engineered by eunuchs</strong> working in concert with political factions
    <ul>
      <li>hence, life at court such as Bai Juyi depended a lot on <strong>which faction is in current power</strong></li>
    </ul>
  </li>
</ul>

<p><strong>Mogao Caves and Dunhuang Library</strong></p>

<ul>
  <li>The ‘Caves of the Thousand Buddhas’ (Qianfodong), also known as ==Mogao==, are a ==magnificent treasure trove of Buddhist art==. They are located in the desert, about 15 miles south-east of the town of Dunhuang
    <ul>
      <li>By the late fourth century, the area had become a busy desert crossroads on the caravan routes of the Silk Road linking China and the West. Traders, pilgrims, and other travelers <strong>stopped at the oasis town to secure provisions, pray</strong> for the journey ahead or give thanks for their survival.</li>
    </ul>
  </li>
  <li>
    <p>adjacent to one of the caves was the <strong>hidden Dunhuang Library</strong> discovered by Daoist Wang: a secret library of 40,000 documents was discovered inside cave #16 by Wang Yuanlu. The library is referred to as cave #17</p>

    <ul>
      <li>almost half of the text where Buddhist text in Chinese or Tibetan</li>
      <li>first time purely ==original documents not for public use== (compared to books written after the fact) to reveal the real life - religious and civil in Tang.</li>
      <li>but because papers are ==recycled, the margins and backs display all kinds of documents==, including literacy work, contracts, government documents, etc.</li>
    </ul>
  </li>
  <li>
    <p>some civil and religious life revealed include</p>

    <ul>
      <li>
        <p>During the thousand years of artistic activity at Dunhuang, the <strong>style of the wall paintings</strong> and sculptures changed. The early caves show greater Indian and Western influence, while during the Tang dynasty (618–906 C.E.) the influence of the Chinese painting styles of the imperial court is apparent.</p>
      </li>
      <li>
        <p>donor portraits with <strong>Xianbei ethnic feature</strong></p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221013215226656.png" alt="image-20221013215226656" style="zoom:33%;" /></p>
      </li>
      <li>
        <p><strong>monasteries at Dunhuang</strong> also ran a variety of money-making enterprises, including oil presses</p>
      </li>
      <li>
        <p>Sodigan letters, Irq Bitig (8th-9th c), the only Old Turkic manuscript partially overwritten with Buddhist verses in Chinese</p>
      </li>
    </ul>
  </li>
</ul>

<p><strong>The Beginning of Printing</strong></p>

<ul>
  <li>
    <p>the first printed book found in Dunhang library cave.</p>
  </li>
  <li>
    <p>during Tang there were a high demand for texts (e.g. religions), hence lead to invention of woodblock printing, and later in Song 活体印刷</p>

    <p>| <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221011142335264.png" alt="image-20221011142335264" style="zoom: 33%;" /> | <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221011142345272.png" alt="image-20221011142345272" style="zoom: 33%;" /> |
| :———————————————————-: | :———————————————————-: |</p>

    <p>where the problem with the old technique is that if you made a mistake, the whole mold is useless</p>
  </li>
</ul>

<p><strong>Persecution of Buddhism</strong> (840 - 846)</p>

<ul>
  <li>many aristocrats were using land as Buddhism temples to <strong>evade tax</strong></li>
  <li>but also a lot of conflict between Buddhism v.s. Daoism and Confucianism</li>
  <li>at the end of Tang <strong>persecution of Buddhism provoked by Daoist</strong>, but also <strong>rationalized by Confucians</strong>
    <ul>
      <li>sees those temples asked commoners to buy weird goods and donate money while <strong>undermining tax revenues</strong></li>
      <li>see Buddhism to undermine family ties, give up your own responsibility and become a monk, hence violates Confucians ideal</li>
      <li>during (840-846), also as emperor favored Daoist, Buddhism was persecuted =  lots of monks and nuns have to be returned to their normal social status</li>
      <li>while Buddhism did not diminish, <strong>their impact in China never rose again to the peak in early times</strong></li>
    </ul>
  </li>
</ul>

<p><strong>Huang Chao Rebellion</strong></p>

<ul>
  <li>
    <p>ruined Chang’an, never again as China’s capital</p>
  </li>
  <li>
    <p>put an end to high aristocracy in court by ==targeting the aristocrats of Tang==</p>
  </li>
  <li>
    <p>contributed to the fall of Tang in 907, and the distribution of power in China after the rebellion becomes</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221011165258535.png" alt="image-20221011165258535" style="zoom: 50%;" /></p>
  </li>
</ul>

<h1 id="song-960-1276">Song (960-1276)</h1>

<p><strong>Previous only the downfall of Tang</strong></p>

<ul>
  <li>Tang critically weakened by the An Lushan rebellion (755-63), allegedly caused by intrigue surrounding the Precious Consort Yang, Tang dynasty enters decline
    <ul>
      <li>retreat of forces in Central Asia lost control of it</li>
    </ul>
  </li>
  <li>Eurasian Empires in the 8th century: Tang, Tibetans, Muslims, Uyghur-Turks
    <ul>
      <li><strong>Tibetan Empire</strong>: Songtsen Gampo, Princess Wencheng. Eventually took over the Hexi corridor which is critical for Tang’s access to Central Asia</li>
      <li><strong>Abbasid Empire (Muslims)</strong>: the Battle of Talas (751) between the Tang and Abbasids, signals ==Tang loss of control over silk road and central Asia==</li>
    </ul>
  </li>
  <li>The <strong>Mogao Caves</strong> in Dunhuang: provide an abundance of vivid materials depicting Buddhist arts, religion, culture (4th-14th c), the largest body of Buddhist art in China; the <strong>library</strong> found there includes many secular texts that tell about politics, economics, ethnic relations of the local society in western China.</li>
  <li>Persecution of Buddhism: an example of conflicts between religion and state
    <ul>
      <li>Buddhist monasteries before operated oils, loans, banking services, and hold a large land being tax-exempted</li>
      <li>hence the central government became annoyed especially when they don’t have enough tax revenue</li>
      <li>Buddhism survived the persecution, but never reached its peak status as in Tang until today</li>
    </ul>
  </li>
  <li>Regional ==rise of warlords in late Tang== (just like the final breakup in the Han dynasty)
    <ul>
      <li>government became decentralized during rebellion, and many elites fleed and clustered in Chang’an and Luoyang.</li>
      <li>then those elites are obliterated/almost compteletly wiped out during <strong>Huang Chao Rebellion</strong></li>
      <li>hence a period of disunion in 907 - 960, and the Wei river valley, ==Chang’an + Luoyang never again reach their prosper in the past==</li>
      <li>therefore, this removal of stale upper-class aristocrats also <strong>contributed to the success of the civil service exam</strong> in Song = really based on merit = based on your ability to read, understanding Confucian classics</li>
    </ul>
  </li>
</ul>

<h2 id="an-early-modernity-in-song">An Early Modernity in Song</h2>

<p><strong>China’s Population throughout History</strong></p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221013132228281.png" alt="image-20221013132228281" style="zoom: 33%;" /></p>

<ul>
  <li>
    <p>inability of government in Tang might not mean bad economy. In fact, late Tang stimulated economy: rise of population, almost doubled even during Tang decline</p>
  </li>
  <li>
    <p>also a significant <strong>shift of population from north to south</strong>.</p>

    <ul>
      <li>Before North:South population is 2:1 in Early Tang</li>
      <li>After An Lushan Rebellion 1:1</li>
      <li>In Southern Song 1:2, when their capital in Kaifeng is sacked</li>
    </ul>
  </li>
  <li>
    <p>late Tang also have lots of <strong>technological developments, such as paddle-wheel Ship and Woodblock Printing</strong></p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221013132427835.png" alt="image-20221013132427835" style="zoom:50%;" /></p>
  </li>
</ul>

<p><strong>Song Territory</strong></p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221013132547104.png" alt="image-20221013132547104" style="zoom: 50%;" /></p>

<ul>
  <li>Song’s territory is the smallest among all of Tang, Song, Yuan, Ming, Qing</li>
  <li>also divided in two periods.
    <ul>
      <li>Early/Northern Song rules both north and south, including Kaifeng</li>
      <li>Late/Southern Song rules only capital at Hangzhou (Kaifeng is sacked by the northern enemies, i.e. the <strong>Jurchen forces</strong>)</li>
    </ul>
  </li>
  <li>but Song in general have a ==modern economy== being industrialized and monetized</li>
</ul>

<p><strong>Agricultural Leap in Song</strong>: factors contributing to rise/improvement in agriculture</p>

<ul>
  <li>
    <p>new strains of rice from Champa/Vietnam = more rice yield as it can harvest twice a year</p>
  </li>
  <li>
    <p>mass iron production for plows and farm tools</p>
  </li>
  <li>
    <p>mobilization of bio-power (human and animal labor inputs).</p>
  </li>
  <li>
    <p>improved, intensive farming techniques of rice plots.</p>

    <ul>
      <li>wider application of fertilizers</li>
    </ul>
  </li>
  <li>
    <p>dikes, canals to convert wetlands to farmland.</p>
  </li>
  <li>
    <p>==advances in water/irrigation control==, including pump and water mills</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Pump</th>
          <th style="text-align: center">Mill</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221013133119636.png" alt="image-20221013133119636" style="zoom:33%;" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221013133217766.png" alt="image-20221013133217766" style="zoom:33%;" /></td>
        </tr>
      </tbody>
    </table>

    <p>hence families can get more rice then needed = can sell the rest and exchange goods</p>
  </li>
  <li>
    <p>as a result, population doubles to 120 million, from 60-65 million in Tang</p>
  </li>
</ul>

<p><strong>Commericial Modernization in Song</strong></p>

<ul>
  <li>
    <p>new/more agriculture techniques + invention means more <strong>specialization</strong></p>

    <ul>
      <li>
        <p>peasants can just ==exchange== for other goods instead of trying to produce it themselves</p>
      </li>
      <li>
        <p>in late Song cottons=cash crop</p>
      </li>
    </ul>
  </li>
  <li>
    <p>as compared to regulated trades in Chang’an in Tang, in early Song, <strong>merchants and shops are spread out in town to intermix with residence</strong></p>

    <ul>
      <li>some even had the stock system = manager+owner of business</li>
      <li><strong>credit systems</strong> adopted by traders</li>
      <li>an increase of ==people in middle class==</li>
    </ul>
  </li>
  <li>
    <p>==encouraged maritime trade== (as compared to Tang), due to cut off of silk road</p>

    <ul>
      <li>
        <p>encourage foreign traders to come to China as well</p>
      </li>
      <li>
        <p>to achieve maritime trade, needs improved ship technologies</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221013133731794.png" alt="image-20221013133731794" style="zoom:33%;" /></p>

        <p>as well as the ==invention of compass==</p>
      </li>
    </ul>
  </li>
  <li>
    <p>as trade increase, <strong>demands of money increased</strong>. In addition, silk was also used as currency</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221013134014492.png" alt="image-20221013134014492" style="zoom:33%;" /></p>

    <p>the largest output in Tang was 320 million coins a year. But in late Song, government maintains <strong>more than 6 billion coins</strong>. But there was still not enough, as there is still no inflation.</p>

    <ul>
      <li>government requires more money in circulation</li>
      <li>demand has been so great and hence <strong>issued the first paper money</strong>, which can be created out of nothing</li>
    </ul>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Paper Money</th>
          <th style="text-align: center">Government Logistics</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221013134255718.png" alt="image-20221013134255718" style="zoom:50%;" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221013134353502.png" alt="image-20221013134353502" style="zoom:50%;" /></td>
        </tr>
      </tbody>
    </table>

    <p>hence <strong>Song’s economic change to China is almost revolutionary</strong></p>
  </li>
</ul>

<p><strong>Wang Anshi vs. Sima Guang</strong></p>

<ul>
  <li>
    <p>despite overall economic boom, <strong>some farmers still suffer</strong> from interest rates and tax</p>
  </li>
  <li>
    <p>The Emperor Shenzong of Song faced <strong>declining taxes and an increasingly heavy burden of taxation on commoners</strong> due to the development of large estates, whose owners managed to evade paying their share of taxes.</p>

    <ul>
      <li>Therefore, he sought for advices, and comes Wang Anshi</li>
    </ul>
  </li>
  <li>
    <p>Wang’s primary objectives of New Policies (<em>xinfa</em>) were</p>

    <ul>
      <li>cut government expenditure and ==strengthen the military in the north== (which requires funds)</li>
      <li>To do this, Wang advocated for policies intended to ==alleviate suffering among the peasantry== and to ==prevent the consolidation of large land estates== which would deprive small peasants of their livelihood = aimed to help improve the wealth gap</li>
      <li>in reality, his policies is <strong>effectively the last effort by Song government to control the economy</strong> = last strand</li>
      <li>but this ==failed== because the local officials implemented this policy were rewarded for how much loans they gave out $\to$ local officials benefited more than the farmers</li>
    </ul>
  </li>
  <li>
    <p>Specifically, his policies include:</p>

    <ul>
      <li>fixing fiscal policy: <strong>Green Sprout reform</strong>, which give peasants money in the beginning and ask for repay with 40% interest at harvest time (so they don’t need to rent from landlords)</li>
      <li>schemes of transporting money</li>
      <li>pumped more currency into the economy</li>
    </ul>

    <p>recevied initial success but failed in the end</p>
  </li>
  <li>
    <p>Sima Guang (not related to Sima Qian) is one guy opposing Wang’s policy: wanted incremental reform instead of all processes done at once = too fast</p>

    <ul>
      <li>Wang Anshi almost like Legalist, as he is <strong>making state intervening deeply to people</strong>, hence denounced as un-Confucian</li>
      <li>Wang Anshi therefore needed more support in court = reformed civil exam system to teach his thoughts</li>
      <li>further exacerbated the problem</li>
    </ul>
  </li>
</ul>

<p><strong>Organization in Song</strong>: Idealized urban life</p>

<ul>
  <li>
    <p>Qingming scroll, idealized urban life in Kaifeng (debatable), but anyway <strong>exemplifies Song’s rigor and commerce</strong></p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Full Scroll</th>
          <th style="text-align: center">Center Piece</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221013135132538.png" alt="image-20221013135132538" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221013135141379.png" alt="image-20221013135141379" /></td>
        </tr>
      </tbody>
    </table>

    <p>notice the overall city structure is very different than Tang: symmetrical + structure, but Song = more organic. This hints at the difference between Tang and Song: Song is moving away from society full of aristocracy to <strong>more middle class based</strong> society, hence different city layout, etc.</p>
  </li>
  <li>
    <p>transportation in Song: important people on horse backs and in caravan</p>

    <p>| <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221013140017927.png" alt="image-20221013140017927" style="zoom:50%;" /> | <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221013140025275.png" alt="image-20221013140025275" style="zoom:50%;" /> |
| :———————————————————-: | :———————————————————-: |</p>
  </li>
  <li>
    <p>but notice the lack of female figures in the scroll: if this were Tang’s time, women on streets with beautiful dresses, ==why such changes==?</p>

    <ul>
      <li>recall that Empress Wu tried to improve women’s status, and during Emperor Xuanzong women can come out homes and wear men clothes</li>
      <li>but in Song, there is
        <ul>
          <li>commercialization=market economy, so that with coinage + paper money $\to$ women <strong>became commodified again</strong> (e.g. prostitutes, sold daughters, etc)</li>
          <li><strong>foot binding in Song</strong>, women having small feet = standard of beauty = object of sexual desire, because this means it feet becomes a ==private part of body== only seen by herself and husband
            <ul>
              <li>correlates with the growth of Song’s commercialization, and that families sell daughters + people kidnap women</li>
              <li>women transformed into commodities who were bought and sold on the basis of appearance</li>
              <li>women of good families compete with women with bound feet, hence 卷起来了</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>however, in general women do exert greater autonomy at home by handling the household estate as men die earlier</li>
    </ul>
  </li>
  <li>
    <p>some unrealistic aspects of the scroll is</p>

    <ul>
      <li>notice that there is no trash on street</li>
      <li>no fire stations, weird because lots of houses should be made of wood</li>
      <li>another modern visualization from some text include</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221013140223138.png" alt="image-20221013140223138" style="zoom:50%;" /></p>

    <p>notice a fire station and soldiers repairing canal</p>
  </li>
</ul>

<p><strong>Capital at Hangzhou</strong>: south already contained a lot of population but then with capital shifted to Hangzhou in late Song, living in south becomes popular</p>

<ul>
  <li>recall that in Late Song, Kaifeng is sacked, so people moved to Hanzhou</li>
  <li>since Late Tang people are migrating, but recall that
    <ul>
      <li>south was hard to irrigate = solved by building canals</li>
      <li>north much exposed to steppe culture, and to the northern enemies, hence much more chaos = less preferred eventually</li>
    </ul>
  </li>
</ul>

<p>| <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221013140442737.png" alt="image-20221013140442737" style="zoom:33%;" /> | <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221013140431572.png" alt="image-20221013140431572" style="zoom: 33%;" /> |
| :———————————————————-: | :———————————————————-: |</p>

<p><strong>Urbanization in Song</strong></p>

<ul>
  <li>
    <p>as advancement in agriculture = food surplus = people can have other occupations</p>
  </li>
  <li>movement of both people and good into cities
    <ul>
      <li>both Kaifeng and Hangzhou were linked by the Grand Canal (built in Sui)</li>
      <li>both Kaifeng and Hangzhou had population reaching at least 1 million</li>
    </ul>
  </li>
  <li>
    <p>in mid Song, 5% population already urban</p>
  </li>
  <li>
    <p>however, this raid commercialization can have ==adverse effect on government==</p>

    <ul>
      <li>technology advancement so fast that government cannot keep up with it</li>
      <li>e.g. in Tang, a small elite group in government is easy to control. But now in Song there is an emerging elite class/middle class with new found wealth = push <strong>against the centralized control Tang had</strong></li>
      <li>this diffusion of “resources” also relates to the <strong>“laicization” of Song religion</strong>. Practicing religion becomes shifted away from institution but more towards individual activities any lay people can do, e.g. building their own shrines
        <ul>
          <li>very similar diffusion of governmental control, so it now the religious institutions</li>
        </ul>
      </li>
    </ul>

    <p>therefore, the general theme of rising middle class and a ==”anti-centralization” of resources as compared to Tang is also a distinct factor in Song==</p>
  </li>
</ul>

<p><strong>New Elite: Scholar-Officials</strong> (<em>shi</em>士, or <em>shidafu</em>士大夫)</p>

<ul>
  <li>
    <p>recall that <em>shi</em> was in Zhou as mlitary people</p>

    <ul>
      <li>In the first half of the Chunqiu period, the feudal system was a stratified society, divided into ranks as follows: the ruler of a state; the feudal lords who served at the ruler’s court as ministers; the <strong>shi (roughly translated as “gentlemen”)</strong> who served at the households of the feudal lords as <strong>stewards, sheriffs, or simply warriors</strong>; and, finally, the commoners and slaves.</li>
      <li>In Warring States period, they become more specialized forces (e.g. in defense) that includes people of humble origin (climbed up by education)</li>
      <li><em>shi</em> in Han = Confucian scholars, but <em>shi</em> still dominated by aristocrats since Han officials are appointed by local recommendations. However, there is a shift towards <strong>more literal skills</strong>/non-military such as poetry.</li>
    </ul>
  </li>
  <li>
    <p>in Song, <em>shi</em> are <strong>scholar-officials certified through the civil service exams</strong></p>

    <ul>
      <li>this new civil service exam ==aims to guarantee that elite families cannot simply occupy government==</li>
      <li>success in exam = prestige in family. If passed the highest level become <em>jinshi</em></li>
      <li>without passing exam, you will just be officials of low rank</li>
      <li>therefore became very competitive, 400,000 people taking but government post is very limited</li>
      <li>firs time in China history that <strong>ended large dominance of northerners in the officialdom</strong> (e.g. since Sui and Tang, a lot of prestigious family members have mixture of northern roots and are in the government)
        <ul>
          <li>recall that Sui and Tang has a lot officials still from north + exam system are initial and social status are very fixed</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>the exam curricululm includes (ultimiate aim is for governing)</p>

    <ul>
      <li>elementary education: Analects, Classics of Filia Devotion</li>
      <li>ancillary exams, such as math and legal codes</li>
      <li><strong>core content: classics and history</strong>
        <ul>
          <li>write eesays on policy (chief examiners can take people who side with their positions)</li>
        </ul>
      </li>
      <li>poetry composition
        <ul>
          <li>ability to allude to historical events and personages</li>
          <li>easily gradable as it is standarized/ryhmed, etc.</li>
        </ul>
      </li>
      <li>hence a candidate needs to memorize a lot of classics: (word count)</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221013141330999.png" alt="image-20221013141330999" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>recall that Tang candidates know their examiners, but ==Song insist on the anonymity of candidates==</p>

    <ul>
      <li>candidates writing will be re-copied by clerks to remove hand-writings styles</li>
      <li>no consideration of personality of candidate, e.g. as in Tang, and hence a very restricted version of merit</li>
    </ul>
  </li>
  <li>
    <p>more state and local academies are built in Song, and increased literacy made this exam popular and hence work</p>
  </li>
  <li>
    <p>the ==scholar-official (<em>shi</em>) class came to be defined by classical education and scholarly activities==</p>
  </li>
  <li>
    <p>supported also a <strong>thriving market for books, art, and connoisseur cultures</strong>. Therefore the invention of movable printing enable this remarkable demand</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221013141800645.png" alt="image-20221013141800645" style="zoom:33%;" /></p>
  </li>
</ul>

<h2 id="cultural-and-intellectual-changes-in-the-song">Cultural and Intellectual Changes in the Song</h2>

<p><strong>Previously on the Song</strong></p>

<ul>
  <li>
    <p>The Tang-Song transition sees a major shift of China’s population centers and economic activity southward. Population doubles, rapid <strong>urbanization</strong>, more trade (emphasis on the maritime)</p>
  </li>
  <li>
    <p>Social change ushers the Song <strong>commercial revolution</strong>. Trade facilitated by <strong>paper currency</strong> (technology of printing) and technological innovations in agriculture, water transport, and metallurgy.</p>

    <ul>
      <li>
        <p>key innovations: paper money and woodblock printing</p>
      </li>
      <li>
        <p>increased agriculture output = farmers produce more than they need = can specialize and trade</p>
      </li>
    </ul>
  </li>
  <li>Wang Anshi’s <strong>new policies</strong>: set of interventionist political-economic reforms designed to improve rural welfare, solidify tax base, etc. But meets Confucian opposition because implementations are legalists
    <ul>
      <li>Qingming scroll aims to depict idealized life at Kaifeng, but we know that benefits did not apply to everyone.</li>
    </ul>
  </li>
  <li><strong>Civil service exams</strong> create a new bureaucracy and a new scholar-elite <em>shi</em> class as compared to before</li>
</ul>

<p><strong>Crisis on the frontier: Tanguts, Khitans, Jurchens</strong></p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018132234600.png" alt="image-20221018132234600" style="zoom: 50%;" /></p>

<ul>
  <li>the policies from Wang was also to cover the spending to military
    <ul>
      <li>recall that Tuoba clan of the Xianbei during Six dynasties had a large army</li>
      <li>Tang recruited soldiers to push out China’s border, but in Song times, progressively more northern land is conquered. Specifically the Khitan, Liao, and Jurjan Jin, and Tanguts (Xi Xia).</li>
      <li>Eventually ==Yuan== ruled over: Yuan was a <strong>Mongol-led</strong> imperial dynasty of China</li>
    </ul>
  </li>
</ul>

<p><strong>Tanguts and China</strong></p>

<ul>
  <li>
    <p>Tanguts (people of Tibetan origin) after Tibetan fell apart, took Hexi corridor which is critical for the path to Central Asia</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Tanguts v.s. China</th>
          <th style="text-align: center">Horse Farm, Hexi Corridor</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018132606077.png" alt="image-20221018132606077" style="zoom: 33%;" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018153346036.png" alt="image-20221018153346036" style="zoom:33%;" /></td>
        </tr>
      </tbody>
    </table>

    <p>however</p>

    <ul>
      <li>has no official history because Mongol attempted to genocide the Tanguts in 1227, hence most of their text and architectures are gone</li>
      <li>Tanguts had a lot of heavy calvary</li>
    </ul>
  </li>
  <li>
    <p>Xi Xia (Tanguts) people look lie</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Costumes</th>
          <th style="text-align: center">Scripts</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018133021480.png" alt="image-20221018133021480" style="zoom:33%;" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018133140857.png" alt="image-20221018133140857" style="zoom: 33%;" /></td>
        </tr>
      </tbody>
    </table>

    <p>notice that</p>

    <ul>
      <li>Xi Xia aristocrat looks very alike China, because they adopted much Chinese policies and had <strong>Sinicization</strong></li>
      <li>but later their Emperor mandate their specific form of hair style to keep their culture</li>
      <li>
        <p>their scripts are also modelled from Chinese, but much more complicated</p>
      </li>
      <li>
        <p>Tanguts people made beautiful Buddhist artifacts in the Mongol caves as well</p>

        <p>| <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018133404190.png" alt="image-20221018133404190" style="zoom: 25%;" /> | <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018153627755.png" alt="image-20221018153627755" style="zoom:33%;" /> |
| :———————————————————-: | :———————————————————-: |</p>
      </li>
    </ul>
  </li>
</ul>

<p><strong>Tangut as Xi Xia</strong> (1038 - 1227)</p>

<ul>
  <li>
    <p>In 881 they helped Tang to suppress Huang Chao rebellion</p>
  </li>
  <li>
    <p>religion fusion: Chinese + Tibetan Buddhism</p>
  </li>
  <li>
    <p>in early Song, lots of trade between Tanguts and Song, and many silk road goods went through them. But their relations with Song is volatile: in later Song they asked for equal status with Song Emperor:</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018133734437.png" alt="image-20221018133734437" style="zoom:50%;" /></p>

    <p>notice that</p>

    <ul>
      <li>before 1038, Tangut was polite and referred to itself being a vassal state. But after 1038, no justification is needed</li>
      <li>before, mentioned much culture/music as justification = imply that <strong>Confucianism is a standard for civilization</strong> = acceptance of Chinese’ idea of civilization</li>
    </ul>
  </li>
</ul>

<p><strong>Khitans (Liao)</strong>, 907 - 1125</p>

<ul>
  <li>Abaoji established the ==tribal federation== = connecting many tribes together = the Liao Dynasty</li>
</ul>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018153958544.png" alt="image-20221018153958544" style="zoom:33%;" /></p>

<ul>
  <li>
    <p>Khitans are not friendly to Tanguts either, but they posed more <strong>threat to Song</strong></p>
  </li>
  <li>
    <p>they conquered and occupied the Sixteen Prefectures, ==which also included Beijing==, hence a lot of sentiment in Song</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018134323478.png" alt="image-20221018134323478" style="zoom:33%;" /></p>

    <ul>
      <li>many Song emperor tried to recover this land from Khitans, but failed</li>
      <li>this strip had strategic North- South chokepoints between central plains and northern steppes, Manchuria.</li>
      <li>was not re-captured until Yuan</li>
    </ul>
  </li>
  <li>
    <p>Song was defeated by Khitan, hence signed a ==Peace Treaty of Chanyuan==</p>

    <ul>
      <li>clear boundaries, sixteen prefecture that Song wanted is kept by Liao</li>
      <li>Song paid indemnity for peace, which is a <strong>reasonably cheap price</strong> hence gives little incentive for them to fight back</li>
      <li>Song was also forced to recognize Liao as peers (etc. Khitan would address Song emperor as elder brother)
        <ul>
          <li>this is rejected by Chinese people = now you have <strong>two sons of Heaven</strong></li>
          <li>sense of humiliation, major source of ==strong sentiment in Song==</li>
        </ul>
      </li>
      <li>but at least this avoided wars between them. Maintained until 1125 until Song invited Jurchens to attack Liao</li>
    </ul>
  </li>
  <li>
    <p>government in North is a mobile civilization = nomadic culure. In the southern = 16 prefecture, so <strong>people kept the Chinese style</strong></p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018135019332.png" alt="image-20221018135019332" style="zoom:33%;" /></p>

    <p>so essentially Chinese lived under Khitan rules</p>
  </li>
  <li>
    <p>Khitan also, used by Jurchens who conquered Khitan and later adopted their own scripts based on Chinese</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018135138990.png" alt="image-20221018135138990" style="zoom:33%;" /></p>
  </li>
</ul>

<p><strong>Jurchen Jin</strong></p>

<ul>
  <li>
    <p>further east of the Khitans, being half nomad utilizing both hunting and farming</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018135207765.png" alt="image-20221018135207765" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>Originally they were subjects of Khitan, but later Aguda formed a ==confederation of tribes== and rebelled = Jurchan</p>

    <ul>
      <li>nomad usually do not pose threats until formed confederation. But this also means that in them people are <strong>not from the same tribe</strong></li>
      <li>they named themselves ==Jin金== dynasty</li>
    </ul>
  </li>
  <li>
    <p>Jurchen was also the reason Song became Southern Song in later periods. Since every Song wanted to <strong>retake 16 prefectures</strong> from Khitan but non worked, Emperor Huizong decided to be <strong>allied with Jurchan</strong>. In 1123, Juchen defeated Khitan, but in 1127, they turned on their Song ally, and ==Kaifeng is lost==. After that, Huizong abdicated and Song had to ==move south to Hangzhou==.</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center"> </th>
          <th style="text-align: center"> </th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018135528141.png" alt="image-20221018135528141" style="zoom: 33%;" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018135611298.png" alt="image-20221018135611298" style="zoom: 33%;" /></td>
        </tr>
      </tbody>
    </table>

    <ul>
      <li>is a great painter (e.g. <strong>three perfections, painting, poetry and calligraphy</strong>)</li>
      <li>Emperor Huizong wished to retake the “Chinese” territory of the Sixteen Prefectures (area including Beijing) from the Khitan Liao, but is responsible for losing the North and hence criticized by later historians for his <strong>indulgence in aesthetic pursuits</strong></li>
    </ul>
  </li>
  <li>
    <p>hence, Jurchan moved their capital to Kaifeng. But unlike Khitan who kept a duo system, ==Jurchan went Sinicization==</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018135811632.png" alt="image-20221018135811632" style="zoom:50%;" /></p>

    <p>so a lot Jurchan spoke Chinese, dress Chinese, like ==Northern Wei==</p>
  </li>
  <li>
    <p>in total, Song at this point had to sign treaties including:</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018135943098.png" alt="image-20221018135943098" style="zoom:33%;" /></p>

    <p>but was actually not a big burden, as they did not exceed 2% of state avenue, because Song’s modernization and is rich. However, most went to pay for military, which took up $3/4$ of the revenue for just maintaining the army.</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018140053433.png" alt="image-20221018140053433" style="zoom: 33%;" /></p>
  </li>
</ul>

<p><strong>Essentials of Military Classics (<em>Wujing Zongyao</em> 武經總要)</strong></p>

<ul>
  <li>
    <p>commissioned by Song emperor and had instructions for a broad range of weapons</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Siege Ladders</th>
          <th style="text-align: center">Triple Crossbow</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018140220582.png" alt="image-20221018140220582" style="zoom:33%;" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018140230536.png" alt="image-20221018140230536" style="zoom:33%;" /></td>
        </tr>
      </tbody>
    </table>

    <p>even though Song had advancements in military and spent a lot on its army, it did not conquer their lost territories back:</p>

    <ul>
      <li>Jurchan are sinicized anyway, and payment for peace was cheap</li>
      <li>however, you still need to keep a strong army in case of future infringement</li>
    </ul>
  </li>
  <li>
    <p>this book also recorded the invention/production of <strong>gunpowder</strong>, which was found from Daoist alchemy accidentally</p>
  </li>
  <li>
    <p>but even with those, it didn’t give much advantages because artisans are captured by enemies. e.g. those siege machines are also employed by Jurchen</p>
  </li>
</ul>

<p><strong>Neo-Confucianism</strong>: in response to Chinese cultural identity crisis at borders</p>

<ul>
  <li>“It was perverse for Chinese to forget their ancestors and abandon sacrifices to them, serving instead barbarian ghosts.” —Shi Jie ⽯介</li>
</ul>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018140623628.png" alt="image-20221018140623628" style="zoom:33%;" /></p>

<ul>
  <li>
    <p>Buddhism was already in 1000 years, but now they start to <strong>reject the religion as it is not indigenous and practiced by their enemies</strong></p>

    <ul>
      <li>
        <p>recall in Tang times Buddhism was wide spread. But in Song, due to changes of international politics, such as the Khitan Liao and Tanguts are buddhists, Song scholars thought of ==Buddhism as religion of enemy==</p>
      </li>
      <li>
        <p>story about Cai Wenji who lived in Han but abducted by Xiongnu, to show the barbarian culture of the northern people as compared ot Chinese architectures</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018140826760.png" alt="image-20221018140826760" style="zoom:33%;" /></p>

        <p>however, notice that here they are dressing in Khitan = used as a symbol of foreignness = barbarianism of their northern enemies</p>
      </li>
    </ul>
  </li>
  <li>
    <p>late Song had a lots of <strong>problem</strong>: big armies taking much expenditures, officials not selected properly, and taxes not collected properly $\to$ scholars believe that everything ==needs reform==</p>

    <ul>
      <li>
        <p>but unlike Wang Anshi’s new policy, Song scholars aims to <strong>revitalize in Confucianism $\to$ Neo-Confucianism</strong></p>

        <p>| <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018141134032.png" alt="image-20221018141134032" style="zoom:33%;" /> | <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018141216014.png" alt="image-20221018141216014" style="zoom:33%;" /> |
| :———————————————————-: | :———————————————————-: |</p>

        <ul>
          <li>
            <p>even during Age of Division and Tang when there are a lot of Buddhist, Confucianism technically is still used as texts for exams</p>
          </li>
          <li>
            <p>but those scholars dismissed them and said Confucianism is lost since after Zhou, that it was all about Buddhism and Taoism. Hence they considered themselves as revivalists = <strong>reinterpret the traditional Confucianism core = becomes a dominant idea among Song intellectual</strong></p>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p><strong>Zhu Xi</strong> (as a representative and consolidator) for Neo-Confucianism</p>

    <ul>
      <li>
        <p>Buddhism had life cycles, and hence Confucian also had Metaphysics about <em>li</em> 理 (principle) and <em>qi</em> (vital energy)</p>

        <ul>
          <li>believes that nothing can exist without <em>li</em></li>
        </ul>
      </li>
      <li>
        <p>used the two concepts to explain human’s good nature. Humans born with good <em>li</em> but <em>qi</em> is impure = hence people do bad things</p>

        <ul>
          <li>sages had perfect <em>qi</em>, so people needs to work on this</li>
        </ul>
      </li>
      <li>
        <p>Zhu Xi’s take is that <em>li</em> is more important $\to$ how do you <strong>investigate things</strong></p>

        <ul>
          <li>rigorous study to probe <em>li</em> in things</li>
          <li>your methods of study should include nurture reverence + pursue knowledge</li>
        </ul>
      </li>
      <li>
        <p>the ultimate goal is <strong>self-cultivation</strong>, which is believed to lead to harmonious society (if everyone does it). But how to cultivate it?</p>

        <ul>
          <li>Zhu Xi’s idea is to investigate things, hence his school = ==<em>Li Xue</em> = a mainstream Neo-Classical school==</li>
        </ul>
      </li>
      <li>
        <p>since Zhu Xi believed one needs to study, he helped establish private academies = rise of private schooling for transmitting new ideas</p>

        <ul>
          <li>also wrote <em>Commentaries on Analects</em>, which is later made an official text in 1241 until 1905</li>
        </ul>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221018142312659.png" alt="image-20221018142312659" style="zoom:33%;" /></p>
      </li>
      <li>
        <p>since Zhu Xi wanted to revive, he called himself <em>Daoxue</em> or <em>Lixue</em>, they don’t called themselves Neo-Confucianism</p>
      </li>
    </ul>
  </li>
  <li>
    <p>even though those new thoughts is a response of the time of crisis to attack Buddhism or Taoism, but they are <strong>not immune to their influence</strong>,</p>

    <ul>
      <li>e.g. still use Buddhist practices such as medication and adopted Buddhist terms in Neo-Confucianism</li>
      <li>i.e. has a lot of elements drawn from them</li>
    </ul>
  </li>
</ul>

<p><strong>Song Women’s Status</strong></p>

<ul>
  <li>pretty complicated
    <ul>
      <li>commodification of women, selling daughters gives farmers a ton of money, to be prostitutes</li>
      <li>foot-binding, which started in the sing-song class, but eventually expanded throughout = small foot had sexual allure for men</li>
      <li>but women can also use that to their advantages, and some had autonomy, such as in the reading that some women had words that judges listen to</li>
    </ul>
  </li>
  <li>foot binding in Song. women having small feet-only seen by herself and husband (264)
    <ul>
      <li>correlates with the growth of Song’s commercialization, and that families sell daughters + people kidnap women</li>
      <li>women transformed into commodities who were bought and sold on the basis of appearance</li>
      <li>women of good families compete with women with bound feet, hence 卷起来了</li>
    </ul>
  </li>
</ul>

<h1 id="midterm">Midterm</h1>

<ul>
  <li>three main parts</li>
  <li>Identifications of people, places, key concepts
    <ul>
      <li>e.g. equal field system</li>
      <li>a list will be given out, also explain the historical importance of this key term</li>
    </ul>
  </li>
  <li>short answer questions
    <ul>
      <li>explain the deeper meaning/significance of a passage</li>
      <li>e.g. a paragraph long</li>
    </ul>
  </li>
  <li>one long essay
    <ul>
      <li>e.g. half of the test</li>
      <li>e.g. interaction with steppe normadic culture, e.g. explain <em>shi</em> class in warring states and implications in later dynasties</li>
      <li>e.g. bidirectional influences between stuff</li>
      <li>like three to fourth paragraphs, and you need to provide a structured, argument-based response</li>
    </ul>
  </li>
</ul>

<h1 id="yuan-dynasty-1271---1368">Yuan Dynasty (1271 - 1368)</h1>

<blockquote>
  <p>Yuan was a <strong>Mongol-led imperial dynasty of China</strong> and a successor state to the Mongol Empire after its division. It was established by ==Kublai== (Emperor Shizu), leader of the Borjigin clan, and lasted from 1271 to 1368.</p>

  <ul>
    <li>Although ==Genghis Khan== had been enthroned with the Han-style title of Emperor in 1206 and the Mongol Empire had ruled territories including modern-day northern China for decades, it was not until 1271 that ==Kublai Khan== officially proclaimed the dynasty in the traditional Han style
      <ul>
        <li>Genghis Khan = Chinggis Khan later in text</li>
      </ul>
    </li>
    <li>Kublai’s conquest was not complete until <strong>1279 when the Southern Song dynasty</strong> was defeated in the Battle of Yamen. His realm was, by this point, isolated from the other Mongol-led khanates and controlled most of modern-day China and its surrounding areas, including modern-day Mongolia.</li>
    <li>Mongol rule was ==cosmopolitan under Kublai Khan==. He welcomed foreign visitors to his court, such as the Venetian merchant Marco Polo, who wrote the most influential European account of Yuan China</li>
    <li>In 1368, following the <strong>defeat of the Yuan forces by the Ming dynasty</strong>, the Genghisid rulers retreated to the Mongolian Plateau and continued to rule until 1635 when they surrendered to the Later Jin dynasty (which later evolved into the Qing dynasty).</li>
  </ul>
</blockquote>

<p>How did the ==Mongols== managed to conquer all China during ==Yuan==?</p>

<ul>
  <li>they didn’t have literati, didn’t have language, didn’t have permanent houses</li>
</ul>

<p><strong>Raising Warriors</strong>: especially women warriors</p>

<ul>
  <li>can reveal Mongols political, cultural and social priorities</li>
  <li>Eurasian steppe: resource scare, nature is volatile, human is small compared to nature
    <ul>
      <li>generating only a minimal surplus, and internal disputes arises due to resource scarcity</li>
    </ul>
  </li>
  <li>therefore perpetual uncertainty, <strong>hard on both women and man, little time on inequality</strong>
    <ul>
      <li>nomad = ==group is prized more== important than individual survival = young children were taught a universal skill set</li>
      <li>has highly non-gendered training, e.g. horsemanship, women and men equal competence</li>
      <li>herd and hunt typically taught by mothers, e.g. Chinggis Khan’s mother</li>
    </ul>
  </li>
  <li>learned bravery during hunt = <strong>bravery in battle</strong>
    <ul>
      <li>horsemanship, bravery, shooting skills for all</li>
      <li>e.g. Alaqa Beki, a <strong>women leader of large army</strong></li>
    </ul>
  </li>
</ul>

<p><strong>Groups Win Wars</strong>: prizing group advantages</p>

<ul>
  <li>
    <p>military tactics through surprise, ambush. Hence also requires soldiers strong in acrobatic skills</p>
  </li>
  <li>
    <p><strong>caracole</strong> tactic:</p>

    <p><img src="https://qph.cf2.quoracdn.net/main-qimg-9a7d2ad9f1f7cd2e072ed4f3f53e32c4-lq" style="zoom:33%;" /></p>

    <ul>
      <li>horses are faster in group</li>
      <li>shoot at 40-50m = general kill zone, so every warrior can contribute to the arrows</li>
    </ul>
  </li>
  <li>
    <p><strong>feigned</strong> retreat</p>

    <p><img src="https://rud.is/khan/uploads/4/6/9/3/46935069/876421879_orig.jpg" style="zoom:33%;" /></p>

    <ul>
      <li>appear to be overwhelmed and flee, to <strong>lure</strong> enemies to ambush location</li>
    </ul>
  </li>
</ul>

<p><strong>Climatic Changes</strong></p>

<ul>
  <li>15 year <strong>Pluvials (increased rainfall=wet) climatic</strong> favored Mongol
    <ul>
      <li>to being able to support a <strong>record-holding amount of animals</strong> (e.g. horses) due to biomass flourishing. So many perhaps more than the rest of the horse in the world combined</li>
      <li>zero foot-soldiers, or supply chain, but each horseman have <strong>4-5 well-trained horses</strong></li>
      <li>those horses would respond to the unique whistle of the owner</li>
    </ul>
  </li>
  <li>soldiers can sleep on their horses
    <ul>
      <li>place their meat underneath saddle</li>
      <li>can also train blood from horses as calorie intake if needed</li>
    </ul>
  </li>
</ul>

<p><strong>Semi-private/public Ger</strong></p>

<p><img src="https://www.youngpioneertours.com/wp-content/uploads/2020/01/Ger-construction.jpg" style="zoom:33%;" /></p>

<ul>
  <li>Ger is a single room structure (tent)
    <ul>
      <li>often entire family lives in a single Ger. This means sometimes many people all into 100 sqrft space, for both women, men, and kids</li>
      <li>hence also little <em>room</em> for inequality</li>
    </ul>
  </li>
  <li>Ger is Mongol’s only structure shielding from nature
    <ul>
      <li>place for everything, all resources</li>
      <li>technically <strong>owned by the female</strong></li>
    </ul>
  </li>
</ul>

<p><strong>Buying Loyalty</strong></p>

<ul>
  <li>Chinggis dissolved conquered population to create a structure for him as head of power
    <ul>
      <li>then perform military integration = some of them become part of the army</li>
      <li>each person loyal to <strong>their direct superior</strong>, and is recursive until the top, which is Chinggis</li>
    </ul>
  </li>
  <li>so ultimately each gifted population (along with their stuff) is still owned by Chinggis
    <ul>
      <li>those owners then need to populate the armies</li>
    </ul>
  </li>
  <li>so source of income is plunder or tribute</li>
</ul>

<p><strong>Women in Mongols’ Political Sphere</strong></p>

<ul>
  <li>chiggis wealth transfer to the youngest child</li>
  <li>not only were women are entitled to power, men also believed in their power
    <ul>
      <li>women power has nothing to do with proximal relationship with men, as in early China (e.g. Zhou dynasty)</li>
    </ul>
  </li>
  <li>women in general (including Chinese) enjoyed a more fairer status:
    <ul>
      <li>mongol named a women <strong>Yang Miaozhen</strong> (successful and fearful leader of army) to the position of provincial governor - probably the highest power ever to be held by a civilian women in imperial China</li>
      <li>women has power in conducting family affairs (334-336). e.g. Zhao’s wife, <strong>Guan Daosheng</strong>, has a commanding role in household management</li>
    </ul>
  </li>
</ul>

<p><strong>Extreme Violence Saves Lives</strong></p>

<ul>
  <li>e.g. Persia killed Mongol’s envoys, so Mongol went on to decimate them</li>
  <li>believed violence during warfare is a necessity, so they wanted to <strong>spread their image of violence</strong></li>
  <li>so a town under their attack can
    <ul>
      <li>surrender and pay tribute (survive)</li>
      <li>not useful become slaughtered (decimated)</li>
      <li>the useful, such as artisans were saved to improve techniques. Or a few terrified were allowed to flee and spread this terror (survive)</li>
    </ul>
  </li>
  <li>mongol invasion in south is slow
    <ul>
      <li>instead of plunder/kill farmers, tax them was proposed</li>
    </ul>
  </li>
</ul>

<p><strong>Mongol Ruling China</strong></p>

<ul>
  <li>
    <p>The Yuan dynasty created a ==”Han Army”== (漢軍) out of defected Jin troops and an army of <strong>defected Song troops</strong> called the “==Newly Submitted Army==” (新附軍).</p>
  </li>
  <li>as many women (still physically strong) start to shift more to political poewr
    <ul>
      <li>initially 30% are Mongol women in army, but now forces are not even many Mongols</li>
    </ul>
  </li>
  <li>Kublai wanted to also focus on governing in China
    <ul>
      <li>eventually adopting alternating policies favoring their own steppe culture and sedentary culture of the vast population of Chinese</li>
    </ul>
  </li>
  <li>no evidence that Kublai converted to Buddhism, nor Confucianism
    <ul>
      <li>only a rudimentary knowledge of Chinese, hence certainly not Confucianism</li>
      <li>sensitive not to rely on Chinese, but military ones in western/central asia</li>
      <li><strong>suspended the examination system</strong> = no group can challenge Mongols</li>
      <li>only later ==emperor Ayurbarwada== <strong>restored</strong> the civil exam system due to his tutor teaching Confucius and he liked it</li>
    </ul>
  </li>
  <li>Kublai considered <strong>South Chinese</strong> the least trust worthy group, hence at the bottom of four divisions
    <ul>
      <li>Specifically, the ==four classes== of people by the descending order were Mongolian people, Semu people, Han people (in the northern areas of China) and Southern Chinese (people of the former Northern Song Dynasty)</li>
      <li>perhaps because Southern Chinese are the latest to be conquered</li>
      <li>prioritize economic growth, some</li>
    </ul>
  </li>
  <li>Kublai nevertheless <strong>sought to keep good relation to both Chinese and Mongols</strong>
    <ul>
      <li>as ruler for Mongol sought to preserve martial values, and having mongol women as concubines</li>
      <li>as ruler for Chinese, established capital in China and subsidized Chinese art</li>
      <li>in reality, even only for 100 years it is still <strong>hard</strong> to both rule sedentary China and steppe Mongol.</li>
    </ul>
  </li>
</ul>

<p><strong>Fall of Yuan</strong></p>

<ul>
  <li>However, eventually depopulation in China and increasing stress on people caused <strong>rebellion</strong>
    <ul>
      <li>Kublai launched huge campaign using sedentary Chinese are army = many <strong>died</strong></li>
      <li>increasing amount of burden + natural disasters (drought) + ineffective government policies inflicted <strong>struggle, famine in people</strong></li>
    </ul>
  </li>
</ul>

<h1 id="ming-dynasty-1368---1644">Ming Dynasty (1368 - 1644)</h1>

<p><strong>Previously on the Mongols and the Yuan</strong> (from Chinese perspective)</p>

<ul>
  <li>Tribal confederations became a major threat
    <ul>
      <li>Throughout the period of the Southern Song (1127-1279) Mongol confederation under Genghis Khan gaining strength in the north.</li>
      <li>Mongols being effective in warfare, e.g. brutality</li>
      <li>embrace new war technologies from captured artisans</li>
    </ul>
  </li>
  <li>migration possibly encouraged by climate changes
    <ul>
      <li>high productivity of horses, on average each mongol solider has 3-5 horses</li>
      <li>Eurasian steppe nature, hence a small population = lose control when large territory</li>
      <li>i.e. problem of <strong>minority rule</strong>: assimilation v.s. their elite identity also needed to be balanced</li>
    </ul>
  </li>
  <li>Mongol’s nomadic culture + small population = both women and men trained equally
    <ul>
      <li>no need a supply chain, just plunder and adopt technology</li>
      <li>but also had succession crises</li>
    </ul>
  </li>
  <li>Kublai Khan defeats Southern Song and established Yuan dynasty
    <ul>
      <li>first non-Chinese who rule the entire China both north and south</li>
      <li><strong>divided people into 4 ethnic group and favored non-Chinese</strong> = arise Chinese ethnic consciousness and desire to regain China = eventually lead to Chinese rebellions = ==downfall of Yuan==
        <ul>
          <li>recall that they were military strong in horseback but as the creation Han Army and Newly Submitted Army made many mongols become sedentary + a much smaller population, it becomes hard for them to hold the vast population of Chinese</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Yuan was overall political unstable but flourishing time for culture
    <ul>
      <li>e.g. Yuan drama, literature, blue and white porcelain</li>
    </ul>
  </li>
</ul>

<h2 id="ming-autocracy">Ming Autocracy</h2>

<p><strong>The strangeness of Early Ming</strong>: despotism and an agrarian vision of economy and society</p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221027132235822.png" alt="image-20221027132235822" style="zoom: 33%;" /></p>

<ul>
  <li>
    <p>smaller than Yuan as Mongolia is not in Ming’s control, and captial at ==Nanjing== (capital during Six dynasties)</p>

    <ul>
      <li>rule both north and south from a southern city for the first time</li>
    </ul>
  </li>
  <li>
    <p>Founder ==Zhu Yuanzhang==朱元璋, with reign title ==Hongwu== (1368-1398)</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221027132453072.png" alt="image-20221027132453072" style="zoom: 33%;" /></p>

    <ul>
      <li>Hongwu reign year 1 to represent 1368</li>
      <li>reign title chosen by himself, because of his <strong>military achievement: Ming has expanded</strong> and included corridor area in north and sixteen prefectures (later Beijing become capital under YongLe)</li>
    </ul>
  </li>
  <li>
    <p>An extraordinary life experience of <strong>Zhu Yuanzhang</strong></p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221027132703443.png" alt="image-20221027132703443" style="zoom:33%;" /></p>

    <ul>
      <li>parents were poor, and was a wondering monk for several years</li>
      <li>Mongols burnt down the monasteries, and he joined rebels</li>
      <li><strong>commoner to become an emperor since Liu Bang</strong></li>
    </ul>
  </li>
  <li>
    <p>part of his experience in his own words (explains why he shaped a ==conservative== vision as government/==weird early Ming==)</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221027132909702.png" alt="image-20221027132909702" style="zoom:33%;" /></p>

    <p>he claimed to “restore S. Song style”, but <strong>kept many Yuan policies</strong> (conservatives)</p>

    <ul>
      <li>
        <p>emperor to bureaucracy below him is much more hierarchical/autocratic, and strong personal subordination to emperor</p>

        <ul>
          <li>did not hesitate to have officials beaten openly = very despotic</li>
          <li>became a regular mean to <strong>punish officials</strong>: rarely used in Tang, but <strong>Mongol did use it frequently</strong></li>
        </ul>
      </li>
      <li>
        <p>paranoid for treason: frequent execution of officials</p>

        <ul>
          <li><strong>great purges:</strong> zero toleration of corruption and disloyalty. Executed over 30,000 victims</li>
          <li><strong>didn’t trust prime ministers</strong>, made himself the chief director for large and small matters and <strong>removed “Great Chancellor” as a rank</strong></li>
        </ul>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221027133324396.png" alt="image-20221027133324396" style="zoom: 33%;" /></p>

        <p>for example, the first and fourth is due to (he believes is) disloyalty, and the 2nd and 3rd for corruption.</p>
      </li>
    </ul>
  </li>
  <li>
    <p>emperors are now complete autocrat. related to Mongol’s style,</p>

    <ul>
      <li>comparison of the past: officials were somewhat confident and powerful in decision making</li>
      <li>In Tang they sat in chairs, in Song not required to kneel (also vowed not to execute officials even bad news/disagreement). But in <strong>Ming, a lot more ==autocratic==</strong></li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221027133538707.png" alt="image-20221027133538707" style="zoom:33%;" /></p>
  </li>
</ul>

<p><strong>Despotism</strong>: new government structure</p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221027175108011.png" alt="image-20221027175108011" style="zoom:33%;" /></p>

<ul>
  <li>
    <p>this despotism in emperor dominating over bureaucracy is highly related/==originated== by</p>

    <ul>
      <li>decline of hereditary aristocracy since Huang Chao rebellion = recruit based on merit/little family influence = earlier those <strong>aristocrat families are well venerated</strong> and hence easily <strong>exerts strong influence even in court</strong></li>
      <li>the rise of civil service exam and the above = aristocrat “class” are flexible, can <strong>hardly create equal influence</strong></li>
      <li>the only <strong>special case is during Song</strong>, when emperor explicitly said not to execute scholars if bad news/disagreements hence those recruited by merit base can have influence</li>
      <li>
        <p>his peasant background also made him have dislikes of anti-intellectuals</p>
      </li>
      <li>though Emperor Zhu Yuanzhang did not have civil system for a decade but eventually needed help = depended on them, so a <strong>power balance is subtle</strong></li>
    </ul>
  </li>
  <li>
    <p>since Tang to Yuan, government structure were somewhat similar. But in Ming</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Tang and Song</th>
          <th style="text-align: center">Ming</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221027134122694.png" alt="image-20221027134122694" style="zoom: 50%;" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221027134246693.png" alt="image-20221027134246693" style="zoom:50%;" /></td>
        </tr>
      </tbody>
    </table>

    <ul>
      <li>before, <strong>grand chancellor</strong> (developed in Song, e.g. Wang Anshi) have a high degree of influence in decision making, but now is removed</li>
      <li>strong centralization of authority in the throne
        <ul>
          <li>abolished Grand Chancellor = Prime Minister</li>
          <li>military bureau divided into 5, and censorate into 12. In total 23 ministries <strong>directly reported to Emperor</strong></li>
          <li><strong>grand secretariat</strong> = mid level officials = good at writings as helpers
            <ul>
              <li>after Zhu Yuanzhang, they gain power and even reject emperor’s decisions in the long run = basically functioning as prime minister</li>
            </ul>
          </li>
          <li>this induced a <strong>large workload</strong> for emperor, and seem only possible with Zhu Yuanzhang</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><strong>Social reorganization at the local level</strong></p>

<ul>
  <li>
    <p>Zhu Yuanzhang liked rural areas as being less corrupt and simple + close community of farmers</p>

    <ul>
      <li>very different in Song time’s commercialized farmers</li>
    </ul>
  </li>
  <li>
    <p>therefore, developed an <strong>ideal economical life being “rural”</strong></p>

    <ul>
      <li>aimed for rural self-sufficiency</li>
      <li>developed the <strong>Lijia 里甲 system</strong> (+ registration system for direct control of people, like Qin period)</li>
      <li>developed the “<strong>Sacred Edict of Six Maxims</strong>” (for spreading Confucius teachings)</li>
    </ul>
  </li>
  <li>
    <p>==Lijia (hundred-and-tithing): village registration system==</p>

    <ul>
      <li>assign people with land and get taxes as well. so that
        <ul>
          <li>10 households = 1 <em>jia</em>, and 10 <em>jia</em> = 1 <em>li</em>. Hence 100 households per <em>li</em></li>
          <li>additional 10 wealthy ones in charge of managing hence 110 households</li>
        </ul>
      </li>
      <li>the idea of <strong>self-supervision + direct report</strong> to emperor was raised by Shangyang in Qin</li>
      <li>registering households as done similarly by Mongol, which
        <ul>
          <li>origins as early as Qin (which was for recruiting <strong>military</strong>).</li>
          <li>In Song, Wang Anshi also employed a a similar policy for governmental interference in <strong>economy</strong></li>
          <li>but Zhu Yuanzhang wanted this more for ==control== <strong>of people</strong> (the book yellow registers)</li>
        </ul>
      </li>
      <li>effectively transfer govern responsibility to local community. Emphasized community self-management including tax-collecting, transportation, judicial, police services, etc.
        <ul>
          <li>intent is a small government as peasants manage themselves = no need for high tax as well</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>he also uses Lijia to teach people about the laws and Confucianism</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221027135538558.png" alt="image-20221027135538558" style="zoom:33%;" /></p>

    <ul>
      <li>“sacred edict” read aloud regularly, people urged to behave with <strong>Confucian values such as Filial Piety</strong></li>
      <li>very effective mean of imbuing people (including illiterate) with Confucius values</li>
    </ul>
  </li>
</ul>

<p><strong>Four Categories of People</strong></p>

<ul>
  <li>
    <p>Mongol had this division: 1) Mongol; 2) Semu = colored-eye people, from west/central Asia; 3) Northern Chinese; 4) Southern. Reveals how <em>much</em> Mongol confederation trusted each group</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221027135758073.png" alt="image-20221027135758073" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>in Ming, he also <strong>categorized peopled base on occupation SPAM</strong></p>

    <ul>
      <li>but later this ==doesn’t work for economy==, and broke down with high commericialization later</li>
      <li>attempted to demarcate social boundaries, e.g. merchants, farmers, must do different things. But since Song, <strong>people are highly dynamic</strong>, as in commercialization, many specialization and trading/work across occupations. So that was a failure of his policies</li>
    </ul>
  </li>
  <li>
    <p>recall that exams during Yuan was hard, so a lot of scholars changed direction and went to medicine</p>

    <ul>
      <li>of course, getting a degree is still valuable, but as more and more people receive education and exam even more intense, a lot of <strong>novel occupations/diversified future of scholars</strong></li>
      <li>but still, Southern literati elites regardless held immense influence in local society = <strong>localist turn</strong> (started in Southern Song). e.g. story of cruel family getting hold of the entire <em>local</em> community
        <ul>
          <li>before, passing the exam = route for wealth, status and fame. But now they realize this is not the only route and can <strong>exert influence on a local level</strong>. (which is very related to neo-Confucianism - build society from local level) = establishment of ==local roots==</li>
          <li>for them, civil exam is now just among the many exams, but just sitting for the exam still gives status.</li>
          <li>so south weathered the Mongol invasion much better than the north thanks to their established local roots = as they anyway didn’t rely on the civil exam to get wealth = your life stays hereditary</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>again, even as merchants at the bottom category, they are often the wealthiest, e.g. Shen Wansan (a merchant)</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221027140231319.png" alt="image-20221027140231319" style="zoom:33%;" /></p>

    <p>since education requires money, they are at an advantage: merchant can infiltrate by marriage into gentry (shidafu) family, or just adopt their sons</p>
  </li>
</ul>

<p><strong>Zhu Yuanzhang’s successors</strong></p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221027140532108.png" alt="image-20221027140532108" style="zoom:33%;" /></p>

<ul>
  <li>
    <p>succession crisis after death. The correct line of succession should be Zhu Yunwen, but Zhu Di = <strong>his uncle got it</strong> (hence seen as “illegitimate”)</p>
  </li>
  <li>
    <p>==Zhu Di== gives himself the reign title ==Yongle==, and did several important things</p>
  </li>
  <li>
    <p>one major change is Nanjing being demoted to secondary captial and ==Beijing becomes capital==</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221027140744214.png" alt="image-20221027140744214" style="zoom:33%;" /></p>

    <ul>
      <li>he felt insecure in the south (as he is an illegitimate ruler), and his generals are all from northern areas</li>
      <li>demographically it is <strong>strategically important to protect central plain from north but not safe</strong></li>
      <li>it is also not very developed yet, so resources needed to shift from Nanjing/the south</li>
      <li>but Beijing became the capital for the rest of the 7 centuries until today</li>
    </ul>
  </li>
  <li>
    <p>Yong Le’s achievements</p>

    <ul>
      <li>
        <p>be ready for the Mongol: rebuilt sections of ==great wall==, and <strong>grand canal</strong> for transportation, expanded <strong>military</strong></p>

        <ul>
          <li>successive dynasties built and maintained multiple stretches of border walls. The best-known sections of the wall were built by the Ming dynasty</li>
        </ul>
      </li>
      <li>
        <p>his palace at Beijing = the ==Purple Forbidden City==</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221027183224061.png" alt="image-20221027183224061" style="zoom:33%;" /></p>
      </li>
      <li>
        <p>also extensive <strong>maritime voyages: Zheng He</strong></p>
      </li>
      <li>
        <p>sponcered a lot of <strong>Buddhism</strong>, but unclear if he is loyal to Buddhism as sometimes he pursues as Daoist. Perhaps as a tool to establish trust in his subjects</p>

        <ul>
          <li>but did forge a strong relationship with Tibet</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>Yong Le’s sponser of Zheng He’s voyage</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221027141241577.png" alt="image-20221027141241577" style="zoom:33%;" /></p>

    <ul>
      <li>the aim was to mask his illegitimacy of ruling (as an uncle took power from the direct grandson of emperor), by <strong>announcing to the maritime world that he is emperor</strong></li>
      <li>therefore, voyage was for diplomatic reasons</li>
    </ul>
  </li>
</ul>

<p><strong>Admiral Zheng He</strong></p>

<ul>
  <li>
    <p>the mission was diplomatic: to all tributary states that Yong Le is now the emperor. Hence Zheng He also had military force brought along</p>
  </li>
  <li>
    <p>as a by product of the voyage</p>

    <ul>
      <li><strong>enlarged trading routes</strong></li>
      <li><strong>furthered Ming’s tribute system</strong> (see next subsection)</li>
    </ul>
  </li>
  <li>
    <p>brought back some exotic info/products, e.g. giraffe is named as 麒麟</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221027141918382.png" alt="image-20221027141918382" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>some of Zheng He’s fleets routes</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221027141319992.png" alt="image-20221027141319992" style="zoom:33%;" /></p>
  </li>
</ul>

<p><strong>The Tribute System</strong></p>

<ul>
  <li>was a old system. Two mechanisms of Chinese regimes’ <strong>relationships with foreign states: tribute and trade</strong>.</li>
  <li>the system:
    <ul>
      <li>foreign rulers to send embassies to China bearing tribute in the form of local exotica</li>
      <li>emperor in turn gives gifts of equal or greater value; bestowed titles on tributary rulers; and permitted a controlled volume of <strong>trade</strong></li>
    </ul>
  </li>
  <li>as it is mutually beneficial:
    <ul>
      <li>a device for <strong>mutual recognition</strong>, and to establish <strong>political and cultural prestige of China internationally</strong></li>
      <li>more <strong>trade</strong> opportunities</li>
      <li>in most times both parties are happy</li>
    </ul>
  </li>
</ul>

<p><strong>End of Yongle Fleets</strong>: only YongLe emperor promoted maritime trade/voyage</p>

<ul>
  <li>expeditions cost a lot of money: in 1424, Yongle died, and new court considered the expeditions as <strong>wasteful expenditures</strong> that did not benefit the people’s welfare.</li>
  <li>eventually people switched focus to their northern land: shifted policy to ==focus on northern steppe enemies==
    <ul>
      <li>1449 Tumu disaster: Mongol Oirats capture the boy emperor and threaten Beijing—this marks permanent shift in foreign policy away from the sea and towards the steppe.</li>
    </ul>
  </li>
  <li>hence this end also signals the <strong>ended the state-sponsored sea voyages and foreign contacts/trade overseas</strong>. Instead of maritime trade, a lot became used for defending</li>
</ul>

<h2 id="ming-and-the-global-economy">Ming and the Global Economy</h2>

<p><strong>Previously on early Ming</strong></p>

<ul>
  <li><strong>Hongwu (1368-98):</strong> <strong>autocracy</strong> and inheritance of Mongol polices + social reorganization (agrarian view)
    <ul>
      <li>autocracy of emperor in court is supported by the decline of aristocracy + rise of civil exam in Song</li>
      <li>social reorganization involves demarcation of people into four classes $\to$ did not work at the end as society often have boundary crossings</li>
    </ul>
  </li>
  <li><strong>Yongle</strong> (1402-24): usurper = deeply concerned of his ruling = moved capital from Nanjing to Beijing
    <ul>
      <li>build the forbidden city in Beijing</li>
      <li>eager to pursue <strong>tributary relations</strong> with new states = recognize his legitimacy of ruling</li>
      <li>for a similar reason above, sponsored Zheng He’s voyage</li>
    </ul>
  </li>
  <li><strong>Zheng He</strong>’s voyage: massive expedition primarily as a diplomatic tool
    <ul>
      <li>a by-product is to encouraged <strong>private maritime trade</strong> (commercialization later)</li>
      <li>but costly + enemies in the north made China shift focus</li>
    </ul>
  </li>
</ul>

<p><strong>Monetization in mid-Ming</strong>: second wave of commercialization after Song dynasty</p>

<ul>
  <li>
    <p>e.g. description of the prosperity and commercialized economy in south</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221101131958629.png" alt="image-20221101131958629" style="zoom: 33%;" /></p>

    <p>material property + commercialization = non-agrarian society starts to come back again</p>

    <ul>
      <li>Hangzhou was also reasonably prosperous, as previous Song capital</li>
      <li>==Jiang’nan== = south of Yangzi river = <strong>most prosperous region</strong> in mid-Ming = lots of records come from this area</li>
    </ul>
  </li>
  <li>
    <p>recall that <em>Lijia</em> 里甲 (hundred-and-tithing): village registration and self- management system + <strong>tax system in kind (e.g. rice if produced rice)</strong></p>

    <ul>
      <li>assumption that people stays in the land, and had loopholes = corruptions = less tax collected from wealthy people who try to evade</li>
    </ul>
  </li>
  <li>
    <p>more effective policy to <strong>collect tax all in “cash”</strong> = ==Single Whip Reform== (1570)</p>

    <ul>
      <li>pushed forward by Grand Secretary Zhang (recall that grand secretary is very powerful in court)</li>
      <li>complete resurvey of all cultivated land (1580) = updated information = can ask ==all taxes to be paid in copper/silver==</li>
      <li>aims to simplify taxation and increase efficiency = very effective later
        <ul>
          <li>1568-73 Imperial Treasury’s annual deficit: 2-3 million taels of silver</li>
          <li>1582 The treasury has 4 million taels of silver surplus and grain reserve for a couple of years</li>
          <li>critical to <strong>help Ming dynasty to reach its peak</strong></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><strong>Currency of the Hongwu Reign</strong></p>

<ul>
  <li>
    <p>paper money is issued by the government, but they are printed/produced without backup hence people lost faith in it:</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221101133338779.png" alt="image-20221101133338779" style="zoom:33%;" /></p>

    <ul>
      <li>
        <p>for tax: payment needs to be in copper coin/silver</p>
      </li>
      <li>
        <p>people lost faith in paper currency because ==Zhu Yuanzhang== issued paper money <strong>without backup</strong> $\to$ can use silver to exchange paper money but when asked to <em>exchange from paper money to silver, government cannot issue</em></p>
      </li>
      <li>
        <p>regardless, government encouraged paper money = wanted to restrict digging silver. But they never succeeded in controlling its currency = <strong>ends up relying entirely on copper coin and silver ingot</strong></p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221101133404657.png" alt="image-20221101133404657" style="zoom: 25%;" /></p>

        <p>(note that silver ingots are trusted more as copper can regularly debase)</p>
      </li>
    </ul>
  </li>
  <li>
    <p>thirst for silver ingot = encouraged for ==global trade== (foreign countries using silver to trade for valuable Chinese goods)</p>

    <ul>
      <li>
        <p>lots of <strong>foreign private trade</strong> activities from European</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221101133810017.png" alt="image-20221101133810017" style="zoom:33%;" /></p>

        <p>recall that:</p>

        <ul>
          <li>
            <p>Ming government did not sponsor maritime trade (<strong>opposite in Song’s altitude = took large revenue from maritime commerce</strong>)</p>
          </li>
          <li>
            <p>this is perhaps because a) gov charged light tax in commerce b) agrarian view c) private maritime trade tied with piracy = political problems. Hence very suspcious with private trade outside diplomatic reasons</p>
          </li>
        </ul>
      </li>
      <li>
        <p>trade with ==Portuguese==: arrived and found a vigorous trade network in China</p>

        <ul>
          <li>
            <p>some maritime traders treat Chinese ships as competitors = kill them and take over their business</p>

            <p>| <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221101134216818.png" alt="image-20221101134216818" style="zoom: 25%;" /> | <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221101134237483.png" alt="image-20221101134237483" style="zoom: 25%;" /> |
| :———————————————————-: | :———————————————————-: |</p>

            <p>this caused some problem: where China official did not support trading with Japan due to piracy and suspicions, those Europeans don’t care hence those Chinese goods are illegally leaked to Japan</p>
          </li>
          <li>
            <p>but eventually, local Chinese officials sees trade benefits and defied government decisions = Portuguese conspired with local officials to <strong>establish a port in Macao</strong> (a backwater at the time) to trade with Canton and Nagasaki</p>

            <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221101134506378.png" alt="image-20221101134506378" style="zoom: 25%;" /></p>

            <p>Macao = first and last European colony in China ruled by Portuguese</p>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>what goods did European liked from China? some trades included porcelain = Chinese artisans mass produce porcelain specifically for foreign trades:</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221101134612595.png" alt="image-20221101134612595" style="zoom: 25%;" /></p>

    <p>most of exported ones are not best quality, and best ones often reserved for China’s home market</p>
  </li>
</ul>

<p><strong>Trading with Spanish and Dutch</strong></p>

<ul>
  <li>
    <p>results of private maritime trades = period when porcelain appearing <strong>popular in countries such as Dutch</strong></p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221101154259734.png" alt="image-20221101154259734" style="zoom: 25%;" /></p>
  </li>
  <li>
    <p>both Spanish and Dutch also had high trade interest with China</p>

    <ul>
      <li>early 1570s, the ==Spanish== established a trade port in Manila (Philippines), still far from China.</li>
      <li>in 1623-62, the ==Dutch== East India Company (VOC) occupies fort in northern <strong>Taiwan</strong>
        <ul>
          <li>note that at that time Taiwan was not under Ming’s control.</li>
          <li>Once colonization by Dutch took place, Chinese went and Taiwan become incorporated into the Qing</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p><strong>Spanish</strong> found China was silver hungry = traded/provided <strong>a lot of silver</strong> as they had extraordinary level of silver from mines in its colonies</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221101135157936.png" alt="image-20221101135157936" style="zoom:25%;" /></p>

    <p>Spanish ship silvers to China = established a stronghold in trading = on average more than 2,300 tons of silver arrived in China from abroad</p>

    <ul>
      <li>note that: ==since 1493 - 1898 the Americas were invaded and incorporated into the Spanish Empire==, with the exception of Brazil, British America, and some small regions of South America and the Caribbean</li>
    </ul>
  </li>
  <li>
    <p>in 16th – 17th c., the trade imbalance with China was filled with silver from Spain’s New World colonies, and from Japanese mines</p>
  </li>
  <li>gold flow out, silver flow in = as silver seen more important in China</li>
  <li>
    <p>gives many bad consequences (as well as few good ones)</p>
  </li>
  <li>
    <p><strong>Consequence of the influx of silver</strong>:</p>

    <ul>
      <li>
        <p>depreciation of silver = inflation;  market speculation; .. all contributed to <strong>Ming’s collapse</strong> in the long run</p>
      </li>
      <li>
        <p>immediate effects = ==rise of merchant== = wealth can surpass the gentry family = destabilize the social order</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221101135859684.png" alt="image-20221101135859684" style="zoom:25%;" /></p>

        <p>e.g. the above is a book written for gentry/scholar class to instruct them how one <em>spend silver in a way to not look poor</em> = anxiety of Confucian gentleman facing the threat of status change from merchant class</p>
      </li>
    </ul>
  </li>
  <li>
    <p><strong>Consequence of foreign trade</strong>:</p>

    <ul>
      <li>
        <p>increase in ==population==</p>

        <ul>
          <li>
            <p>recall that Song population grew due to new tech for agriculture + new crop from Vietnam</p>
          </li>
          <li>
            <p>similarly, in Qing: <strong>new crop from Amiercan by spanish colonizers</strong>. Maize, Sweet potatoes, etc, grows in places unsuitable for millet and rice and have high yield:</p>

            <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221101140025257.png" alt="image-20221101140025257" style="zoom:33%;" /></p>

            <p>hence also helped the life of poorer people</p>
          </li>
        </ul>
      </li>
      <li>
        <p>Ming fascinated by <strong>Europeans’s ballistic technology</strong>, e.g. cannon</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221101140323059.png" alt="image-20221101140323059" style="zoom:33%;" /></p>

        <p>many Chinese officials realized they are lagging behind in technology, and hence some advisers: should hire European governments to help defend northern enemies</p>
      </li>
      <li>
        <p>famous <strong>Jesuits</strong> in China:</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221101140717697.png" alt="image-20221101140717697" style="zoom:25%;" /></p>

        <ul>
          <li>
            <p>impersonate as Confucian scholar to blend into Chinese society at first</p>
          </li>
          <li>
            <p>aimed to convert Ming gentry to ==Christianity==, by reconciling Christian beliefs with Chinese beliefs</p>
          </li>
          <li>
            <p>managed to <strong>convert some but very small numbers to Christian</strong>, as many Chinese gentries are more interested in European tech than religion</p>
          </li>
          <li>
            <p>contribution to the world map = <strong>remembered as a person introducing western info + tech</strong> much more than as a preacher</p>

            <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221101140916588.png" alt="image-20221101140916588" style="zoom:25%;" /></p>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><strong>A new cultural form: novel</strong></p>

<ul>
  <li>
    <p>recall that good economy usually results in prosperity of culture</p>
  </li>
  <li>
    <p>Ming poetry becomes less important hence less poets from Ming (and Qing), <strong>but more into (fictitious) novels: 3 out of the 4 classics of Chinese literature produced</strong></p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221101141147687.png" alt="image-20221101141147687" style="zoom:33%;" /></p>

    <ul>
      <li>Journey to the west: Xuanzang’s trip to see Buddhist scripts during Tang, but a fantasied novel</li>
      <li>Three Kingdoms: is history</li>
      <li>The water margin: set in the northern Song period = how a group of 108 outlaws trying to rebel the government</li>
      <li>The Plum in the Golden Vase: 16th century work focusing on the corrupt noble in China = known for erotic reasons</li>
    </ul>
  </li>
  <li>
    <p>educated gentleman writes prose and fiction = those are more likely survive. The lack of novels in early time means novel might be there as well</p>

    <ul>
      <li>however, many novels are fictitious yet poems were real. Why are people suddenly interested in unreal things? Don’t know</li>
      <li>some say that it is due to Wang Yangming; others believe using easier language catered to a wider audience</li>
    </ul>
  </li>
</ul>

<p><strong>Changes in gender relations</strong></p>

<ul>
  <li>
    <p>overall, women facing ==increasingly intense subjugation==</p>

    <ul>
      <li><strong>female infanticide</strong>: wanted to keep small family size, hence kills girls rather than boys who can labor and continue family line</li>
      <li>revised inheritance and property laws = intended to help but reverse effect for women</li>
      <li>female seclusion = find themselves <strong>confined</strong> and even not allowed to visit temples a lot</li>
      <li>chastity cult = encouraged widow to be a widow. However, this was an ideal and in reality widow remarriage is common (as they lose properties from husband, due to Ming laws)</li>
      <li>foot-binding. started in Song, but in Ming becomes more extreme. Accepted by women as a way to ensure good marriage</li>
    </ul>
  </li>
  <li>
    <p>confined inside hence they are socializing within themselves.</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221101142217363.png" alt="image-20221101142217363" style="zoom: 25%;" /></p>
  </li>
  <li>
    <p>but there are also some ==benefits==</p>

    <ul>
      <li><strong>rising level of female education</strong> + <strong>men sponsored female readers &amp; writers</strong>. Perhaps because men are exerting so much control that they think nothing can go wrong by allowing these</li>
      <li><strong>compassionate marriage</strong>
        <ul>
          <li>perhaps better education means men can more easily communicate with women</li>
          <li>worship of personal feeling and sentiments = influence of Wang Yangming</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h1 id="qing-imperialism">Qing Imperialism</h1>

<p><strong>Previously in Ming and the World</strong></p>

<ul>
  <li>Ming Dynasty: large-scale trends in population growth, <strong>commercialization (again since Song)</strong>, and <strong>global trade (private maritime trades)</strong>
    <ul>
      <li>much global influence from private maritime trade. Discouraged by government due to piracy + political reasons + their northern enemies</li>
    </ul>
  </li>
  <li>==Single-Whip tax reform==: simplify taxation procedure, so that almost all are paid in cash (mostly ==silver==)
    <ul>
      <li>so that tax evasion becomes harder = increased government revenue</li>
      <li>but <strong>increased demand of silver</strong></li>
    </ul>
  </li>
  <li>large demand of silver faciliated global trade
    <ul>
      <li>export Chinese manufactured goods such as porcelain, imported silver from abroad</li>
      <li>also funded the rise of Atlantic (e.g. Spanish) empires</li>
    </ul>
  </li>
  <li>along with silver, <strong>Jesuit commissionaires</strong> also came to China aiming to convert Chinese to Roman Catholicism
    <ul>
      <li>reconciling Christian with Confucian pratices,</li>
      <li>but Chinese are more interested in European science and technology rather than religion, hence not very effective</li>
      <li>introduction of <strong>western science into China</strong></li>
    </ul>
  </li>
  <li><strong>Novel as a new literary genre</strong>: vernacular language and a wide readership</li>
  <li><strong>Women more subjugated but increased education</strong>
    <ul>
      <li>also more women publisher</li>
    </ul>
  </li>
</ul>

<h2 id="manchu-conquest">Manchu Conquest</h2>

<p><strong>Decline of Ming</strong>: several factors (importance is unranked)</p>

<ul>
  <li>early period we had aristocratic emperor, but later also <strong>inattentive emperor</strong>
    <ul>
      <li>Emperor Wanli reigned for a long time but stopped attending to court affairs for 30 years</li>
      <li>ruling often needs regulation and interventions; promotion needed his approval; But he simply did not care</li>
    </ul>
  </li>
  <li>climate changes and ==natural disasters==, such as <strong>famine</strong>, <strong>droughts</strong>, epidemics, <strong>cold spell,</strong> etc. in the 1630-1640s.
    <ul>
      <li>was also the coldest decade in Russian history = poor agriculture due to the cold as well = famine</li>
      <li>Beijing had frequent epidemic and grand canal become highways to spread</li>
    </ul>
  </li>
  <li><strong>collapse of fiscal system</strong> due to eventual shortage of silver
    <ul>
      <li>commoners do not have much silver to pay tax; govern cannot pay soldiers defending their borders</li>
      <li>80% of counties stopped forward taxation to central government</li>
      <li>Europeans became reluctant shipping silver to China as time goes on = also contributed to silver shortage</li>
    </ul>
  </li>
  <li>threats from <strong>Mongol and Jurchens</strong>
    <ul>
      <li>Ming also needed money to supply military = attempted to increase taxes, etc. all of which are non-popular approaches for the people</li>
    </ul>
  </li>
  <li>all of those combined gave <strong>revolts</strong>
    <ul>
      <li>the two most prominent groups led by former soldiers Li Zicheng (1606-1645) and Zhang Xianzhong (1606- 1647) eventually captured the capital Beijing</li>
    </ul>
  </li>
</ul>

<p><strong>Rise of Jurchens/Manchus</strong></p>

<ul>
  <li>recall that Jurchan were powerful <strong>during the Song</strong>: they established ==Jin金== dynasty, helped Song to defeat Khitans but turned to sack Kaifeng later
    <ul>
      <li>Jurchans established the Jin dynasty but also become much sinicized in the past and their</li>
      <li>Jin dynasty 1127 - 1200s, when later Mongols sacked and took control of northern China = Yuan dynasty</li>
      <li>in 1600s, they see themselves as Later Jin hence a <strong>political legitimacy</strong> for restoration of power</li>
    </ul>
  </li>
</ul>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221103132855563.png" alt="image-20221103132855563" style="zoom:25%;" /></p>

<ul>
  <li>brief overview: The Jurchens are chiefly known for producing the Jin (1115–1234) and Qing (1616/1636-1912) conquest dynasties on the Chinese territory. The latter dynasty, originally calling itself the Later Jin, was founded by a Jianzhou commander, <strong>Nurhaci (r. 1616–26), who unified most Jurchen tribes</strong>, incorporated their entire population into <strong>hereditary military regiments known as the Eight Banners</strong>, and patronized the creation of an alphabet for their language based on the Mongolian script.</li>
  <li>
    <p>they live in China’s north plain, had long engagement with Chinese in terms of trade, tribute, ally/enemy</p>
  </li>
  <li>Jurchans where <strong>half-sendantry</strong> = different from Mongols
    <ul>
      <li>had settlements, but also a lot of raids, enslaved captives, hunting and fishing, etc</li>
      <li>profited a lot from trade with Ming: Chinese liked <strong>ginseng</strong>. 25% silver went to Jurchen because of the ginseng trade = they now have money to fund military</li>
    </ul>
  </li>
  <li>rise of Jurchan as <strong>Nurhaci brought up a strong tribal confederacy</strong></li>
</ul>

<p><strong>Nurhaci: leader of Jurchen Confederacy</strong></p>

<ul>
  <li>
    <p>From the lineage of <strong>Aisin Gioro愛新覺羅</strong></p>
  </li>
  <li>
    <p>Ming’s divide and conquer strategy actually made his own tribe stronger</p>

    <ul>
      <li>first subjugated to Ming and used it to <strong>defeat other tribes</strong> to make his tribe strong</li>
      <li>in 1595 Ming awarded him the title of Dragon-Tier General</li>
      <li>eventually his tribe became the strongest, so <strong>Ming turned against him</strong>, and ==Nurhaci allied with Mongol tribes==</li>
    </ul>
  </li>
  <li>
    <p>in 1616 he declared himself the ==khan of the Great Jin== (restoration of Jin dynasty as descendents)</p>

    <ul>
      <li>captial at Mukden, modern Shenyang</li>
      <li>adapt Mongolian alphabet to the Jurchen speech</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221103133520903.png" alt="image-20221103133520903" style="zoom:33%;" /></p>

    <p>so Shenyang was the center of their political power</p>
  </li>
  <li>
    <p>another decisive step is the <strong>Eight Banner system</strong>: reconstituting social structure</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221103133613612.png" alt="image-20221103133613612" style="zoom: 25%;" /></p>

    <ul>
      <li>
        <p>each banner is a permanent group also a <strong>fighting unit + unit of residence</strong></p>

        <ul>
          <li>included dependants of fighting mens includeing women children and servants</li>
        </ul>
      </li>
      <li>
        <p>hence <strong>shared identity and shared clothing within a group</strong></p>
      </li>
      <li>
        <p>over time, each banner becomes somewhat ethnic groups = close relationship within the group, but not purely one ethnic within a group</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221103133752655.png" alt="image-20221103133752655" style="zoom:25%;" /></p>
      </li>
    </ul>
  </li>
</ul>

<p><strong>Hong Taiji’s creation of Manchu Qing</strong></p>

<ul>
  <li>succeeded Nurhaci, second Khan of later Jin</li>
  <li>declares himself emperor of the ==Great Qing==
    <ul>
      <li>Qing because Qing = clear, hence water related &gt; Ming = fire (and moon)</li>
      <li>this new dynasty name is a clear announcement of his intention to conquer Ming</li>
    </ul>
  </li>
  <li>some measures he took to rule include
    <ul>
      <li>ordered translations of Chinese culture to Jurchen so he could study them</li>
      <li>moved towards Chinese-style burearcarcy centralization</li>
      <li>in 1636 he creates a new identity for his people called ==Manchu==</li>
    </ul>
  </li>
  <li>one key thing to realize is that ==Manchus are also not one ethnicity== = rather amalgamation of steppe nomadic people + sedentary Chinese + etc. Therefore, Manchu as an “ethnicity” more like a <strong>political construct</strong></li>
</ul>

<p><strong>Manchu Identity</strong></p>

<ul>
  <li>
    <p>Manchu identity is <strong>not determined by birth</strong>, but by just being a member of the Banner</p>

    <ul>
      <li><strong>a tool for integration</strong>: shared identity overcame linguistic-ethnic differences of banner families that included Jurchen, Mongols, Korean, Chinese</li>
      <li><strong>a tool for segregation</strong>: emphasized unique claim of Manchus to rule China.</li>
    </ul>
  </li>
  <li>
    <p>They also emphasized identity markers such as hair styles and clothing, to be <strong>different from that of Han people</strong></p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221103134331632.png" alt="image-20221103134331632" style="zoom:25%;" /></p>

    <p>so men hair style become political tool as well: shows who you are submissive to.</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221103134354376.png" alt="image-20221103134354376" style="zoom:25%;" /></p>

    <p>examples of Manchu clothing is more diverse. e.g. soldiers uses a lot of bows</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Soldiers</th>
          <th style="text-align: center">Qing Officials</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221103134659635.png" alt="image-20221103134659635" style="zoom: 25%;" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221103134730021.png" alt="image-20221103134730021" style="zoom:25%;" /></td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <p>Manchu also <em>tried</em> to forbid ==women== to foot-binding</p>

    <ul>
      <li>but that ban didn’t work: foot-binding practices are already very entrenched in Han Chinese minds, and it was seen as attractiveness/object of sexual desire</li>
      <li>so most Manchu women don’t bind their feet, but Han people still continue the practice</li>
      <li>why no enforcing this change like with mens’ hairstyle? perhaps because men already submitted, no need to change women</li>
      <li>but the general trend in Ming and Qing can also be viewed as <strong>tightening controls of its people = also of women</strong>
        <ul>
          <li>Ming being active in domestic affairs with its Lijia policy, and using morality manuals (Sacred Edict of Six Maxims)</li>
          <li>prior to Ming, pre-martial sex was not proscribed. But in Ming and Qing there are a lot of much focus on chastity = <strong>interference</strong> from government</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><strong>Qing conquest of Korea and Japan</strong></p>

<ul>
  <li>wanted to at least prevent Korea to join Ming to fight against them, so basically <strong>conquered Korea</strong> (but left little cultural footprint)
    <ul>
      <li>initially, Korea see Jurchens as barbarians = many had Confucius thoughts</li>
      <li>Korea also wanted to help Ming because, before when Japan tried to invade Korea, Ming helped.</li>
      <li>but eventually Korea surrendered to Manchu due to their military strength and became <strong>vassal state of Qing</strong>
        <ul>
          <li>so no choice but to join conquest to Ming</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>sees themselves as <strong>repository Confucian hence named themselves soHwa</strong>
    <ul>
      <li>as in fact it is true: Ming is the <em>last dynasty ruled by Han Chinese</em></li>
    </ul>
  </li>
  <li>Qing conquest of Ming also shocked Japanese
    <ul>
      <li>the Japanese sees this as Ka-i Hental華夷變態 = transformation of China from civilized to barbarian</li>
      <li>(recall that during Tang, they see Chinese as a model for culture and civilization)</li>
      <li>so after this, Japanese also think that East Asian culture superiority is no longer in China, but in Japan</li>
    </ul>
  </li>
</ul>

<p><strong>Last Years of Ming empire</strong>: there player. Ming, the Rebels, Hong Taiji’s successor</p>

<ul>
  <li>Ming asked Manchu to help quell the rebel, but eventually they had a bigger plan and conquered the whole China</li>
</ul>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221103135745712.png" alt="image-20221103135745712" style="zoom:25%;" /></p>

<ul>
  <li>
    <p>Qing took several yeas to conquer China proper, and expanded territories</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221103135823958.png" alt="image-20221103135823958" style="zoom:25%;" /></p>
  </li>
  <li>
    <p>Qing had <strong>remarkably capable</strong> emperors = ==High Qing==: <strong>Kangxi</strong> Emperor (r. 1654-1722) <strong>Yongzheng</strong> Emperor (r. 1722-1735) <strong>Qianlong</strong> Emperor (r. 1735-1796)</p>
    <ul>
      <li>set most of the boundaries of today’s China: Xingjiang, Tibet, etc</li>
    </ul>
  </li>
</ul>

<blockquote>
  <p><strong>Kangxi</strong></p>

  <ul>
    <li>The Kangxi Emperor is considered one of China’s greatest emperors.</li>
    <li>He suppressed the Revolt of the Three Feudatories, forced the Kingdom of Tungning in Taiwan and assorted Mongol rebels in the North and Northwest to submit to Qing rule, and blocked Tsarist Russia on the Amur River, retaining Outer Manchuria and Outer Northwest China.</li>
    <li>The Kangxi Emperor’s reign <strong>brought about long-term stability and relative wealth</strong> after years of war and chaos. He initiated the period known as the “Prosperous Era of Kangxi and Qianlong” or <strong>“High Qing”</strong>, which lasted for several generations after his death.</li>
  </ul>

  <p><strong>Yongzheng</strong></p>

  <ul>
    <li>A hard-working ruler, the Yongzheng Emperor’s main goal was to create an ==effective government at minimal expense==. Like his father, the Kangxi Emperor, the Yongzheng Emperor used military force to preserve the dynasty’s position.</li>
    <li>Although Yongzheng’s reign was much shorter than that of both his father (the Kangxi Emperor) and his son (the Qianlong Emperor), the Yongzheng era was a <strong>period of peace and prosperity</strong>.</li>
    <li>Yongzheng Emperor cracked down on corruption and reformed the personnel and financial administration</li>
  </ul>

  <p><strong>Qianlong</strong>:</p>

  <ul>
    <li>As a capable and cultured ruler inheriting a thriving empire, during his long reign, the Qing Empire reached its most splendid and prosperous era, boasting a large population and economy.</li>
    <li>As a military leader, he led military campaigns ==expanding the dynastic territory to the largest extent by conquering and sometimes destroying Central Asian kingdoms==.</li>
    <li>This turned around in his late years: the Qing empire began to decline with corruption and wastefulness in his court and a stagnating civil society.</li>
  </ul>
</blockquote>

<p><strong>Qing Conquest of Taiwan in 1683</strong></p>

<ul>
  <li>
    <p>recall that Dutch conquered in 1623 and established their colony in Taiwan</p>
  </li>
  <li>
    <p>brief history of Taiwan</p>

    <ul>
      <li>
        <p>Fall of Ming 1640-1650: people from Fujian started settling there, and <strong>Ming loyalists retreated</strong> to Taiwan</p>
      </li>
      <li>
        <p><strong>Zheng Chengong</strong> 1662: drove out the dutch and more=100k Chinese emigrated there</p>
      </li>
      <li>
        <p>==Qing defeated the Zheng regime 1683==: but allow it to exist autonomously and made it a <strong>prefecture</strong> (district under the government of a prefect) of <strong>Fujian</strong></p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221103140256769.png" alt="image-20221103140256769" style="zoom: 33%;" /></p>
      </li>
      <li>
        <p>in 1870s, Taiwan became its own province as it is a key port for martime trade</p>
      </li>
      <li>
        <p>1894-1895 after Sino-Japanese war and WWII: <strong>became part of Japan</strong>. A lot of buildings today still have Japanese style</p>
      </li>
      <li>
        <p>at the end of 1945-1949: 孙中山 being the first leader of the Kuomintang (Nationalist Party of China), lost and followers immigrated to Taiwan.</p>

        <ul>
          <li>Thinking they can go back and recover, but obviously never happened. These are also considered as <em>Waisheng</em> and don’t speak Taiwanese (now the “ethnic” gap is much smaller)</li>
          <li>since many Waisheng are governments, so they are also kind of upperclass in Taiwan</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>therefore, Taiwanese very much takes over from <em>Mingnan</em> dialect from Fujian</p>
  </li>
  <li>
    <p>but again, Qing in general had loose control over newly conquered regions</p>
  </li>
</ul>

<p><strong>Qing conquest of Dzungar Mongols</strong></p>

<ul>
  <li>western Dzungar dmoinated the west euroasia in 1630</li>
  <li>long batter with Dzungar Mongol, and <strong>subdued Dzungar Mongol in 1696</strong></li>
  <li>but a lot of revolt by Dzungar Mongols = Qing launched genocide in 1750s
    <ul>
      <li>effectively <strong>ended the northen Mongol problem</strong></li>
    </ul>
  </li>
</ul>

<p><strong>Qing conquest in Tibet</strong></p>

<ul>
  <li>Dzungar mongols tried to expand into Tibet = hence they invaded in 1717</li>
  <li>so Qing invaded Tibet and ==installed a pro-Qing Dalai Lama==; Tibet became a protectorate</li>
  <li>but again little interference in Tibetan local governance: hence maintained Tibetan culture</li>
</ul>

<p><strong>Qing creation of Xinjiang</strong></p>

<ul>
  <li>
    <p>in the Han dynasty, some chinese troops stationed there, but not in Tang and Song as Chinese had lost control</p>
  </li>
  <li>
    <p>finally re-acquired by the Qing = again Qianlong’s troops basically <strong>massacred Dzungar troops and completed subjudation</strong></p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221103140836249.png" alt="image-20221103140836249" style="zoom: 25%;" /></p>
  </li>
  <li>
    <p>after this conquest, in 1768 announced the formal annexation = <strong>Xingjing, meaning new dominion</strong></p>

    <ul>
      <li>but again, territory under control of Manchus, but <strong>local poeple also allowed to contine their practice</strong></li>
      <li>no restrictions as with Han chinesemen</li>
    </ul>
  </li>
  <li>
    <p>however, maintenance of far territory is also a <strong>financial burden</strong>, e.g. military spending. Therefore, perhaps most effective use of Xinjing in Qing is as a <strong>penal colony = 10% officials in Xingjinag as punitive banishment</strong></p>
  </li>
</ul>

<p><strong>Managing large territory and diverse people</strong></p>

<ul>
  <li>
    <p>==Qianlong== assumed different persona to different audiences = portray him in many different costumes</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">as Manjusri</th>
          <th style="text-align: center">as Confucian</th>
          <th style="text-align: center">as European-style Warrior</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221103141308857.png" alt="image-20221103141308857" style="zoom:33%;" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221103141345240.png" alt="image-20221103141345240" style="zoom:25%;" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221103141428175.png" alt="image-20221103141428175" style="zoom: 33%;" /></td>
        </tr>
      </tbody>
    </table>

    <p>e.g. as Manjusri = appeal to Laima in Tibet, or as Confucian scholar when speaking to Han Chinese</p>

    <ul>
      <li><strong>acknowledges culture differences</strong> and ethnic distinctions, also especially wanted to <strong>preserve his Manchu ethnicity</strong></li>
    </ul>
  </li>
  <li>
    <p>so in general, Qing are interested in conquering <em>new</em> lands but <strong>not governing those <em>new</em> land</strong></p>

    <ul>
      <li>global history: Russian expanded east-ward: time of imperial land grabbing = have as much land as possible = control over resources</li>
      <li>but remember those from Qing are not peaceful conquest = e.g. Xinjiang lots of people massacred due to dissent. So still insisting on their <strong>political dominance but not really in establishing culture statues</strong></li>
    </ul>
  </li>
</ul>

<p><strong>Euroiserie in China</strong>: Yuanming Yuan built near a lake outside Beijing</p>

<ul>
  <li>
    <p>imperial palace began construction in 1707, added a number of <strong>western</strong> style building with the aid of <strong>Jesuit architects</strong></p>
  </li>
  <li>
    <p>unfortunately destroyed by British and French in 1860. Historical drawings shown below, and attempts of restoration in progress</p>

    <p>| <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221103141816162.png" alt="image-20221103141816162" style="zoom: 33%;" /> | <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221103141923398.png" alt="image-20221103141923398" style="zoom:33%;" /> |
| :———————————————————-: | :———————————————————-: |</p>
  </li>
</ul>

<h2 id="the-qing-in-crisis-opium--western-imperialism">The Qing in Crisis: Opium &amp; Western Imperialism</h2>

<p><strong>Previously on the Qing Conquest</strong></p>

<ul>
  <li>Decline of Ming and rise of Manchu Qing
    <ul>
      <li>Ming facing adverse climate, peasant rebellion, etc</li>
      <li>Peasant rebellions give opportunity to Manchus from NE China, descendants of Jin金</li>
    </ul>
  </li>
  <li>Qing did <strong>really well</strong> and controlled China for almost 3 centuries</li>
  <li>Qing used the <strong>Banner System</strong> which constructed a “political” ethnicity
    <ul>
      <li>a banner group represents a unit of a military organization/ unit of residence</li>
      <li>joining to be a Bannerman = being a Manchu = an “invented” ethnic group</li>
    </ul>
  </li>
  <li>Manchu Qing emphasizes that Manchus were ==not just Sinicized, but regarded Qing as a multiethnic empire==;
    <ul>
      <li>e.g. Qianlong with multiple faces, different policies, etc.</li>
    </ul>
  </li>
  <li>==High Qing:== <strong>territory</strong> reached the greatest extent
    <ul>
      <li>18 century: unrivaled standard of living and invention flow more from east to west</li>
      <li>19 century: outmatched by western countries</li>
    </ul>
  </li>
</ul>

<p><strong>The Canton System</strong>: Qing’s international trade</p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221110132343392.png" alt="image-20221110132343392" style="zoom:33%;" /></p>

<ul>
  <li>
    <p>Qing <strong>legalized private maritime commerce</strong>, though restricted to Canton</p>

    <ul>
      <li>there were many prosperous trade ports, but all abandoned by people and finally went with <strong>Canton = most dominate place in sino-western trade</strong></li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221110132453325.png" alt="image-20221110132453325" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>wanted to control western influence</p>

    <ul>
      <li>control with inflow of western foreigners: fear illegal infiltration of western missionaries</li>
      <li>therefore, in 1757: Canton the sole port open for Western trade</li>
      <li>1760 court imposed <strong>regulations on foreigners</strong> (e.g. their mobility) in order to keep them from disturbing Chinese
        <ul>
          <li>even when trading, they need to deal with designated Qing merchants (hong行)</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><strong>13 Hongs of Canton</strong>: 十三行</p>

<ul>
  <li>
    <p>Chinese merchants controlled business and <strong>monitored European trades</strong></p>

    <ul>
      <li>Hong = A hong 行 originally designates both a type of building and a type of Chinese merchant intermediary in Guangzhou (formerly known as Canton), Guangdong, China, in the 18–19th century, specifically during the Canton System period.</li>
      <li>foreigners can only spend a few weeks in the Hong, then return to Macao, which was still a Portuguese colony</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221110132833326.png" alt="image-20221110132833326" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>Wu Bingjian 伍秉鑑 (1769–1843), known as “Howqua”浩官: ==most powerful merchant at the time==</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221110133615919.png" alt="image-20221110133615919" style="zoom:33%;" /></p>

    <ul>
      <li>all Chinese home merchants belong to a guild: Cohong 公行 =  responsible for policing the trade with westerners</li>
      <li>granted right to monopolize import and export trade, but in turn <strong>guarantee to government all duties and proper behavior of western</strong></li>
      <li>he also involved in the opium trade = people in China today therefore have a fixed feeling towards him</li>
    </ul>
  </li>
  <li>
    <p>during 18th century, <strong>industrial revolution in Britain made it became leading commercial nation</strong> with colonies (e.g. in India)</p>

    <ul>
      <li>English trade with China monopolized by British East India Company = allowed by Queen Victoria</li>
      <li>but this powerful company is still restricted by Chinese Hong in Canton</li>
    </ul>
  </li>
</ul>

<blockquote>
  <p>The <strong>Industrial Revolution</strong> was the transition to ==new manufacturing processes in Great Britain, continental Europe, and the United States==, that occurred during the period from around 1760 to about 1820–1840.</p>

  <ul>
    <li>This transition included going from <strong>hand production methods to machines</strong>, new chemical manufacturing and iron production processes, the increasing use of steam power and water power, the development of machine tools and the rise of the mechanized factory system.</li>
    <li>Output greatly increased, and a result was an <strong>unprecedented rise in population and in the rate of population growth</strong>.</li>
  </ul>
</blockquote>

<p><strong>Macartney Mission of 1793</strong>:</p>

<ul>
  <li>
    <p>British <strong>wanted to improve profits/trade footholds in China</strong>, e.g. get tea cheaper and establish footholds to store goods</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221110134153766.png" alt="image-20221110134153766" style="zoom:33%;" /></p>

    <ul>
      <li>
        <p>hence wanted China to abandon tribute system = towards more in how European deal with each other</p>
      </li>
      <li>
        <p>a more direct trade. Free trade + <strong>Adam Smith = Wealth of Nation</strong> = justify British idea to ask China abandon Canton system</p>
      </li>
    </ul>
  </li>
  <li>
    <p>requests include</p>

    <ul>
      <li>
        <p>open commercial warehouse in Beijing</p>
      </li>
      <li>
        <p>sought extra territoriality:British nationals exempt from the Qing legal jurisdiction</p>
      </li>
    </ul>

    <p>i.e. wanted to revise the canton system to <strong>trade more freely in China</strong></p>
  </li>
  <li>
    <p>Therefore, missionaries sent to China brought some interesting European goods but Qianlong is not interested in</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221110195847636.png" alt="image-20221110195847636" style="zoom:33%;" /></p>

    <p>notice that in this painting westerner <strong>tried to portray Chinese as despotic and un-understanding</strong>, because Qianlong (in his 80s) decisively <strong>refused all British request</strong> in a very condescending/arrogant tone:</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221110134503496.png" alt="image-20221110134503496" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>Why did Qianlong reject those requests?</p>

    <ul>
      <li>fundamentally, those requests themselves are somewhat went overboard.</li>
      <li>perhaps Qianlong is not interested in western goods? Note that they <strong>did collected a lot of western gifts from other countries</strong>, so it is what presented was not new = China didn’t really need British manufactures
        <ul>
          <li>however, later on the major problem is his ==slight on western (military) tech==</li>
        </ul>
      </li>
      <li>perhaps because the missionaries did not kowtow? Recent research shows that obsession of the ritual does not come from Qianlong, but the missionaries</li>
    </ul>
  </li>
  <li>
    <p>Why was Qianlong so arrogant?</p>

    <ul>
      <li>
        <p>indeed, China was powerful as there is a huge trade imbalance: silk and porcelain, and tea became drink of choice in Britain</p>
      </li>
      <li>
        <p><strong>large amount of silver flow into China</strong>,</p>

        <p>| <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221110135252789.png" alt="image-20221110135252789" style="zoom:33%;" /> | <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221110135349779.png" alt="image-20221110135349779" style="zoom:33%;" /> |
| :———————————————————-: | :———————————————————-: |</p>
      </li>
      <li>
        <p>so British had to have plans of <strong>coming up alternatives commodity to trade</strong>:</p>

        <ul>
          <li>cotton + silver from new world</li>
          <li>tried to re-sell tea to the US to get profit: <strong>Boston Tea Party</strong>. The target was the Tea Act of May 10, 1773, which allowed the British East India Company to sell tea from China in American colonies <strong>without paying taxes</strong> apart from those imposed by the Townshend Acts. Hence is unfair and Americans dumped/destroyed entire shipment of tea</li>
          <li>Finally, British turned to opium</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>Opium trade with China</p>

    <ul>
      <li>opium was not new, but only used for medical purposes before</li>
      <li>17th century: smoking opium and tabacco caught on in China, just like how British took tea.</li>
      <li>The <strong>great demand of opium</strong> then solved the trade deficit with Britain</li>
      <li>19th century: net outflow of silver from China due to opium trade</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221110135724678.png" alt="image-20221110135724678" style="zoom:33%;" /></p>
  </li>
</ul>

<p><strong>Opium Imports from India to China</strong></p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221110140059672.png" alt="image-20221110140059672" style="zoom:33%;" /></p>

<ul>
  <li>opium became major product in China over time
    <ul>
      <li>EIC monopoly ended and private trade (e.g. Russel &amp; Company) begins, even more opium (like freedom of trade)</li>
      <li>e.g. lots of American gained most fortune from China trade</li>
    </ul>
  </li>
  <li>then obviously this caused a lot of <strong>problems</strong>
    <ul>
      <li><strong>2 million addicts in China</strong></li>
      <li>difficult for Chinese to enforce ban
        <ul>
          <li>attempted 1729 first opium ban; 1800, banned importation and domestic production</li>
          <li>however, this <strong>did not work</strong> (even open trading disappeared) because there are lots of European <strong>smuggling + corruption</strong> from local officials and <strong>underground networks</strong></li>
        </ul>
      </li>
      <li>since opium was illegal, Qing made no tax revenue from it</li>
      <li>net silver flow out = silver shortage soon caused problem in money supply
        <ul>
          <li>2 million taels deficit in 1820s and 9 million in early 1830s</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><strong>The Opium War and its Aftermath</strong></p>

<ul>
  <li>opium war fundamentally changed the relationship between China and the Western
    <ul>
      <li>before, China shows <strong>dominance</strong> over western power, like how most civilization in centered in China and how Mongol/northern tribes conquered lots of territories, and establishing <strong>tributary/vassal states</strong></li>
      <li>now, difference in technology made <strong>China lag much behind western in power</strong></li>
    </ul>
  </li>
  <li>
    <p>Emeperor appointed ==Lin Zexu== to destroy opium at Humen</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221110140939345.png" alt="image-20221110140939345" style="zoom:33%;" /></p>

    <ul>
      <li>Charles Elliot (Chief Superintendent of British Trade in China) promised to <strong>compensate the merchants after confiscation, but did not happen</strong> after Lin confiscated them</li>
      <li>hence English commercial interest <strong>pushing war</strong> with China, so Lin’s confiscation of opium became a justification for war</li>
    </ul>
  </li>
  <li>
    <p>Qing navy was ==ill prepared against British navy forces==</p>

    <ul>
      <li>China had no significant government input in maritime tech after Zhenghe’s voyage</li>
      <li>in general, low tax imposed = low research fund for strong navy power</li>
      <li>ended up having fully iron warship from British v.s. wood ship in China</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221110141548241.png" alt="image-20221110141548241" style="zoom:33%;" /></p>
  </li>
</ul>

<p><strong>Treaty of Nanjing</strong>: defeat and humiliation</p>

<ul>
  <li>
    <p>China lost easily and is forced to <strong>sign unequal treaties</strong></p>
  </li>
  <li>
    <p>those treaties include:</p>

    <ul>
      <li>
        <p>21 million silver paid to England as punitive indemnity</p>
      </li>
      <li>
        <p>“opening” of treaty ports, such as Shanghai (later, “concessions”)</p>
      </li>
      <li>
        <p>gave England Hong Kong ‘in perpetuity’ (later, returned in 1997)</p>
      </li>
      <li>
        <p>pressured more opium trades</p>
      </li>
      <li>
        <p>low tariff set for the English</p>
      </li>
      <li>
        <p>in 1843: extra-territoriality: Qing laws did not apply to the English in Qing territory. (e.g., Englishmen could kill</p>

        <p>Chinese and not be subject to Qing law. )</p>
      </li>
    </ul>
  </li>
  <li>
    <p>all of those ==undermined Qing’s autonomy==</p>

    <ul>
      <li>other treaties are also signed after Treaty of Nanjing</li>
      <li>China gradually had to rely on European, <strong>opium trade continued</strong>, even more unequal treaties</li>
      <li>Christian missionaries are allowed to preach</li>
    </ul>
  </li>
</ul>

<p><strong>“Century of Humiliation”: the PRC’s narrative of national history</strong></p>

<ul>
  <li>
    <p>this period refers to when China lost control of territories to Westerners, and starts with the Opium War (approximately 1839 - 1949)</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221110142249123.png" alt="image-20221110142249123" style="zoom:33%;" /></p>

    <p>emphasize national rejuvenation by the community party</p>
  </li>
  <li>
    <p>lots of <strong>current policy is driven by the fear of China losing to western power</strong></p>

    <ul>
      <li>China’s modern-day policies are driven by this “never again” mentality.</li>
    </ul>
  </li>
</ul>

<h2 id="from-taiping-to-sino-japanese-war">From Taiping to Sino-Japanese War</h2>

<p><strong>Previously on the Qing Opium Crisis</strong></p>

<ul>
  <li><strong>Canton System</strong> (1757-1839/42): regulated Qing’s trade with the West through Chinese hong merchants; restrictive yet worked well before the abolition of the EIC’s monopoly in 1834</li>
  <li>
    <p>Mccartney Embassy (1793) is Britain’s attempt to revise the Canton System, it features two expansionist empires, bringing competing notions of world order; taken as a misinformed example of <strong>British flexibility vs. Chinese rigidity and xenophobia</strong></p>
  </li>
  <li>British E. India Company ships opium to Qing, in exchange for silver and goods; Qing court orders opium confiscated from British and destroyed, triggering Opium War (1839-42), <strong>Treaty of Nanjing</strong> is first of many <strong>‘unequal treaties’</strong></li>
</ul>

<p><strong>Domestic Problems under Qing</strong>: towards later rebellion</p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221115131925018.png" alt="image-20221115131925018" style="zoom:33%;" /></p>

<ul>
  <li>
    <p>recall that Qing at its best time (High Qing) had large territory and high standard of living</p>

    <ul>
      <li>around the turn 19 century, government failures and international relations caused trouble</li>
    </ul>
  </li>
  <li>
    <p>now, <strong>silver became scarce</strong> after 1800—especially due to silver outflows from China in order to purchase British EIC opium.</p>

    <ul>
      <li>silver scarcity meant more copper cash required to <strong>pay same taxes (in silver)</strong>.
        <ul>
          <li>in 1750: one tael of silver needed 780 copper cash</li>
          <li>in 1838: one tael of silver needed 1,650 copper cash.</li>
          <li>in effect, silver scarcity meant tax burden more than doubled</li>
        </ul>
      </li>
      <li>people can’t pay → taxes more burden on taxpayers → tax evasion → less governments revenue → weaker government</li>
    </ul>
  </li>
  <li>
    <p>source of internal unrest: <strong>limited resource and population pressure</strong></p>

    <ul>
      <li>recall end of Ming had climate change and wars, where starting from Qing 1640 increases</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221115132218907.png" alt="image-20221115132218907" style="zoom:33%;" /></p>

    <ul>
      <li>however, as more population <strong>amount of arable land is still fixed</strong></li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221115132322946.png" alt="image-20221115132322946" style="zoom:33%;" /></p>

    <p>hence this lead to environment degradation and competition for resources</p>

    <ul>
      <li>unstable water ecosystems due to intense land reclamation</li>
      <li>deforestation = erosion, flooding, and desertification = 30,000 died in Kaifeng due to flooding. From 1645 to 1855, a flood almost every 1.89</li>
    </ul>
  </li>
  <li>
    <p><strong>talent glut</strong> = talent grows faster than the number of jobs available = students being jobless</p>

    <ul>
      <li>lower degree holders: 40k in 1400; 600k in 1700; over 1 million in 1800 (but gov only fixed 20k official posts)</li>
      <li>a social problem, hence <strong>causing those unemployed/underpaid people indignant</strong>, who later contributes to rebellion (combined with factors above)</li>
    </ul>
  </li>
  <li>
    <p>two of the largest (many) <strong>civil wars</strong> that occurred in Qing in 19th century</p>

    <ul>
      <li><strong>Taiping</strong> rebellion (1850-64)</li>
      <li><strong>Nian</strong> rebellion (1851-68)</li>
    </ul>
  </li>
</ul>

<p><strong>Outbreaks of Many Rebellions</strong></p>

<ul>
  <li>
    <p><strong>White lotus rebellion</strong> (1796-1804)</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221115133127394.png" alt="image-20221115133127394" style="zoom:25%;" /></p>

    <ul>
      <li>White Lotus Society: a millenarian Buddhist secret society that first appeared in the Yuan dynasty</li>
      <li>help poor people, women played leadership roles</li>
      <li>political movement of grass roots society in the area shown above, and organized them into rebel movement
        <ul>
          <li>again a <strong>result of economic strain, overpopulation, government corruption, etc</strong></li>
          <li>impoverished peasants feeling indignant</li>
        </ul>
      </li>
      <li>took 8 year to take them out and spent 5 years of government = further stress in government</li>
    </ul>
  </li>
  <li>
    <p><strong>Eight Trigram</strong>: another secret society</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221115133335829.png" alt="image-20221115133335829" style="zoom:25%;" /></p>

    <ul>
      <li>in 1813, off-shoot of white lotus, again became a rebellion and many people died</li>
    </ul>
  </li>
  <li>
    <p><strong>Triads</strong></p>

    <ul>
      <li>impoverished, hence people formed fraternity group = anti-Manchu and pro-Han</li>
      <li>smuggling activity and armed quarrels = quite militant group of people</li>
    </ul>
  </li>
  <li>
    <p><strong>Taiping Rebellion</strong> (more detail next)</p>
  </li>
  <li>
    <p>other rebellions such as</p>

    <ul>
      <li><strong>Nian Rebellion</strong>
        <ul>
          <li>crushed by Generals <strong>Zuo Zongtang 左宗棠</strong> and Li Hongzhang 李鸿章</li>
          <li>chef invented that General Zuo’s Chicken 左宗棠鸡 is from the same Hunan province, has nothing to do with Zuo Zongtang as person</li>
        </ul>
      </li>
      <li><strong>Panthay Rebellion</strong>: ethnic tension between Muslim and Manchu</li>
      <li><strong>Ya’qub Beg Khante</strong>: turkey had Muslim establish autonomous regime, then suppressed by Zuo Zongtang</li>
    </ul>
  </li>
</ul>

<p><strong>Structural Difficulties of Managing Crisis</strong></p>

<ul>
  <li>country too large and too populous
    <ul>
      <li>many ethnic groups, and population <strong>outpaced administrative control</strong></li>
      <li>limitations of bureaucratic efficiency before telegraph and rail (e.g. wrong info from local)</li>
    </ul>
  </li>
  <li>competing national and <strong>local</strong> interests
    <ul>
      <li>e.g., local officials overreported rebel threats to siphon funds.</li>
    </ul>
  </li>
</ul>

<p><strong>Taiping Heavenly Kingdom</strong></p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221115134718029.png" alt="image-20221115134718029" style="zoom:33%;" /></p>

<ul>
  <li>
    <p>greatest revolution the world has yet seen</p>

    <ul>
      <li>people are positive about the revolution as being confident in the portrayal</li>
      <li>involves both peasants and failed exam takers, being indignant of the stresses</li>
    </ul>
  </li>
  <li>
    <p>starts from the South: where may conflicts are from locals and <strong>Hakka</strong> (guest, ethnically Han who fled from north to South to evade from Xiongnu during the Han dynasty)</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221115134952213.png" alt="image-20221115134952213" style="zoom:33%;" /></p>

    <p>as newcomers, Hakkas are seen to compete resources and not welcomed by locals</p>

    <ul>
      <li>architecture themsleves with a hole is for defensive purpose = tension with the locals</li>
      <li>can be found in Guandong, Guangxi, and Fujian</li>
    </ul>
  </li>
  <li>
    <p><strong>Hong Xiuquan = a Hakka who organized the rebellion</strong></p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221115170953866.png" alt="image-20221115170953866" style="zoom:33%;" /></p>

    <ul>
      <li>from a poor family,  failed examination four times.
        <ul>
          <li>after failed the 3 time = had dream vision who when he was the second son of God, and brother of Jesus.</li>
        </ul>
      </li>
      <li>then he
        <ul>
          <li>smashed shrines dedicated to <strong>Buddhist and Confucian</strong> worship.</li>
          <li>added <strong>anti-Manchu strain to his preaching</strong></li>
          <li>calling people to rise up and defeat the Manchu rulers</li>
        </ul>
      </li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221115135542705.png" alt="image-20221115135542705" style="zoom:33%;" /></p>

    <p>eventually they expanded and included people outside of Hakka and went all the way to Nanjing, and made it a capital. There, he urges for</p>

    <ul>
      <li>==equalization== of land holdings, ==equality== of men and women</li>
      <li>==equal== exam but test on stuff such as translation of bibles instead Confucian classics</li>
      <li>==Utopian== view of the society</li>
    </ul>
  </li>
  <li>
    <p><strong>Western reactions to Taiping</strong>: Taiping armies known for their puritanical zeal</p>

    <ul>
      <li>western (both english and american) missionaries hoped Taiping will succeed
        <ul>
          <li>Hong Xiuquan claims to be related to Jesus = hope it will succeed and convert Chinese to Christian</li>
        </ul>
      </li>
      <li>European liked to because it is radial and revolutionary (devotion of equality)</li>
      <li>English government: was neutral and they wanted just trade. So they took advantage of it help Chinese to quell the rebellion and in turn <strong>take more privileges in trade</strong> (heavily dependent in trading in China and US)
        <ul>
          <li>note that US civil war is also during 1681 = less supply/trade from US; and similarly Taiping broke out in China</li>
          <li>English fear that their trade econ will collpase as they are major traders</li>
          <li>so they need to interfere somewhere = decided to intervene in China</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>but the largest credit of quelling Taiping still goes to ==Han Chinese officials==</p>

    <ul>
      <li>note those Han Chinese ==gentry== (not people who failed, who usually join rebels) ==have not much anti-Manchu thougths==</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221115140518034.png" alt="image-20221115140518034" style="zoom: 25%;" /></p>

    <ul>
      <li>he built an army from his home province = Hunan, hence Xiang Army</li>
      <li><strong>financed through local gentry</strong> instead of Manchu lead government</li>
      <li>indicates a ==shifting (military) power to locals== from the center/government (e.g. rise of Han)</li>
    </ul>
  </li>
  <li>
    <p>the Taiping rebellion caused</p>

    <ul>
      <li>nation-wide: affected 16 out of 18 provinces</li>
      <li>unprecedented death toll: <strong>at least 20 million, up to 40 million</strong>. (by comparison, 620,000 died in the American Civil War)</li>
      <li>devastated the economically important lands south of Yangzi.</li>
      <li>so close to bring down the Qing dynasty, but didn’t.
        <ul>
          <li>Recall that the pattern of rebellion replacing dynasty was: warlords rise in power to quell the rebellion, but after they compete and winner takes a new Dynasty</li>
          <li>Now, the army still remains to be part of the imperial army. But after this local provincial army became so strong = replacing Manchu garrisons as major power = ==shift of balance of power from government to the locals==</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>this rebellion in total lasted 15 years, because Qing was also busy doing something else: fighting the Europeans</p>
  </li>
</ul>

<p><strong>The Second Opium War</strong> (1856-1860). Also called Arrow War</p>

<ul>
  <li>
    <p>right in the middle of Taiping Rebellion, <strong>China was also engaging with great Britain and France</strong> in addition to Taiping rebels</p>
  </li>
  <li>
    <p>called Arrow War as it is named by the Ship in suspicion of piracy, how ever it is layer registered with English.</p>

    <ul>
      <li>British use this incident as <strong>pretext to start war</strong>, to add more unequal terms to treaty</li>
      <li>at the same time, a French was to be executed, hence French joined as well</li>
    </ul>
  </li>
  <li>
    <p>ended with (second) defeat of Qing government to the English</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221115141216430.png" alt="image-20221115141216430" style="zoom:33%;" /></p>

    <p>resulted in</p>

    <ul>
      <li>burn down of Summer Palance (built for Qianlong and his successors and had European style architectures)</li>
      <li>more unequal treaty signed (<strong>1860 Convention of Peking</strong>), more ports opened, and huge indemnity. Some Chinese being taken as slaves to the Americas (indentured)
        <ul>
          <li>Indentured servitude is a form of labor where an individual is under contract to work without a salary to repay an indenture or loan</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><strong>Self-Strengthening Movement</strong> 1861-95</p>

<ul>
  <li>
    <p>Qing fear that dynasty is going to collapse soon. Most urgently they wanted to <strong>reform the military and modernize with western tech</strong></p>
  </li>
  <li>
    <p>Li Hongzhang as an example:</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221115141726795.png" alt="image-20221115141726795" style="zoom:33%;" /></p>

    <ul>
      <li>equipped his army with <strong>imported weapons</strong> and developed <strong>modern</strong> provincial armies to defeat Taiping rebels.</li>
    </ul>
  </li>
  <li>
    <p>this promoted Qing to</p>

    <ul>
      <li>set up <strong>factories</strong> to build western style weapons and warships</li>
      <li><strong>education</strong> infrastructure to study western inventions/thoughts
        <ul>
          <li>e.g. schools of science and technology in the Fuzhou shipyard and Jiangnan arsenal.</li>
          <li>school of foreign languages.</li>
          <li>study abroad programs in America, England, and France</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>knowledge about the west gradually improved</p>

    <ul>
      <li>e.g. chinese kids sent to educational mission to the US, including going to Yale and Columbia</li>
      <li>China then also added structures such as railways</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221115142103609.png" alt="image-20221115142103609" style="zoom:33%;" /></p>
  </li>
</ul>

<p><strong>First Sino-Japanese War</strong> (1894-95)</p>

<ul>
  <li>
    <p>though the self-improvement movement is doing well, until Japan defeated China</p>

    <ul>
      <li>before, China thought Japan is a little brother</li>
      <li>now, there is this humiliating defeat</li>
    </ul>
  </li>
  <li>
    <p>Meiji emperor during the time: <strong>conflicted with Qing influence of Korea, and engaged into war</strong></p>

    <ul>
      <li>Korea had long been China’s most important client state, but its strategic location opposite the Japanese islands and its natural resources of coal and iron attracted Japan’s interest.</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221115142336795.png" alt="image-20221115142336795" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>war broke out mostly at sea, and Japan had China sign a treaty after China’s defeat</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221115142436096.png" alt="image-20221115142436096" style="zoom:33%;" /></p>

    <ul>
      <li>term includes ceding Taiwan to Japan, and recognition of Korean Independence (short-lived, for it was colonized by Japan in 1910)</li>
    </ul>
  </li>
  <li>
    <p>Qing realized that its nation is weak, but why even after self-improvement movement?</p>

    <ul>
      <li>some people see self-improvement movement as useless</li>
      <li>others attribute to problems such as corruption + lack of training and organization/literacy of Chinese troops despite advance in technology</li>
    </ul>

    <p>regardless, the failure of the Qing in its late decades also contribute</p>
  </li>
</ul>

<h1 id="from-empire-to-republic">From Empire to Republic</h1>

<p><strong>Previously on the late Qing crisis</strong></p>

<ul>
  <li>
    <p>Just prior to the start of the Opium War, silver shortage, ecological stress, have pushed <strong>Qing China into general economic crisis</strong>; peasant unrest and tax revolts proliferate</p>
  </li>
  <li>Taiping Rebellion (1850-64): failed scholars espousing heterodox Christianity (Hong Xiuquan)
    <ul>
      <li>had motivation for equality, but also the most destructive rebellion</li>
      <li>long lasting rebellions = resulting in Qing dynasty power is severely undermined</li>
    </ul>
  </li>
  <li>Han <strong>provincial gentry</strong> come to aid of the dynasty, raised local armies to defeat Taipings
    <ul>
      <li>also came to initiate <strong>self-strengthening movement to learn western technologies</strong></li>
      <li>e.g. Li Hongzhang, builds western arsenals, weapons, and translate western texts.</li>
    </ul>
  </li>
  <li><strong>Arrow War</strong> (1856-60) at the same time, also tension with western especially the English and French
    <ul>
      <li>Qing lost again to the Anglo-French force, and have <strong>summer palace burnt and more unequal treaties signed</strong></li>
    </ul>
  </li>
  <li><strong>Sino-Japanese War</strong> (1894-1895): Chinese defeat again, still due to technology diff or lack of military organization/coordination? Don’t know.
    <ul>
      <li>defeat has deep consequence = realizes how astonishing weak the empire was = Chinese <strong>loss of faith in Manchus</strong></li>
    </ul>
  </li>
</ul>

<p><strong>Hundred Day’s Reform</strong>: and later a serious of rebellions/reformed until 1911 ==Xinhai Rebellion 辛亥革命== ended Qing in 1912</p>

<ul>
  <li>
    <p>when China lost Sino-Japan War, western realized Chinese weakness and were competing for territory.</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221117132336654.png" alt="image-20221117132336654" style="zoom: 25%;" /></p>

    <p>previously they were mostly occupying parts of South-East Asia. But seeing how easily China is defeated by Japan, <strong>westerns are also lurking and China is “cut up”</strong> during 1902-1903:</p>

    <p>| <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221117132534877.png" alt="image-20221117132534877" style="zoom: 25%;" /> | <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221117132748517.png" alt="image-20221117132748517" style="zoom:25%;" /> |
| :———————————————————-: | :———————————————————-: |</p>
  </li>
  <li>
    <p>How to save China? First attempt by <strong>Hundred Day’s Reform</strong> 戊戌(Wu Xu)變法</p>

    <ul>
      <li>was a failed 103-day national, <strong>cultural, political, and educational reform movement</strong> that occurred from 11 June to 22 September 1898 during the late Qing dynasty</li>
      <li>they heard the humiliating signing of Sino-Japanese defeat treaty, and became indignant</li>
      <li>in 1898, they launched a reform funded by Guangxu Emperor (but ==Cixi== is power behind the throne = most powerful since Wudi)
        <ul>
          <li>Cixi’s aim is to maintain her role and power, rather than help people. e.g. reform policies approved usually for self-serving purposes</li>
          <li>but in 1898 she allowed Guangxu to rule on his own, and K and L are asked to help with the reform</li>
        </ul>
      </li>
    </ul>

    <p>| <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221117133001371.png" alt="image-20221117133001371" style="zoom: 25%;" /> | <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221117133109537.png" alt="image-20221117133109537" style="zoom:25%;" /> |
| :———————————————————-: | :———————————————————-: |</p>

    <ul>
      <li>she then was afraid that Guangxu’s reform would undermine she power and Manchu, so locked up Guangxu and the reform proponents fled to Japan = hence only 103 days of reform</li>
      <li>Cixi = ==ended last chance of China to change peacefully==</li>
    </ul>
  </li>
</ul>

<p><strong>The Boxer Uprising</strong> (1900): purge foreigners and Christians. It was an anti-foreign, anti-colonial, and anti-Christian uprising in China between 1899 and 1901, towards the end of the Qing dynasty</p>

<ul>
  <li>
    <p>Chinese blamed failing/natural disasters to be caused by foreigners: e.g. wrongly influenced Chinese culture and practices</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221117133822915.png" alt="image-20221117133822915" style="zoom:25%;" /></p>

    <p>note that mostly peasants, and called “Boxer” because they mostly fight with martial arts</p>
  </li>
  <li>
    <p>emerged also in 1898 after 100 days reform, and hates foreigners and converts (to follow foreign religions such as Christianity)</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221117134110487.png" alt="image-20221117134110487" style="zoom:25%;" /></p>

    <p>as you see it is technically “not a religion problem”, but the <strong>socio-economic problem</strong> that whoever converted to Christian had this unfair protection and foreign backing.</p>
  </li>
  <li>
    <p>The events came to a head in June 1900 when Boxer fighters, convinced they were invulnerable to foreign weapons, <strong>converged on Beijing with the slogan “Support the Qing government and exterminate the foreigners.”</strong></p>
  </li>
  <li>
    <p>To counter this rebellion against foreigners, an ==Eight Nation Alliance== of American, Austro-Hungarian, British, French, German, Italian, Japanese and Russian troops moved into China to lift the siege, and afterwards <strong>took over the palace in Beijing</strong></p>

    <p>| <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221117134700506.png" alt="image-20221117134700506" style="zoom:25%;" /> | <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221117134737638.png" alt="image-20221117134737638" style="zoom:25%;" /> |
| :———————————————————-: | :———————————————————-: |</p>

    <p>and again Chinese’ loss lead to the Boxer Protocol in 1901 = total indemnity of 450 million</p>
  </li>
  <li>
    <p><em>again</em> spurred national debate of how China can still move forward</p>
  </li>
</ul>

<p><strong>Third and Last Attempt to Save China</strong>: 1911-1912 辛亥革命</p>

<ul>
  <li>
    <p>so far we see efforts starting from self-strengthening, 100 days reform, boxer uprising, all failed</p>
  </li>
  <li>
    <p><strong>people needed <em>will</em> reformation</strong> = Zou Rong, an anti-Manchu nationalist and published the <em>Revolutionary Army</em> journal</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221117135352207.png" alt="image-20221117135352207" style="zoom: 33%;" /></p>

    <ul>
      <li>convinced that wipe out Manchus is necessary, and called out in the <em>Revolutionary Army</em> journal for comrades</li>
      <li>advocated to establish the Chinese republic</li>
    </ul>
  </li>
  <li>
    <p><strong>Sun Yat-sen</strong>: the most prominent anti-Manchu revolutionary and a founding member of anti-Machu</p>

    <ul>
      <li>believes the best way to overthrow is to <strong><em>ally with the secrete society</em></strong> (e.g. the triad, etc)</li>
      <li>he spent most of the time traveling to many foreign grounds = to gain financial support to fund uprisings in China</li>
      <li>in 1905-12 he formed the Revolutionary Alliance = people with many different ideals such as socialist and republican, but all allied to ==overthrow the Manchu rulers and revive China==. Later this alliance is transformed into <strong>Guomingdang (KMT)</strong></li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221117135747597.png" alt="image-20221117135747597" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>his ==three main principles== are</p>

    <ul>
      <li><strong>nationalism</strong> 民族主义 = members of the country to pay highest loyalty to the nation, rather than to family, etc.</li>
      <li><strong>democracy</strong> 民权主义 = to him it means western constitutional government</li>
      <li><strong>livelihood of the people</strong> 民生主义 = social welfare such as food, housing, transportation, and etc.</li>
    </ul>
  </li>
  <li>
    <p>revolutionary broke out in 1911 (Xinhai Revolution), many provinces declared independence, and ==ended Qing in 1912==</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221117140318311.png" alt="image-20221117140318311" style="zoom:25%;" /></p>

    <ul>
      <li>Qing gave up in only 4 month</li>
      <li>“founding father” at that time was at Colorado, so some people say this title of “founding father” is overestimated</li>
      <li>On 1 January 1912, the National Assembly declared the establishment of the <strong>Republic of China,</strong> with Sun Yat-sen, leader of the Tongmenghui (United League), as President of the Republic.</li>
    </ul>
  </li>
  <li>
    <p>But Sun quickly gave away the power to ==Yuan Shikai== = no longer the Chinese coin of hole in the middle = western style coin</p>

    <ul>
      <li>because there was this promise that: Sun would resign in favor of Yuan Shikai, who would become President of the new national government, <em>if Yuan could secure the abdication of the Qing emperor</em></li>
      <li>Even Sun had gather fund, had ideals, but he didn’t have much military power. Hence Yuan Shikai, who was appointed as the leader of the powerful Beiyang Army by Qing</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221117140804031.png" alt="image-20221117140804031" style="zoom: 25%;" /></p>
  </li>
  <li>
    <p>however, Yuan Shikai died early before he could consolidate a legitimate central government before his death in 1916, led to decades of political division and ==warlordism==, including an attempt at imperial restoration = China entered ==again the unrestful warlord period (1916 - 1927)==</p>
  </li>
</ul>

<p><strong>Change of Beliefs and Practices in China</strong> during 1915-1926</p>

<ul>
  <li>
    <p>a new periodical serving as a source of new ideology and heavily influenced the New Culture Movement and May 4th protests later</p>

    <ul>
      <li><strong>The May Fourth Movement</strong> was a Chinese anti-imperialist, cultural, and political movement which grew out of student protests in Beijing on May 4, 1919. Students came to protest the Chinese government’s weak response to the Treaty of Versailles decision to allow Japan to retain territories in Shandong that had been surrendered to Germany after the Siege of Tsingtao in 1914.</li>
      <li>The New Culture Movement (Chinese: 新文化運動) was a movement in China in the 1910s and 1920s that <strong>criticized classical Chinese ideas</strong> and promoted a new Chinese culture based upon progressive, ==modern and western ideals like democracy and science==.</li>
    </ul>
  </li>
  <li>
    <p>the new periodical: <em>New Youth</em> was a Chinese literary magazine founded by ==Chen Duxiu== and published between 1915 and 1926</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221117141302470.png" alt="image-20221117141302470" style="zoom:25%;" /></p>

    <ul>
      <li>
        <p>founded by Chen Duxiu, advocate for individual freedom, and some major ideologies including rejecting Confucianism and <strong>crave the energy of youth</strong> (hence challenge the Confucius idea of young obey elders), promoting the young to think by themselves</p>
      </li>
      <li>
        <p>advocated serious ideas in vernacular language v.s. in the past those serious writings tend to use classical styles</p>
      </li>
      <li>
        <p>also had works from both ==Lu Xun== and ==Mao Zedong==</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221117171901925.png" alt="image-20221117171901925" style="zoom:25%;" /></p>

        <p>note that even though Japan is disliked due to its invasion, <strong>Japan was still the first choice of over sea study</strong> because it is a) close b) had modernized tech, and c) similar language</p>
      </li>
      <li>
        <p>the journal also focused the ==adoption of Western ideals== of <strong>“Mr. Science”</strong> (賽先生) and <strong>“Mr. Democracy”</strong> (德先生) in place of “Mr. Confucius” in order to strengthen the new nation (though science was better received)</p>
      </li>
    </ul>

    <p>| <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221117141125330.png" alt="image-20221117141125330" style="zoom: 33%;" /> | <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221117141129267.png" alt="image-20221117141129267" style="zoom: 33%;" /> |
| :———————————————————-: | :———————————————————-: |</p>
  </li>
  <li>
    <p>during this period, many male also came out to speak for women’s rights (e.g. Lu Xun, a male and He Zhen, a female)</p>
  </li>
</ul>

<p><strong>May 4th Protests</strong>, 1919</p>

<ul>
  <li>
    <p>recall that China joined allies, so when German defeated territories in China should be handed back to China, but the result was disappointing that German concessions will be handed over to Japan due to the Treaty of Versailles decision</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221117141804283.png" alt="image-20221117141804283" style="zoom:25%;" /></p>
  </li>
  <li>
    <p>students were very angry = government arrested student leaders = general consensus is reached among the students such as <strong>nationalism, patriotism, science, and democracy</strong>, and enemies are imperialism, warlordism, etc.</p>
  </li>
</ul>

<p><strong>Founding Chinese Communist Party (CCP)</strong> in 1921</p>

<ul>
  <li>
    <p>at the same time WWI finished, where ==Marxism and Leninism is successful== as seen in soviet union</p>

    <ul>
      <li>
        <p>also had anti-western, so liked soviet union a lot</p>
      </li>
      <li>
        <p>Marxism and Leninism shows capable of revolution = exactly what China need</p>
      </li>
    </ul>
  </li>
  <li>
    <p>again founded by Li Daozhao and Chen Duxiu, for Maxism (Mao Zedong also influenced by Li Daozhao)</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221117142227411.png" alt="image-20221117142227411" style="zoom:25%;" /></p>
  </li>
  <li>
    <p>as we know later, under the leadership of Mao Zedong, the <strong>CCP emerged victorious in the Chinese Civil War against the Kuomintang</strong>, and in ==1949 October 1st Mao proclaimed the establishment of the People’s Republic of China==.</p>
  </li>
</ul>

<hr />

<p><strong>Into the Modern China</strong>: a short review and preview of major events until 1949. In general, this is the period with <strong>much more foreign influence</strong> compared to past China/Dynasty changes. Another difference is that before: rebellion = restoration of past glory. But now modern = completely new motivation/ideology</p>

<ul>
  <li>1841 - first opium war</li>
  <li>1860s - second opium war: imperial incursions and increasing christian missionaries, English, etc in China
    <ul>
      <li>christian autonomy in local society here is central to the cause of the later boxer up-rising</li>
    </ul>
  </li>
  <li>1861-95 self-strengthening movement</li>
  <li>1895 - Sino-Japanese war: watershed moment that losing to Japan (long seen as vassal state) made Chinese realizes its weakness + anti-Manchu</li>
  <li>1898 - Hundred Days reform</li>
  <li>1900 - Boxer rebellion. Can think of as “thugs” trying to bring back Chinese ruling. Quelled by the eight-nation alliance</li>
  <li>1911 - ==Xinhai Revolution==. Starting in Wushang - we’ve rebelled, who will join us - lots of provinces joined quickly
    <ul>
      <li>in Feb 1912 Qing abdicated the throne, and <strong>Republic of China found 1912 Jan 1</strong> (recognized in Taiwan), and Sun Yat-sen was the head</li>
      <li>however, Sun didn’t have military power but the ideals, hence collabed with Yuan Shikai = will be the new president if his military can help</li>
    </ul>
  </li>
  <li>1916 - 1927 warlord period of decentrailized china = time of disunity
    <ul>
      <li>Yuan Shikai died in 1916 - very short reign before the government is coalesced</li>
    </ul>
  </li>
  <li>1921-24: KMT allied with CCP to march north and subdue the warlords and reunified the coountry
    <ul>
      <li>In 1921, Chen Duxiu and Li Dazhao led the founding of the CCP with the help of the Far Eastern Bureau of the Communist Party of the Soviet Union and Far Eastern Secretariat of the Communist International.</li>
      <li>For the first six years of its history, the CCP aligned itself with the Kuomintang (KMT) as the organized left-wing of the larger nationalist movement.</li>
    </ul>
  </li>
  <li>1919 <strong>May 4th movement</strong>: territory not given back to China - highly literary movement of intellectuals such as Lu Xun and Cheng Duxiu trying to <strong>incorporate western ideas into China governing</strong></li>
  <li>1925: Sun Yat-sen died, who is a key figure making the alliance of CCP and KMT together, things goes wrong between CCP and KMT
    <ul>
      <li>General Chiang Kai-shek, who became the Chairman of the Kuomintang after Sun’s death and subsequent power struggle in 1925, began the Northern Expedition in 1926 to overthrow the Beiyang government.</li>
      <li>In 1927, Chiang moved the nationalist government to Nanking and <strong>purged the CCP, beginning with the ==Shanghai massacre==</strong>. The latter event forced the CCP and KMT’s left-wing into armed rebellion, marking the beginning of the ==Chinese Civil War==</li>
      <li>basically KMT turned against CCP. Bear in mind that former had strongholds in cities, whereas latter whose ideal is communist only yet had supports by peasants in countrysides</li>
    </ul>
  </li>
  <li>1927 - 1949: a lot of upheaval and disunity
    <ul>
      <li>CCP fighting with KMT, and Japan is also attacking</li>
      <li>The ==Second Sino-Japanese War (1937–1945, WWII)== or War of Resistance (Chinese term) was a military conflict that was primarily waged between the Republic of China and the Empire of Japan.</li>
    </ul>
  </li>
  <li>1949 - <strong>CCP won</strong> and start of People Republic of China
    <ul>
      <li>The Communists gained control of mainland China and established the People’s Republic of China in 1949, forcing the leadership of the Republic of China to retreat to the island of Taiwan.</li>
    </ul>
  </li>
</ul>

<h2 id="the-nanjing-decade-1927---1937">The Nanjing Decade (1927 - 1937)</h2>

<blockquote>
  <p>Some key terms in this period</p>

  <ul>
    <li><strong>Fascism</strong> is a authoritarian and ultra-nationalist political ideology, characterized by a dictatorial leader, centralized autocracy, militarism, forcible suppression of opposition, belief in a natural social hierarchy, subordination of  individual interest for the perceived good of the nation and race, and strong regimentation of society and the economy</li>
    <li><strong>Imperialism</strong> is the state policy, practice, or advocacy of extending power and dominion, especially by direct territorial acquisition or by gaining political and economic control of other areas, often through employing hard power, but also soft power.</li>
    <li><strong>Warlord Era</strong>
      <ul>
        <li>The <strong>Warlord Era</strong> was a period in the history of the <strong>Republic of China</strong> (not PRC) when control of the <strong>country was divided among former military cliques of the Beiyang Army</strong> and other regional factions from 1916 to 1928.</li>
        <li>In historiography, the Warlord Era began in 1916 upon the <strong>death of Yuan Shikai,</strong> the de facto dictator of China after the Xinhai Revolution overthrew the Qing dynasty and established the Republic of China in 1912. <strong>Yuan’s sudden death created a power vacuum</strong> that spread across the country hence the warlord area.</li>
      </ul>
    </li>
    <li>The <strong>Nanjing Decade</strong>:
      <ul>
        <li>The Nanjing decade (also 南京十年; 黃金十年) is an informal name for the decade from 1927 (or 1928) to 1937 in the People’s Republic of China. It began when Nationalist, or even “Confucian Fascist” Generalissimo <strong>Chiang Kai-shek took Nanjing</strong> from warlord Sun Chuanfang halfway through the Northern Expedition in 1927. Chiang declared it <strong>to be the national capital</strong> despite the existence of a left-wing Nationalist government in Wuhan.</li>
        <li>The Nanjing decade was marked by both progress and frustration.
          <ul>
            <li>The period was far more stable than the preceding Warlord Era. There was <strong>enough stability</strong> to allow economic growth and the start of ambitious government projects. Entrepreneurs, educators, lawyers, doctors, and other professionals were more free to create modern institutions than at any earlier time.</li>
            <li>However, the Nationalist government also suppressed dissent, corruption and nepotism were rampant and <strong>revolts</strong> broke out in several provinces; internal conflicts also perpetuated within the government. The ==Nationalists== were never able to fully pacify the ==Chinese Communist Party==, and struggled to address the widespread unrest and protests over their failure to check Japanese aggression</li>
          </ul>
        </li>
        <li>The decade ended with the outbreak of the <strong>Second Sino-Japanese War</strong> in 1937 and the retreat of the Nationalist government to Wuhan.</li>
      </ul>
    </li>
  </ul>
</blockquote>

<p>There will be a lot on student protests, resistance, etc.</p>

<ul>
  <li>Racism in Shanghai, Chinese tormented by powerful imperial forces.</li>
  <li>On going struggle between <strong>KMT</strong>, <strong>CCP</strong>, and the encroaching <strong>Japanese</strong> Imperialism</li>
</ul>

<p><strong>The Warlord Era</strong></p>

<ul>
  <li>
    <p>In 1915 ==Yuan Shicai with his Beiyang army== has declared himself a new emperor, with the intention of finding new dynasty = Republic of China (the one with Sun Yatsen). But he died soon in 1916 so China is divided into regions ruled by separate generals and hence a <strong>warlord era</strong></p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221129132107080.png" alt="image-20221129132107080" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>KMT revival with Sun Yat-sen’s return in 1917, and Communist continued their activities</p>

    <ul>
      <li>intense ideology struggle on both sides, nationalist v.s. communist</li>
      <li>on KMT, some were believing in fascist, but also some sympathizes with communist. Same on CCP’s side</li>
    </ul>
  </li>
  <li>
    <p>but both KMT and CCP agreed on bourgeosis revolution (as with Marxism–Leninism in Soviet), hence they cooperate to create ==United Front==</p>

    <ul>
      <li>
        <p>launch northern expedition against warlords in the north</p>
      </li>
      <li>
        <p>before the beginning of expedition, some tension: nationist turn on CCP because of its popularity</p>
      </li>
      <li>
        <p>e.g. May 30, KMT police opened fire, leading to strikes in many cities</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221129132539074.png" alt="image-20221129132539074" style="zoom:50%;" /></p>

        <p>which made CCP grow even more in power/popularity.</p>
      </li>
    </ul>
  </li>
  <li>
    <p>In general, many KMT encouraged CCP to cooperate, while some right-wing from KMT do not trust CCP = cannot co-exist</p>

    <ul>
      <li>
        <p>hence KMT into two major wings: <strong>left wing sides with CCP, while right wing believes in militarism</strong></p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221129222115881.png" alt="image-20221129222115881" style="zoom:33%;" /></p>
      </li>
    </ul>
  </li>
  <li>
    <p>then in 1927 = White Terror = surprise attacks KMT arrested hundreds of CCP people and executed them = end of KMT support from people</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221129133109511.png" alt="image-20221129133109511" style="zoom:50%;" /></p>

    <ul>
      <li>many of these purges were executed by the more extreme factions in KMT</li>
    </ul>
  </li>
</ul>

<p><strong>Shift towards an Agrarian Communism</strong></p>

<ul>
  <li>
    <p>believes that factory workers would be the ones for Communist revolution in China</p>

    <ul>
      <li>Mao’s emphasis of investigation = historical materialism from Marxist</li>
      <li>Firmly situated ==peasants as revolutionary subjects== - and moved Chinese communism towards an agrarian focus.</li>
      <li>Saw ritualistic and ==violent struggle against class enemies as critical to revolution==. This is a key difference from KMT socialists, who believed in “cooperatives to support “people’s livelihood”</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221129133412885.png" alt="image-20221129133412885" style="zoom:50%;" /></p>
  </li>
</ul>

<p><strong>End of the First United Front</strong></p>

<ul>
  <li>
    <p>CCP and KMT civil war, and CCP establish bases/soviets between 1927 to 1933 (the main one being Mao’s base)</p>
  </li>
  <li>
    <p>worried by CCP’s growing support even in urban areas, Chiang Kai-shek <strong>launched four massive military campaigns</strong> to encircle and annihilate the Jiangxi Soviet, all of which were repulsed by the communists with their <strong>guerrilla tactics</strong></p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221129133928967.png" alt="image-20221129133928967" style="zoom:33%;" /></p>

    <ul>
      <li>however eventually CCP had to retreat, hence this long march shown above = recorded as their heroic struggle</li>
    </ul>
  </li>
</ul>

<hr />

<p><strong>Diff of KMT v.s. CCP in Economy</strong></p>

<ul>
  <li>China had econ problem such as famine before, and both parties are concerned about imperialism that Chinese cannot survive. But they differ in <strong>how to solve this problem</strong></li>
  <li>nationalist believe
    <ul>
      <li>accumulate <strong>national</strong> wealth, aim to annihilate dependencies on others hence social strength/<strong>self-sufficiency</strong></li>
      <li>econ independennce = autarky = <strong>national prosperity is precondition for happiness of people</strong>
        <ul>
          <li>wanted export lead economy. but this did not work with the great depression in 1932 (Wall street crush), so silk and tea lost much markets, and Japan’s influence made China grow (China exporting raw materials to Japan while Japan grows in technology)</li>
        </ul>
      </li>
      <li>solve poverty by <strong>increasing production</strong> = need tech advancement = gives land questions
        <ul>
          <li>Left-wing (Wang Jingwei and others) wanted to build up land cooperatives</li>
          <li>Right-wing (Chiang Kai-Shek) more concerned with military control of villages</li>
        </ul>
      </li>
      <li>but there are <strong>conflicts with private industry,</strong> as they needs its own profit but nationalist needs national wealth</li>
      <li>does not care much about rural, but more central power</li>
    </ul>
  </li>
  <li>CCP focused on <strong>rural organization</strong>, land reform, and <strong>class struggle</strong>
    <ul>
      <li>global capitalism is the problem, and being semi-colonized = both landlords needs to be overthrown and wealth redistributed</li>
      <li>land reform program, redistribute to peasants</li>
      <li>focus a lot on <strong>women emancipation</strong> = e.g. local women can diverse their husbands, can own land, etc</li>
      <li>give peasants opportunity to read and write</li>
    </ul>
  </li>
</ul>

<p><strong>Diff in Military mobilization</strong></p>

<ul>
  <li>Mao’s Red Army: <strong>Guerrilla warfare</strong>
    <ul>
      <li>draw enemy into deep CCP territory such as mountains, so KMT becomes naturally split up due to landscapes</li>
      <li>red army are <strong>mostly consists of volunteers</strong>; and hold respect to civilians
        <ul>
          <li>Eight points of attention: do not hit or swear others, be honest about buying and selling, etc</li>
          <li>helped increase popularity = a lot of support from peasants + China had a large size of peasants</li>
        </ul>
      </li>
      <li>cooperate between army and people</li>
    </ul>
  </li>
  <li>Nationalist
    <ul>
      <li>advance altogether in one column, traditional approach</li>
      <li>more than half are <strong>soldiers, not civilians</strong> = Chaang Kai shek prioritized military discipline</li>
    </ul>
  </li>
</ul>

<p><strong>Factions within KMT</strong></p>

<ul>
  <li>
    <p>two big groups controlling the executive functions, CC Clique and Blue Shirt</p>
  </li>
  <li>
    <p>CC Clique v.s. Blue Shirts</p>

    <ul>
      <li>
        <p>CCP Clique return for Chinese past and vision for future. LHS has stuff from the past such as great wall, on the RHS tech advanced visions</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221129140336691.png" alt="image-20221129140336691" style="zoom:33%;" /></p>
      </li>
      <li>
        <p>Blue Shirt: emphasize of strngth and strong young people</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221129140433293.png" alt="image-20221129140433293" style="zoom:33%;" /></p>
      </li>
    </ul>
  </li>
</ul>

<p><strong>New Life Movement</strong> (nationalist)</p>

<ul>
  <li>
    <p>draw on four virtues, advocate that these virtues penetrate peoples life</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221129140624061.png" alt="image-20221129140624061" style="zoom:33%;" /></p>

    <p>being productive at all times</p>
  </li>
  <li>
    <p>then Chiang Kai-shek’s Speech incorporates ideas of <strong>convergence of militarism and being productive in life</strong></p>

    <ul>
      <li>i.e. your individual behavior can hurt the wealth of the entire nation = you should stick to your social role. If everyone perform their social role, then not chaos and uprising associated with communist</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221129140939040.png" alt="image-20221129140939040" style="zoom:50%;" /></p>

    <ul>
      <li>but still gained a lot critique from Confucianism:
        <ul>
          <li>New Life Movement was an attempt to <strong><em>suppress individual freedom</em></strong> and to impose a rigid and authoritarian ideology on the people = the movement’s emphasis on obedience and conformity was at odds with the principles of Confucianism, which emphasize personal responsibility and self-cultivation.</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><strong>Left-Wing Cultural Movement</strong></p>

<ul>
  <li>
    <p>Marxist texts, concerned with every day life, and experimented with new literary forms</p>

    <ul>
      <li>aim to make literature appeal with the masses = new form of short novels</li>
    </ul>
  </li>
  <li>
    <p>two famous person her is <strong>Song Dingling and Mao Dun</strong></p>
  </li>
  <li>
    <p>but then left wing faced cracked down by 5 prominent being executed</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221129141427721.png" alt="image-20221129141427721" style="zoom: 33%;" /></p>
  </li>
  <li>
    <p>overall had rich cultural production, both soft v.s. hard films as tools for politic education</p>
  </li>
  <li>
    <p>KMT supported tabloits and defamed Cai Chusheng (a famous women actor at that time) and her movie = committed suicide</p>

    <ul>
      <li>impact on later communist cultural production</li>
      <li>Mao: importance of appealing to the masses</li>
    </ul>
  </li>
</ul>

<p><strong>Japanese Imperialism</strong>: belief that Japan can relieve the influence from western by conquering Asian countries and ruling them</p>

<ul>
  <li>
    <p>Japan controlled a lot of due to their control of the Manchurian Railway</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221129142010627.png" alt="image-20221129142010627" style="zoom: 33%;" /></p>

    <p>basically the 东北region</p>
  </li>
  <li>
    <p>Battle ensued when plain clothes Chinese</p>

    <ul>
      <li>eventually Japan won the right to police Shanghai</li>
      <li><strong>Japanese established Manchukuo within that Chinese region, which enraged CCP and KMT</strong></li>
    </ul>
  </li>
  <li>
    <p>then goes to the <strong>Second Sino-Japanese war</strong></p>

    <ul>
      <li>and <strong>Paul Robeson</strong> and our national anthem</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221129225545886.png" alt="image-20221129225545886" style="zoom:25%;" /></p>
  </li>
</ul>

<h2 id="wwii-and-second-sino-japanese-war-1937-1945">WWII and Second Sino-Japanese War (1937-1945)</h2>

<p><strong>Previously on the Republican Era</strong></p>

<ul>
  <li>1911-16 The first <strong>Republic</strong>
    <ul>
      <li>first Sino-Japanese war and Boxer protocol are national traumas</li>
      <li>1911 revolution: replace Qing and new government, and <strong>Sun Yat-Sen</strong> established the first Republic of China</li>
      <li>Sun soon replaced by Yuan Shicai, who had strong military. However Yuan died early in 1916, leading to warlord era</li>
    </ul>
  </li>
  <li>1916-27 The <strong>Warlord Era</strong>
    <ul>
      <li>Centered around Beijing, the <strong>New Culture Movement</strong> sees a new generation of intellectuals question the Confucian basis of social, moral, political traditions. Believe that those are the reason for Chinese’fall, and <strong>emphasized on Mr. Science and Mr. Democracy</strong></li>
      <li>May 4th Movement (1919) politicizes intellectuals (anti-imperialist movement)</li>
      <li><strong>CCP founded</strong> 1921 in Shanghai.</li>
    </ul>
  </li>
  <li>1927-37 The <strong>Nanjing decade</strong>
    <ul>
      <li>Chiang Kai-Shek (CKS) succeeded Sun and became KMT leader, and with (appear) allied with CCP to go on northern expedition to <strong>re-unite China</strong> from the warlords = <strong>First United Front</strong></li>
      <li>CKS with his strong military belief never trusted CCP, hence <strong>white terror</strong> in 1927, and CCP flee
        <ul>
          <li>retreated to Jiangxi Soviet. Stop of Soviet Union’s support to KMT, and <strong>Mao start to emerge as the leader in CCP</strong></li>
          <li>then KMT then tried campaigns to get rid of Communist in Jiangxi, and in the 4th occasion, CCP fled despite their encirclement and went on a <strong>long march</strong> (34-35) all the way to Yan’an, Shaanxi</li>
          <li>only a bunch of true faithful people in CCP left (a lot key figures including Mao, Zhou Enlai, Xi’s father, etc). But they collected lots of supports along the way</li>
          <li>CCP regroups, builds <strong>peasant support through land reform</strong>, uses mass movements to accomplish objectives</li>
        </ul>
      </li>
      <li>hence overall a unity after the chase, and KMT + CKS become the major government in China. CKS’s view is highly militaristic and productive, that through discipline in a top-down approach we can make ourselves stronger
        <ul>
          <li><strong>New Life Movement</strong> to impose discipline and morality on China’s society. Inspiration drawn from the Italian fascist and German Nazi movements</li>
          <li>also many cultural influence during the time: <strong>leftist intellectuals making films</strong>, etc.</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<blockquote>
  <p><strong>Some Major Events</strong> in this period</p>

  <ul>
    <li>
      <p>In 1931, the <a href="https://en.wikipedia.org/wiki/Mukden_Incident">Mukden Incident</a> helped spark the Japanese invasion of Manchuria. The Chinese were defeated and Japan created a new puppet state, ==Manchukuo==; many historians cite as the beginning of the war</p>
    </li>
    <li>The <strong>beginning of the war</strong> is conventionally dated to the ==Marco Polo Bridge Incident 卢沟桥事变== on <strong>7 July 1937</strong>
      <ul>
        <li>Since the Japanese invasion of Manchuria (东北region) in 1931, there had been many small incidents along the rail line connecting Beijing and Tianjing.</li>
        <li>On this occasion, a Japanese soldier was temporarily absent from his unit, and the Japanese commander <strong>demanded the right to search the town for him</strong>. When this was refused, other units on both sides were put on alert; with tension rising, the <strong>Chinese Army fired on the Japanese Army, which further escalated the situation</strong>, even though the missing Japanese soldier had returned to his lines.</li>
      </ul>
    </li>
    <li>following this incident, Japanese scored major victories, capturing Beijing, Shanghai and the Chinese capital of Nanjing in 1937, which resulted in the ==Rape/Massacre of Nanjing== (南京大屠杀) beginning on <strong>December 13, 1937</strong>
      <ul>
        <li>As the Japanese approached, the Chinese army <strong>withdrew the bulk of its forces since Nanjing was not a defensible positio</strong>n. The civilian government of Nanjing fled</li>
        <li>The perpetrators also committed other war crimes such as <strong>mass rape, looting, and arson</strong>. The massacre was one of the worst atrocities committed during WWII</li>
        <li>Due to multiple factors, death toll estimates vary from 40,000 to over 300,000, with rape cases ranging from 20,000 to over 80,000 cases</li>
      </ul>
    </li>
    <li>Following the <strong>==Sino-Soviet Treaty of 1937==, strong material support</strong> helped the Nationalist Army of China and the Chinese Air Force continue to exert strong resistance against the Japanese offensive. By 1939, after Chinese victories in Changsha and Guangxi, and with Japan’s lines of communications stretched deep into the Chinese interior, the <strong>war reached a stalemate</strong>.</li>
    <li>in August 1940,  the ==United States supported China== through a series of increasing boycotts against Japan, culminating with cutting off steel and petrol exports into Japan by June 1941. Additionally, <strong>American mercenaries such as the Flying Tigers</strong> provided extra support to China directly.</li>
    <li>In December 1941, Japan launched a surprise attack on ==Pearl Harbor==, and declared ==war on the United States==. The United States declared war in turn and increased its flow of aid to China</li>
  </ul>
</blockquote>

<p><strong>CCP v.s. KMT:</strong> grassroots v.s, organizations</p>

<ul>
  <li>
    <p>some degree of fluidity/flexibility within the party, but overall differ in how to restructure/rule</p>
  </li>
  <li>CCP: socialist, <strong>redistribution of land and peasants</strong> can now on lands
    <ul>
      <li>appeal to peasants and grassroots</li>
      <li>start revolution by helping the peasant, and note that China at that time had a lot of peasants/is rural</li>
    </ul>
  </li>
  <li>KMT=nationalist=Republic of China: in a more extreme way, a bit fascist and military society.
    <ul>
      <li>Hence new cultural movement, refining and strenghening China <strong>in a militaristic way;</strong> also a lot of focus on productivity and utilitarianism</li>
    </ul>
  </li>
  <li>both had some influence from Soviet Union, e.g. Marxist-Leninism
    <ul>
      <li><em>The Communist International</em> (<em>==Comintern==</em>), was a <em>Soviet</em>-controlled international organization. They sent advisers and aids to help with revolutions</li>
    </ul>
  </li>
</ul>

<p><strong>Japanese Imperialism</strong></p>

<ul>
  <li>
    <p>South Korea asked Japan to ban the <em>rising sun flag</em> during Olympics, which is also the war flag of imperial Japan (which occupied Korea and part of China)</p>

    <p>| <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221201132603199.png" alt="image-20221201132603199" style="zoom: 25%;" /> | <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221201132549883.png" alt="image-20221201132549883" style="zoom: 25%;" /> |
| :———————————————————-: | :———————————————————-: |</p>
  </li>
  <li>
    <p>recall that before, Qing has lost Korea territory and Taiwan to Japan; Japan became competitor with Russia for influence in China in the north</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221201132906262.png" alt="image-20221201132906262" style="zoom:25%;" /></p>

    <ul>
      <li>surprisingly, they even defeated Russia in the northern territories in China = 1904-5 the <strong>Russo-Japanese</strong> War</li>
      <li>in 1931 the Mukden incidence and ==established Manchuko==满洲国;
        <ul>
          <li>Japan really took this territory as its colony; made a lot of investments; therefore it could be the most prosperous area in China at that time</li>
        </ul>
      </li>
      <li>1937-1945; Japan tried to encroach into deeper China, and hence second Sino-Japanese war</li>
    </ul>
  </li>
</ul>

<p><strong>Marco Polo Bridge Incident</strong>: July 7, 1937</p>

<ul>
  <li>
    <p>CKS wanted to first unify Chinese = open non-resistance policy = became very non-popular. He is then kidnapped and forced to ally with CCP to fight against Japan</p>
  </li>
  <li>
    <p>hence <strong>high tension</strong> between Japanese and Chinese with this minor Marco Polo Bridge Incident = triggered second Sino-Japanese war</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221201133343977.png" alt="image-20221201133343977" style="zoom:33%;" /></p>

    <ul>
      <li>after that Japan attacked Beijing, Tianjing, etc.</li>
    </ul>
  </li>
</ul>

<p><strong>First Phase of Sino-Japanese War</strong>: Battles</p>

<ul>
  <li>
    <p>Shanghai is an main source of Nationalist revenue + strategic position = proximity to Nanjing;</p>
  </li>
  <li>
    <p>Shanghai had significant western living in there; but their policy is to not interfere at the moment</p>
  </li>
  <li>
    <p>However nationalist eventually <strong>lost</strong>, <strong>Battle of Shanghai</strong> (1937)</p>

    <ul>
      <li>first and fiecest of the 22 major enegagements, lasted three month before Chinese failed</li>
      <li>the bloody Saturday + anti-Japanese feelings</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221201133759519.png" alt="image-20221201133759519" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>big defeat of China, CKS lost over 30% of elite German-trained divisions troops (later on contributed to CCP’s victory during civil war)</p>
  </li>
  <li>
    <p>however, at least <strong>pushed some unification of China</strong> (some warlords) to face the Japan troops</p>
  </li>
</ul>

<p><strong>First Phase of Sino-Japanese War</strong>: war crimes</p>

<ul>
  <li>
    <p><strong>Nanjing Massacre</strong> and Rape of Nanjing. Japan failed to conquered Shanghai quickly= angered Japanese, hence when conquering Nanjing this happened</p>

    <ul>
      <li>Japanese troops went on rampage for six weeks</li>
      <li>20,000 - 80,000 women and girls of all ages were raped, many of whom were mutilated or killed in the process.</li>
      <li>200,000 - 300,000 civilians and POWs were killed.</li>
      <li>a woman writer recorded this, who turned the school into a sanctuary, and her diaries records those war and atrocities</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221201134307167.png" alt="image-20221201134307167" style="zoom:50%;" /></p>

    <p>up until now, they still had not apologized for this, compared against Germany = Japanese acquired reputation for cruelty</p>
  </li>
  <li>
    <p>“<strong>Comfort Women</strong>”, i.e. sex slaves; ensure an isolated group of women to satisfy solider’s sexual eneds</p>

    <ul>
      <li>an estimate of 200,000 young women and girls were forced into this service; mostly Korea, but also Chinese, Japanese, etc</li>
      <li>one women assigned for 70-80 soldiers before battle</li>
      <li>again, Japanese arguments were that they were paid prostitutes; but many are not/are abducted</li>
    </ul>
  </li>
  <li>
    <p><strong>Human Experiments and use of Biological Weapons</strong>: using diseases as weapon</p>

    <ul>
      <li>
        <p>like Nazi’s, Japanese conducted experiments with human = death camp = infected healthy subjects with various diseases and observe them; operating them without anesthesia</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221201134930024.png" alt="image-20221201134930024" style="zoom:33%;" /></p>
      </li>
      <li>
        <p>many biological weapon researchers escaped punishment and went to continue research as other countries feel worried if they are behind; questions of medical ethics = had no ethical standards setup yet</p>
      </li>
    </ul>
  </li>
</ul>

<p><strong>First Phase of Sino-Japanese War</strong>: Man-made Yellow River Flood</p>

<ul>
  <li>
    <p>nationalist government made a desperate decision to breach the dam = <strong>cause the flood to stop advancement of Japanese troops</strong></p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221201135255770.png" alt="image-20221201135255770" style="zoom: 33%;" /></p>
  </li>
  <li>
    <p>flood inundated a lot of land and killed over 800,000 people in those provinces (unexpected by the government) = sacrificing million of lives to stop Japanese = though only stopped them for five month, and later continued to capture Wuhan</p>
  </li>
</ul>

<p><strong>Second Phase: Stalemate</strong> 1939-41</p>

<ul>
  <li>
    <p>blue is territory occupied by Japan, and nationalist government moved to interior</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221201135451696.png" alt="image-20221201135451696" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>three parties, Though CCP and KMT are both fighting Japanese, they are still not “allies”</p>
  </li>
  <li>
    <p><strong>Japan’s New Order in Asia</strong>: Japan’s belief that they can rebuild Asia and replace the western colonizers: propaganda that other countries should provide resources to Japan</p>
  </li>
</ul>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221201135737880.png" alt="image-20221201135737880" style="zoom:33%;" /></p>

<ul>
  <li>puppet regime in Nanjing (1940-45), Wang Jingwei (top in KMT) collaborated with Japan during war time, seen as a national traitor</li>
</ul>

<p><strong>Third Phase: Global War</strong></p>

<ul>
  <li>
    <p>China alliance with United States and Britain = received military support and supplies</p>

    <ul>
      <li>e.g. US army transportation in China, with supplies and soldiers such as Flying Tigers</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221201140212011.png" alt="image-20221201140212011" style="zoom:33%;" /></p>

    <ul>
      <li>some sense that US rescured Chinese, but China still had important contribution to the WWII. One is that it held huge numbers of Japanese troops on its territory. Second is that China it technically the first to engage in WWII in 1937 (or even 1931), while Europeans start in 1939</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221201140543710.png" alt="image-20221201140543710" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>Japan retaliated with <strong>Attack on Pearl Harbor (1941)</strong></p>
  </li>
  <li>
    <p>in the end US dropped two atomic bomb and <strong>Japan surrendered</strong></p>
  </li>
</ul>

<p><strong>Impact of the War on China</strong></p>

<ul>
  <li>
    <p>devastation of many parts in China; <strong>heightened since of national identity</strong>; a <strong>weakened nationalist government</strong>, and CKS lost lots of his troops</p>

    <ul>
      <li>therefore, it set the stage for Communist success later.</li>
      <li>it can be seen that CKS fight against Japan diverted his troop and effort from eliminating CCP, and during those time CCP enjoyed more support in rural China = had more time to develop and became stronger</li>
    </ul>
  </li>
  <li>
    <p>China-Japan relation today: a bit of awkward handshake between two presidents</p>

    <p>| <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221201141620456.png" alt="image-20221201141620456" style="zoom:33%;" /> | <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221201141629826.png" alt="image-20221201141629826" style="zoom:33%;" /> |
| :———————————————————-: | :———————————————————-: |</p>
  </li>
</ul>

<p><strong>Chinese Civil War</strong>: CCP v.s. KMT final showdown after the WWII. 1945 - 1949</p>

<ul>
  <li>
    <p>final showdown; US reduced their support in CKS’s government due to some corruption in government. Mao didn’t get full support from Stalin either</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221201141848649.png" alt="image-20221201141848649" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>but we know the final result is that Mao won, established ==People’s Republic of China==</p>
  </li>
  <li>
    <p>after the defeat, ==CKH fleet to Taiwan==, with 1.2 million nationalist refugees there (and always wanted to retake the mainland)</p>

    <ul>
      <li>but in 1950, US sends the Seventh Fleet to the Taiwan Strait = <strong>existence of US power prevented each side from attacking</strong></li>
      <li>but still tension and lots of propaganda on-going</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221201142157579.png" alt="image-20221201142157579" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>yet overall, both party <strong>recognize Sun Yat-sen as father of modern China</strong> (idea of a unified China during warlord era, and founder of Republic of China). However, while Mainland China supported Mao, Taiwan supports CKS</p>
  </li>
</ul>

<h1 id="maos-china-1920s---1976">Mao’s China (1920s - 1976)</h1>

<p><strong>Previously on the war years</strong></p>

<ul>
  <li>1931 <strong>Mukden Incident</strong>  (many historians view this as the beginning of WWII for China) touches off a well-planned invasion of Manchuria; starts the 15 years’ China- Japan war (1931-45). Japan establishes a puppet state of <strong>Manchukuo</strong> in northeast China.</li>
  <li>1937-1945 <strong>Second Sino-Japanese War</strong> (another view of beginning of WWII). Tentative <strong>second united frontier</strong>.
    <ul>
      <li>Chinese forces suffer heavy losses, trade space for time.</li>
      <li>Japanese overrun E. China, GMD fights war of attrition, CCP preserves strength in rural areas</li>
      <li>CCP have time to win popular support, partly due to Japan’s invasion that KMT cannot focus on fighting CCP</li>
    </ul>
  </li>
  <li>After <strong>Pearl Harbor</strong>, China formally allies with U.S. and Britain;
    <ul>
      <li>Japanese war crimes (e.g., the <strong>Rape of Nanjing</strong>, <strong>Comfort Women</strong>, Unit 731) remain inadequately acknowledged by the Japanese govt and victims not compensated for.</li>
      <li>Wartime collaboration exists yet remains underexamined in scholarship.</li>
    </ul>
  </li>
  <li>1945-1949 <strong>Chinese Civil War</strong>
    <ul>
      <li>KMD retreat to Taiwan, but both claim to be the legitimate government</li>
    </ul>
  </li>
</ul>

<p><strong>Why did China become Communist?</strong></p>

<ul>
  <li>
    <p>Explanation 1: just because it was the <strong>alternative to KMT</strong></p>

    <ul>
      <li>
        <p>how did nationalist fail? KMT had wide spread corruption, inflation, poverty, declining purchasing power (huge inflation), warlordism</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221206132234171.png" alt="image-20221206132234171" style="zoom:50%;" /></p>
      </li>
      <li>
        <p>CCP just happened to be there as an alternative: if KMT more successful, China might not have CCP winning = no communist</p>
      </li>
      <li>
        <p>Japan is also a contributor, that holding KMT off so CCP can have time to develop</p>
      </li>
    </ul>
  </li>
  <li>
    <p>Explanation 2: CCP itself aimed to gain <strong>popularity, mobilizing peasantry, anti-Japan</strong> idea resonated well with the large peasant-based population at that time</p>
  </li>
</ul>

<p><strong>Mao Zedong</strong> 1893-1976</p>

<ul>
  <li>
    <p>in his early years</p>

    <ul>
      <li>
        <p>born to a rich peasant = wealthy farmer, education in Confucian classics; traveled to work in Peking University Library</p>
      </li>
      <li>
        <p>attended CCP first meeting as the delegate of Hunan, working under <strong>Li Dazhao</strong></p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221206133027857.png" alt="image-20221206133027857" style="zoom:33%;" /></p>
      </li>
      <li>
        <p>Mao concentrated on <strong>rural work</strong> and had this report on an <strong>Investigation of the Hunan Peasant Movement</strong> = before CCP believe in urban workers, but he advocated to mobilizing peasantry and violence as a necessary mean for revolt</p>
      </li>
    </ul>
  </li>
  <li>
    <p>Shanghai Massacre 1927, communist hiding and fleeing from KMT = Chen Duxiu blamed as the mistake. Then Mao lead them into <strong>Jiangxi Province</strong></p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221206133303458.png" alt="image-20221206133303458" style="zoom:33%;" /></p>

    <p>for the first time, CCP is governing some area: <strong>organized land reform</strong> (redistribute land) and other reforms = quite successful in Jiangxi</p>
  </li>
  <li>
    <p><strong>Long March</strong> in search of new base in Yan’an in Shaanxi province, after KMT attack again. Only 10% made it the whole way. Those people are seen as selected/destined for this mission = <strong>founding myths of PRC</strong></p>

    <ul>
      <li>Yan’an is like Qin’s captial which is <strong>easy to defend,</strong> and easy to send troops</li>
      <li>but living condition was quite tough: Mao lives in a cave home. But CCP are very friendly to peasants</li>
      <li>important strategy of masses to the masses:
        <ul>
          <li>“all correct leadership is necessarily “==from the masses, to the masses==”. This means: take the ideas of the masses (scattered and unsystematic ideas) and concentrate them (through study turn them into concentrated and systematic ideas), then go to the masses and propagate and explain these ideas until the masses embrace them as their own”</li>
          <li>Mao believes <strong>peasants are the vanguard = true masses</strong> for this revolution v.s. Marxist called peasants a sack of potatoes</li>
        </ul>
      </li>
    </ul>

    <p>| <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221206133748438.png" alt="image-20221206133748438" style="zoom:33%;" /> | <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221206134147004.png" alt="image-20221206134147004" style="zoom: 50%;" /> |
| :———————————————————-: | :———————————————————-: |</p>
  </li>
  <li>
    <p>Techniques in this mass movement</p>

    <ul>
      <li><strong>study groups</strong> = small group meetings like “book club” = express and criticize opinions on <strong>socialists texts</strong></li>
      <li><strong>struggle sessions</strong> = performative displays of revolutions = 民众诉苦
        <ul>
          <li>encourage the peasants to come out and speak publicly accusing landlord of this crimes = directly confronting</li>
          <li>this act of humiliation for landlord could be more important than the land transfer = <strong>symbolize transfer of power from rich to poor</strong></li>
        </ul>
      </li>
      <li>everyone in the group has to participate in the above activities</li>
      <li>really emphasize <strong>small groups + support from locals = decentralized</strong> idea instead of purely top-down structure to rely on center
        <ul>
          <li>e.g. land reform = abolishment of landlords and returning lands to peasants aims to support locals</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>sees himself as the interpreter of Marxism-Leninism in Chinese context, and a master of guerrilla warfare</p>
  </li>
  <li>
    <p><strong>in 1949, Mao’s proclamation of PRC</strong></p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221206135101458.png" alt="image-20221206135101458" style="zoom:33%;" /></p>

    <p>this painting used more as a political tool, later on Deng Xiaoping is added, even though he is not even there</p>
  </li>
  <li>
    <p>PRC’s political organization: <strong>party supervising government</strong> = so really it is a one party country (a feeling of authocracy)</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221206135407607.png" alt="image-20221206135407607" style="zoom: 33%;" /></p>
  </li>
</ul>

<p><strong>Land Reform Continued</strong> after PRC founded</p>

<ul>
  <li>
    <p><strong>First phase</strong> of land reform</p>

    <ul>
      <li>before it is mostly north in Mao’s region, now also includes south of China</li>
      <li>
        <p>continues struggle sessions etc; redistribution of land = broke up the older elites = CCP to introduce modern modes of agriculture</p>
      </li>
      <li>also used as a reward for peasants for supporting CCP</li>
      <li>problem: <strong>small land holdings is not a productive way</strong> for high agriculture output</li>
    </ul>
  </li>
  <li>
    <p><strong>Second phase</strong>: farmers join together = <strong>collectivization of agriculture</strong></p>

    <ul>
      <li>households to help each other and <em>forced</em> into cooperation = collectivization</li>
      <li>hope to further increase agricultural output = further support modern inditurialization</li>
      <li>but many felt <strong>discontent</strong> because again lost ownership of it = shared responsibility</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221206140000494.png" alt="image-20221206140000494" style="zoom:33%;" /></p>
  </li>
</ul>

<p><strong>America and Korea</strong>: “War to Resist America and Aid Korea” (1950–53) 抗美援朝</p>

<ul>
  <li>recall that US is against Soviet Union = communist. However, they know they cannot exterminate communists.
    <ul>
      <li>in order to use Japan as a base to <strong>contain communism in Asia</strong></li>
      <li>communist ideology is that <strong>every one should be communist</strong> = China joins then it is helpful = also for building alliance for Soviet</li>
    </ul>
  </li>
  <li>Therefore, America now is against China/refuse to help Korea against America
    <ul>
      <li>decided to help North Korea as if it is lost, America would attack China</li>
    </ul>
  </li>
  <li>Consequences of the war include
    <ul>
      <li>China more close to Soviet for econ assists</li>
      <li>confirming US imperialist ambition in East Asia, as US intervention in Korea</li>
      <li>suffered high death tool and called US is a paper tiger</li>
      <li>difficult to get Taiwan <em>fully</em> back in control = with <strong>US-China relationship on Taiwan</strong> a problem until today</li>
      <li>also emerges campaigns in China against foreigners</li>
      <li>Mao lost the elder of his two sons; and the other son has mental trouble = lost his successor</li>
    </ul>
  </li>
</ul>

<p><strong>Five Year Plans</strong></p>

<ul>
  <li>
    <p>PRC’s <strong>First Five-year Plan</strong>: won the Korean War, and land reform aimed to help industrialization as a model from soviet = <strong>invest in heavy industry</strong>.</p>

    <ul>
      <li>indistural output went up by 25%, significant number</li>
      <li>quite successful, Mao very confident and listened to intellectuals outside CCP to speak up = <strong>Hundred Flowers Campaign</strong> = expecting only mild criticism
        <ul>
          <li>turns out this campaign brought <em>heavy</em> criticism = accused of monopoly of power</li>
          <li>then Mao retaliate = <strong>anti-rightist campaign</strong> to force those labeled as rightest forced for re-education</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>second five year plan: the <strong>Great Leap Forward</strong> (1958-1960). Sense of urgency to catch up with other developed country in the west</p>

    <ul>
      <li>e.g. surpass the UK and catch up with the US in <strong>steelmaking</strong></li>
      <li>a feature of this leap forward = people’s commune
        <ul>
          <li>5k households within a commune = so that if women have to go back and cook, takes time away</li>
          <li>aim is to <strong>scale</strong> it by cooking for all = saves time = <strong>more efficient</strong> and productive</li>
        </ul>
      </li>
      <li>but this could give problem that peasants could eat 6 month of rice in 20 days = stock is shared in commune but not in own home = later <strong>famine disaster</strong></li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221206141317264.png" alt="image-20221206141317264" style="zoom:33%;" /></p>

    <ul>
      <li>
        <p>everyone setup their <strong>backyard steel production</strong> = again scaling;</p>
      </li>
      <li>
        <p>but overall this divert attention to agriculture = reduce in agricultural output = great famine later</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221206141718230.png" alt="image-20221206141718230" style="zoom:33%;" /></p>
      </li>
    </ul>
  </li>
  <li>
    <p>but peasants were very enthusiastic about it. Baby named after those concepts:</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221206141910439.png" alt="image-20221206141910439" style="zoom:33%;" /></p>

    <p>however, we know now it is a ==economic disaster== contributing to the great famine</p>
  </li>
</ul>

<p><strong>Great Famine</strong> 1959-61</p>

<ul>
  <li>
    <p>caused by the weather and drought, but also the ==Great Leap Forward fiasco==: 30 million <strong>starved to death</strong></p>
  </li>
  <li>
    <p>historians believe that the problem is not absolute lack of food but the systemic <strong>flaws or decisions that prevent food getting to the people</strong></p>
  </li>
  <li>
    <p>anyway criticism within the party of the Great Leap Forward = Mao took responsibility and <strong>resigned in 1959</strong></p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221206142246061.png" alt="image-20221206142246061" style="zoom:33%;" /></p>

    <p><strong>more pragmatic people Liu Shaoqi and Deng Xiaoping took power</strong> = more into Marxist materialistic base than the idealized vision</p>
  </li>
  <li>
    <p>new leaders = <strong>economic recovery</strong> in 1966</p>
  </li>
</ul>

<h2 id="economic-reforms-and-political-authoritatianism">Economic Reforms and Political Authoritatianism</h2>

<p><strong>Previously on Mao’s China</strong></p>

<ul>
  <li>People’s Republic founded 1949, CCP pursues Soviet-style socialist construction, emphasis on heavy industry, <strong>collectivization</strong>, reorganizing grassroots society to unlock labor power; Mao promotes rapid development $\to$ Great Leap Forward 1958</li>
  <li><strong>Great Leap</strong> is an economic disaster; in CCP leadership reshuffle, ==pragmatists Liu Shaoqi and Deng Xiaoping rise==; Mao’s desire to regain influence factors in launch of the <strong>Cultural Revolution</strong> 1966-69 factional warfare, civil unrest, paralyze nation
    <ul>
      <li>his goal can be said partly to regain his power, but also as a socialist “ideologist”, he believes in social egalitarianism and sees Deng’s policy on economical and political reform <strong>astray from the correct path</strong> = cultural revolution</li>
    </ul>
  </li>
</ul>

<blockquote>
  <p>Some key terms:</p>

  <ul>
    <li>The term “<strong>bourgeois</strong>” has a specific meaning in Marxist theory. It refers to the middle class, which is seen as the class that controls the means of production in capitalist societies. In a Marxist framework, the bourgeoisie are seen as the <strong>enemy of the proletariat</strong>, or working class, because they exploit the labor of the proletariat for their own benefit.</li>
  </ul>
</blockquote>

<p><strong>The Great Proletariat Cultural Revolution</strong> 1966-1969/76</p>

<ul>
  <li>
    <p>Mao believes that:</p>

    <ul>
      <li>the method to solve all problems is by <strong>continuous revolution</strong>. New contradictions/problems will always come up, and class struggles should be used as a tool to solve those new problems</li>
      <li>believes in social <strong>egalitarianism</strong> and no elitism, that policies should be made by the people for the people</li>
      <li>In Mao’s view, there are “<strong>bourgeois</strong>” elements within the Chinese Communist Party, i.e. those who had <strong>abandoned</strong> the party’s revolutionary ideology and had ==embraced more moderate, reformist policies==. These individuals were seen as a threat to the party’s revolutionary principles</li>
      <li>Therefore, party needed to be purged of what he saw as “bourgeois” elements, and he ==launched the Cultural Revolution== to achieve this goal.</li>
      <li>another perhaps popular view is in his attempt to <strong>regain power/influence</strong> in the party</li>
    </ul>
  </li>
  <li>
    <p>1966 Mao wrote a poster “<strong>bombard the headquarters</strong>” = making a war on the party that he established</p>

    <ul>
      <li>this Cultural Revolution first lasted until 1969</li>
      <li>again, he utilize his famous strategy of mass movement = <strong>red guards</strong> (young women students)
        <ul>
          <li>shows that even not in party, he still have <strong>wide-spread support in people</strong></li>
          <li>combined with his earlier mistakes, it can be said he is a person better at <strong><em>moving</em> the masses</strong> to, e.g. revolt, than to govern</li>
        </ul>
      </li>
      <li>the goal is to remove those bourgeois elements from the party</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221208132106538.png" alt="image-20221208132106538" style="zoom:33%;" /></p>

    <p>notice that they are holding “==Mao’s little red book==” = Quotations from Chairman Mao. This book is seen as <strong>bible for cultural revolution</strong>.</p>

    <p>Other forms of “struggle” within this revolution include:</p>

    <ul>
      <li>
        <p>“criticize and struggle” publicly criticize/beat teachers</p>

        <ul>
          <li>recall that during the anti-Rightest movement (after 100-flowers), many intellectuals were condemned = had a bad reputation</li>
          <li>A lot of victims committed suicide to avoid humiliation</li>
          <li><strong>Deng went to exile</strong>, and President Xi’s father was also denounced in this period as well</li>
          <li>an perhaps “unexpected” chaos as Mao did not specify “who to criticize against”, thereby causing ==wide-spread chaos==</li>
        </ul>
      </li>
      <li>
        <p>rebels also followed Mao’s call to “Smash the Four Olds”: old thoughts; old culture; old customs; old habits. For exapmle Confucianism</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221208133146032.png" alt="image-20221208133146032" style="zoom: 33%;" /></p>
      </li>
      <li>
        <p>the idea of being permitted to defy superior, <strong>rising up again established authority</strong> is a theme in this period</p>
      </li>
    </ul>
  </li>
  <li>
    <p>Deng’s Solution: redirect Young people’s energy is to drive them ==to countryside== = 20mil displaced to country side. <strong>Propaganda</strong> below seeming to convince them go there</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Propaganda</th>
          <th style="text-align: center">President Xi</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221208133344893.png" alt="image-20221208133344893" style="zoom:33%;" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221208133652739.png" alt="image-20221208133652739" style="zoom:33%;" /></td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <p>ended finally when Mao passed away</p>
  </li>
</ul>

<p><strong>Deng Xiaoping’s Period</strong>. Whoever is the leader of the party = the man that exert <strong>most impact</strong>. However, the paths taken by post-Mao China were NOT solely dictated by CCP leaders such as Deng</p>

<ul>
  <li>
    <p>at the end of Mao, already some significant changes: <strong>United States President Nixon’s China visit</strong></p>

    <ul>
      <li>In 1972, President Richard Nixon made a historic visit to China, where he met with Chinese leader Mao Zedong.</li>
      <li>This visit marked the beginning of a ==thaw in relations between the two countries==, and it paved the way for the normalization of diplomatic relations between them. Prior to his visit, the United States and China had been on opposite sides of the Cold War as China side with Soviet</li>
      <li>One of the main reasons for the ==deterioration of relations between China and the Soviet Union== was ideological. The two countries were both communist states, but they had different interpretations of Marxism-Leninism, the ideology that guided their governments.
        <ul>
          <li>The Soviet Union, under the leadership of Leonid Brezhnev, embraced a more moderate and pragmatic approach to communism</li>
          <li>while China, under the leadership of Mao Zedong, took a <strong>more radical and revolutionary</strong> stance. This led to tensions between the two countries, as they competed for leadership of the international communist movement.</li>
        </ul>
      </li>
      <li>therefore, Mao begins to see Soviet as the biggest threat and now <strong>tactical cooperation with US might be worthwhile</strong></li>
    </ul>
  </li>
  <li>
    <p>after Mao’s death, three groups competing for power after Mao:</p>

    <ul>
      <li>
        <p><strong>the Gang of Four</strong>, based in Shanghai and more like a clique controlled by Chairman Mao, lead by his wife Jiang Qing</p>

        <ul>
          <li>but after Mao died, they were purged</li>
          <li>Jiang escaped by viewing herself as Mao’s scapegoat: “I’m just a dog of Chairman Mao, and I bite whoever he wants me to bite!”</li>
        </ul>
      </li>
      <li>
        <p><strong>Hua Guofeng</strong> who is a young official gaining Mao’s trust</p>

        <ul>
          <li>“Two whatevers”: We will resolutely uphold whatever policy decisions Chairman Mao made, and unswervingly follow whatever instructions Chairman Mao gave</li>
          <li>but quickly forced out of power by Deng</li>
        </ul>
      </li>
      <li>
        <p><strong>Deng Xiaoping</strong>’s group, who eventually succeeded as he was a core member and had wide spread connections in the party</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221208135041294.png" alt="image-20221208135041294" style="zoom:33%;" /></p>

        <ul>
          <li>once said: “Should China one day become a superpower that bullies, invades, and exploits people everywhere, then the world should expose it, oppose it, and work together with the Chinese people to overthrow it.” = was <strong>advocating peaceful existence between countries with different ideologies</strong> (unlike Soviet)</li>
          <li>connections within the party:
            <ul>
              <li><strong>Long March</strong> veteran</li>
              <li>he never turned on his colleagues despite being purged twice during the Cultural Revolution
                <ul>
                  <li>hence they felt grateful</li>
                </ul>
              </li>
            </ul>
          </li>
          <li>he then successfully <strong>drove out Mao’s chosen successor</strong> (Hua) to reform
            <ul>
              <li>reform direction: Deng distanced the CCP from the Cultural Revolution, from Mao, and from the Soviet economic model</li>
              <li>Deng installed reformists in positions of power.</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>In 1981 “Resolution”: on failures of CCP and <strong>enabled the party to distant itself with Mao</strong> = ==start new goals==</p>

    <ul>
      <li>some denunciation on Mao = cultural revolution was an error</li>
      <li>but still recognize Mao had vital contributions (especially early years), still respected and beloved
        <ul>
          <li>after this little red book disappeared/decayed, etc.</li>
        </ul>
      </li>
      <li>but still not really solving any fundemental change, e.g. structural change, that could prevent this from happening again</li>
    </ul>
  </li>
  <li>
    <p>Deng’s goal for China was to</p>

    <ul>
      <li>==modernize/reform the economy== and improve living standards, while still maintaining Communist Party rule</li>
      <li>argues that poverty $\neq$ socialism, and ==poverty is problem== = very different from previous</li>
      <li>hence a somewhat ==capitalist== approach</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221208135840708.png" alt="image-20221208135840708" style="zoom:23%;" /></p>
  </li>
</ul>

<p><strong>Rural Reform under Deng</strong>: Household responsibility System</p>

<ul>
  <li>
    <p>recall that the Great Leap Forward was an attempt but a failed one</p>
  </li>
  <li>
    <p>reform not a top-down decision, but 18 farmers came together to signed. The idea is that land is shared but you <strong>get to keep what you grew</strong> (in addition to what you should grow/submit to government)</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221208140056290.png" alt="image-20221208140056290" style="zoom:33%;" /></p>

    <ul>
      <li>After this treaty, every farmer in this village competed to produce more as compared to the Great Leap Forward</li>
      <li>called the first capitalist village</li>
    </ul>
  </li>
</ul>

<p><strong>Urban Reform</strong>: “smash the iron rice bowl”</p>

<ul>
  <li>
    <p>==under Mao, there were no private enterprises==, all are controlled under the state.</p>

    <ul>
      <li>Workers belonged to their “work unit” (after graduation) and had lifetime job security.</li>
    </ul>
  </li>
  <li>
    <p>Deng’s reform: ==privatize many state-owned enterprise==s, so for workers in inefficient enterprises <strong>gets laid off</strong></p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221208140509562.png" alt="image-20221208140509562" style="zoom:33%;" /></p>

    <ul>
      <li>though lead to economic development, but income <strong>inequality comes up</strong> as an inevitable problem</li>
    </ul>
  </li>
  <li>Opening to the world: ==Special Economic Zones== (SEZ)
    <ul>
      <li>The SEZs were designed to be areas where <strong>foreign investment and economic development</strong> were encouraged, in order to stimulate <strong>economic growth and create jobs</strong>.</li>
      <li>also lead to China’s later entry into WTO</li>
      <li>Shenzhen would be an example of successful ecnomoic zone</li>
    </ul>
  </li>
  <li>by introducing this reform, it moved away from socialism towards ==capitalism==: “<strong>Socialism with Chinese characteristics</strong>”</li>
</ul>

<p><strong>One Child Policy</strong> (1980-2011): more people due to improvemened of public health</p>

<ul>
  <li>
    <p>rationale: China had already been burdened to lift 1 billion people out from poverty, which was Deng’s goal. Hence in 1980s this comes up</p>

    <ul>
      <li>of course had propaganda</li>
    </ul>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221208141920760.png" alt="image-20221208141920760" style="zoom:33%;" /></p>

    <ul>
      <li>but had a lot of problem/criticism e.g. female fetus the victum</li>
      <li>note that it is only targeted at Han, so not to exterminate ethnic minorities</li>
    </ul>
  </li>
</ul>

<p><strong>Political Authoritarianism</strong>: Deng and leaders seem themselve as authoritarian</p>

<p>| <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221208142201727.png" alt="image-20221208142201727" style="zoom:33%;" /> | <img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221208142406020.png" alt="image-20221208142406020" style="zoom:33%;" /> |
| :———————————————————-: | :———————————————————-: |</p>

<ul>
  <li>
    <p>“Economic reform does not to imply <strong>political liberalization</strong>”</p>
  </li>
  <li>
    <p>Tian’anmen Protest in May 1989, ==also refered to as May 4-th Movement==. Tension/demends include</p>

    <ul>
      <li>Freedom of the press: The protesters called for <strong>greater freedom of the press</strong>, so that journalists could report on political and social issues without fear of censorship or reprisal.</li>
      <li>Freedom of speech: The protesters demanded the right to <strong>express their views</strong> and opinions without fear of retribution.</li>
      <li>==An end to corruption==: Many of the protesters were concerned about corruption in the Chinese government
        <ul>
          <li>An example is that children of elites can get into Tsinghua and Peking University easily</li>
          <li>party official has the priviledge being more wealthy (result of captialism)</li>
        </ul>
      </li>
      <li>Political reform: Some of the protesters called for greater political reform, including the introduction of <strong>democratic</strong> institutions and the expansion of civil liberties.</li>
      <li>fundementally it is caused by wide-spread discontent, result from factor such as
        <ul>
          <li>more <strong>lay-off</strong></li>
          <li>before <strong>controlled rice price</strong>, but now it shoots up (as market is opened) and gives resource tension and inflation</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>lasted for 2 month, the party become <strong>split between liberal and conservative factions</strong></p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20221208212944976.png" alt="image-20221208212944976" style="zoom:33%;" /></p>

    <ul>
      <li>==liberal== = more moderate, we should talk to students, listen to their complaints and reform
        <ul>
          <li>reformist such as Zhao Ziyang argued that the economy should be opened up to market forces, and that political reforms, such as greater democracy and respect for human rights, were necessary in order to modernize China.</li>
        </ul>
      </li>
      <li>==conservative== = repress those news to prevent revolution, very sensitive to revolution (hence also sent troops)
        <ul>
          <li>Deng Xiaoping and his supporters believed that the economy should continue to be planned and <strong>controlled by the state</strong></li>
          <li>but they also believed that <strong>market forces</strong> should play a greater role in the economy.</li>
          <li>in the end, believes that the party should have leading power in decision making</li>
        </ul>
      </li>
      <li>Both believed in the importance of market forces in the economy, but differed <strong>on the extent</strong> to which market forces should be allowed to play a role</li>
    </ul>
  </li>
</ul>

<h1 id="final-exam">Final Exam</h1>

<p>Structure</p>

<ul>
  <li>8 ID, pick 5</li>
  <li>6 pick 2 primary sources: what is says, how does it say it, etc
    <ul>
      <li>who, what, when, why, how = analytical</li>
      <li>significance</li>
      <li>contextualize what source I am talking about</li>
    </ul>
  </li>
  <li>a decent essay</li>
</ul>

<p>Overall idea:</p>

<ul>
  <li>Significance of each event
    <ul>
      <li>e.g. foot-binding significance = commercialization of women + the entire economy</li>
    </ul>
  </li>
</ul>

<p>Key terms</p>

<ul>
  <li><strong>Foot-binding</strong>:
    <ul>
      <li>in Song, foot-binding started among low-class women who were performers/entertainers = so poor had to sell themselves; commercialization of women also during the great movement from north to south = security of women at most agile point = all people are unsure about their worth as now you are going south; women competing in courtesans desired foot-binding = mothers had to also get their daughter into the mold though it is a hard choice</li>
      <li>in Qing, tried to ban foot-binding but didn’t work = ethnic Hans couldn’t because foot-binding became a social status = being foot-bound you don’t need to work in the fields/households , and had servants whose feet were not bound = somewhat an elite status; with the fall of Qing that practice is now gone</li>
    </ul>
  </li>
  <li><strong>Canton system</strong>: Hongs; international trade;</li>
  <li><strong>Qianlong Emperor</strong>: golden age in Qing; Qing really started to expand territory, e.g. Xinjiang under Qianlong; supported some aesthetic engagement; foreign trade</li>
  <li><strong>Neo-Confucianism</strong>: HuangChao rebellion wiped aristocrats with power; Zhu Xi</li>
  <li><strong>Yam System</strong>: serious of outposts so that horse can gallop = allows for speedy transfer of information = how quickly info can propagate
    <ul>
      <li>The postal system, known as the Yam system, was a sort of medieval pony express with stations positioned at intervals of 20-30 miles. At each station, an “arrow messenger” would mount a fresh horse and ride to the next station at a full gallop.</li>
    </ul>
  </li>
  <li><strong>Kurultai</strong> group elect a new leader from a group; elder male chosen as “Kurultai” = next Khan; an election process
    <ul>
      <li>a kuriltai (also spelled <em>kurultai</em>; “general assembly”) of Mongol nobles was convoked in order to elect the new great khan</li>
    </ul>
  </li>
  <li><strong>Chinngis Khan</strong>; <strong>Kublai Khan</strong>
    <ul>
      <li><em>Temüjin</em> (original name) crowned as the kurultai to become Chinngis Khan; unified his steppe tribe; made a lot of invasions = feared ; disable steppe system and created autocracy in the steppe empire</li>
      <li>Kublai: a switch of inward facing history of creation of empire; most people consider the founder of Yuan; invaded southern Song; sinification when ruling; differ with Chinngis as how you rule = cannot cut and paste nomadic strategy to thrive; start of <em>governance</em> = focused more on social and economic issues rather than military conquest</li>
      <li>influence of nomadic culture on China</li>
    </ul>
  </li>
  <li><strong>Columbian Exchange</strong>
    <ul>
      <li>got plants, tomatoes, etc = nutritional = well suited for growth in China; social implications = growth of population</li>
      <li>also diseases</li>
      <li>deficit of silver; Zhang Juzhen = chief secretary; credited to transit from agrarian to; encourage people not to follow the Confucian; policy really benefited the main economy = increasing demand of silver ; as a side effect boosted power of merchants =
        <ul>
          <li>1679 Tokgawa shut down european and halted silver import but still came in = no tap silver inflow</li>
          <li>made paying taxes in this form impossible = people horde their silver = copper to silver went into decline</li>
          <li>Colombian exchange also had the inflow of silver to China=the increased supply of silver led to a <em>devaluation</em> of the metal, which had previously been a scarce and valuable resource.</li>
        </ul>
      </li>
      <li>meaningful engagement with US</li>
    </ul>
  </li>
  <li><strong>1911 revolution</strong> ended Qing; Xinhai Rebellion
    <ul>
      <li>Sun Yat-sen needed some military backing and made agreement with Yuan</li>
      <li>warlord period after Yuan died in 1916-1927</li>
    </ul>
  </li>
  <li><strong>New Cultural Movement v.s. May 4th Movement</strong>
    <ul>
      <li>May 4th 1919: treaty of Versailles with Shandong transferred to Japan angered students = shift focus in China towards soviet unions instead of western power = felt like westerns have abandoned them even though they are all ally in WWI</li>
      <li>but May 4th Movement $\neq$ this event only, but more the idea of <em>shift away from traditional Confucian education</em> to a more modern science and democracy + vernacular literature (e.g. Lu Xun)</li>
      <li>New Culture movement =&gt; New Youth periodical</li>
      <li>what does it has to do with 1911: 1911 being political changes, while these are more literary/and cultural changes to China</li>
    </ul>
  </li>
</ul>

<p>Long Essay</p>

<ol>
  <li>a</li>
  <li>a</li>
  <li>opium war and boxer rebellion</li>
  <li>a</li>
  <li>a</li>
  <li>e.g. May 4-th; what they advocated for = departure from confucian edu values; how does society change but still persisted from the traditional path</li>
</ol>

<h1 id="notes-on-the-open-empire-book">Notes on The Open Empire Book</h1>

<p>This section contains reading notes for the various related chapters of the book “The Open Empire: A History of China to 1800”</p>

<h2 id="ch1-beginnigns-of-the-written-record">Ch.1 Beginnigns of the Written Record</h2>

<p>Written records were mostly for written on <strong>tortoise-shell bottoms</strong>, or called <strong>plastrons</strong> (甲骨文), dating to the reign of King Wu Ding(武丁王) for the ==Shang Dynasty==.</p>

<ul>
  <li>
    <p>texts were transcribed onto either plastrons or sometimes scapula of cattles. Specically, this is done by 1) preparing the bones 2) heting it up 3) the bone cracks 4) interpret the message from cracks and write the questions/answers onto it</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220911153533594.png" alt="image-20220911153533594" style="zoom: 67%;" /></p>

    <p>how was this discovered? This is first discovered during 1899 Beijing, during Malaria, when some people give out “dragon bones” (scapula of cattles and turtle shells dug up in large quantities from Anyang) to be grinded into powder for medicine. Then, some scholar found scripts on those dragon bones, and hence lead to realize those are actual texts.</p>
  </li>
  <li>
    <p>For King Wu Ding, <strong>Anyang</strong> (安阳，河南)was the capital</p>
  </li>
  <li>
    <p>finally, ==Shang== is succeeded by ==Zhou== by the concept of <strong>Mandata of Heaven</strong> (天意)</p>
  </li>
</ul>

<p><em>How Chinese Characters Work</em>:</p>

<ul>
  <li>most well-known examples of chinese characters resemble the concept they depict</li>
  <li>vast majority of cahracters contain a radial (偏旁) to convey the general topic of the word, and a phonetic element to indicate the sound. For instance, 象 means elephant or image, but if added a radical 像, it means image.</li>
  <li>some people also say that chineses are inefficient, indicated by lower literarcy rate in China v.s. US. However, in places such as Hong Kong, Singapore, and Taiwan, literarcy rates are higher.</li>
  <li>Finally, the advent of 拼音 is largely ue to systems to trasnscribe sounds of Chinese into alphabet to be studied by the Western.</li>
</ul>

<p><em>The Advantages of Chinese Script</em></p>

<ul>
  <li>Only few scribes can read or write at that time</li>
  <li>since written chinese characters are decoupled from pronounciation, you can keep your spoken language but just <strong>assign Chinese characters to preexisting words in your language</strong>. This gives rise to the diverse dialects but still a uniform written system.</li>
</ul>

<p><em>The Content of Oracle Bones</em></p>

<ul>
  <li>
    <p>Ritual related questions such as: What should be sacrifiesed? In what quantity?</p>
  </li>
  <li>
    <p>Political questions such as: Sohuld the king send this troops to a certain kingdom?</p>
  </li>
  <li>
    <p>the layout of a typical script on oracle bone consist of:</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220911155732457.png" alt="image-20220911155732457" /></p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220911155718282.png" alt="image-20220911155718282" /></p>

    <p>where the <strong>preface</strong> explains which priest presided and which date, <strong>charges</strong> states the topic, <strong>prognostication</strong> gives the interpretation of the cracks (i.e. predictions) and <strong>verification</strong> is the actual outcome</p>
  </li>
  <li>
    <p>do not conclude from the above that Shang preferred sons to daughters, because there are cases when “good” births were of daughters.</p>
  </li>
  <li>
    <p>Found a lot of oracle bones, indicating that <strong>divination occured daily</strong></p>
  </li>
  <li>
    <p>Finally, scripts on plastrons are also used for <strong>teaching</strong>, where we found teacher scripts with cracks along with student’s messy and error-containing scripts on plastrons without cracks. This indicate that plastrons are plentiful during the time and students do not need to write on other materials first (if they did practice, then their characters would be better formed!)</p>
  </li>
</ul>

<p><em>Discoveries at Anyang</em></p>

<ul>
  <li>Lady Hao, one of sixty-four consorts of the Shang King Wu Ding, has a tomb contained 3 ivory carvings, close to 500 bone hairpins, over 500 jdaes and nearly 7000 cowry shells (used as money)</li>
  <li>this is one of the only complete tomb excavated, withot the disturbance of gold diggers/theives</li>
</ul>

<p><em>Art of Making Bronzes</em></p>

<ul>
  <li>
    <p>A large of amount of Bronze vessels found at Anyang and Erlitou, suggesting that it is a society with significant resource to produce those at such a large quantity.</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220911160601075.png" alt="image-20220911160601075" /></p>
  </li>
</ul>

<p><em>The Antecedens of Modern Chinese Cuisine at Anyang</em></p>

<ul>
  <li>people at Anyang produced many different type of bronze veseels for cooking meat, holding cooked grain, etc.</li>
  <li>most cooked dishes were meat stew</li>
  <li>resistents of Anyang believed their <strong>ancestors retrained their desire for food</strong>, even when dead</li>
</ul>

<p><em>The Pyramid of Shang Society</em></p>

<ul>
  <li>This <strong>power pyramid</strong> can be found in the tomb: underneath the nature gods stood the ancestors of the royal family. The long-dead outranked the more recently dead, who in turn out ranked Shang king.</li>
  <li>Shang believed one could communicate more easily with those in nearby tires, and offerd a lot to recent dead.</li>
  <li>Member of the royal linage and women from the families who could marry with them constituted the aristocracy of the Shang.</li>
  <li>Shang believed the dead king would occupy this tomb after his death, and because he neded the service of all those who worked for him while alive, <strong>they had to perish when he died</strong>.</li>
</ul>

<p><em>The Nature of the Shang Polity</em></p>

<ul>
  <li>
    <p>His men rounded up livestock from the residents of places the royal entourage visited, but his officials <strong>did not collect taxes</strong> on a regular basis from a set territory</p>
  </li>
  <li>
    <p>therefore, in what sense did Shang constitute a state? It is perhaps more like a soft state, whose stability hinged on the king’s frequent visits to his subordinates and their domains, <strong>whose bureaucracy remained divine</strong> rather than human.</p>
  </li>
</ul>

<p><em>The Illiterate Contemporaries of the Shang in Sichuan</em></p>

<ul>
  <li>the discovery of the Sanxingdui 三星堆 in Sichuan illustrates the <strong>cultural variety of Bronze Age China during Shang</strong></li>
  <li>artifacts in Sichuan different dramatically from anything at Anyang</li>
</ul>

<p><em>Mandate of Heaven</em>: from ==Shang== to ==Zhou==</p>

<ul>
  <li>
    <p>According to Sima Qian (most critics argue this might not be accurate), the last Shang king liked the company of owman, drnak too much, enjoyed depraved songs, etc</p>
  </li>
  <li>
    <p>Many officials left Shang to serve Zhou, and when Zhou’s advisor urged him to invade Shang, he says “You don’t know the <strong>Mandate of Heaven</strong> yet”</p>
  </li>
  <li>
    <p>Then the last Shang king killed an offical who dared to criticize him, by cutting his chest open wile alive, <strong>Zhou king launched the invasion and won</strong>.</p>
  </li>
  <li>
    <p>from then on, people start to believe that:</p>

    <ul>
      <li>if emperor could not govern and is soon revolted, the Heaven has retreated support and revolter would have the new Mandate of Heaven</li>
      <li>but if the revolution failed, then it is said the <strong>Mandate of Heaven is retained</strong></li>
    </ul>

    <p>as a result, Mandate of Heaven is practically a 马后炮</p>
  </li>
</ul>

<p><em>Zhou Conquest of the Shang</em>:</p>

<ul>
  <li>once ==Zhou== had defeated the ==Shang==, they established their capital along the Wei River (渭河).</li>
  <li>Until 771 B.C.E, when Zhou abandoned their capital in the Wei River valley (near 西安), historian then called the period ==before this Western Zhou==, and the period after such a move ==Eastern Zhou==</li>
</ul>

<p><em>Divination in the Zhou: The Book of Changes</em></p>

<ul>
  <li>Like the Shang, the Zhou also divined with help of bones and shells, but also used a <strong>leafy herb with white flower called yarrow</strong>, where diviners manipulated the <strong>stalks of yarrow in group of six and decided fate based on hexagrams.</strong></li>
  <li>From 诗经, there are mentions that commoner men can also perform divination with both shells and yarrow stalks, such as for marriage</li>
</ul>

<p><em>The Book of Songs</em> 诗经</p>

<ul>
  <li>contains the first songs from anceint China, and depicts vividly the elite and the <strong>lives of commoners</strong></li>
  <li>these recorded songs are culled from 3,000 to 306 by <strong>Confucius</strong> (c.a. 551-479 B.C.E)</li>
  <li>the ealiest songs record ritual chants, but later ones include contents about battles and eventually love</li>
</ul>

<p><em>The Agricultural Year</em></p>

<ul>
  <li>
    <p>A late song details many economic exchanges between the lord of estate and his dependents</p>

    <ul>
      <li>the lord’s obligation is to <strong>provide people with clothing</strong></li>
      <li>commoner women’s obligation is to <strong>provide silk and thread to the lord</strong></li>
      <li>commoner men’s obligation is to provide <strong>animal skins</strong></li>
    </ul>
  </li>
  <li>
    <p>an example would be</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220914152436952.png" alt="image-20220914152436952" style="zoom: 50%;" /></p>

    <p>which gives a sense of life in ==Western Zhou==:</p>

    <ul>
      <li>people provided their lord with <strong>a share of crop, hunt, and textile made</strong></li>
      <li>the lord provide them with <strong>clothings</strong> and <strong>invite them to feasts</strong></li>
    </ul>
  </li>
  <li>
    <p>but there are also other songs when people are <strong>dissatisfied</strong> with their lord, in which case they may threaten to leave the lord</p>
  </li>
</ul>

<p><em>Bronzes of Western Zhou</em></p>

<ul>
  <li>besides Book of Songs, <strong>inscriptions on bronzes also provided an outline of government and economy of Zhou</strong></li>
  <li>contents include:
    <ul>
      <li>how ==Zhou kings== also worshiped their ancestors, like ==Shang==</li>
      <li>many rituals are conducted by inscribing on a <strong>bronze bell</strong>, so that when <strong>struck</strong>, the living hoped messages would be conveyed to the dead and perhaps wishes granted</li>
    </ul>
  </li>
</ul>

<p><em>A Zhou Warrior and the Reward for his Service</em></p>

<ul>
  <li>one text described a battle when Xianyun people raided Zhou garrison, who were defeated by the contribution of the Zohu warrior Duo You.</li>
  <li>king then <strong>award him lands</strong>, with people in that land obligated to serve the lord
    <ul>
      <li>since men in the lower rank can rise, it can be seen as a <strong>form of early bureaucracy</strong></li>
    </ul>
  </li>
  <li>hence, Western Zhou can be seen as “<strong>the aggregation of thousands of pieces of land woemn together by the political power of the state</strong>”</li>
</ul>

<p><em>Ancestor Worship</em></p>

<ul>
  <li>the Book of Songs make it possible to reconstruct the <strong>ritual context</strong> (i.e. exactly what happened) of the Western Zhou bronzes</li>
  <li>basically in one song, what happened is:
    <ul>
      <li>a young boy in the clan designated as the impersonator for the spirit to enter his body</li>
      <li>chief of the lineage conducts the ritual</li>
      <li>an officiating invoker serves as the go-between connecting the impersonator and the pious descendant.</li>
      <li>then, living family members requets good fortune and long life from the dead</li>
      <li>officiating invoker then consults an oracle</li>
      <li>and the “spirit” replies</li>
    </ul>
  </li>
</ul>

<p><em>The Zhuangbei Hoard: Ritual Revolution?</em></p>

<p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220915203850551.png" alt="image-20220915203850551" style="zoom:40%;" /></p>

<ul>
  <li>
    <p>in 771 B.C.E, Zhou is invaded and abandoned their captial near Xi’an and <strong>fled east</strong>. Then the Wei family, fore fled, buried seventy-five vesssels and <strong>twenty-eigth bells</strong> in a bit (maybe hoping to recover it when they are back)</p>
  </li>
  <li>
    <p>this pit is now found, and it is realized that objects can be categorized distinctly into ==two types==, one ealier dating to 1050 B.C.E and one later to 880 B.C.E</p>

    <ul>
      <li>the ealier vessels were having exaggerated, delicate patterns, such as animals and tao-tie</li>
      <li>the later ones become flatter and stylized (<strong>simpler</strong>), and the tao-tie motif beame a little bit abstract</li>
    </ul>

    <p>therefore, it is hypothesized (largely agreed) that a ==ritual revolution== occured c.a. 850 B.C.E, and she explains by:</p>

    <ul>
      <li>ealier ones belived in shamnic travel to he world of spirits, and have no limits on how many vessels a certain person can have</li>
      <li>later ones perhaps have a decline in the belief inanimal spirits, and is <strong>only permitted to have a certain number of vessels</strong></li>
    </ul>
  </li>
</ul>

<p><em>The continuity of Shang and Western Zhou</em></p>

<ul>
  <li>both shared
    <ul>
      <li>belief in oracle bones and divinations (Zhou additionally used yarrow stalks)</li>
      <li>both are soft states, with incipient初始的 form of tax and uncertain borders. Gifts from subjects to rulers are the major form of income</li>
    </ul>
  </li>
  <li>they differ
    <ul>
      <li>Zhou also have some written records of the commoners</li>
      <li>Zhou is beginning to have bureaucracy system</li>
      <li>Book of Songs described a gender split in Zhou: men could farm and hunt, but women needs to gather mulberry leaves, spun thread, dye textiles and making clothing. Also inscriptions on Zhou bells chime the prayers of the living for their sons and grandsons, <strong>not for daughters and granddaugthers</strong>.</li>
    </ul>
  </li>
</ul>

<h2 id="ch2-the-age-of-the-warrior-and-the-thinker">Ch.2 The Age of the Warrior and The Thinker</h2>

<blockquote>
  <p><strong>Here we are featuring:</strong></p>

  <ul>
    <li>Spring and Autumn Period 春秋, and The Warring State Period 战国, both of which is during the ==Eastern Zhou==</li>
    <li>Chong’er (重耳=晋文公) from the Jin family.</li>
    <li>The period of Confucious 孔子 (died near the start of 战国), Zhuang Zi 庄子, Mencius 孟子, and Xun Zi 荀子</li>
  </ul>
</blockquote>

<p><em>Start of Easter Zhou in. 771 B.C.E</em></p>

<ul>
  <li>
    <p>in 771 B.C.E, two dependent states of Zhou made alliance with some tribal people to overthrow the Zhou King.</p>
  </li>
  <li>
    <p>The defeated ==Zhou== shifted their captial to the east <strong>near the modern city of Luoyang</strong>, and became more like a <strong>symbolic head</strong> as the competing regional leaders at far superior armies</p>
  </li>
  <li>
    <p>There were some <strong>more than 100 polities at that time</strong>, and non had siginificant power to conquer all its neighbors. Besides them, there are also groups of “less-civilized” people who do not have their own written records</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220917124507405.png" alt="image-20220917124507405" style="zoom:33%;" /></p>

    <p>the four major “non-chinese” groups are therefore the Rong, Di, Man, and Yi, whom although is less civilized, but many chinese had contact with them to learn <strong>battling skills</strong> and cavalry (see later)</p>
  </li>
  <li>
    <p>In the end, Easter Zhou is one with 6 centuries of warefare (770 to 221 B.C.E), and is usually considered into two halves:</p>
    <ul>
      <li>==春秋==: named after the book <em>The Spring and Autumn Annals</em>, but actually the book that stores most of our knowledge from the period is <em>The Commentary of Mr.Zuo</em> (左传)</li>
      <li>==战国== (the Warring States Period): when the Zhou has became so weak that everybody is fighting between themselves to give birth to the next dynasty</li>
    </ul>
  </li>
</ul>

<p><em>The Commentary of Mr.Zuo and the Society it Describes</em></p>

<ul>
  <li>
    <p>keep in mind that this is written 2 centuries after this period</p>
  </li>
  <li>More than 100 polities, described over 500 battles, and more than 100 civil wars within polities as well.</li>
  <li>At the beginning of 春秋, a hierarchy of <strong>birth deciding which linage a man belonged=social status</strong></li>
  <li>but even at this difficult time, there are several people who fought their own way to be recognized as the “==lord protector==”
    <ul>
      <li>Duke Huan of Qi</li>
      <li>Duke Wen of Jin 晋文公, also called Double Ears (Chong’er)</li>
    </ul>
  </li>
</ul>

<p><em>The Struggle of Double Ears to Win His Realm</em> (Jin)</p>

<ul>
  <li>the Rong wife (of the current ruler) who bore Double Ears neber necame a favorite (e.g. because Rong is non-chinese)</li>
  <li>Wome at the time was also having low status:
    <ul>
      <li>because marriage = building alliance, usually ==bride + female relatives are sent so that a son can be born==</li>
      <li>therefore, all mother can do it so ==angle for the success of her son==: 宫斗
        <ul>
          <li>sent her son to the territory of the Di people</li>
          <li>Lady Li (mother of Double Ear) created the impression that the designated heir (for crown) sought to poison his father. But to accuse Lady Li means to offtend his father, the heir decided to kill himself.</li>
          <li>Awaited the time when their father died, and thought this is the time</li>
          <li><strong>Duke’s ministers could also took</strong> over the throne by killing her sons</li>
          <li>So Double Ears were travelling (e.g. making friends with Chu) before returning to take over the Jin polity with help. To obtain the help, he made a promise to the Chu King that if they meet on battle, he <strong>will withdraw his force a distance of three day’s march</strong></li>
        </ul>
      </li>
    </ul>
  </li>
  <li>晋文公finally took over, and he:
    <ul>
      <li>enlarged his army to three times the size</li>
      <li>met the Chu force, did the retreat as promised, but Chu still engaged. Double Ear won by ==tricking== them tht they are retreating</li>
      <li>since he has shown to be a powerful ruler, he is finally appointed by the ==Zhou King== to be a <strong>lord protector</strong> and awarded him the new rank.</li>
    </ul>
  </li>
</ul>

<p><em>Changes in the Art of War after Death of Double Ears</em></p>

<ul>
  <li>Double Ears (636-628 B.C.E) marked the begining which ==military strength and innovative strategy become important==
    <ul>
      <li>people were trying to have many <strong>chariots</strong>, with about 10-30 carrying the chariot with 3 skilled warriors on it</li>
      <li>but since chariots are costly and ineffective unless on flat plains, they lost to <strong>infantry</strong> 步兵, which also marked an era of political shift since it means <strong>farmers could also revolt</strong></li>
      <li>Di people took advantage of infantry by having a lot of them, and even ==erased the social distinction== that divided those who can be ON the chariot and those who ran along. In warefare with infantry, ==anyone can rise up the ranks== to become a general, and social flux is encouraged.</li>
      <li>the above is adopted by other rulers later as well</li>
    </ul>
  </li>
  <li>Following a need for army is a rise in tax, literarcy rate (e.g. people can rise up to be the King’s advisor), and agricultural productivity
    <ul>
      <li>started the use of <strong>iron tools</strong> instead of wooden ones, possibly introduced by the Europoid.</li>
      <li>the rise of infantry and army size means <strong>experts generals are needed</strong> to take lead instead of royal lineages. They believed that the ==art of war can be taught==, and gives rises to books/teachings.</li>
    </ul>
  </li>
  <li>The first book on strategems is <strong>The Art of War (孙子兵法)</strong>
    <ul>
      <li>stressed that the entire amry had to be trained to follow the orders unquestionably</li>
      <li>“the highest skill is to bring the enermy’s army to ==submit without combat==”</li>
      <li>students should seek to <strong>identify weakness in their army</strong> and find the <strong>right time to attack</strong></li>
    </ul>
  </li>
  <li>But another new change soon emerged is the introduction of <strong>calvary</strong> by Zhao King (learnt from their neighbor)</li>
</ul>

<p><em>The Demand of Experts</em></p>

<ul>
  <li>
    <p>rulers during the 战国 <strong>hire advisors on the basis of their skills</strong>. A famous example is Feng Xuan:</p>

    <ul>
      <li>
        <p>the intermediary introduced Feng Xuan to the lord Mengchang:</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220917132734568.png" alt="image-20220917132734568" style="zoom:50%;" /></p>
      </li>
      <li>
        <p>then, during a time when Mengchang wants to collect tax and Feng Xuan volunteered, he did not bring the taxes back but “forgive” all of them. The Lord is confused and asked why:</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220917132900022.png" alt="image-20220917132900022" style="zoom:50%;" /></p>
      </li>
    </ul>
  </li>
  <li>
    <p>such sharp observation and fast decision is referred to as ==acumen==, being hungered for during 战国</p>
  </li>
</ul>

<p><em>The World of Confucius</em></p>

<ul>
  <li>born to the Kong family in Qufu 曲阜</li>
  <li>China’s first <strong>private thinker</strong> (i.e. not served as ministers or generals)</li>
  <li>The only source for understanding his teaching is The Analects (论语), which is a collection of conversations/teachings compiled by later students
    <ul>
      <li>again this is compiled much later after he died</li>
      <li>conversations are first orally tranmitted, and then ==written down on bamboo (first source!)==
        <ul>
          <li>scripts on bamboo are written from right to left, top to bottom</li>
        </ul>
      </li>
      <li>the received text of 论语 is compiled by having different disciples writting different sections, hence there are <strong>sharp differences among how they perceive Kongzi and his teachings</strong></li>
    </ul>
  </li>
</ul>

<p><em>The Teaching of Confucius as in the Analects</em></p>

<ul>
  <li>
    <p>he likes to converse with peoplesx</p>
  </li>
  <li>
    <p>claims that he will 述而不作, but did innovate by</p>

    <ul>
      <li>how to behave virtuously and how to govern (ealier believed this skill is born with rulers)</li>
      <li>the concept of ritual ==礼 is an important quality,== and if men employ this, society could be reformed</li>
      <li>other ==essential qualities include humanness 仁==</li>
      <li>during their parent’s lifetimes, children should obey their wishes and after their death, children should continue for three years to conduct family affairs just as their parents had.
        <ul>
          <li>however, Confucious ==did not teach anything about spirit and supernatural==.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>Confucious seems to have ==only taught sons==. Why?</p>

    <ul>
      <li>one possible explaination is that men’s interest was to have a larger family unit, and since only men can worship their ancestors, only sons cold carry on the family line. Whereas women are interested in a uterine family 同母异父 consisting themselves and their own children, there is a conflict.</li>
    </ul>
  </li>
  <li>
    <p>Confucious believed that one can influence the wolrd by behaving as a gentleman at home, and that with benevolence (仁) all chaos will be checked</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220917135156728.png" alt="image-20220917135156728" style="zoom:50%;" /></p>

    <p>but later people did find it difficult to rule without force, and indeed Confucious was powerless when his city was attacked</p>
  </li>
  <li>
    <p>In 479 B.C.E. he died</p>
  </li>
</ul>

<p><em>Ritual as shown on the Vessels of 战国</em></p>

<ul>
  <li>
    <p>many vessels from Confucious time survived until today, but it is found that they are <strong>very different from the Western Zhou</strong>.</p>

    <ul>
      <li>
        <p>no more animals, but human figures engaging in activities</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220917135515555.png" alt="image-20220917135515555" style="zoom: 25%;" /></p>
      </li>
    </ul>
  </li>
  <li>
    <p>In Shang and Zhou, kings had retrained a monopoly over bronze vessels but by the time of Confucious, ==lower-ranking lords has taken over production and begin to record their own victories==</p>

    <ul>
      <li>to them, ==ritual activities (a them in the Analects) is viewed differently== as attesting the effectiveness of power and violence, while Confucious wanted the rituals as a forum of the individual’s development of benevolence.</li>
    </ul>
  </li>
</ul>

<p><em>After Confucious</em></p>

<ul>
  <li>since the Analects is collectively edited by students, separate sections contain different views on the teachings, and hence there were a lot of disagreement = Confucians broke up into eight rival schools.</li>
  <li>the century after Confucious death then giave brith to some of China’s liveliest and most intersting thinkers</li>
</ul>

<p><em>Mozi’s Criticism</em> (50 years after Confucious)</p>

<ul>
  <li>reformulated his teachings in response to Confucious</li>
  <li>At this period 5th century B.C.E, the fighting during the 战国 has dwindled to <strong>four major contenders - Qi, Jin, Chu, and Yue</strong>.</li>
  <li>Mozi accepted certain basic Confucian prescriptions, but felt that:
    <ul>
      <li>bonds with acquaintances are overemphasized, e.g. thief steal from other families to benefit their own. Therefore, he proposes ==兼爱, which is that each individual had an obligation towards all other people in the society==</li>
      <li>ridiculed that Confucious advocate for elaborate funerals but gives no discussion of spirits and afterlife. Hence he proposes measures for <strong>controlling the cost of funerals</strong>.</li>
      <li>but he agrees with Confucious that gentleman had to remain engaged in the society for reformation</li>
    </ul>
  </li>
</ul>

<p><em>The Way and Integrity Classic</em> 道德经</p>

<ul>
  <li>
    <p>written by 老子, and disciples of this school are called Daoist</p>
  </li>
  <li>
    <p>emphasizes the quality of Wuwei ==无为, which should be interpreted as non-interfence:==</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220917141028913.png" alt="image-20220917141028913" style="zoom:50%;" /></p>
  </li>
</ul>

<p><em>Zhuangzi: The use of Paradox and Humor</em></p>

<ul>
  <li>
    <p>while both 道德经 and 庄子’s teachings often addresses the ruler of the state, Zhuangzi focuses on the individual and presents a series of anecdotes</p>
  </li>
  <li>
    <p>he believes that people should ==abandon preconceived notions==</p>

    <ul>
      <li>
        <p>death should not be mourned</p>
      </li>
      <li>
        <p>advantage of the disadvantaged</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220917141422248.png" alt="image-20220917141422248" style="zoom:50%;" /></p>
      </li>
    </ul>
  </li>
  <li>
    <p>Zhuangzi also emphasizes on 无为, letting things run their natural course, but does not seem to condemn deforestation</p>
  </li>
</ul>

<p><em>Zhuangzi and Mencius</em> 孟子</p>

<ul>
  <li>
    <p>Mencius is a contemporary of Zhuangzi</p>
  </li>
  <li>
    <p>Mencius believed that <strong>men were born good, but the environment transformed /corrupted them</strong></p>

    <ul>
      <li>
        <p>an example would be deforestation, fked by the environment</p>

        <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220917141929779.png" alt="image-20220917141929779" style="zoom:50%;" /></p>
      </li>
    </ul>
  </li>
  <li>
    <p>Mendius, since believing in men, felt the people could be trusted to select a new rules, and the ==concept of Mandate of Heaven is to mean that a ruler could rule only with support of his subjects==</p>
  </li>
</ul>

<p><em>Mencius and Xunzi: the Continuing Confucian Debate</em></p>

<ul>
  <li>Xunzi 荀子 is in contrary with Mencius, believing that <strong>men were born evil but can improve via education</strong>.</li>
  <li>like Confuscious, they focused on question of how to govern, but they were ==hoping more of a unification rather than restoration== (as the Zhou dynasty has became so weak)</li>
  <li>at the time of Xunzi, there were only three major power vieing: Qi, Chu, and Qin
    <ul>
      <li>Xunzi visited Qin just before their conquest, and saw that “They employ them (the people) harshly, terrorize them with authority, embitter them with hardship, coax them with r4ewards, and cow them with punishments”</li>
      <li>hence ==predicted that Qin would not last long==</li>
    </ul>
  </li>
</ul>

<p><em>Money Economy of the Warring States Period</em></p>

<ul>
  <li>
    <p>In Shang and early Zhou, rulers used cowrie shells and cloth are currency, and their subjects exchanged goods</p>
  </li>
  <li>
    <p>In 战国, the ==merchant class grew as trade across regions increased==, and that the economy were well-developed for trading:</p>

    <p><img src="/lectures/images/2022-12-19-ASCE1359_Intro_to_China/image-20220917143052255.png" alt="image-20220917143052255" style="zoom:50%;" /></p>

    <p>because of the increase in trading, it leads to an ==increase in specialization==</p>
  </li>
</ul>

<p><em>The Chaotic Pace of Change</em></p>

<ul>
  <li>
    <p>constant fighting throught the period = large resource consumed = rulers taxing individuals</p>
  </li>
  <li>
    <p>a bunch of changes:</p>

    <ul>
      <li>regional rulers displacing Zhou kings</li>
      <li>chariot warriors displaced by infantry</li>
    </ul>

    <p>==a great degree of social flux== also gave anciety for higher class, but also ==promoted literarcy==</p>
  </li>
  <li>
    <p>chaotic period also gave rise to all the different thinkers starting from Confuscious</p>
  </li>
  <li>
    <p>the <strong>Legalist teachings</strong> 法家 in Qin was so repelled, by Xunzi, but they proposed a radically new way of organizing the state and its subject that allows its adherets to ==unite the realm for the first time==</p>
  </li>
</ul>

<h2 id="ch3-the-creation-of-empire">Ch.3 The Creation of Empire</h2>

<p><em>From the Warring States to Qin</em></p>

<ul>
  <li>Qin defeated the other riavals not because of any new technology, but because they found a new way to organize their state: Legalist ministers who advocated the <strong>abolition of all privilegeds of nobility</strong>
    <ul>
      <li>Results in very efficient system in Qin (in contrast to the modern view of bureaucracy)</li>
    </ul>
  </li>
  <li>After the unification of China, scholars in ==Qin== and ==Han== begin to face the question: how should they <strong>govern</strong> talented officials? What role should the state play in the economy?</li>
  <li>during the Warring state, it was mostly priviledged aristocracy and the laboring masses. But after 221 B.C.E. it became mostly scholars, peasants, artisans, and merchants (merchants last because pesants and artisans produced something)
    <ul>
      <li>technically we still have slaves, doctors and religious specialists in addition</li>
    </ul>
  </li>
  <li>Qin ended within 14 years of ruling, due to problems in the court and people unsatified=rebellion</li>
</ul>

<p><em>Brief history of Han</em></p>

<ul>
  <li>founded by a strong leader and succeeed by strong woman, Han enjoyed 200 years of competent ruling</li>
  <li>Interloper Wang Mang, tired of being regent (to young emperor), formed a ==new dynasty called Xin==</li>
  <li>within 15 years, other families of Han regained power and weakened the dynasty</li>
  <li>destruction of their capital at Changan forced them to move to Luoyang</li>
  <li>beginning of increased tax, and emperesses wrest control from weak emperors</li>
  <li>rise of enunuchs and Confucian students began protests, as well as many following Daoism</li>
  <li>lots of protest and rebellion, a disaster ended the dynasty</li>
</ul>

<p><em>The Legalist State</em></p>

<ul>
  <li>韩非子, who stuttered during an ear where eloquence is prized, had to record his idea on pen and paper</li>
  <li>believed that ruler should be detached from everyday business, and apply <strong>unbending standard to judge officals and people</strong></li>
  <li>believed in a <strong>law that treated everyone equally</strong>, and that only the <strong>systematic application of law</strong> can control people, whose nature are evil (Xunzi)</li>
</ul>

<p><em>The Architecture of Qin’s Success: Shan Yang’s Reforms</em></p>

<ul>
  <li>Qin wasn’t strong enough to take over all rivals until 商鞅’s term in office</li>
  <li>Shangyang <strong>disdain the past</strong>, hence ==rejected Confucious values==, especially ritual, and sees it as pointless</li>
  <li>Shangyang greatly improved the fiscal of the Qin:
    <ul>
      <li>registration of households, and let people <strong>supervise each other</strong></li>
      <li>if criminal activity is not reported, chop heads</li>
      <li>once a man reached 16-17, ==obliged to serve military== and pay ==taxes==</li>
      <li>establishing the concept of ==ownership of land==</li>
      <li>==achievements in army gives promotion in rank== proportional to the achievement</li>
      <li>the entire population of Qin is divided into ==ranks== = permitted clothing, land, slaves, households.</li>
      <li>people (pesants/artisans) who contributed much grain/cloth to the state is free from tax</li>
      <li>proposed rulers of small districts ==县, who is in charge of organizing army==, carry out public works, collect taxes…</li>
      <li><strong>standardized units</strong> such as weight and length</li>
    </ul>
  </li>
</ul>

<p><em>China’s First Emperor</em></p>

<ul>
  <li>
    <p>given a strong fiscal basis, King Zheng (later called <strong>秦始皇帝</strong>) decided to attack all the other rivals at the time</p>
  </li>
  <li>
    <p>after destorying the other six kingdoms, King Zheng:</p>

    <ul>
      <li>forced the royals from the six kingdoms to live near the capital (for monitoring)</li>
      <li>emphasized on <strong>farming</strong> as the mainstay of the economy</li>
      <li><strong>standardized coins</strong> to be a circle with holes (so that they can be stringed together)</li>
      <li>divided territories into <strong>commanderies</strong>, which is further divided into <strong>counties</strong>.
        <ul>
          <li>Commanderies are like little central government:</li>
          <li>they need to perform three tasks: civl matters, e.g. taxation, military affairs, and ==supervision of governmental officials==</li>
        </ul>
      </li>
      <li>the top officials in the central government include
        <ul>
          <li>chancellor, who heade the bureaucracy</li>
          <li>imperial secratry, who drafted king’s orders</li>
          <li>grand commandant, in charge of military</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>Qin has also done some <strong>significant projects</strong></p>

    <ul>
      <li>built <strong>networks of roads</strong> over 6,800 km long</li>
      <li>==dug irrigation cannals==, and some three hundred thousand men built extensive walls of pounded earch along northern borders</li>
      <li>==fearful of death==, he tried to obtain exilir for immortality but failed. Instead, he let seven hundered thousand men working for his ==tomb==, which was intested to replicate the universe as his permanet resting home in the ==afterlife==
        <ul>
          <li>for fear that workers may disclose the position of the tomb, all artisans and laborers who had worked there ==were imprisoned in the tomb== while alive</li>
          <li>gives rise to the ==Terra-Cotta army== 秦陵兵马俑, who were thought to be troops that the emperor can fight with in the underworld</li>
          <li>however, his tomb today was never excavated/found</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>When Qin founder died in 210 B.C.E, he named his more popular first son to succeed, but with interloped by a powerful official named Zhao Gao</p>

    <ul>
      <li>took over as a chancellor</li>
    </ul>
  </li>
  <li>
    <p>but the greatest opposition is the <strong>rebellion of the people</strong>. This happened because there were laborers who are delayed by the rain, and that:</p>

    <ul>
      <li>since they cannot complete their work, they “will die” (according to Han historians)</li>
      <li>if they revolt, they die as well (according to Han historians)</li>
    </ul>

    <p>therefore, maybe they should risk for their own kingdom.</p>
  </li>
</ul>

<p><em>Reasons for Doubting the Historical Record</em></p>

<ul>
  <li>
    <p>Win ordered a ==large-scale book burning== in 213 B.C.E destroying all dissenting point of view</p>

    <ul>
      <li>except <em>The Book of Song</em> 诗经 and <em>The Book of Documents</em> 书经 were banned, and only agricultral and divination books permitted</li>
      <li>for books such as 诗经, most content are anyway transmitted from teacher to student, hence book burning had no effect</li>
    </ul>
  </li>
  <li>
    <p>贾谊Jia Yi’s Confucian view point, which emphasized humanity and rightenousness, provided Han dynasty the perfect justification to overthrow Qin</p>
  </li>
  <li>
    <p>but it was found later in a tomb in 睡虎地 Shuihudi, where a Qin clerk lived a life as a hearing for crimal suit and took ==several legal writings with him in the tomb==</p>

    <ul>
      <li>described a detailed judification system where poeple would often be ==beaten as a punishment instead of killed==</li>
      <li>women also had work outside the typical sewing: some were working in ==lacquer production with signed vessels==</li>
    </ul>

    <p>however, it is <em>prescriptive</em> of what sohuld happen rather than <em>descriptive</em> of what actually happened, so it should also be taken with a grain of salt</p>
  </li>
</ul>

<p><em>The Founding of Han</em></p>

<ul>
  <li>peace during 秦始皇帝 but as soon as he died and much succession problem happened at palace, many of the former regional states broke away</li>
  <li>bona-fide peasants 刘邦 and low-ranking official <strong>rebelled and started a new dynasty</strong>
    <ul>
      <li>Liu Bang is very social but crude, hence have a lot of drinking friends at inn</li>
      <li>when he won the battle against Qin, he pleged to abolish all other Qin’s law but only keep a) those who kills others shall die b) he who harms others or steals should be punished</li>
      <li>but in the end it is found that the ==Han dynasty took many Qin laws verbatim==</li>
    </ul>
  </li>
  <li>one major depature from Qin is Han’s policy on placing nobility all near captical. Instead, Han created new nobilities to his brothers and relatives and ==dispersed them==:
    <ul>
      <li>gave them titles of local Kings</li>
      <li>2/3 of the territory reined by sons and relatives, 1/3 by Liu Bang himself</li>
      <li>but the core of Han is still ==西安==</li>
    </ul>
  </li>
  <li>but the first years of Liu Bang’s reign was difficult, as it has to <strong>suppress rebellions within China and defned against the powerful 匈奴</strong> in the north
    <ul>
      <li>after Liu Bang’s death, a new ruler in 209 B.C.E. lost to Xiongnu and signed a ==humiliating peace treaty== requiring China to present gifts of textiles, food, and wine, wile Xiongnu not to attack China</li>
    </ul>
  </li>
</ul>

<p><em>The Reign of Dowager Empress Lv</em></p>

<ul>
  <li>Empress Lv 吕后 ruled for an extended period of time by placing infants on throne</li>
  <li>as an empress, suffered pressure even from Xiongnu (asking she to marry over)</li>
</ul>

<p><em>The World of the Regional Rulers: 马王堆 finds</em></p>

<ul>
  <li>
    <p>found ==Han’s tomb in 马王堆汉墓==, with three of the four tombs almost intact</p>
  </li>
  <li>
    <p>most important find is ==Lday Dai’s tomb==</p>

    <ul>
      <li>
        <p>Lady Dai’s skin fully preserved</p>
      </li>
      <li>
        <p>has a lot of cloths and wine vessels in the tomb</p>
      </li>
      <li>
        <p>found much evidence of Han cuisine, e.g. meat stew and rice</p>
      </li>
      <li>
        <p>her ==view of the afterlife== characterized by the T-shaped banner which contained three sections:</p>

        <ul>
          <li>top: the immortal Lady Dai (spirit)</li>
          <li>middle: Lady Dai existence in the underworld</li>
          <li>bottom: Lady Dai in tomb (soul)</li>
        </ul>

        <p>not a sequential event, but silmultanoues</p>
      </li>
      <li>
        <p>migth not be literate due to no books in tomb</p>
      </li>
    </ul>
  </li>
  <li>
    <p>other tombs are his sons, where a vast majority of books is fonud = reassess the <strong>intellectual world of Han</strong></p>
  </li>
</ul>

<p><em>The Han Dynasty Under Emperor Wu</em> 汉武帝</p>

<ul>
  <li>Emperor Wu elimited checks on his power, and then ==established a Confucian academy==, which is deeply affected by his advisor 董仲舒</li>
  <li>Emperor Wu started the academy by
    <ul>
      <li>first appointing five teachers who specialized in five books: ==诗经, 尚书/书经, 周易/易经, 尚书 春秋==</li>
      <li>enrolling thousands of students, who <strong>upon graduation can go into the government</strong></li>
    </ul>
  </li>
  <li>Therefore, the procedure of hiring new officials become a) be ==recommended== and b) take the ==examinations==</li>
  <li>Emperor Wu also tried to battle against Xiongnu due to the unfair treaty, but neither achieved a decisive victory
    <ul>
      <li>during some of the battles, Li Ling founght hard but lost. He failed to suicide and became a slave</li>
      <li>司马迁wanted to defend Li Ling, who he knows as a childhood friend, but got himself castrated instead of put to death because he thinks its even worse <strong>if his literary work 史记 cannot be left to posterity</strong></li>
      <li>史记, unlike later books written by historians <em>funded by the government</em>, is ==self-funded and hence a more trust-worthy source==</li>
    </ul>
  </li>
</ul>

<p><em>The Creation of Autocracy</em></p>

<ul>
  <li>Emperor Wu asserted control during his time by dismissed or sentenced to death some five chancellors, and became unchecked in power</li>
  <li>he also promoted 霍光 to serve as regent after his death, but unfortunately he never gave up power and just ==placed child emperor over another==
    <ul>
      <li>this cycle of regent people/empresses/enunuchs ==named themselves are regent and gained control== is common for later era</li>
    </ul>
  </li>
</ul>

<p><em>Economic Problems in the Han</em></p>

<ul>
  <li>
    <p>Since almost every measure Emperor Wu imposed, e.g. sending troops to Xiongnu and establishing academy required funds, some mechanism is needed</p>
  </li>
  <li>
    <p>solution: <strong>government monopolies</strong></p>

    <ul>
      <li>salt and iron, where the latter is immensely useful for making tools</li>
      <li>later also assumed monopoly of copper, bronze, and wines</li>
    </ul>
  </li>
  <li>
    <p>but long years to fightings = lots of taxings = people suffering. Hence after 汉武帝 death investigation are sent out</p>

    <ul>
      <li>scholars were against tradings and monopolies, while the government officials successfully defended it</li>
    </ul>
  </li>
  <li>
    <p>In an essay by Wang Bao, were a slave’s life for a widow is mentioned, the econ for that time can be inferred:</p>

    <ul>
      <li>there is a widespread network of small and wide markets</li>
      <li>slaves are expected to travel from places to places to buy stuff</li>
      <li>although a money economy existed, mostly they are used to <strong>trade for luxuries</strong></li>
    </ul>

    <p>additionally, it meant the society can also be split into two types:</p>

    <ul>
      <li>==estate ownders==: collected large amount of wealth and became <strong>increasinly powerful and influential</strong></li>
      <li>==slaves==: e.g. lost from war or seriously in debt</li>
    </ul>
  </li>
</ul>

<p><em>Wang Mang 王莽 Regency</em>:</p>

<ul>
  <li>
    <p>Wang Mang wanted to ==suppress the power of large estate owners==, and founded the Xin dynasty</p>
  </li>
  <li>
    <p>Wang Mang’s approach included limiting the maximum land you can have, and cessing some land from owner to poors</p>
  </li>
  <li>
    <p>However, his reign came to an end due to <strong>flooding</strong>, which caused</p>

    <ul>
      <li>unsatisfactory landowners due to his policy</li>
      <li>angry peasants</li>
    </ul>

    <p>hence he is killed and taken over</p>
  </li>
</ul>

<p><em>The Restoration of the later Han</em></p>

<ul>
  <li>The later Han with captial in Luoyang is sometimes called ==Eastern Han== as it is east of Chang’an</li>
  <li>The captical has walls surrounded imperial palace, inns, canals, markest, and schools, and had a <strong>huge amount of residents, students, and officials</strong></li>
  <li>since it is just restored, it still relies on large land owners and hence they have some power over the recommendation system and put sons into government</li>
  <li>the ==rise of eunuchs== in the palance</li>
</ul>

<p><em>Wang Chong’s Skeptism and 班’s Family</em></p>

<ul>
  <li><strong>argued that many early arguments are made <em>without</em> logic</strong>. For instance, people performing ceremonies to the spirit of earth is useless/unheard by the earth, just as people won’t head anything about the lice on their skin.</li>
  <li>Ban’s family is full of literate sons and daughters
    <ul>
      <li>Ban Gu, son of Ban Biao, resolved to complete the history of China written by his father was thrown into jail accused of distorting history</li>
      <li>Ban Zhao 班昭, the daughter of 班彪, is one of the most famous women writers
        <ul>
          <li><em>Lessons for Women</em>: unequal treatment of women and how she thinks married women should behave</li>
          <li>later on ==sponsered by the court== to finish writing the history</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Ban Zhao’s view of women:
    <ul>
      <li>four qualities women should have: “womenly virtue, womenly words, womanly bearing, and womenly work”</li>
      <li>==wife should not question her husband==, but husband should not beat wife either</li>
      <li>==plead for equal education==, as usually sons are educated by daughters not
        <ul>
          <li>also inferred difficulty of women: families abandon their daughter due to <strong>marriage costs</strong></li>
          <li>but powerful families prefer having a ==daughter married to emperor== so that they can ==seize power==</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Ban Biao was also served as the advisor to Emperor Deng</li>
</ul>

<p><em>Refusal to Serve in Government</em></p>

<ul>
  <li>but as the successor Emperor Huan could not bear the power of in-laws, used ==eunuchs to launch a coup and unseated the Liang family==, which is the family of his wife</li>
  <li>as Emperor Huan’s needed eunuchs to succeed, he became very <strong>unpopular</strong> and people are rejecting his invite to serve. For example, one person who rejected explained:
    <ul>
      <li>holding office meant having to censure the emperor, and since critism will be punished, this is not good</li>
      <li>if not censuring, then his <strong>own “purity” as scholar is damaged</strong></li>
    </ul>
  </li>
</ul>

<p><em>The Rise of the Organized Daoist Church</em></p>

<ul>
  <li>Instead of the righteous scholars, Emperor Huang tried to tap from the new Daoist</li>
  <li>Daoist belief at that time went under a major transformation
    <ul>
      <li>believe that ==老子 is a deity and can come to give advices==</li>
      <li>split into two fractions, 五斗米道 and 黄巾</li>
    </ul>
  </li>
  <li>the 五斗米道 Five Peck of Daoist movement believed that
    <ul>
      <li>instead of teaching selected adepts techniques to obtain immortality, teach a larger community</li>
      <li>the leader 张道陵 ==promised good health in exchange to peoples belief/rice offerings to Daoist deity==</li>
      <li>the idea of ==linking illness with bad deeds== initiates here, and that people believe confessions is the cure</li>
    </ul>
  </li>
  <li>the yellow turban planned for a rebellion 黄巾之乱, but
    <ul>
      <li>leaders quickly executed by military, under the lead of 曹操</li>
      <li>people quicly dissovled</li>
    </ul>
  </li>
  <li>foreshadows the introduction of buddism and changes of the religious lanscape later</li>
</ul>

<p><em>The Legacy of the Han</em></p>

<ul>
  <li>much remains uncertain about the fall of Han, but popular theory suggests that the empire experienced a ==massive shortfall of funds==</li>
  <li>However, both Qin and Han left an <strong>impression of unified China in peoples minds</strong></li>
  <li>during the 400 years of reign of Qin and Han
    <ul>
      <li>Chineses society assume the contours it would take today, and much market economy of the Han and government’s role in regulating also persisted until today</li>
      <li>women still has subordinate roles, but when opportunies arrive people such as Ban Zhao can break out of their traditional roles</li>
      <li>the only siginficant change, which comes later, is spiritual: introduction of <strong>Buddism</strong></li>
    </ul>
  </li>
</ul>

<h2 id="ch4-chinas-religious-landscape">Ch.4 China’s Religious Landscape</h2>

<p><strong>Overview</strong>:</p>

<ul>
  <li>Buddhism, started as a foreign religion, won more followers than Daoism for the year 200-600</li>
  <li>Buddhism included life of lay people who live at home with their faimlies or monk who joined monasteries</li>
  <li>
    <p>many reason underlay Buddihist’s success: most important is the ability to <strong>absorb elements of preexisting religions</strong>, e.g. recruited many local deities as guardian. Therefore, you can worship both Daoism and Buddhism at the same time</p>
  </li>
  <li>long-lasting political instability marked the centuries of China’s conversion to Buddhism: for three centureies after the fall of Han, a period often called ==Six Dynasties (220 - 589)==, no regime successed in conquering more than half of China’s territory (until ==Sui== dynasty that comes afterward)</li>
</ul>

<p><strong>The First Buddhist in China</strong></p>

<ul>
  <li>Buddhism is associated with <strong>trade</strong>, since the Buddha (ca 500 B.C.E) liked merchants show provided crucial financial support</li>
  <li>In 148 C.E. the famous missionary An Shigao from Parthia arrived in Luoyang, and began work on <strong>translating Sanskrit texts into Chinese</strong> (Sanskrit text is the text of Buddhist teaching)</li>
</ul>

<p><strong>The Successors to the Han Dynasty</strong></p>

<ul>
  <li>succeeded by the ==Three Kingdom period== (220 - 280), in which Cao Cao’s <strong>nine grade system</strong> had a long lasting impact
    <ul>
      <li>in principle, a local official, the impartial judge, was supposed ot assign each candidate a rank from one to nine in the office</li>
      <li>in reality, the pattern established during Han prevailed, recommendations were influential, hence sons of powerful families have advantage</li>
    </ul>
  </li>
  <li>
    <p>when Cao Cao’s heirs lost power, the Sima family founded the ==Jin Dynasty==, who ruled northen China for barely half a century util broken up in the War of Eight Princes (290 - 306), so northern part becomes separated again with Jin retrained its control at Luoyang</p>
  </li>
  <li>In 311, the <strong>Xiongnu conquered the former capital Luoyang</strong></li>
</ul>

<p><strong>Appeal of Buddhism to Northern Rulers</strong></p>

<ul>
  <li>Shi Le, the ruler who conquered Luoyang, was once introduced to the Buddhist missinoary <strong>Fotudeng</strong>, who performed some miracle tricks and impressed him</li>
  <li>he then granted the Buddhists the right to build <strong>monasteries</strong></li>
  <li>whether if Fotudeng can do magic tricks is tangantial here, the important thing is:
    <ul>
      <li>the news of this spreaded Buddhism</li>
      <li>Buddhism offered ==non-Chinese rulers an alternative to Confucianism,== which is very Chinese</li>
      <li>also, for ==women==, this offered a <strong>new alternative than family life</strong>: joining a nunnery. Justified by ==transfer of merit== (e.g. to family)</li>
    </ul>
  </li>
</ul>

<p><strong>The Difficulties of Translating Buddhist Concept</strong></p>

<ul>
  <li>Chinese belongs to Sino-Tibetan language, while Sanskrit which has an alphabet, belongs to Indo-European</li>
  <li>also many different cultural assumptions: <strong>Indians talked about sex much more freely</strong> than Chinese, hence cautious translators dropped any mentions of kissing and hugging</li>
  <li>difficult to translate new terms/concept not in Chinese:
    <ul>
      <li><strong>early translators decided to use Daoism concepts</strong>: Nirvana $\to$ wuwei, which is far from accurate</li>
      <li>also difficult to translate ==karma==: one’s next life could be reborn into an animal or person depending on behaviors; Daoism viewed a constant afterlife</li>
    </ul>
  </li>
  <li>then in 344 - 413, Kumarajiva, a monk from Central Asia or from India, is sponserd by private individuas to come to Chang’an to perform <strong>better translations</strong></li>
</ul>

<p><strong>Buddhism in Central Asia</strong></p>

<ul>
  <li>Kumarajiva is trained by a monk in Kucha, which is now part of China’s Xinjiang, and many people there speak <strong>Turkic language Uighur</strong> instead of Chinese</li>
  <li>he studied Buddhist texts in Sanskirt, spoke Tokharian, and learned some Chinese from merchants who came to Kucha</li>
  <li>he was later kiddnapped to Gansu for 17 years, where he mastered Chinese, and he started to believe in the <strong>Greater Vehicle</strong>
    <ul>
      <li>the ==Lesser Vehicle== (Hinayana) held Nirvana possible only for the few who joined the Buddhist clergy</li>
      <li>the ==Greater Vehicle== (Mahayana) offered salvation even to laity</li>
    </ul>
  </li>
  <li>starting in 401, skilled translators and knowledgable monks also joined the translation project</li>
  <li>even though Buddhism has value for <strong>celibacy</strong>, there are many exceptions (e.g. Kumarajiva) where the practioner had family</li>
  <li>Bodhisattva named Avalokitesvara = nowadays ==观音==</li>
</ul>

<p><strong>Contact between India and China</strong></p>

<ul>
  <li>pilgrams going to India as early as 260 on the overland trade route linking India and China</li>
  <li>no single ==Silk Road== strecthed all the way yfrom Rome to CHina, but most frequented routes <strong>led to India</strong>
    <ul>
      <li><strong>Chinese silk was very lucrative</strong> as only Chinese knew how to process silk worms</li>
      <li>much silk also went to European conutries such as Rome, but a lot might be made in Byzantium</li>
      <li>then silk is also used as gifts to monasteries</li>
      <li>Chinese imported a lot of glass, 琉璃 v.s. 玻璃</li>
    </ul>
  </li>
  <li>In fact, the silk road did not have a single merchant travelling on a camel to Rome, but more often:
    <ul>
      <li><strong>only few were long distance merchants</strong></li>
      <li>most stayed on circuit close to home</li>
      <li>other silk road travelelrs include missionaries, refugees, and envoys for Kings, etc.</li>
    </ul>
  </li>
  <li>when a wave of conquests (Persian Empire) cut off the trade routes between China and Inda, the great age of SIlk Road came to an end, having lasted for over 1000 years</li>
</ul>

<p><strong>The Northern Wei Dynasty</strong></p>

<ul>
  <li>during early contact with India and Central Asiam the only government in north China to retrain power for over a century was establiedh by a non-Chinese people, the ==Tabgach 拓跋==, or also reffered ot as ==鲜卑== (name of the tribe)</li>
  <li>Xianbei people speaks <strong>both Turic and Mongolian laguages</strong>, but had no written langue of their own</li>
  <li>Xianbei people had:
    <ul>
      <li>a system of tanistry: more powerful person in duel is the leader</li>
      <li>women knoew how to tend to hers and hunt because men left for war. Hence ==women enjoyed more power== than most other societies</li>
      <li>no stable capital, as it is defined where the ruler set camp</li>
    </ul>
  </li>
  <li>slowly shifted base from Yin Shan mountain in Inner Monolia to northern Shanxi, and staretd taxing the Chinese peasantry and <strong>adopted a Chinese law code</strong></li>
  <li>by the middle of fifth century, Northern Wei has defated most of their rivals to <strong>take control of north China</strong></li>
</ul>

<p><strong>Dowager Empress Feng and the Equal-Field System</strong></p>

<ul>
  <li>established a new captial in Pingcheng, and some of Tabgach are drawn to Chinese ways</li>
  <li>Dowager Empress Feng had a chance to enter the system and <strong>systematically appoint Chinese to office</strong> to lessen Tabgach influence</li>
  <li>Empress Feng seriouly wanted to transform Tabgach to Chinese:
    <ul>
      <li>wanted to tie the Chinese <strong>farming</strong> population to the land, as otherwise it is mostly bureaucrats and atisans who did not grow their own food</li>
      <li>this is also useful as it could serve as a source of income by taxing</li>
    </ul>
  </li>
  <li>the policy to realized the above is the <strong>Equal-Field system</strong>:
    <ul>
      <li>apointed land to all those of tax paying age
        <ul>
          <li>since this includes slaves, this means powerful landowning families could retain control over large areas of land</li>
        </ul>
      </li>
      <li>gives two types of lands, <strong>farmland</strong> for growing crops, which is short term investment since lands are often quickly redistributed when farmer stopped working</li>
      <li>and <strong>mulberry tree</strong> for silkworms, which is a long term investment as it takes a long time for the tree to mature</li>
    </ul>
  </li>
  <li>all of which is to tie people to the land, but did not take effect immediately
    <ul>
      <li>the system <strong>lasted into the eight century</strong>, as it helped tied people to land and increased revenue</li>
    </ul>
  </li>
</ul>

<p><strong>Adoption of Chinese Ways</strong></p>

<ul>
  <li>in 493, Emperor Xiaowen 孝文 (北魏孝文帝) implemented a series of measures designed to make his empire Chinese</li>
  <li>his measures include:
    <ul>
      <li>establish a new captial in Luoyang</li>
      <li>dropped their own family name of Tabgach and had surname of <strong>Yuan</strong></li>
      <li>also appointed the <strong>nine-grade system</strong></li>
      <li>advocated conversion to Daosim instead of Buddhism (may wanted to weaken Buddhist establishment for more power)</li>
    </ul>
  </li>
  <li>but he died young in 499, and the dynasty entered three decades of discord, where ==Northern Wei came to a miserable end in 534==</li>
</ul>

<p><strong>Growth of Buddhism under the Northern Wei</strong></p>

<ul>
  <li>even during those difficult times, Buddhism received wide support from different factions</li>
  <li>examples of its populance include:
    <ul>
      <li>“<strong>there is no place that does not have a Buddhist sanctuary</strong>”, by a prince in 518</li>
      <li>had large buddhist monarsteries up to 300 meters high, and <strong>built over 839 royal monasteries</strong>, and about thirty thousand places of worship</li>
    </ul>
  </li>
  <li>In 528, Erzhu tribes defeated Empress Ling, conquered Luoyang, named a new emperor, and Luoyang was laid waste in 534 from fire</li>
</ul>

<p><strong>Persistance of Tabgah Identity</strong></p>

<ul>
  <li>
    <p>even after the fall of Northern Wei Dynasty, Tabgach did not lose their identity since the warlords could not agree on a new emperor. Hence they went back to stay in north Shanxi</p>
  </li>
  <li>
    <p>two generations after Emperor 孝文, Tabgach people <strong>still retained their language and identity</strong></p>
  </li>
  <li>
    <p>however, the ==impact of their steppe culture on north Chinese is long-lasting==</p>

    <ul>
      <li>
        <p>Yan Zhitui recorde thah people in the north and south (of yellow river) behaved very differently:</p>

        <ul>
          <li>in the south husband can be extravagent even if wife and children suffer</li>
          <li>in the north, it is <strong>usually wife who runs the household, and sometimes husband has to put up with wife’s insult</strong></li>
        </ul>

        <p>where the latter seems related to Tabgach’s culture: women had more influence</p>
      </li>
    </ul>
  </li>
</ul>

<p><strong>The Move South</strong></p>

<ul>
  <li>before, the south is often viewed as <strong>uncivilized</strong>, and the wet climate (==perfect for rice==) is thought of as a <strong>home for illness</strong></li>
  <li>however, the fall of Luoyang prompted migration, as well as the dangers of battles</li>
  <li>consequently, many northern Chinese aristocrats moved to ==Nanjing==</li>
  <li>in south China, Daoist teachers were most active, but there were some buddhist influences as well. But there were somem dramatic changes:
    <ul>
      <li>for buddhist, the teachings of the <strong>Greater Vehicle largely superseded those of Lesser Vehicle</strong></li>
      <li>Daoist visionaries divided into <strong>Lingbao 灵宝 and Mao Shan 茅山</strong></li>
    </ul>
  </li>
</ul>

<p><strong>Religious Life in South China</strong></p>

<ul>
  <li>the Liang emperor was interested in Daoism, studied it in Mao Shan Montain茅山, hence new Daoist sect took the name Mao Shan</li>
  <li>the Maoshan adherents continued the practices of Five Peck Daoist, but <strong>distance themselves from practice that had given the Doaist a bad name</strong>, specifically certian sexual rites</li>
  <li>had a system of seven levels housing both divine immortals as well as the spirits of the dead
    <ul>
      <li>slightly optimistic than Chinese view of afterlife were dead would go through a series of courts</li>
      <li>believed that you could <strong>lodge suits in the underground agasint people who had wronged them</strong></li>
      <li>however, you can rise a level if you had <strong>revealations from certified teachers</strong>, which in reality is a “secretive service” and costs a lot</li>
    </ul>
  </li>
</ul>

<p><strong>Religious Policies of Emperor Wu of the Liang</strong></p>

<ul>
  <li>he stued Daosit, but then in 504 urged his family and officails to <strong>give up Doaism for Buddhist teaching</strong></li>
</ul>

<p><strong>Critics of the Buddhist Establishments</strong></p>

<ul>
  <li>by the middle of 6th century, there are approx two million monks</li>
  <li>those clery <strong>did not work or serve in military</strong>, hence seen as a drain on state resource</li>
  <li>this caused ==ire in the emperor of Zhou dynasty== (557 - 581) who succeeded the Qi, and ordered all Buddhist monks to return to lay life and ==all Buddhist texts and statues destoryed==
    <ul>
      <li>even inside buddhism, there are criticism as they shelted criminals and engaged in loans</li>
      <li>however, those records are mostly about the wealthy clergy, so we don’t know the common clergy’s behavior</li>
    </ul>
  </li>
  <li>however, a ==short supression in 574 cuold do little to shake the hold== of either Buddhist or Daoist, both of which had history over 4 centuries</li>
</ul>]]></content><author><name></name></author><category term="2022@Columbia" /><summary type="html"><![CDATA[Intro to East Asia: China]]></summary></entry><entry><title type="html">ELEN6885 Reinforcement Learning part1</title><link href="/lectures/2022@columbia/ELEN6885_Reinforcement_Learning.html/" rel="alternate" type="text/html" title="ELEN6885 Reinforcement Learning part1" /><published>2022-12-15T00:00:00-05:00</published><updated>2022-12-15T00:00:00-05:00</updated><id>/lectures/2022@columbia/ELEN6885_Reinforcement_Learning</id><content type="html" xml:base="/lectures/2022@columbia/ELEN6885_Reinforcement_Learning.html/"><![CDATA[<p>Reinforcement Learning</p>

<hr />

<p>The office hours will take place by default in EE dept. student lounge, <strong>13th FL, Mudd building</strong>. TA’s may decide to host their office hours remotely. If that is the case they will post an announcement here with a link.</p>

<table>
  <thead>
    <tr>
      <th>TA</th>
      <th>Day</th>
      <th>Time</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Trevor Gordon</td>
      <td>Monday</td>
      <td>1:30 PM - 3:30 PM</td>
    </tr>
    <tr>
      <td>Xin Huang</td>
      <td>Tuesday</td>
      <td>9:30 am - 11:30 am</td>
    </tr>
    <tr>
      <td>Jinxuan Tang</td>
      <td>Wednesday</td>
      <td>3:30 pm - 5:30 pm</td>
    </tr>
    <tr>
      <td>Yukai Song</td>
      <td>Thursday</td>
      <td>9:30 am - 11:30 am</td>
    </tr>
    <tr>
      <td>Gokul Srinivasan</td>
      <td>Friday</td>
      <td>3:30 PM - 5:30 PM</td>
    </tr>
  </tbody>
</table>

<h1 id="introduction-to-rl">Introduction to RL</h1>

<p><strong>Instructors</strong>:</p>

<ul>
  <li>Chong Li (first half of the semester)</li>
  <li>Chonggang Wang (second half)</li>
</ul>

<p><strong>Exam</strong>:</p>

<ul>
  <li>bi-weekly assigments 50% (first assginment out after week 2)</li>
  <li>midterm exam 20%</li>
  <li>final exam 30%</li>
</ul>

<p><strong>Key aspects of RL</strong> (as compared to other algorithms):</p>

<ul>
  <li>no supervisor, only reward signal (and/or environment to interact with)</li>
  <li>feedback/reward could be delayed</li>
  <li>time matters, as it is a sequenitial decision making</li>
</ul>

<p>The general process of interaction looks like:</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220915170944706.png" alt="image-20220915170944706" style="zoom: 50%;" /></p>

<p>where essentially, the agent learns</p>

<ul>
  <li>
    <p>a <strong>policy</strong> (e.g. the decision making agent)</p>

\[s \in S \to \pi(a|s),a\in A(s)\]

    <p>since the action space could be dependent on the state. Note that a policy could be <strong>stochastic</strong> or <strong>determinstic</strong></p>
  </li>
  <li>
    <p>a <strong>reward</strong> indicates the ==desirability== of that state. Reward is immediate or sometimes delayed (but as long as you have a reward for the entire episode, it is fine)</p>
  </li>
  <li>
    <p>a <strong>return</strong> is a cumulative sequence of received rewards after a given time step</p>

\[G_t = R_{t+1}+\gamma R_{t+2} + \gamma^2 R_{t+3} + ... = \sum_{k=0}^T \gamma^k R_{t+1+k}\]

    <p>where usually $\gamma &lt; 1$ if we have infinite episodes $T \to \infty$</p>
  </li>
  <li>
    <p>a <strong>value function</strong> (which depends on the policy)</p>

\[V_\pi(s) = \mathbb{E}_\pi [G_t|S_t=s] = \mathbb{E}_\pi \left[ \sum_{k=0}^T \gamma^k R_{t+1+k} |S_t=s \right]\]

    <p>given that I am currently at $s$, what is the <em>expected return if I follow the policy $\pi$</em>.</p>
  </li>
  <li>
    <p>a <strong>action-value function</strong></p>

\[Q_\pi(s,a) =  \mathbb{E}_\pi [G_t|S_t=s, A_t=a] = \mathbb{E}_\pi \left[ \sum_{k=0}^T \gamma^k R_{t+1+k} |S_t=s, A_t=a\right]\]

    <p>given that I am currently as $s$, what is the <em>expected return if I take $a$ as next step and then follow policy $\pi$</em>. Note that if we take a “marginal” on $a$, we can get the $V_\pi$ from the $Q_\pi$:</p>

\[V_\pi(s) = \sum_{a \in A(s)} Q_\pi(s,a) \pi(a|s)\]

    <p>which can be easily seen from their definitions. The reverse can be derived as well:</p>

\[Q^\pi(s,a) = R(s,a)+\gamma \sum_{s' \in S}P(s'|s,a)V^\pi(s')\]
  </li>
  <li>
    <p>a <strong>world model</strong> (optional, so that if you know this, planning becomes much easier)</p>

\[\mathcal{P}_{ss'}^a = \mathbb{P}[S_{t+1} = s' | S_t=s , A_t=a]\]

    <p>which is the transition probability</p>

\[\mathcal{R}_s^a = \mathbb{E}[R_{t+1} | S_t=s,A_t=a]\]

    <p>which is the reward model. Note that it is expected when what happens next is stochastic.</p>
  </li>
</ul>

<blockquote>
  <p>The agent’s goal is to find a <strong>policy</strong> to <strong>maximize the total amount of reward</strong> it receivers over the long run.</p>
</blockquote>

<hr />

<p><em>Examples</em></p>

<ul>
  <li>
    <p><strong>Maze</strong></p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Maze Map</th>
          <th style="text-align: center">Reward</th>
          <th style="text-align: center">$V^{\pi^*}(s)$</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220915170101082.png" alt="image-20220915170101082" style="zoom:50%;" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220915170120864.png" alt="image-20220915170120864" style="zoom:50%;" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220915170136366.png" alt="image-20220915170136366" style="zoom:50%;" /></td>
        </tr>
      </tbody>
    </table>

    <p>note that</p>

    <ul>
      <li>
        <p>each step has a $-1$ reward (we designed, so that the agent finds the shortest path = max reward), and states is the agent’s location</p>
      </li>
      <li>
        <p>these values are computed given the optimal policy</p>
      </li>
    </ul>
  </li>
  <li>
    <p><strong>Student Markov Chain</strong>: consider some given stochastic <em>policy</em>:</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Student Markov Chain</th>
          <th style="text-align: center">+Reward</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220915170318596.png" alt="image-20220915170318596" style="zoom:50%;" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220915170339032.png" alt="image-20220915170339032" style="zoom: 67%;" /></td>
        </tr>
      </tbody>
    </table>

    <p>we can sample episodes for student markov chain starting from $S_1=C_1$ and obtain episodes such as:</p>

    <p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220915170437631.png" alt="image-20220915170437631" style="zoom:33%;" /></p>

    <p>Of course, for each episode, you can have some reward given some reward model:</p>

    <p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220915170506093.png" alt="image-20220915170506093" style="zoom:50%;" /></p>

    <p>where essentially we are just computing the expected return $G_t$. But since you can have as much episodes as you want, we can consider:</p>

\[V(S=C_1)=\mathbb{E}[G_t | S_t=C_1] = \sum_{i=1}^\infty P(\tau_i)\cdot V(\tau_i)\]

    <p>where probability of a trajectory $P(\tau_i)$ we can get since we know the transition model. However, note that this is impossible to compute since we can have infinite episodes (so we need other tricks, e.g. Bellman Equations &amp; Dynamic Programming)</p>
  </li>
</ul>

<hr />

<p>This gives rise to the definitions:</p>

<blockquote>
  <p><strong>Markov Decision Process</strong> is a tuple $\lang S,A,\mathcal{P},\mathcal{R},\gamma \rang$</p>

  <ul>
    <li>
      <p>$\mathcal{S}$ is a finite set of states</p>
    </li>
    <li>
      <p>$\mathcal{A}$ is a finite set of actions</p>
    </li>
    <li>
      <p>$\mathcal{P}$ is a state trainsition probability matrix:</p>

\[\mathcal{P}_{ss'}^a = \mathbb{P}[S_{t+1}=s'|S_t=s,A_t=a]\]
    </li>
    <li>
      <p>$\mathcal{R}$ is a reward function, so that $\mathcal{R}<em>s^a = \mathbb{E}[R</em>{t+1}\vert S_t=s, A_t=a]$ for cases when reward is not deterministic</p>
    </li>
    <li>
      <p>$\gamma$ being the discount factor $\gamma \in [0,1]$.</p>
    </li>
  </ul>
</blockquote>

<p>so that if the problem can be formulated into a MDP, then we can apply RL algorithms.</p>

<p>And finally, after we find a policy using RL algorithm/or even train a policy using RL, we need to have access to an <strong>environment</strong>: in this course we will use ==OpenAI Gym==. (simulation are used usually because human-invovled real environment would be too costly)</p>

<h2 id="rl-history">RL History</h2>

<p>There are two threads of development</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220915170902678.png" alt="image-20220915170902678" style="zoom:50%;" /></p>

<p>So that essentially:</p>

<ul>
  <li>control theory includes the Bellman Optimality Equations, and essentially solves the problem of how to plan, <strong>given a known model</strong></li>
  <li>the trial and error structure gives rise to the structure of how to train an agent to learn how to plan <strong>when we don’t know the model</strong></li>
</ul>

<h1 id="bandit-problem-and-mdp">Bandit Problem and MDP</h1>

<p>Fundemental mathematical stuff behind RL algorithms.</p>

<h2 id="bandit-problem">Bandit Problem</h2>

<p>One of the first problem that people look at. The problem is simple, but the solution shows principles in RL. The classical is the n-armed bandit problem</p>

<blockquote>
  <p><strong>N-armed Bandit Problem</strong>: suppose you are facing two machines, where both are Gaussian and</p>

  <ul>
    <li>reward from the first gives $\mu=5$, with variance 1</li>
    <li>reward from the second gives $\mu=7$, with variance $1$</li>
  </ul>

  <p>The obviously we will use the second machine. But in reality, the <strong>above information is not available</strong>. So what do you do? Your objective is to ==maximize the expected total reward over some time period==.</p>
</blockquote>

<p><strong>Intuitively</strong>, the idea should be:</p>

<ol>
  <li>spend some initial money to explore and estimate the epectation using average reward</li>
  <li>then play towards the better machine</li>
</ol>

<p>With this, we consider $Q_t(a)$ value being the estimated value/average reward so far of action $a$ at the $t$-th play:</p>

\[Q_t(a) = \frac{R_1 +R_2 + ... + R_{K_a}}{K_a}\]

<p>for $K_a$ is the number of times action $a$ was chosen and $R_1,…,R_{K_a}$ being the reward associated with action $a$.</p>

<p>Once you estimated $Q_t(a)$, we can consider:</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220916082722457.png" alt="image-20220916082722457" style="zoom: 67%;" /></p>

<p>where we can test:</p>

<ul>
  <li>
    <p><strong>greedy</strong> policy (or $\epsilon=0$), choosing the machine with current best $Q_t(a)$</p>
  </li>
  <li><strong>$\epsilon$-greedy</strong> means you choose a random machine with probability $\epsilon/N$ even though you know the current best. E.g. if you have, at step $t=10$, achieved $Q_{10}(a_1)=4.5,Q_{10}(a_2)=4$, then with $\epsilon=0.2$:
    <ul>
      <li>choose $a_1$ with probability $0.8+0.1=0.9$</li>
      <li>choose $a_2$ with probability $0.1$</li>
    </ul>
  </li>
  <li>why is $\epsilon=0$ not good? Once you have made a unlucky estimation of the average, you may be stuck at a suboptimal solution. Especially in the early stage. But with $\epsilon$-greedy, I always have chance to jump to the correct arm.
    <ul>
      <li>note that of course, there are cases where greedy policy works. But more often $\epsilon$-greedy gives more consistent performance.</li>
    </ul>
  </li>
  <li>but what is the optimal solution?</li>
</ul>

<blockquote>
  <p><strong>Exploitation vs. exploration dilemma</strong>: Should you ==exploit== the information you’ve learned or ==explore== new options in the hope of greater payoff?</p>

  <ul>
    <li>this is what makes most RL problem hard to find the optimal</li>
  </ul>
</blockquote>

<p>An alternative to $\epsilon$-greedy is the <strong>Softmax policy</strong> (to balance exploration and exploitation)</p>

<blockquote>
  <p><strong>Softmax Policy</strong>: essentially use softmax of the Q values to give probability</p>

\[\mathrm{Softmax}(Q(a)) = \frac{\exp(Q_t(a)/\tau)}{\sum_{a \in A} \exp(Q_t(a)/\tau)}\]

  <p>note that $\tau$ has a critical effect:</p>

  <ul>
    <li>if $\tau \to \infty$, the distribution will become almost uniform</li>
    <li>if $\tau \to 0$, then it becomes greedy action selection</li>
  </ul>
</blockquote>

<p>But which one is better, softmax or $\epsilon$-greedy? In practice it depends on applications.</p>

<hr />

<p><strong>Notes on Algorithmic Implementation</strong></p>

<ul>
  <li>
    <p>do you need to store all rewards to estimate average reward $Q_k$ for each action? No, you can use a <strong>moving average</strong></p>

\[\begin{align}
Q_{k+1}
&amp;= \frac{1}{k} \sum_{t=1}^k R_t\\
&amp;= \frac{1}{k} \left( R_t + \sum_{i=1}^{k-1} R_i \right) \\
&amp;= \frac{1}{k} \left( R_t + kQ_k - Q_k \right) \\
&amp;= Q_k + \frac{1}{k}[R_k - Q_k]
\end{align}\]

    <p>where $Q_k$ is for the computed average reward from the previous step, and <strong>$R_k$ is the new info</strong>. Note that ==this form is very commonly seen in RL==:</p>

\[\text{New Estimate} \gets \text{Old Estimate} + \alpha \underbrace{(\text{Target - Old Estimate})}_{\text{innovation term}}\]

    <p>where the innovation term would give you some idea of the new information. The step size is there because we know the innovation term will oscillate since $\mathrm{Target}$ might contain inaccuraries</p>
  </li>
  <li>
    <p>what is a <strong>good step size</strong> to choose? We want your estimate, e.g. $Q$-value to converge.</p>

    <p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220916084728218.png" alt="image-20220916084728218" style="zoom:50%;" /></p>

    <p>an example for this to work is $\alpha=1/k$. Essentially, the intuition behind this is that it will take past information a bit more, but you should <em>always have some non-trivial weight on the new information</em>.</p>
  </li>
  <li>
    <p>What if this is a <strong>non-stationary</strong> problem? i.e. the distribution for the n-arm bandit machine is <em>varying over time</em>, e.g. mean changes over time. In this case, the convergence doesn’t mean anything since the “correct” mean is moving. In this case, we can choose $\alpha$ being a constant.</p>
  </li>
</ul>

<h2 id="markov-decision-process">Markov Decision Process</h2>

<p>MDP formally describe an environment for reinforcement learning, where the ==environment is fully observable==. First</p>

<blockquote>
  <p><strong>Markov Property</strong>: the future is independent of the past given the present. i.e. I only care about present, past gives no information</p>

\[P(S_{t+1}|S_t) = P(S_{t+1}|S_1,...,S_t)\]

  <p>may or may not be a good assumption in some problems. However, you can always make this a good assumption, e.g. ==if you choose $S_t = \text{everything up to time t}$, then this trivially holds==.</p>
</blockquote>

<p>A recap of the definitions</p>

<blockquote>
  <p><strong>Markov Process</strong> is a tuple $\lang S,\mathcal{P}\rang$</p>

  <ul>
    <li>
      <p>$\mathcal{S}$ is a finite set of states</p>
    </li>
    <li>
      <p>$\mathcal{P}$ is a state trainsition probability matrix:</p>

\[\mathcal{P}_{ss'} = \mathbb{P}[S_{t+1}=s'|S_t=s]\]
    </li>
  </ul>

</blockquote>

<p>An example of the transition matrix is</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220916085816449.png" alt="image-20220916085816449" style="zoom:50%;" /></p>

<blockquote>
  <p><strong>Markov Reward Process</strong> is a tuple $\lang S,\mathcal{P},\mathcal{R},\gamma \rang$</p>

  <ul>
    <li>
      <p>$\mathcal{S}$ is a finite set of states</p>
    </li>
    <li>
      <p>$\mathcal{P}$ is a state trainsition probability matrix:</p>

\[\mathcal{P}_{ss'} = \mathbb{P}[S_{t+1}=s'|S_t=s]\]
    </li>
    <li>
      <p>$\mathcal{R}$ is a reward function, so that $\mathcal{R}<em>s = \mathbb{E}[R</em>{t+1}\vert S_t=s]$ for cases when reward is not deterministic</p>
    </li>
    <li>
      <p>$\gamma$ being the discount factor $\gamma \in [0,1]$. Useful for infinite episodes</p>
    </li>
  </ul>
</blockquote>

<p><em>For example:</em></p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220916090117592.png" alt="image-20220916090117592" style="zoom: 50%;" /></p>

<p>Then from this, we can also define</p>

<ul>
  <li>
    <p><strong>return</strong>: think of the $R_{t+1}$ as going from a MDP to a MRP. If you start at Class 1, then you should also include $R=-2$ in your computation, just as in MDP, the reward</p>

\[G_t = R_{t+1} + \gamma R_{t+2} += ... = \sum_{k=0}^\infty \gamma^k R_{t+k+1}\]
  </li>
  <li>
    <p>the choice of $\gamma$ affects the bahavior/goal of your algorithm</p>

    <ul>
      <li>$\gamma=0$ leads to myopic evaluation</li>
      <li>$\gamma=1$ leads to far-sighted evaluation</li>
    </ul>
  </li>
</ul>

<p>Additionally, we can also define <strong>state-value function</strong></p>

<blockquote>
  <p><strong>State Value Function</strong> (for MRP): the expected return starting from state $s$</p>

\[V(s) = \mathbb{E}[G_t|S_t=s]\]

</blockquote>

<p>which we have discussed before, and to compute this intuitively would be:</p>

<ul>
  <li>start from a state $s$</li>
  <li>compute expected reward for all possible trajectory from this state</li>
  <li>weight it by probability of each trajectory</li>
</ul>

<p>Which would give this</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220916090938392.png" alt="image-20220916090938392" style="zoom:50%;" /></p>

<blockquote>
  <p>Is there an easier way than sample, weight, and sum? The <strong>Bellman Equation</strong>.</p>
</blockquote>

<p>We can decompose the value function definition, and see what we get</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220916091139515.png" alt="image-20220916091139515" style="zoom:50%;" /></p>

<p>where only the last step is tricky:</p>

<ul>
  <li>
    <p>what is $\mathbb{E}[\gamma G_{t+1}\vert S_t=s]$? By definition of expected value:</p>

\[\begin{align*}
\mathbb{E}[\gamma G_{t+1}|S_t=s]
&amp;= \gamma \sum_g G_{t+1} P(G_{t+1}|S_t=s)\\
&amp;= \gamma \sum_g G_{t+1} \sum_{s'} P(G_{t+1}, S_{t+1}=s'|S_t=s)\\
&amp;= \gamma \sum_g G_{t+1} \sum_{s'} P(G_{t+1}|S_{t+1}=s', S_t=s)P(S_{t+1}=s'|S_t=s)\\
&amp;= \gamma  \sum_{s'} \left( \sum_g G_{t+1}  P(G_{t+1}|S_{t+1}=s') \right) P(S_{t+1}=s'|S_t=s)\\
&amp;= \gamma \sum_{s'\in S}V(s') P(S_{t+1}=s'|S_t=s)\\
&amp;= \mathbb{E}[\gamma V(s') | S_t=s]
\end{align*}\]

    <p>where:</p>

    <ul>
      <li>the aim for the second equality is because we know the final result has $v(S_{t+1})$, so we need to introduce a next state $s’$.</li>
      <li>the third equality comes from applying chain rule for joint probability</li>
      <li>the fourth equality comes from the Markov Assuption, where $G_{t+1}$ does not depend on the past, only present. And that we are taking $G_{t+1}$ since it does not depend on the future state $s’$</li>
    </ul>
  </li>
  <li>
    <p>now, given the above, we essentially realize for an ealier state:</p>

\[\begin{align*}
  V(s) 
  &amp;= \mathbb{E}[R_{t+1}|S_t=s] + \gamma \mathbb{E}[V(S_{t+1})|S_t=s] \\
  &amp;= \mathcal{R}_s + \gamma \sum\limits_{s' \in S} \mathcal{P}_{ss'} V(s')
\end{align*}\]

    <p>for $\mathcal{R}$ is the expected reward in case reward is stochastic. And in matrix form:</p>

\[V = \mathcal{R} + \gamma \mathcal{P}V\]

    <p>for instance:</p>

    <p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220916092443352.png" alt="image-20220916092443352" style="zoom:33%;" /></p>

    <p>so given this, <strong>can we solve for $V$</strong> (which is our final goal)? Simply solve it if given $P,R$:</p>

\[\begin{align*}
V 
&amp;= R+\gamma P V\\
V &amp;=(I - \gamma \mathcal{P})^{-1} R
\end{align*}\]

    <p>An example using this to compute $V$ from the closed form solution:</p>

    <p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220916092636709.png" alt="image-20220916092636709" style="zoom: 50%;" /></p>

    <p>but is this all? We have real life concerns:</p>

    <ul>
      <li>The complexity of <em>this approach</em> is $O(n^3)$ due to the inverse, for $n$ being the number of states</li>
      <li>Most often in reality you are ==not given $P$==, i,e, you don’t know it</li>
    </ul>
  </li>
</ul>

<blockquote>
  <p>Two important results from the previous discussion for MRP:</p>
  <ul>
    <li>
      <p>Bellman’s equation for $V$:</p>

\[V = \mathcal{R} + \gamma \mathcal{P}V\]
    </li>
    <li>
      <p>and we can solve for $V$ easily in closed form:</p>

\[V =(I - \gamma \mathcal{P})^{-1} R\]
    </li>
  </ul>

</blockquote>

<p>However</p>

<blockquote>
  <p><strong>For large MDPs, or unknown transition models:</strong> we have the following algorithms to be our savior</p>

  <ul>
    <li>Dynamic programmming (known transition, but more efficient)</li>
    <li>Monte-Carlo evaluation (sampling, unknown transition)</li>
    <li>Tempora-Difference learning (sampling, unknown transition)</li>
  </ul>
</blockquote>

<blockquote>
  <p><strong>Professor Li:</strong> “Why you need algorithm if you have the closed form solution? All algorithms are there to exchange for <em>compute</em>, or more oftenly, <em>approximate</em> a solution”.</p>
</blockquote>

<p>Finally, we introduce our main problem:</p>

<blockquote>
  <p><strong>Markov Decision Process</strong> is a tuple $\lang S,A,\mathcal{P},\mathcal{R},\gamma \rang$</p>

  <ul>
    <li>
      <p>$\mathcal{S}$ is a finite set of states</p>
    </li>
    <li>
      <p>==$\mathcal{A}$ is a finite set of actions==</p>
    </li>
    <li>
      <p>$\mathcal{P}$ is a state trainsition probability matrix:</p>

\[\mathcal{P}_{ss'}^a = \mathbb{P}[S_{t+1}=s'|S_t=s,\textcolor{red}{A_t=a}]\]
    </li>
    <li>
      <p>$\mathcal{R}$ is a reward function, so that $\mathcal{R}<em>s^a = \mathbb{E}[R</em>{t+1}\vert S_t=s, A_t=a]$ for cases when reward is not deterministic</p>
    </li>
    <li>
      <p>$\gamma$ being the discount factor $\gamma \in [0,1]$.</p>
    </li>
  </ul>
</blockquote>

<p>and remember that, most of the time, we do no have access to $P$.</p>

<p>Then, ==when given a policy $\pi(a\vert s)$, we are back to a MRP==: it becomes a process of $\left\langle \mathcal{S}, \mathcal{P}^{\pi}, \mathcal{R}^{\pi}, \gamma \right\rangle$, where:</p>
<ul>
  <li>
    <p>the transition matrix’s action is removed by:</p>

\[\mathcal{P}^{\pi}_{ss'} = \sum_a \pi(a|s) \mathcal{P}_{ss'}^a\]

    <p>i.e. if I take an action $a$ at state $s$, what the the trainsition probability to $s’$? Then I take the average, to get the averae transition probability from $s\to s’$ for the policy</p>
  </li>
  <li>
    <p>the reward function’s action is removed by:</p>

\[\mathcal{R}^{\pi}_s = \sum_a \pi(a|s) \mathcal{R}_s^a\]

    <p>for $\mathcal{P}_{ss’}^{a}, R_s^{a}$ are given as part of the MDP.</p>
  </li>
  <li>
    <p>when given a policy, your MDP evaluations become MRP evaluations, since now $P^\pi_{s,s’}$ is your transition matrix independent of action, and you can compute them in a closed form using our previous result.</p>
  </li>
</ul>

<blockquote>
  <p>But now, ==value function== will depend on the ==policy I use==, as compared to the previous cases:</p>

\[V_\pi(s) = \mathbb{E}_\pi[G_t|S_t=s]\]

  <p>and ==so is the action-value function==</p>
</blockquote>

<p><em>For instance</em>: consider a given policy $\pi(a\vert s)=0.5$ uniformly, with $\gamma=1$. Then you should get</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220916094059606.png" alt="image-20220916094059606" style="zoom: 50%;" /></p>

<p>using essentially the MRP results we got, and reducing MDP given a policy to MRP.</p>

<p>But now, the ==Bellman equations depend on the policy==, and we have the following:</p>

<blockquote>
  <p><strong>Bellman Expectation Equation</strong>: notice the connection between value function and action-value function</p>

  <p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220916113343.png" style="zoom:30%;" /></p>

  <p>giving the equations for:</p>

  <ul>
    <li>Value function $V_\pi(s)$ being averaging over next value functions</li>
    <li>Action-value function $Q_\pi(s,a)$ being averaging over next action-value functions after taking action $a$ at state $s$
Hence we get:</li>
  </ul>

\[V_\pi(s) = \mathbb{E}_\pi [R_{t+1} + \gamma V_\pi(S_{t+1})|S_t=s]\]

\[Q_\pi(s,a) = \mathbb{E}_\pi [R_{t+1} + \gamma Q_\pi(S_{t+1},A_{t+1})|S_t=s,A_t=a]\]

  <p>or we can express them as:</p>

\[V_\pi(s) = \sum_a \pi(a|s) Q_\pi(s,a)\]

\[Q_\pi(s,a) = \mathcal{R}_s^a + \gamma \sum_{s'} \mathcal{P}_{ss'}^a V_\pi(s')\]

  <p>then using those relationships, I can express ==$V$ in terms of $V$==, and ==$Q$ in terms of $Q$==, which gives the Bellman Expectation Equation:</p>

\[V_\pi(s) = \sum_a \pi(a|s) \left( \mathcal{R}_s^a + \gamma \sum_{s'} \mathcal{P}_{ss'}^a V_\pi(s') \right)\]

\[Q_\pi(s,a) = \mathcal{R}_s^a + \gamma \sum_{s'} \mathcal{P}_{ss'}^a \sum_{a'} \pi(a'|s') Q_\pi(s',a')\]

  <p>which is basically the ==same as the equation we had with $\mathbb{E}_\pi$==. Note that</p>

  <ul>
    <li>when transition is deterministic given an action, then $\mathcal{P}<em>{ss’}^a=1$ for the destined state $(s,a) \to s’$, and $\mathcal{P}</em>{ss’}^a=0$ otherwise.</li>
    <li>similarly, the expected reward $\mathcal{R}_s^a$ is used when reward is non-deterministic given a $s,a$,</li>
  </ul>
</blockquote>

<p>And with this, we again have the closed form solution as implied by the above as we reduced MDP to MRP once we have a policy:</p>

<blockquote>
  <p><strong>Closed Form Solution for $V^\pi$</strong> in MDP: the Bellman’s expectation equation can essentially be translated to the MRP version:</p>

\[V_\pi = \mathcal{R}^{\pi} + \gamma \mathcal{P}^{\pi} V_\pi\]

  <p>and the closed form solution is:</p>

\[V_\pi = (\mathbb{I} - \gamma \mathcal{P}^{\pi})^{-1} \mathcal{R}^{\pi}\]

  <p>for $\mathcal{P}^\pi, \mathcal{R}^\pi$ being the transition and reward matrix reduced to MRP implied by the policy $\pi$.</p>
</blockquote>

<h2 id="optimal-value-functions-and-policies">Optimal Value Functions and Policies</h2>

<p>Now, we understand the basics of MDP, and how we are essentially solving it by reducing to MRP, we come back to the central problem of control: ==how to find the <em>optimal</em> policy and/or the optimal value function?==</p>

<p>First, we need to define what they are:</p>
<blockquote>
  <p><strong>Optimal Value Function</strong>: the value function that maximizes the expected return for any given policy $\pi$:</p>

\[V_*(s) = \max_\pi V_\pi(s)\]

  <p>and the optimal action-value function is the same:</p>

\[Q_*(s,a) = \max_\pi Q_\pi(s,a)\]

</blockquote>

<p>But what about optimal policy, which if we recall are distributions $\pi(a\vert s)$? We can define it as:</p>

<blockquote>
  <p><strong>Optimal Policy</strong>: we can define a partial ordering</p>

\[\pi &gt; \pi' \iff V_\pi(s) \geq V_{\pi'}(s),\quad \forall s\]

  <p>and note that, the two most important attribute for a problem</p>
  <ul>
    <li>(existence) solution always exists. For any MDP, there eixts an optimal policy (e.g. see example below)</li>
    <li>(uniqueness) the optimal policy <em>not</em> unique, but all optimal policies achieve the same value function/action-value functin.</li>
  </ul>
</blockquote>

<p>For instance, we can give an optimal policy better than all other policies</p>

\[\pi_*(a|s) = \begin{cases}
1 &amp; \text{if } a=\arg\max_{a\in A} Q_*(s,a)\\
0 &amp; \text{otherwise}
\end{cases}\]

<p>which is optimal, meaning there always exist an optimal policy. But in reality, we ==don’t know $Q_*$ yet==. So our task remains how we can find such a policy, now that we know it exists.</p>

<blockquote>
  <p><strong>Bellman Optimality Equation</strong>: we can again draw the graph, and derive the optimality equations from $V_<em>,Q_</em>$, which gives us some idea how we can find it</p>

  <p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220916113343.png" style="zoom:30%;" /></p>

  <p>giving the equations for intuitively as:</p>

\[V_*(s) = \max_a Q_*(s,a)\]

\[Q_* (s,a) = \mathcal{R}_s^a + \gamma \sum_{s'} \mathcal{P}_{ss'}^a V_*(s')\]

  <p>and we can combine them to obtain a form only including itself:</p>

\[V_*(s) = \max_a \left( \mathcal{R}_s^a + \gamma \sum_{s'} \mathcal{P}_{ss'}^a V_*(s') \right)\]

\[Q_*(s,a) = \mathcal{R}_s^a + \gamma \sum_{s'} \mathcal{P}_{ss'}^a \max_{a'} Q_*(s',a')\]

  <p>==this is essentially the basis of all RL algorithms and what they aim to solve==</p>
</blockquote>

<p>But now there is a $\max$, and we ==can no longer have a closed form solution== as the equations become nonlinear. Therefore, we need to use iterative solution algorithms to ==approximate them== (these two equations are the fundementals of the whole RL algorithm)</p>
<ul>
  <li>Value Iteration</li>
  <li>Policy Iteration</li>
  <li>Q-learning</li>
  <li>SARSA</li>
  <li>etc.</li>
</ul>

<h2 id="extended-mdp">Extended MDP</h2>

<p>Sometimes, this is not MDP by nature, but we can do some modification and convert them to MDP</p>

<p><strong>Partially Obseravable MDP</strong>: for instance, the robot can only observe neighboring grids, but not the global information</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220923081511421.png" alt="image-20220923081511421" style="zoom:33%;" /></p>

<p>therefore, technically:</p>

<ul>
  <li>I do not know $s$, but I know something related.</li>
  <li>Solved by introducing ==belief MDP== (see wiki for more details)</li>
</ul>

<blockquote>
  <p><strong>Belief MDP</strong></p>

  <p>ideally, we want $\pi(a\vert s)$ given a state. All I have is a history $h=(A_0,O_1,…,A_{t-1},O_t,R_t)$</p>

  <p>therefore, we can consider a <strong>belief state</strong> (instead of state):</p>

\[b(h) = (\mathcal{P} (S_t=s^1 | H_t = h),\mathcal{P} (S_t=s^2 | H_t = h), ...,\mathcal{P} (S_t=s^n | H_t = h) )\]

  <p>which is a probablity over all possible states.</p>

  <ul>
    <li>note that we ==do not have to encode a belief state like this==. In the case of a continous distirbutoin, this can be a gaussian distribution, for instance.</li>
  </ul>

  <p>then your policy becomes:</p>

\[\pi(a| b(h))\]

  <p>notice that belife states satisfy Markov propety</p>
</blockquote>

<hr />

<p><strong>Continous State MDP</strong>: what if your state is continuous</p>

<ul>
  <li>discretization on the continous-state.
    <ul>
      <li>but this becomes a trade-off between granuality = accurarcy v.s.</li>
    </ul>
  </li>
  <li>use a value function approximation to approximate value directly</li>
</ul>

<h1 id="model-based-rl">Model-based RL</h1>

<p>Keep in mind that all approaches is still tightly related to the bellman optimality equations</p>

<blockquote>
  <p><strong>Notation</strong>: note that we <em>try</em> to capitial letter such as $V$ to represent the true/random variable, and $v$ represent <em>our</em> estimate/realization.</p>
</blockquote>

<h2 id="introduction-of-dynamic-programming">Introduction of Dynamic Programming</h2>

<blockquote>
  <p>DP refers to a <strong>collection of algorithms</strong> that can be used to compute optimal policies given a ==perfect model== of the <strong>environment</strong> as a MDP</p>

  <ul>
    <li>because at each iteration, we need some form of $\mathcal{P}<em>{ss’}^a V_k(s’)$ to update $V</em>{k+1}$</li>
    <li>for now, we assume a finite MDP, but DP ideas can easily be extended to cnotonus states or POMDP</li>
  </ul>
</blockquote>

<p>However, Classical DP algorithms are of limited utility in RL. Why?</p>

<ul>
  <li>Need perfect model</li>
  <li>Great computational expense</li>
</ul>

<p>But regardless, if those can be overcome, we would like to perform two tasks in general:</p>

<ul>
  <li>==prediction==: given a policy $\pi$ and the MDP, evaluate how good it is by outputting its <strong>value funciton $V_\pi$</strong></li>
  <li>==control==: given a MDP, find the <strong>optimal policy $\pi_*$</strong></li>
</ul>

<h2 id="prediction-policy-evaluation">Prediction: Policy Evaluation</h2>

<blockquote>
  <p><strong>Aim</strong>: given any policy $\pi$, we want to evaluate its value function in a MDP.</p>
</blockquote>

<p>The key idea is the Bellman equation: assuming we know everything on the RHS, then that should give me the correct value on LHS:</p>

\[V_\pi(s) = \sum_a \pi(a|s) \left( \mathcal{R}_s^a + \gamma \sum_{s'} \mathcal{P}_{ss'}^a V_\pi(s') \right)\]

<p>using this idea of dependency=constraint, we can <strong>iteratively estimate $V_\pi(s)$</strong> by:</p>

\[V_{k+1}(s) = \sum_a \pi(a|s) \left( \mathcal{R}_s^a + \gamma \sum_{s'} \mathcal{P}_{ss'}^a V_{k}(s') \right)\]

<p>which is called a <strong>synchronous backup</strong> since it uses $V_k(s)$ even if we have <em>for some states a better estimate $V_{k+1}(s)$</em></p>

<blockquote>
  <p><strong>Synchronus Policy Evaluation</strong>:</p>

  <p><code class="language-plaintext highlighter-rouge">Repeat</code> until convergence:</p>

  <ol>
    <li>
      <p>store $V_k(s)$</p>
    </li>
    <li>
      <p>for each state $s \in S$:</p>

      <ol>
        <li>
          <p>estimaet $V_{k+1}(s)$ by</p>

\[V_{k+1}(s) = \sum_a \pi(a|s) \left( \mathcal{R}_s^a + \gamma \sum_{s'} \mathcal{P}_{ss'}^a V_{k}(s') \right)\]
        </li>
      </ol>
    </li>
    <li>
      <p>use the latest update $V_{k} \gets V_{k+1}$</p>
    </li>
  </ol>
</blockquote>

<p>But do we <em>always</em> needs such an interation, as we saw in some examples in HW1?</p>

<blockquote>
  <p><strong>Note</strong> that in homeworks, we had this ==bottom up approach== where we found the correct value function <strong>in one step</strong>. For instance, we can compute the following value function of a policy:</p>

  <p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220923111844922.png" alt="image-20220923111844922" style="zoom:33%;" /></p>

  <p>then since $V(S=s_{t+2})=0$ for any state, we can compute $V(S=s_{t+1})$ ==without any error== using the backup equation</p>

\[V_\pi(s) = \sum_a \pi(a|s) \left( \mathcal{R}_s^a + \gamma \sum_{s'} \mathcal{P}_{ss'}^a V_{\pi}(s') \right)\]

  <p>and all can be done over one iteration.</p>
</blockquote>

<p>But in reality, ==often your state space is not a tree==, i.e. to get to $S=s_{14}$ in the example below, there will be ==loops== in your tree (i.e. you can get to $s_{14}$ from $s_{13}$, and to get to $s_{13}$ you can also start from $s_{14}$). Therefore, since then you ==cannot estimate $V(S=s_{14})$== correctly, you will need a loop for convergence.</p>

<hr />

<p><em>For Example</em>: Small Grid World</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220923083659494.png" alt="image-20220923083659494" style="zoom:50%;" /></p>

<p>where we have:</p>

<ul>
  <li>reward of $-1$ for all non-terminal states, and there is one terminal state marked in grey</li>
  <li>
    <p>undisconuted MDP with $\gamma =1$</p>
  </li>
  <li>actions leading out of the state gives no changes (i.e. go left of $s_8$ is still $s_8$)</li>
</ul>

<p><strong>Question</strong>: if my policy is random $\pi(a\vert s)=0.25,\forall a$, what is the value of it/how good is this?</p>

<p>Since we also have transition model, we can use the DP algorithm. We can initialize $V_0(s)=0$:</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220923083836193.png" alt="image-20220923083836193" style="zoom:33%;" /></p>

<p>for intance, to compute $V_2(s=1)$ would be:</p>

\[\begin{align*}
V_{k=2}(s_1) 
&amp;= \sum_a 0.25 \cdot \left( -1 + \gamma \sum_{s'} \mathcal{P}_{ss'}^a V_{k=1}(s') \right) \\
&amp;= 0.25 (-1 + 0) + 0.25 (-1 + -1) + 0.25 (-1 + -1) + 0.25 (-1 + -1) \\
&amp;= -1.75
\end{align*}\]

<p>where all the $V_1(s)$ comes from our estimate from $v_1$ at the previous timestep.</p>

<p><strong>Additional Question</strong>: what would be my control?</p>

<p>(This is just a lucky case that we got optimal policy in one greedy step.) We know that the value function is for a random policy, but can we get a better policy from it? Notice that by simply using the <strong>greedy policy of $\pi$</strong>:</p>

<p>| <img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220923084435565.png" alt="image-20220923084435565" style="zoom:50%;" /> | <img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220923084439721.png" alt="image-20220923084439721" style="zoom:50%;" /> |
| ———————————————————— | ———————————————————— |</p>

<p>notice that this is essentially performing <strong>exactly one iteration of policy improvement</strong>, but we luckily get the optimal policy just by doing policy improvement once</p>

<h2 id="control-policy-improvement-and-policy-interation">Control: Policy Improvement and Policy Interation</h2>

<p>Now I have evaluated a policy, I would like to improve the policy and perhaps ==find the best policy==</p>

<blockquote>
  <p><strong>Policy Improvement</strong>: generate a policy $\pi’$ that is better than $\pi$</p>

  <p><em>one way</em> to guarantee improvement is to apply a greedy policy</p>

\[\pi' = \mathrm{greedy}(V_\pi)\]

  <p>and we can later show that indeed improves the policy and is useful.</p>
</blockquote>

<blockquote>
  <p><strong>Policy Iteration</strong>: since we can get a better policy from old value, then we can iterate:</p>

  <p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220923084722197.png" alt="image-20220923084722197" style="zoom:33%;" /></p>

  <p><code class="language-plaintext highlighter-rouge">Repeat</code> until no improvement/convergence</p>

  <ol>
    <li>(<strong>Policy Evaluation</strong>) evaluate current policy $\pi$</li>
    <li>(<strong>Policy Improvement</strong>) improve the policy (e.g. by acting greedily) by generating $\pi’ \ge \pi$</li>
  </ol>
</blockquote>

<p>This gives the <strong>policy iteration algorithm</strong> in more details:</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220923093222983.png" alt="image-20220923093222983" style="zoom:50%;" /></p>

<p>where essentially</p>

<ul>
  <li>
    <p>during policy evaluation, we are taking $\Delta$ to be the largest error we encountered for each state</p>
  </li>
  <li>
    <p>we are selecting the greedy policy by selecting the best action given the value function.</p>
  </li>
</ul>

<hr />

<p><em>Proof</em>: We want to prove that greedy policy always improve the policy, hence we have a ==monotonic improvement==</p>

<p>Consider some existing deterministic policy $\pi(s)$, and we have a greedy policy version $\pi’(s)$:</p>

\[\pi'(s) = \mathrm{greedy}(\pi(s)) = \arg\max_{a \in A}q_\pi(s,a)\]

<p>Then by definition, the <strong>action-value must have obviously improved the policy by one-step</strong></p>

\[q_\pi(s,\pi'(s)) = \max_{a \in A} q_\pi(s,a) \ge q_\pi(s,\pi(s)) = v_\pi(s)\]

<p>where the last step is due to the fact that we are using a <strong>determistic policy</strong>, so the state-value function will be the same as value function since you <strong>always only choose one action per state</strong>.</p>

<p>Finally, we just need to show that $V_{\pi’}(s) \ge V_\pi(s)$ by connecting the above</p>

\[\begin{align*}
v_{\pi}(s)
&amp;\le q_\pi(s,\pi'(s)) \\
&amp;= \mathbb{E}_{(a,r,s'|s) \sim \pi'}[ \mathcal{R}_{t+1} + \gamma v_\pi(S_{t+1}) | S_t=s ] \\
&amp;\le \mathbb{E}_{\pi'}[ \mathcal{R}_{t+1} + \gamma q_\pi(S_{t+1}, \pi'(S_{t+1})) | S_t=s ] \\
&amp;\le \mathbb{E}_{\pi'}[ \mathcal{R}_{t+1} + \gamma R_{t+2} + \gamma^{2} q_\pi(S_{t+2}, \pi'(S_{t+2})) | S_t=s ] \\
&amp;\le \mathbb{E}_{\pi'}[ \mathcal{R}_{t+1} + \gamma R_{t+2} + \gamma^{2} R_{t+3} + ... | S_t=s ] \\
&amp;= v_{\pi'}(s)
\end{align*}\]

<p>where:</p>
<ul>
  <li>the second equality is because we have are sampling the immediate next step from $\pi’$, but the rest is following $\pi$.</li>
  <li>third inequality relies on the fact that we are a deterministic policy and $q_\pi(s,\pi’(s)) \ge v_\pi(s)$ by construction</li>
</ul>

<p>Notice that since the improvement is monotonic, then we have everything becomes an equality at convergence:</p>

\[q_\pi(s,\pi'(s)) = \max_{a \in A} q_\pi(s,a) = q_\pi(s,\pi(s)) = v_\pi(s)\]

<p>meaning that the Bellman optimality equation is satisfied</p>

\[v_\pi(s) = \max_{a \in A}q_\pi(s,a)\]

<p>which means the $\pi$ we get at the <strong>end of convergence</strong> is the optimal policy</p>

<hr />

<blockquote>
  <p><strong>Generalized Policy Iteration</strong>: the general recipe include:</p>
  <ol>
    <li>any policy evaluation algorithm</li>
    <li>any (proven) policy improvement</li>
    <li>repeat until convergence to the optimal policy</li>
  </ol>
</blockquote>

<p>But whatever new algorthim you come up with, we want to measure/compare (note that the converged value function is optimal, hence the same):</p>

<ul>
  <li><strong>convergence speed</strong>: how fast the algorithm can converge</li>
  <li><strong>convergence performance</strong>: same convergence speed, but <em>variance</em> during training could be big/small</li>
</ul>

<h2 id="control-value-iteration">Control: Value Iteration</h2>

<blockquote>
  <p><strong>Aim</strong>: We want to ==improve the speed of the policy iteration algorithm== because <strong>each of its iterations involves policy evaluation</strong>, which itself is an iterative computation through the state set.</p>
</blockquote>

<p>Intuition, we notice that at $k=3$ in the example before, just one greedy policy we already get the optimal policy ==even if the value function has not converged==</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center"><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220923084435565.png" alt="image-20220923084435565" /></th>
      <th style="text-align: center"><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220923084439721.png" alt="image-20220923084439721" /></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">Therefore, maybe we can directly improve before waiting for converged value function</td>
      <td style="text-align: center"> </td>
    </tr>
  </tbody>
</table>

<p><strong>Value Iteration</strong>:</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220923094259901.png" alt="image-20220923094259901" style="zoom: 50%;" /></p>

<p>where essentially</p>

<ul>
  <li>
    <p>I computed my $v(s’)$ for one round, and took the max (greedy policy) directly afterwards</p>
  </li>
  <li>notice that this is also the Bellman Optimality Equation</li>
  <li>it is also proven that this <strong>converges to the optimal value</strong></li>
</ul>

<blockquote>
  <p><strong>Value Iteration is used much more often</strong> than policy iteration due to its faster compute</p>
</blockquote>

<h2 id="summary-synchronous-dp">Summary: Synchronous DP</h2>

<p>Note that all the above is synchronous DP, because at each step $k+1$ we are using the value function strictly from step $k$.</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220923094516742.png" alt="image-20220923094516742" style="zoom:40%;" /></p>

<ul>
  <li><strong>major dropback:</strong> even for value iteration, it needs to <strong>iterate through every state at each iteration</strong> (which could be intractable for large state space)</li>
  <li>Asynchronous DP: maybe we can selectively update, or update more in real time</li>
</ul>

<h2 id="asynchronous-dp">Asynchronous DP</h2>

<p>Before, we compute the new value for all states at $t=k+1$ strictly using $t=k$ values, meaning for each improvement we need to wait until all states are updated.</p>

<blockquote>
  <p><strong>Aim</strong>: We want to see improvement a bit faster, instead of waiting for the entire sweep of states to complete. We want our algorithm to not get locked into any hopelessly long sweep before it can make progress.</p>
  <ul>
    <li>but note that this does not necessarily mean less compute</li>
  </ul>
</blockquote>

<p>Three simple ideas in Asynchronous DP:</p>
<ul>
  <li>in-place DP</li>
  <li>Prioritized Sweeping</li>
  <li>Real-time Dynamic DP</li>
</ul>

<h3 id="in-place-dp">In-place DP</h3>

<blockquote>
  <p><strong>Intuition</strong>: since we already have a new value for some states we finished computing at $t=k+1$. we use the <strong>new value directly</strong> before completing the entire estimate over all states</p>
</blockquote>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220923094905916.png" alt="image-20220923094905916" style="zoom:40%;" /></p>

<p>note that already here, we made an improvement <strong>for memory</strong>. But what about state space complexity?</p>

<h3 id="prioritized-sweeping">Prioritized Sweeping</h3>

<blockquote>
  <p><strong>Intuition</strong>: instead of updating each step in a fixed order, we can consider a better order to update the states so that we can perhaps converge faster. For instance, we can use the size of the Bellman error as a guidance.</p>
</blockquote>

<p>For states with large Bellman error, we might want to update them first</p>

\[\text{Bellman Error}(s) = \left|  \max_{a\in A} \left( \mathcal{R}_s^{a} + \gamma \sum\limits_{s'\in S} \mathcal{P}_{ss'}^{a} v(s') \right) - v(s)\right|\]

<p>which is basically comparing the difference between a target the current estimate. But this means we need:</p>
<ul>
  <li>first compute this error for every state, then choose which one has the largest error to update</li>
  <li>next, we need to <strong>update the error table</strong>, which can be done ==only on the affected states $s’$== (the error is only a functoin of current state and next state)</li>
  <li>no guaranteed convergence to the optimal policy</li>
</ul>

<h3 id="real-time-dp">Real-Time DP</h3>

<blockquote>
  <p><strong>Intuition</strong>: I only update the value function $V(s)$ on states that the agent <strong>has seen</strong>, i.e. is relevant for the agent</p>
</blockquote>

<ol>
  <li>agent has a current policy $\pi$</li>
  <li>agent performs some action and observe $S_t, A_t, R_{t+1}$, and is at $S_{t+1}$</li>
  <li>
    <p>backup the value function $V(S_t)$ using the new observation</p>

\[v(S_t) \gets \max_{a\in A} \left( \mathcal{R}_{\textcolor{red}{S_t}}^{a} + \gamma \sum\limits_{s'\in S} \mathcal{P}_{\textcolor{red}{S_t}s'}^{a} v(\textcolor{red}{s'}) \right)\]

    <p>notice that this is off-policy since the value now is not about the behavior policy</p>
  </li>
  <li>update the policy $\pi$ using the new value function and repeat</li>
</ol>

<p>Note that, again, there is <strong>no guaranteed convergence to the optimal policy</strong></p>

<h2 id="generalized-policy-iteration">Generalized Policy Iteration</h2>

<p>Policy iteration consists of two simultaneous, interacting processes:</p>

<ol>
  <li>one making the value function consistent with the current policy (<strong>policy evaluation</strong>)</li>
  <li>making the policy greedy with respect to the current value function (<strong>policy improvement</strong>).</li>
</ol>

<p>Up to now we have seen:</p>

<ul>
  <li>In policy iteration, these two processes alternate, each completing before the other begins, but this is not really necessary (e.g. value iteration).</li>
  <li>In value iteration, for example, only a single iteration of policy evaluation is performed in between each policy improvement.</li>
  <li>In asynchronous DP methods, the evaluation and improvement processes are interleaved at an even finer grain. In some cases a single state is updated in one process before returning to the other.</li>
</ul>

<blockquote>
  <p><strong>Genearalized Policy Iteration</strong>: As long as both processes (policy evaluation and policy improvement) continue to update all states, the ultimate result is typically the same—convergence to the optimal value function and an optimal policy.</p>
</blockquote>

<p>Intuitively, the evaluation and improvement processes in GPI can be viewed as both competing and cooperating.</p>

<ul>
  <li>They compete in the sense that they pull in opposing directions. Making the policy greedy with respect to the value function typically <strong>makes the value function incorrect</strong> for the changed policy, and making the value function consistent with the policy typically causes that <strong>policy no longer to be greedy</strong> (i.e. has a better policy given this new value function)</li>
  <li>In the long run, however, these two processes interact to <strong>find a single joint solution</strong>: the optimal value function and an optimal policy</li>
</ul>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221007144344783.png" alt="image-20221007144344783" style="zoom: 33%;" /></p>

<blockquote>
  <p>Therefore, why GPI holds, i.e. usually converge to optimal value/policy, can be intuitively explained as:</p>

  <ul>
    <li>The value function <strong>stabilizes only when it is consistent with the current policy</strong>,</li>
    <li>The policy <strong>stabilizes only when it is greedy with respect to the current value function</strong>.</li>
  </ul>

  <p>Thus, both processes stabilize only when a policy has been found that is greedy with respect to its own evaluation function. This implies that the ==Bellman optimality equation holds==, and thus that the policy and the value function are optimal.</p>
</blockquote>

<p>This overall idea of GPI is used in ==almost any RL algorithms==</p>

<h1 id="model-free-rl">Model-free RL</h1>

<p>Recall that Model-based RL requires knowing the transition function and the reward function. More importantly in a <strong>Model-Based problem</strong>:</p>

<ul>
  <li>we <em>could</em> get a closed form solution if the state space is small in a model-based MDP (using the Bellman’s equation)</li>
  <li>iterative algorithms, that uses <strong>Bellman expectation</strong> equation, are used for estimating policy value</li>
  <li>control algorithm (i.e. value iteration), that uses <strong>Bellman optimality</strong> equation, are used to find optimal value/policy</li>
</ul>

<p>But more often in reality we ==don’t know the model==. So how do we solve the control problem?</p>

<blockquote>
  <p><strong>Aim</strong>: we can use sampling to ==estimate== the missing transition/reward models. The key question is then ==how do we take samples== to make our model more efficient in estimating the value functions?</p>

  <ul>
    <li>MC Methods</li>
    <li>TD Methods</li>
  </ul>
</blockquote>

<h2 id="monte-carlo-learning">Monte Carlo Learning</h2>

<blockquote>
  <p><strong>MC Sampling</strong>: learns from <strong>complete</strong> episodes (hence finite episodes)</p>

  <ul>
    <li>
      <p>hence can be only used with episodic MDP</p>
    </li>
    <li>
      <p>the main idea is to consider value function of a state = mean return from it</p>

\[V(s) = \mathbb{E}[G(s)] \approx \frac{1}{n}\sum_{i=1}^n G(s)\]
    </li>
  </ul>

</blockquote>

<p>Specifically, we consider the goal of learning $V_\pi$ from episodes of a policy $\pi$</p>

\[(S_1, A_1, R_1, ..., S_k) \sim \pi\]

<p>is <strong>one episode from $\pi$</strong>. We ca sample many episodes, and for each episode:</p>

<ol>
  <li>
    <p>compute the total discounted reward for the future for <em>each state</em>:</p>

\[G_t^i = R_{t+1}^i + \gamma R_{t+2}^i + ... + \gamma ^{T-1} R_T^i\]

    <p>for $i$-th episode</p>
  </li>
  <li>
    <p>estimate the value function using the law of large numbers:</p>

\[v_\pi(s) = \mathbb{E}_\pi[G_t | S_t=s] = \lim_{n \to \infty}  \frac{1}{n}\sum_{i=1}^n G^i_t(s)\]

    <p>for $G_t^i(s)$ means the discounted reward starting from state $s_t$ at the $i$-th episode</p>
  </li>
</ol>

<blockquote>
  <p>While this is the basic idea, there are many <strong>modifications</strong> of this:</p>

  <ul>
    <li>every visit v.s. first visit MC estimate to have different convergence speed - bias tradeoff</li>
    <li>collecting all episodes and computing together is <em>computationally expensive</em>, hence there are iterative version of this</li>
  </ul>
</blockquote>

<h3 id="firstevery-visit-mc-policy-evaluation">First/Every Visit MC Policy Evaluation</h3>

<p>Consider the following two epsiodes we have sampled following policy $\pi$:</p>

\[(S_1, S_2, S_1, S_2, S_4, S_5) \sim \pi \\
(S_1, S_2, S_2, S_4, S_5, S_3) \sim \pi\]

<p>with some reward for each state, but ignored here. Suppose I want to estimate $V(s_1)$ from the two samples</p>

<blockquote>
  <p><strong>First Visit MC Policy Evaluation</strong>: to evaluate $V_\pi(s)$ for a state $s$</p>
  <ol>
    <li><em>only</em> for the first time step $t$ that the state is visited in an episode</li>
    <li>count that as a sample for state $s$ and increment counter $N(s) \gets N(s) + 1$</li>
    <li>increment total return for that state $S(s) \gets S(s) + G_t$</li>
  </ol>

  <p>Then the value estimate is:</p>

\[v_\pi(s) = \frac{S(s)}{N(s)}\]

  <p>and by law of large numbers, $N(s) \to \infty$ we have $v_\pi(s) \to V_\pi(s)$. Hence this is a ==consistent== estimator.</p>
</blockquote>

<p>Therefore, using first visit MC policy evaluation in the previous example, we would have:</p>

\[v_\pi(s_1) = \frac{G^{1}_1(s_1) + G^{2}_1(s_1)}{2}\]

<p>where $G^{i}_t(s)$ is the t-th timestep in the i-th episode.</p>

<blockquote>
  <p><strong>Every Visit MC Policy Evaluation</strong>: to evaluate $V_\pi(s)$ for a state $s$</p>
  <ol>
    <li>for the <em>every</em> time step $t$ that the state is visited in an episode</li>
    <li>count that as a sample for state $s$ and increment counter $N(s) \gets N(s) + 1$</li>
    <li>increment total return for that state $S(s) \gets S(s) + G_t$</li>
  </ol>

  <p>Then the value estimate is:</p>

\[V(s) = \frac{S(s)}{N(s)}\]

  <p>and this again, by law of large numbers, this is a ==consistent== estimator.</p>
</blockquote>

<p>Using every visit MC policy evaluation in the previous example, we would have:</p>

\[V(s_2) = \frac{G^{1}_2(s_2) + G^1_4(s_2) + G^{1}_2(s_2) + G^{1}_2(s_2)}{4}\]

<p>Essentially we treat every sample of even the same episode separately</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Property</th>
      <th style="text-align: center">First Visit</th>
      <th style="text-align: center">Every Visit</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">Consistent</td>
      <td style="text-align: center">Yes</td>
      <td style="text-align: center">Yes</td>
    </tr>
    <tr>
      <td style="text-align: center">Biased</td>
      <td style="text-align: center">No</td>
      <td style="text-align: center">Yes</td>
    </tr>
    <tr>
      <td style="text-align: center">Convergence Speed</td>
      <td style="text-align: center">Slow</td>
      <td style="text-align: center">Fast</td>
    </tr>
  </tbody>
</table>

<p>where:</p>
<ul>
  <li><em>usually</em> every-visit has a faster convergence speed (unless in cases when state is rare in both cases, could have similar speed)</li>
  <li>recall that for law of large number, we required independence of samples. However, samples from every visit are ==correlated==. Therefore, this could be ==biased== even though it could converge due to large number of samples.</li>
</ul>

<blockquote>
  <p><em>Recall</em> that Bias and different from Consistent:</p>
  <ul>
    <li>Consistent estimator: as the sample size increases, the estimates (produced by the estimator) “converge” to the true value</li>
    <li>Unbiased estimator: if I feed in different sample sets, the average of the estimates should be the true value</li>
  </ul>
</blockquote>

<p>Last but not least, implementation wise since we are computing a mean, we could use <strong>recursive mean computations</strong>:</p>

\[\begin{align*}
  \mu_k
  &amp;= \frac{1}{k} \sum_{i=1}^k x_i \\
  &amp;= \frac{1}{k} \left( \sum_{i=1}^{k-1} x_i + x_k \right) \\
  &amp;= \frac{1}{k} \left( (k-1) \mu_{k-1} + x_k \right)\\
  &amp;= u_{k-1} + \frac{1}{k}(x_k - \mu_{k-1})
  \end{align*}\]

<p>in our case, $\mu$ would be the mean hence estimation of value $V_\pi$. This gives use the usually programmatic <strong>recursive MC updates</strong>, where we perform updates on the fly when doing sampling:</p>

\[\begin{align*}
  N(S_t) &amp;\gets N(S_t) + 1\\
  V(S_t) &amp;\gets V(S_t) + \frac{1}{N(S_t)}(G_t - V(S_t))
\end{align*}\]

<p>whenever an update is needed. This gives a brief outline of the pseudo-code for both algorithm:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">First-Visit</th>
      <th style="text-align: center">Every-Visit</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220930175001.png" style="zoom:100%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220930175019.png" style="zoom:100%;" /></td>
    </tr>
  </tbody>
</table>

<h3 id="mc-for-non-stationary-state">MC for Non-Stationary State</h3>

<p>However, if you have a non-stationary problem (e.g. mean of a distribution is time-dependent), then we want to have a dynamic estimator and we don’t want convergence.</p>

<p>Hence we just want to use ==new information directly==, without doing the averaging:</p>

\[V(s_t) \gets V(s_t) + \alpha (G_t - V(s_t))\]

<p>which you can just convert to the equation of moving average</p>

\[V(s_t) \gets (1-\alpha) V(s_t) + \alpha G_t\]

<p>for a <strong>constant step size $\alpha$</strong>. We can intuitively see the difference as the previous form of $V(S_t) \gets V(S_t) + \frac{1}{N(S_t)}(G_t - V(S_t))$ since now this is a constant step size:</p>

\[\begin{align*}
V_{t+1} 
&amp;= V(s_t) + \alpha (G_t - V(s_t)) \\
&amp;= \alpha G_t + (1-\alpha) V_t \\
&amp;= \alpha G_t + (1-\alpha) [ \alpha G_{t-1} + (1-\alpha)V_{t-1}]\\
&amp;= \alpha G_t + (1-\alpha) \alpha G_{t-1} + (1-\alpha)^2 V_{t-1}\\
&amp;= ...
\end{align*}\]

<p>so eventually you reach $G_1$, hence we get:</p>

\[v_{t+1}(s) = (1-\alpha)^t v_1(s) + \sum_{i=1}^t \alpha (1-\alpha)^{t-i}G_i\]

<p>meaning that for large $t$:</p>

<ul>
  <li>the first term will become extremely small, meaning that the <strong>old information would matter very slightly</strong> (whereas in $V(S_t) \gets V(S_t) + \frac{1}{N(S_t)}(G_t - V(S_t))$ every sample has equal contribution)</li>
  <li>usually we want to put <strong>more weight on new information</strong>, as this is non-stationary.</li>
  <li>but we usually use the other formula $V(s_t) \gets V(s_t) + \alpha (G_t - V(s_t))$ for update as that is more computationally efficient</li>
</ul>

<p>But in principle, all the MC backups essentially does:</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220930085105526.png" alt="image-20220930085105526" style="zoom:33%;" /></p>

<p>which is like a <strong>DFS</strong> when sampling. This is later constrasted with TD approaches.</p>

<h2 id="monte-carlo-control">Monte Carlo Control</h2>

<p>First, we revisit our previous approach of generalized policy iteration</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220930085400935.png" alt="image-20220930085400935" style="zoom: 50%;" /></p>

<p>where we used greedy policy for improvement and is proven to work.</p>

<p>Therefore, a simple idea of model-free policy improvements</p>

<ul>
  <li>use MC policy evaluation</li>
  <li>use greedy policy improvement?</li>
</ul>

<p>We realize that using greedy-policy here have two concerns:</p>
<ol>
  <li>
    <p>if we estimateed $v_\pi$, then since greedy needs:</p>

\[\pi'(s) = \arg\max_{a \in A} Q(s,a)\]

    <p>but <em>if we only have $V_\pi$</em>, then we need to compute:</p>

\[\pi'(s) = \arg\max_{a \in A} \mathcal{R}_s^{a}+ \mathcal{P}_{ss'}^{a}V'_\pi\]

    <p>but we don’t know $\mathcal{P}$</p>
  </li>
  <li>
    <p>could get me stuck in some suboptimal action due to exploitation</p>
  </li>
</ol>

<blockquote>
  <p>To solve the first problem, it is easy: we can instead use ==MC methods to directly estimate $Q(s,a)$==</p>
</blockquote>

<p>But then second problem is a little more complicated:</p>

<blockquote>
  <p>We can use <strong>$\epsilon$-greedy policy</strong> instead of greedy policy to allow for ==exploration== since we are estimating the world (hence do no have complete information as in the Model-based case)</p>

\[\pi(a|s) = \begin{cases}
  (\epsilon / m) + 1 - \epsilon &amp; \text{if } a = \arg\max_{a \in A} Q(s,a) \\
  \epsilon / m &amp; \text{otherwise}
\end{cases}\]

  <p>for $m = \vert A\vert$. But does this <strong>guarantee the improvement of the policy</strong>? This is proven to be true!</p>
</blockquote>

<p><em>Proof</em>: for all states, any Ɛ-greedy policy 𝜋, the Ɛ-greedy policy 𝜋’ with respect to is an improvement, that is,</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220930090408152.png" alt="image-20220930090408152" style="zoom:60%;" /></p>

<p>where a key step is shown above. There we wanted to show that $q_\pi(s,\pi’(s))$ is better than the old $v_\pi(s)$</p>

<ul>
  <li>the second equality comes from the fact that best action has an additional $(1-\epsilon)$ probability</li>
  <li>the third equality comes from the fact that $\sum_x \alpha(x)f(x) \le \max_x f(x)$ for $\sum \alpha(x) = 1$. In other words, weighted average is always less than the maximum value.</li>
  <li>the fourth equality comes from expanding the second term and cancelling the first term, with only $\sum \pi(a\vert s) q_\pi(s,a)$ left</li>
</ul>

<p>Then finally the last step to show $v_{\pi’}(s) \ge v_\pi(s)$ which we ignored basically comes from expanding the definition of value function, and substituting in our result above.</p>

<p>Therefore, the final MC policy iteration becomes</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220930091516025.png" alt="image-20220930091516025" style="zoom:50%;" /></p>

<blockquote>
  <p><strong>Note</strong> that different from the model-based case, we cannot perform value-iteration here to simplify the computation. This is because we don’t have the transition model $\mathcal{P}$ as required in the Bellman optimality equation:</p>

\[Q_*(s,a) = \mathcal{R}_s^a + \sum_{s'} \mathcal{P}_{ss'}^a \max_{a'} Q_*(s',a')\]

</blockquote>

<h3 id="greedy-in-the-limit-with-infinite-exploration">Greedy in the Limit with Infinite Exploration</h3>

<p>Recall that we know, for every MDP problem, there exists an optimal deterministic policy by taking the greedy policy of an optimal Q-function. But if we are doing $\epsilon$-greedy, then we are not guaranteed to converge to the optimal policy.</p>

<blockquote>
  <p><strong>GLIE</strong>: A learning policy is called <strong>GLIE</strong> (Greedy in the Limit with Infinite Exploration) if it satisfies the following two properties:</p>
  <ol>
    <li>If a state is visited infinitely often, then <strong>each action in that state is chosen infinitely often</strong> (with probability 1):</li>
  </ol>

\[\lim_{k \to \infty} N_k(s,a) = \infty\]

  <ol>
    <li>In the limit (as $t \to \infty$), the learning policy is <strong>greedy with respect to the learned Q-function</strong> (with probability 1):</li>
  </ol>

\[\lim_{k \to \infty} \pi_k(a|s) = 1(a = \arg\max_{a' \in A} Q_k(s,a'))\]

</blockquote>

<p>Therefore, taking into account our policy improvement with $\epsilon$-greedy, we can ==still achieve optimal policy by satisfying the GLIE condition== with:</p>

\[\epsilon_{k}  = \frac{1}{k}\]

<p>for the $k$ th iteration we have updated the policy.</p>

<p>Therefore, we get essentially a change for policy improvement step:</p>

\[\text{Policy Improvement:}\quad \epsilon \gets \frac{1}{k}, \quad \pi'(s) \gets \epsilon\text{-greedy}(Q)\]

<h2 id="off-policy-evaluation">Off-Policy Evaluation</h2>

<p>So far, all we have learned is on-policy, i.e. the <strong>behavior policy</strong> used to collect samples is the same as the policy you are estimating $V_\pi$</p>

<blockquote>
  <p><strong>Off-policy evaluation</strong>: means the <strong>behavior policy $\mu$</strong> you used to collect data is <strong>not</strong> the same policy you want to estimate $V_\pi$. So you want to learn policy $\pi$ from $\mu$.</p>
  <ul>
    <li>for here, we can suppose both $\mu$ and $\pi$ policy are known</li>
    <li>essentially you may want to evaluate your $V_\pi$ or $Q(S_t,A_t)$ but only <strong>using data from $\mu$</strong>.</li>
  </ul>
</blockquote>

<p>How do we do that? The basic methods here is importance sampling.</p>

<h3 id="importance-sampling">Importance Sampling</h3>

<blockquote>
  <p><strong>Importance Sampling</strong>: goal is to estimate the expected value of a function $f(x)$ (i.e. $G(s)$) under some probability distribution $p(x)$, without sampling from the distribution $p(x)$ but <strong>using $f(x)$ sampled from $q(x)$</strong>:</p>

\[\mathbb{E}_{x \sim p(x)}[f(x)] =?\]

  <p>with data sampled from $x \sim q(x)$. It turns out we can easily show that, under few assumptions:</p>

\[\mathbb{E}_{x \sim p(x)}[f(x)] = \mathbb{E}_{x \sim q(x)}\left[\frac{p(x)}{q(x)}f(x)\right]\]

</blockquote>

<p>Notice that the ==stationary distribution of states== will be different, i.e. we will be considering</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20220930093651232.png" alt="image-20220930093651232" style="zoom:33%;" /></p>

<p>So, if we have samples generated from $x \sim q$, and since in our case we consider $f(X) = G_t(s)$, then basically need to consider, for each trajectory $\tau_j$ and its discounted reward $G^{j}$:</p>

\[Q_{\tau \sim \pi}(s,a) = \mathbb{E}_{\tau \sim \mu(x)}\left[\frac{P_\pi(\tau)}{P_\mu(\tau)}G^{j}\right]\]

<p>But what is this ratio of probability?</p>

\[P_\pi(\tau) = P_\pi(S_t, A_t, ..., S_T, A_T)\\
P_\mu(\tau) = P_\mu(S_t, A_t, ..., S_T, A_T)\]

<p>we can essentially use chain rule to represent this as quantities we know:</p>

\[\begin{align*}
P_\pi(\tau) 
&amp;= P_\pi(S_t, A_t, ..., S_T, A_T)\\
&amp;= \pi(A_T | S_t, S_{T-1},A_{T-1}, ..., S_t,A_t) P_\pi(S_t, A_t, S_{t+1},A_{t+1},...S_T, A_T)\\
&amp;= \pi(A_T | S_T) P_\pi(S_T | S_{T-1},A_{T-1},...S_t, A_t)P_\pi(S_{T-1},A_{T-1},...S_t, A_t)\\
&amp;= \underbrace{\pi(A_T | S_T)}_{\mathrm{policy} } \underbrace{P_\pi(S_T | S_{T-1}, A_{t-1})}_{\text{transition model} } P_\pi(S_t, A_t, S_{t+1},A_{t+1},...S_{T-1},A_{T-1})\\
&amp;= ...\\
&amp;= p(S_{1}) \prod_{i=1}^{T}\underbrace{\pi(A_{i}|S_{i})}_{\mathrm{policy}} \underbrace{p(R_{i}|S_{i},A_{i})}_{\text{reward model}} \underbrace{p(S_{i+1}|S_{i},A_{i})}_{\text{transition model}}
\end{align*}\]

<p>where</p>

<ul>
  <li>the third and fourth equality comes from the fact that we are MDP, hence future <strong>only depends on current</strong></li>
  <li>
    <p>finally, the transition probability and reward probability will be cancelled when we do the ratio:</p>

\[\frac{P_\pi(\tau)}{P_\mu(\tau)} = \frac{p(S_{1}) \prod_{i=1}^{T}\pi(A_{i}|S_{i}) p(R_{i}|S_{i},A_{i}) p(S_{i+1}|S_{i},A_{i})}{p(S_{1}) \prod_{i=1}^{T}\mu(A_{i}|S_{i}) p(R_{i}|S_{i},A_{i}) p(S_{i+1}|S_{i},A_{i})} = \prod_{i=1}^{T}\frac{\pi(A_{i}|S_{i})}{\mu(A_{i}|S_{i})} \equiv w_{\mathrm{IS}}\]

    <p>is called the ==importance sampling weight== for each trajectory</p>
  </li>
  <li>can estimate <em>any other policy</em>, but given that we have the same coverage. unseen action in policy $\mu$, it has prob zero</li>
</ul>

<blockquote>
  <p><strong>Ordinary IS</strong>: the above essentially gives the ordinary IS algorithm:</p>

\[\begin{align*}
  V_{\pi}(s)
  &amp; \approx \frac{1}{n} \sum\limits_{j=1}^{n} \frac{p_\pi(T_j|s)}{p_\mu(T_j|s)} G(T_j)\\
  &amp;= \frac{1}{n} \sum\limits_{j=1}^{n} \left(\prod_{i=1}^{T} \frac{\pi(a_{j,i}|s_{j,i})}{\mu(a_{j,i}|s_{j,i})} \right) G(T_j)\\
  &amp;= \frac{1}{n} \sum\limits_{j=1}^{n} w_{\mathrm{IS}} \cdot  G(T_j)
\end{align*}\]

  <p>for practically, we are just <strong>swapping out $G(T_j)$ with $w_{\mathrm{IS}} \cdot  G(T_j)$ in our previous on-policy algorithms</strong>.</p>
</blockquote>

<p>Now, what are the assumptions used to make IS work? You might notice the term $\frac{\pi(a_{j,i}\vert s_{j,i})}{\mu(a_{j,i}\vert s_{j,i})}$ could have gone badly, and it is exactly the case</p>

<blockquote>
  <p><strong>Importance Sampling Assumptions</strong>: since we are reweighing samples from $\mu$, if we have distributions that are non-overlapping, then this will obviously not work.</p>

  <ul>
    <li>in particular, if we have any single case that $\mu(a\vert s)=0$ but $\pi(a\vert s)&gt;0$, then this will not work.</li>
    <li>therefore, for this to work, we want to have a large ==coverage==: so that for $\forall a,s$ such that $\pi(a\vert s)&gt;0$, you want $\mu(a\vert s)&gt;0$.</li>
  </ul>
</blockquote>

<p>Intuitively, this means that if $\pi$ is not too far off from $\mu$, then the importance sampling would work reasonably.</p>

<p>In practice, there are still some problems with this, and hence some variants include:</p>

<ul>
  <li><strong>Discounting-aware Importance Sampling</strong>: suppose you have $\gamma =0$ and you have for long episodes. Then techinically since $\gamma=0$, your return is determined since $S_0,A_0,R_0$ and multiplying the weight by $w_{\mathrm{IS}}$ contributes significantly to ==variance==</li>
  <li><strong>Per-decision Importance Sampling</strong>: which applies a weight to each single reward $R_T$ within the $G$.</li>
</ul>

<h2 id="td-learning">TD Learning</h2>

<p>In practice, the MC is used much less because:</p>

<ul>
  <li>we need to <strong>wait</strong> until the agent reaches the <strong>terminal state</strong> to compute $G_t$, which is our target for update equation
    <ul>
      <li>e.g. if we play go game, it needs to wait until the end of the game</li>
    </ul>
  </li>
  <li>hence also requires finite episode settings</li>
  <li><strong>large variance</strong>, because the <strong>episode can be long</strong></li>
</ul>

<blockquote>
  <p><strong>Aim</strong>: TD learning tries to resolve that issue by “estimating the future” instead of waiting and using the true future. So the questions become: is there some useful information we can do without this wait?</p>

  <ul>
    <li>
      <p>learns from incomptele episodes, hence bootstrapping</p>
    </li>
    <li>
      <p>but because you are updating from your estimate based on your estimate, <strong>there will be bias</strong> (MC has no bias)</p>
    </li>
    <li>
      <p>For any fixed policy $\pi$, TD(0) has been proved to converge to $v_\pi$, in the mean for a constant step-size parameter if it is sufficiently small, and with probability $1$ if the step-size prameter decreases according to the usual stochastic approximation condition:</p>

\[\sum_{n=1}^\infty \alpha_n(t) = \infty,\quad \text{and}\quad \sum_{n=1}^\infty \alpha^2_n(t) &lt; \infty\]

      <p>The first condition is required to guarantee that the steps are large enough to eventually ==overcome any initial conditions or random fluctuations==. The second condition guarantees that <strong>eventually the steps become small enough to assure convergence</strong>.</p>
    </li>
  </ul>
</blockquote>

<p>Recall that MC updates in general looks like</p>

\[V(S_t) \gets V(S_t) + \alpha (\underbrace{G_t}_{\text{MC target}} - V(S_t))\]

<p>which is the actual return, but in TD(0) we can update using an <strong>estimated return</strong></p>

\[V(S_t) \gets V(S_t) + \alpha (\underbrace{(R_{t+1} + \gamma V(S_{t+1})}_{\text{TD(0) target}}) - V(S_t))so that :\]

<ul>
  <li>
    <p>essentially I am utilizing the fact that:</p>

\[G_t = R_{t+1} + \gamma R_{t+2}+ \gamma ^2 R_{t+3}+ ...= R_{t+1} + \gamma V(S_{t+1})\]

    <p>hence since we can approximate $V(S_{t+1}) \approx v(s_{t+1})$, we get our TD(0) update</p>
  </li>
  <li>intuitively, this TD(0) means that I wanted to make update on $S_t$ and I do this by:
    <ul>
      <li>taking an action $A_t$ and get to $S_{t+1}$</li>
      <li>then using my trajectory $S_{t}, R_{t+1}, S_{t+1}$ to update by estimating the expected return I would get in the future</li>
    </ul>
  </li>
  <li>so this means that like MC, I will still be estimating with acting and sampling experience from real environment</li>
</ul>

<p>But since TD$(0)$ is only moving/looking one step forward at $V(S_{t+1})$, you can easily also look many steps:</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221007111034003.png" alt="image-20221007111034003" style="zoom: 25%;" /></p>

<blockquote>
  <p><strong>General TD$(n)$</strong> updates: since we can also have</p>

\[G_t = R_{t+1} + \gamma R_{t+2}+ \gamma ^2 R_{t+3}+ ...= R_{t+1} + \gamma R_{t+2}+\gamma^2 V(S_{t+2})\]

  <p>this becomes a TD(1) since now we are looking even one more step ahead, hence suing</p>

\[V(S_t) \gets V(S_t) + \alpha (\underbrace{(R_{t+1}+\gamma R_{t+2} + \gamma^2 V(S_{t+1})}_{\text{TD(1) target}}) - V(S_t))\]

  <p>and this can go to TD$(n)$ easily.</p>
</blockquote>

<p>Visually, we can compare the three algorithms discussed so far:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">MC Update</th>
      <th style="text-align: center">TD Update</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221007082930340.png" alt="image-20221007082930340" style="zoom:33%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221007082958257.png" alt="image-20221007082958257" style="zoom:33%;" /></td>
    </tr>
  </tbody>
</table>

<p>And just to be complete, for DP method we know all transition probabilities, henc we can take into account all possibilities</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221007083124404.png" alt="image-20221007083124404" style="zoom:33%;" /></p>

<p>In this sense,  TD(0) can be seen as <strong>taking samples over this DP backup</strong>, which also “bootstraps”</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center"> </th>
      <th style="text-align: center">Needs Model</th>
      <th style="text-align: center">Sampling</th>
      <th style="text-align: center">Bootstrapping</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">DP</td>
      <td style="text-align: center">Yes</td>
      <td style="text-align: center">No</td>
      <td style="text-align: center">Yes</td>
    </tr>
    <tr>
      <td style="text-align: center">MC</td>
      <td style="text-align: center">No</td>
      <td style="text-align: center">Yes</td>
      <td style="text-align: center">No</td>
    </tr>
    <tr>
      <td style="text-align: center">TD</td>
      <td style="text-align: center">No</td>
      <td style="text-align: center">Yes</td>
      <td style="text-align: center">Yes</td>
    </tr>
  </tbody>
</table>

<p>Finally, algorithmically for TD(n):</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221007111217374.png" alt="image-20221007111217374" style="zoom: 33%;" /></p>

<h2 id="mc-vs-td-methods">MC v.s. TD Methods</h2>

<p>Here we compare some features of using MC v.s. TD to perform policy evaluation:</p>

<table>
  <thead>
    <tr>
      <th> </th>
      <th style="text-align: center">MC</th>
      <th style="text-align: center">TD(0)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Learn before/without knowing final outcome</td>
      <td style="text-align: center">No</td>
      <td style="text-align: center">Yes</td>
    </tr>
    <tr>
      <td>Target for update</td>
      <td style="text-align: center">$G_t$ which is a real return</td>
      <td style="text-align: center">estimate $R_{t+1} + \gamma v(S_{t+1})$ can be biased</td>
    </tr>
    <tr>
      <td>Variance</td>
      <td style="text-align: center">High, because single branch + long episode means uncertainy builds up quickly</td>
      <td style="text-align: center">Low, because now depend on one random action, transition, and reward</td>
    </tr>
    <tr>
      <td>Bias</td>
      <td style="text-align: center">no bias</td>
      <td style="text-align: center">not proven, has shown bias upperbound</td>
    </tr>
    <tr>
      <td>Sentitive to Initial Value</td>
      <td style="text-align: center">no</td>
      <td style="text-align: center">yes, can affect convergence speed</td>
    </tr>
    <tr>
      <td>Convergence Properties</td>
      <td style="text-align: center">Converges</td>
      <td style="text-align: center">Converges</td>
    </tr>
    <tr>
      <td>Convergence Speed</td>
      <td style="text-align: center">Slow</td>
      <td style="text-align: center">Fast</td>
    </tr>
    <tr>
      <td>used with Function Approximation</td>
      <td style="text-align: center">Little problem</td>
      <td style="text-align: center">often has problem converging</td>
    </tr>
    <tr>
      <td>Storing Tabular Data</td>
      <td style="text-align: center">Yes</td>
      <td style="text-align: center">Yes</td>
    </tr>
  </tbody>
</table>

<p>The still remaining concern but both still requires some kind of table to store value for each state, and/or action. For example, we update $Q$ estimate by storing the values of $(s,a)$ in a ==tabular representation==: ==finite== number of state-action pair.</p>

<p>However, as you can imagine many real world problems have <strong>enormous state and/or action space</strong> so that we cannot really tabulate all possible values. So we need to somehow ==generalize== to those unknown state-actions.</p>

<blockquote>
  <p><strong>Aim</strong>: even if we encounter state-action pairs <em>not</em> met before, we want to make <em>good decisions</em> by past experience.</p>
</blockquote>

<blockquote>
  <p><strong>Value Function Approximation</strong>: represent a (state-action/state) value function <strong>with a parametrized function</strong> instead of a table, so that even if we met an inexperienced state/state-action, we can get some values. (which will be discussed in the next section)</p>
</blockquote>

<hr />

<p><em>For Example</em>: using TD for policy Evaluation</p>

<p>Consider the following MDP, with reward $0$ except for one state:</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221007084804460.png" alt="image-20221007084804460" style="zoom: 50%;" /></p>

<p>So that essentially there are:</p>

<ul>
  <li>two terminate states, so your optimal policy is to just move right.</li>
  <li>And suppose my current policy $\pi$ is random left or right at equal probability, we want to evaluate this policy $\pi$ .</li>
</ul>

<p>Let us use TD(0) learning and have initial values $V(S)=0.5$ for non-terminal states and $V(S_T)=0$ for those temrinal states.</p>

<ul>
  <li>we take $\alpha=0.1$, $\gamma=1$</li>
  <li>then we update the estimate <strong>per time-step</strong> following TD(0) algorithm</li>
</ul>

<p>With which we arrive at:</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221007134742879.png" alt="image-20221007134742879" style="zoom: 50%;" /></p>

<p>so after 100 episodes seen, we see it is going to converge to the true value.</p>

<p>Interestingly, from here we can ask: what is the <strong>episode encountered</strong> (see the line annotated by number 1) for the so that TD(0) only end up updated $V(A)\gets 0.45$?</p>

<ul>
  <li>
    <p>realize that if you calculate anything from $V(S)\to S’ \neq S_T$ you will get no change in value, still $0.5$. For instance:</p>

\[V_A \gets V_A + \gamma (R + V_B - V_A) = 0.5 + 1 \cdot (0) = 0.5\]
  </li>
  <li>
    <p>but things change only if you ended up at $V_T$ on the left, so that you get</p>

\[V_A \gets V_A + \gamma (R + V_T - V_A) = 0.5 + 0.1 \cdot (0 + 0 -0.5) = 0.45\]
  </li>
</ul>

<p>Therefore the episode just needs to hit left end state.</p>

<p>In this example, we can also compare the MC and TD variance</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221007090134530.png" alt="image-20221007090134530" style="zoom: 50%;" /></p>

<p>and note that MC achieves least MSE, while TD is performing MLE.</p>

<h2 id="td-control">TD Control</h2>

<p>In the end all people care is to get the optimal policy, rarely just to evaluate. Hence we need to use the evaluation/learning and do control</p>

<blockquote>
  <p><strong>Intuitively</strong>: we can just apply TD to the $Q(S,A)$, and use $\epsilon$-greedy policy improvement as we have proven to work with MC methods</p>

  <ul>
    <li>as long as we have some form of alternating policy evaluation and policy improvement, following <a href="#Generalized Policy Iteration">Generalized Policy Iteration</a> mos algorithms typically converge to the optimal policy</li>
  </ul>
</blockquote>

<h3 id="sarsa">SARSA</h3>

<blockquote>
  <p><strong>SARSA</strong>: Essentially TD(0) learning for one step followed immediately by $\epsilon$-greedy policy improvement.</p>

  <ul>
    <li>
      <p>intuitively, it follows the <a href="#Generalized Policy Iteration">Generalized Policy Iteration</a> style</p>
    </li>
    <li>
      <p>Sarsa converges with probability 1 to an optimal policy and action-value function, under the usual conditions on the step sizes $\sum \alpha^2 &lt; \infty$, as long as all state–action pairs are visited an infinite number of times and the policy converges in the limit to the greedy policy (GLIE, which can be arranged, for example, with $\epsilon$-greedy policies by setting $\epsilon = 1/t$).</p>
    </li>
  </ul>
</blockquote>

<p>Given a single move/step $(S,A,R,S’,A’)$ we can perform an update using TD(0) equation:</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221007091739133.png" alt="image-20221007091739133" style="zoom: 33%;" /></p>

<p>Then, instead of waiting it to cnverge we can directly perform update, hence the algorithm becomes</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221007091933118.png" alt="image-20221007091933118" style="zoom:50%;" /></p>

<p>where notice that essentially I improve my policy by picking better $A$ using $\epsilon$-greedy, and then ask my model to update accordingly.</p>

<ul>
  <li>
    <p>this is <strong>on-policy control</strong> (i.e. behavior policy $\pi_b$ is the same as evaluation policy $\pi_e$)</p>
  </li>
  <li>on-policy as you already chosen your action while doing policy improvement</li>
  <li>and recall that for convergence to the optimal greedy policy, you will <strong>need $\epsilon$ to decrease (i.e. the GLIE)</strong></li>
</ul>

<h3 id="q-learning">Q-Learning</h3>

<blockquote>
  <p><strong>Q-Learning</strong>: Most important and widely used today. It is motivated by having the <strong>learned</strong> action-value function, $Q$, from TD updates to <strong>directly approximates $Q_*$</strong>, the optimal action-value function, independent of the policy being followed.</p>

  <ul>
    <li>dramatically simplifies the analysis of the algorithm and enabled early convergence proofs (is proven to converge)</li>
    <li>All that is required for correct convergence is that all pairs continue to be updated. Under this assumption and a variant of the usual stochastic approximation conditions (i.e. $\sum \alpha^2 &lt; \infty$) on the sequence of step-size parameters, <strong>$Q$ has been shown to converge with probability 1 to $Q_*$.</strong></li>
  </ul>
</blockquote>

<p>Now, the algorithm is that you are not choosing $A’$ from the current policy $\pi$, but update using greedy policy $\mathrm{greedy}(\pi)$</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221007092305741.png" alt="image-20221007092305741" style="zoom: 50%;" /></p>

<p>hence this is off-policy</p>

<ul>
  <li>your update is to estimate a greedy policy (i.e. optimal policy). This could have you, for example picking leftest action</li>
  <li>but when I sample, I use $\epsilon$-greedy policy, meaning that I might have ended up in a differnt state. e.g. by picking the rightest action</li>
  <li>but it is proven that it still converges to the optimal policy quickly</li>
</ul>

<p>Algorithm:</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221007145704583.png" alt="image-20221007145704583" style="zoom:33%;" /></p>

<p>where here I improve my policy by picking better $A$ using $\epsilon$-greedy, but then ask my model to update the greedy policy.</p>

<ul>
  <li>
    <p>This is widely used as there are early theoretical proofs to show it always converge to the optimal policy. But note that</p>
  </li>
  <li>but SARSA + greedy is still different than Q-Learning</li>
  <li>so under the usual stochastic approxmation conditions with step size, and using GLIE, i.e. $\epsilon$ decreasing, <strong>both SARSA and Q-Learning will converge to the optimal value/policy</strong>. So what is the different between using them?</li>
</ul>

<hr />

<p><em>For Example: Cliff Walking</em></p>

<p>Consider the following cliff walking problem, where we want to use the SARSA and Q-learning to find the ==optimal policy given fixed $\epsilon=0.1$.== Then eventually you will see the following performance</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221007093725043.png" alt="image-20221007093725043" style="zoom:50%;" /></p>

<p>however, here we notice that Q-learning is doing worse. This does <strong>not</strong> contradict our previous conclusions because:</p>

<ul>
  <li>Q-learning aims to directly learn the optimal policy <strong>without taking into account the behavioral policy</strong> (i.e. $\epsilon=0.1$). Hence it learns the optimal path but occasionally falls off the cliff due to $\epsilon=0.1$</li>
  <li>
    <p>SARSA aims to learn the policy <strong>taking into account the behavioral policy</strong> and hence picks the safer path</p>
  </li>
  <li>but at the end of day, if we decrease $\epsilon \to 0$, then both converge to the same optimal path</li>
</ul>

<p>But why would you want to have $\epsilon$-greedy policy used as behavioral policy when deployed?</p>

<ul>
  <li>in cases such as automonomous driving, simulation environment might be too optimistic and you may want your model to be more <strong>robust to random errors</strong>, as shown in the cliff case</li>
  <li>so in that case SARSA could be prefered, which might not give you the optimal $Q$ values hence more robust</li>
</ul>

<h2 id="dp-vs-td-methods">DP v.s. TD Methods</h2>

<p>We can compare the backup diagrams and realize that our update forms corresponds a lot to <strong>DP=Bellman Equations while TD=sampling Bellman Equations</strong></p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221007094456708.png" alt="image-20221007094456708" style="zoom: 50%;" /></p>

<p>This becomes much clearer if we compare the update equation used:</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221007094708566.png" alt="image-20221007094708566" style="zoom:50%;" /></p>

<p>where $x \xleftarrow{\alpha} y$ means the update $x \gets x+ \alpha (y-x)$</p>

<ul>
  <li>so that Q-learning is <strong>sampling Bellman Optimality from DP</strong></li>
  <li>SARSA is like <strong>sampling from Bellman Expectation from DP</strong></li>
</ul>

<h2 id="tdlambda-and-eligibility-traces">TD($\lambda$) and Eligibility Traces</h2>

<p>We want to expand the basic TD(0) idea which can perform per step update (no wait for $G_t$) and MC which involves deep updates. Specifically, you will see how those relate to the <strong>idea of TD($\lambda$)</strong>, and eventually see a <strong>unified view of RL algorithmic solutions</strong>.</p>

<p>At the end of this section, you should</p>

<ul>
  <li>
    <p>understand what TD$(\lambda)$ and eligibility traces are</p>
  </li>
  <li>
    <p>have a picture of how existing algorithms are came up/organized</p>
  </li>
</ul>

<p>Then we can go into implementations with Deep NN in the next section.</p>

<h3 id="tdlambda">TD($\lambda$)</h3>

<p>Recall that TD(0) considers the update of <strong>one-step look ahead</strong></p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221015013800029.png" alt="image-20221015013800029" style="zoom:33%;" /></p>

<p>which basically aims to approximate the target $G_t = R_{t+1} + \gamma R_{t+2}+ \gamma ^2 R_{t+3}+ …= R_{t+1} + \gamma V(S_{t+1})$. We mentioned that we can easily extend this idea to <strong>$n$-step look ahead</strong>, which can be even generalized to the MC which gets to the terminate state:</p>

\[\begin{align*}
G_t^{(n)} 
&amp;=R_{t+1} + \gamma R_{t+2}+ \gamma ^2 R_{t+3}+ ... \\
&amp;= R_{t+1} + \gamma R_{t+2} + ... + \gamma^{n-1}R_{t+n} + \underbrace{\gamma^nV(S_{t+n})}_{\text{n-th step}}
\end{align*}\]

<p>Hence visually</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Visual</th>
      <th style="text-align: center">TD(n) to MC Update Target</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221014081856031.png" alt="image-20221014081856031" style="zoom: 33%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221014081936837.png" alt="image-20221014081936837" style="zoom: 50%;" /></td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p><strong>Intuition</strong>: We can perhaps combine both MC and TD, and use <strong>all the information in the sample</strong>. So that instead of a single $n$-step return, we can <strong>average/combine all the $n$-step return</strong>.</p>
</blockquote>

<p>For instance, consider you have a 2 and 4 step return computed, we can consider</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Data We Have</th>
      <th style="text-align: center">Target</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221014082300419.png" alt="image-20221014082300419" style="zoom: 33%;" /></td>
      <td style="text-align: center">$\frac{1}{2} G^2 + \frac{1}{2} G^4 = \frac{1}{2}\sum G^{(n)}$</td>
    </tr>
  </tbody>
</table>

<p>So the question is what is a good way to combine those information?</p>

<blockquote>
  <p><strong>$\lambda$-Return:</strong> compute $G_t^\lambda$ which combines all $n$-step return $G_t^{n}$ ==using weight $(1-\lambda )\lambda^{n-1}$==, which decays each future by $\lambda$ while summing up to $1$. This means that given all returns:</p>

\[G_t^\lambda = (1-\lambda) \sum_{n=1}^\infty \lambda^{n-1} G_t^{(n)}, \quad G_t^{(n)} = R_{t+1} + \gamma R_{t+2} + ... + \gamma^{N}V(S_{t+N})\]

  <p>and hence your update equation becomes</p>

\[V(S_t) \gets V(S_t) + \alpha (G_t^\lambda - V(S_t))\]

  <p>however, since this means you are adding both long episodes (MC) and short ones (TD), you will get</p>

  <ul>
    <li>==both high bias and big variance== (from MC and TD)</li>
    <li>you need a ==delay as it waits until terminal state== (based on definitino $n=T$ here is the terminal state)</li>
    <li>using ==bootstrapping== because we calculate $G_t^{(n)}$ using TD method, hence ==sensitive to initialization==</li>
  </ul>

  <p>so even in TD(0) we can get rid of a lot of those problems. Meaning that TD($\lambda$) is not really used in practice. But this did provided the theoretical foundation for the eligibility trace, which is very useful.</p>
</blockquote>

<p>Visually, the weights look like</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Using All Information</th>
      <th style="text-align: center">Weights on Early $G_t^{(n)}$ decays = less important</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221014082434105.png" alt="image-20221014082434105" style="zoom:50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221014083138482.png" alt="image-20221014083138482" style="zoom:33%;" /></td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>==Note== that in the forward-view, the <strong>weights need to sum up to $1$</strong>. This means in case if you have a finite horizon, as shown in the figure above you need to <strong>adjust your last weight</strong> so that your weights sum up to $1$.</p>

\[G_t^{\lambda} = (1-\lambda) \sum_{n=1}^{T-t-1}\lambda^{n-1}G_{t}^{(n)}+\underbrace{\lambda ^{T-t-1}G_t}_{\text{last return}}\]

  <ul>
    <li>for instance, if you have three $G_t^{(n)}$, and $\lambda = 0.5$, then the weights will be $0.5, 0.5^2, 1-(0.5+0.5^2)$</li>
  </ul>
</blockquote>

<p>So how do we <strong>improve this theoretical idea</strong>. Consider viewing TD($\lambda$) as a ==forward view== as we are looking into the future</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221014083247509.png" alt="image-20221014083247509" style="zoom: 50%;" /></p>

<blockquote>
  <p>This forward view provides theory, the ==backward view== provides mechanism/practicality</p>
</blockquote>

<p>I would like to fix the following problems in this algorithm:</p>

<ul>
  <li>get a sample and can update like TD(0) per time step (instead of waiting)</li>
  <li>combines information like TD($\lambda$) but hopefully avoid those bias and variance</li>
</ul>

<h3 id="eligibility-trace">Eligibility Trace</h3>

<blockquote>
  <p><strong>Heuristics</strong>: what are the useful features of the forward view TD($\lambda$) update?</p>

  <ul>
    <li>==frequency heuristics==: most visited states should be more important (=need to have some kind of <em>memory</em> to know that it was visited in the past)
      <ul>
        <li>achieved by constantly adding the history and yet decaying like TD($\lambda$). i.e. add past eligibility but scaled: $\lambda E_{t-1}$</li>
      </ul>
    </li>
    <li>==recent heuristic==: most recent states should be also important
      <ul>
        <li>add a weight of $1$ (the indicator function)</li>
      </ul>
    </li>
  </ul>

</blockquote>

<p>So the idea technically comes form TD($\lambda$), which actually does</p>

<ul>
  <li>put more weight on the most recent state it has the highest weight</li>
  <li>more weight on most visited states as they will be added more than once in the $\sum$</li>
</ul>

<blockquote>
  <p><strong>Eligibility Trace</strong>: essentially how do we ==design a weighting== that achieves the above but also allow us to do per-step update?</p>

  <p>Initialize the weight $E_0(s)=0$ for each state, and then consider</p>

\[E_t(s) = \gamma \lambda E_{t-1}(s) + \mathbb{1}(S_t=s)\]

  <p>for $\mathbb{1}$ is the indicator function, and it records the <strong>“importance” for each state</strong> when the value function is updated (see later). But why this form? It turns out that this specific form allows for an ==(offline) equivalence== of eligibility trace to TD($\lambda$) forward view.</p>
</blockquote>

<p>For example, consider you are rolling out a single episode, and a state that is being visited 4 times in a row, not seen for a while, then seen twice, then seen once. Then, the eligibility trace of it looks like:</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221014084104772.png" alt="image-20221014084104772" style="zoom:50%;" /></p>

<p>therefore, it satisfied what I needed:</p>

<ul>
  <li>if a state is visited more <strong>often</strong>, it gets a higher eligibility trace (like in the beginning)</li>
  <li>if a state is visited more <strong>recently</strong>, it automatically have a weight of $+1$</li>
</ul>

<blockquote>
  <p><strong>Backward View</strong> of TD($\lambda$): now we can use eligibility trace for value update.</p>

  <p>Consider the TD error $\delta_t$ we used to update when doing TD(0):</p>

\[\delta_t = \underbrace{R_{t+1} + \gamma V(S_{t+1})}_{\text{TD(0) target}} - V(S_t)\]

  <p>which enabled us to do per time-step update. Then, the idea is we ==weigh== the per-time step error, such that ==if we accumulate the updates until the end of the episode==, it will result in the ==same update as the forward TD($\lambda$)==. This is also called the <strong>offline equivalence</strong> (see next section), but with this constraint we end up with the weight called ==eligibility trace $E_t(s)$== which we showed before:</p>

\[E_t(s) = \gamma \lambda E_{t-1}(s) + \mathbb{1}(S_t=s)\]

  <p>and hence the update rule:</p>

\[V(s)\gets V(s) + \alpha E_t(s) \delta_t\]

  <p>so that this is given to each state, e.g. if we have 10 states, we get 10 eligibility traces. Intuitively, since $E_t(s)$ depended on history, it measures how much this state matters <strong>by looking in the past</strong>: to see if it is seen frequently, recently.</p>
</blockquote>

<p>Visually, the backward view means we are using this loss $\delta_t$ using information in the past:</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221014084613356.png" alt="image-20221014084613356" style="zoom:33%;" /></p>

<p>additionally</p>

<ul>
  <li>
    <p>if $\lambda = 0$, then $E_t(s) =\mathbb{1}(S_t=s)$  and then eligibility trace becomes TD(0) update since we are then doing:</p>

\[V(s)\gets V(s) + \alpha \delta_t(s)\cdot \mathbb{1}(S_t=s)\]

    <p>meaning we only update the ones we just saw</p>
  </li>
</ul>

<p>So this backward update now has the advantage of</p>

<ul>
  <li>
    <p>including in the <em>idea</em> of forward TD($\lambda$) to use <strong>all the information we have</strong></p>
  </li>
  <li>
    <p>this is implementable as we don’t need to look n-step beyond (but behind). Meaning we can perform <strong>update per time step</strong></p>
  </li>
</ul>

<p>Finally, we can show the algorithm of using Eligibility trace:</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221014085742951.png" alt="image-20221014085742951" style="zoom: 67%;" /></p>

<p>where basically the error is TD(0) error, but we are <strong>updating all states using eligibility trace per time step</strong></p>

<ul>
  <li>this means we need to have two tables, one for eligibility per state and anther store the value per state</li>
  <li>since now it is online (update per step), this backward is <strong>not</strong> equivalent to the forward view. But if we pick a step size sufficiently small, it is almost equivalent</li>
  <li>practically, this <strong>online TD($\lambda$) updates</strong> is what we use and works</li>
</ul>

<blockquote>
  <p>==Note== that</p>

  <ul>
    <li>
      <p>we are updating <strong>all states per time step</strong>, so even if you have just seen a state $S_t=B$, and $S={A,B}$, you still need to update <strong>both $S=A,S=B$</strong> in the loop when updating $V(s)$. A hint is to notice that $\delta$ is not a function of state in the above algorithm.</p>
    </li>
    <li>
      <p>when used with value function approximation, the <strong>eligibility trace generalizes</strong> to</p>

\[E_t(s) = \gamma \lambda E_{t-1}(s) + \nabla \hat{V}(S,w)\]

      <p>and algorithm looks like</p>

      <p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221205221054594.png" alt="image-20221205221054594" style="zoom: 25%;" /></p>
    </li>
  </ul>
</blockquote>

<h3 id="offline-equivalent-of-forward-and-backward-views">Offline Equivalent of Forward and Backward Views</h3>

<p>Finally, here we answer the question why did people decide to use specifically the weight in the form of $E_t(s)$</p>

\[E_t(s) = \gamma \lambda E_{t-1}(s) + \mathbb{1}(S_t=s)\]

<blockquote>
  <p><strong>Offline Equivalence</strong></p>

  <p>Consider having your eligibility trace being updated/accumulated all the time, but ==you only update $V$ at the end==. Recall that for the forward view, we also only update at the end. Now, you realize that</p>

  <p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221014085128664.png" alt="image-20221014085128664" style="zoom:33%;" /></p>

  <p>so if we were offline only learning the eligibility traces, your final updated $V$ will be the same as the forward view</p>

  <ul>
    <li>so in offline mode you are essentially <strong>summing up all the errors of each state over all time</strong> but without updating $V$</li>
    <li>so then the proof is to show that the this accumulated error is the same in forward view! But this proof is long so skipped</li>
  </ul>
</blockquote>

<h2 id="tdlambda-control">TD($\lambda$) Control</h2>

<p>In the previous section we are essentially <strong>learning the value function</strong>, now we care about using it to <strong>find the optimal policy</strong>. The basic idea is again simple: we can apply this learning style to learn an optimal $Q_*(s,a)$.</p>

<p>Recall that to derive the backward eligibility trace we need to</p>

<ol>
  <li>derive the <strong>forward</strong> algorithm by considering the $n$ step look-ahead version of the TD error</li>
  <li>use the eligibility trace in <strong>backward</strong> algorithm</li>
  <li>show their <strong>offline equivalence</strong></li>
</ol>

<h3 id="sarsalambda">SARSA($\lambda$)</h3>

<p>First, we consider the forward TD($\lambda$). Consider the ==$n$-step look ahead for SARSA’s target==</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221015155935901.png" alt="image-20221015155935901" style="zoom:33%;" /></p>

<p>So that the $n$-step look ahead return is</p>

\[q_t^{n} = R_{t+1} + \gamma R_{t+2} + ... + \gamma^{T-1} R_{t+n} + \gamma^n Q(S_{t+n})\]

<p>Hence the forward view considers weighting those returns:</p>

\[q_t^{\lambda} = (1-\lambda) \sum_{n=1}^\infty \lambda^{n-1} q_t^{(n)}\]

<p>So the forward view of SARSA becomes:</p>

\[Q(S_t, A_t) \gets Q(S_t,A_t) + \alpha (\underbrace{q_t^{\lambda}}_{\text{TD($\lambda$) target}} - Q(S_t,A_t))\]

<p>and notice that using $\lambda=0$ we get back SARSA (which uses TD(0) target)</p>

<p>Then from it, we can <strong>find the backward view</strong> by building this ==eligibility trace== knowing that</p>

\[\delta_t = R_{t+1} + \gamma Q(S_{t+1}, A_{t+1}) - Q(S_t, A_t)\]

<p>so then intuitively we can say that the eligibility trace is, with $E_0(s,a)=0$:</p>

\[E_t(s,a) = \gamma \lambda E_{t-1}(s,a) + \mathbb{1}(S_t=s, A_t=a)\]

<p>so that our update rule is:</p>

\[Q(s,a) \gets Q(s,a) + \alpha E_t(s,a) \delta_t\]

<p>essentialy:</p>

<ul>
  <li>target is stil SARSA target, but error is weighted by eligibility trace</li>
  <li>so again two tables, one for Q and one for eligibility trace</li>
  <li>and we skip the proof that this gives the same result as the forward view of SARSA if offline</li>
</ul>

<p>Therefore, we get this SARSA($\lambda$) algorithm</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221014091605986.png" alt="image-20221014091605986" style="zoom:50%;" /></p>

<p>We can visualize the differences:</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221014091753630.png" alt="image-20221014091753630" style="zoom: 50%;" /></p>

<p>so that</p>
<ul>
  <li>if SARSA, then we only updated using only one “previous” step</li>
  <li>if using 10-step SARSA, my last step will take into account my previous 10 steps equally</li>
  <li>if using SARSA($\lambda$) with $\lambda=0.9$, then we update using all history weighted by eligibilty trace</li>
</ul>

<h3 id="qlambda-learning">Q($\lambda$)-Learning</h3>

<p>There are many ways to do this, but you need to have some proof that it works. So here we use Watkins’s version. First recall that</p>

<ul>
  <li>Q-learning aims to do Bellman optimality directly each step</li>
  <li>it is off-policy, and like SARSA, the update is per step (no need to wait)</li>
  <li>both Q-learning and SARSA is proven to give you the optimal policy (under mild conditions)</li>
</ul>

<p>Now, consider Q($\lambda$).  We first consider ==$n$-step look ahead of the target== (different from SARSA’s target)</p>

\[\begin{cases}
\text{1-step}, &amp; R_{t+1} + \gamma \max_a Q(S_{t+1}, a) \\
\vdots \\
\text{$n$-step}, &amp; R_{t+1} + \gamma R_{t+2} + ... + \gamma^{T-1} R_{t+n} + \gamma^n \max_a Q(S_{t+n}, a)
\end{cases}\]

<p>But then, you have a problem that since Q-learning is off-policy, what does the forward view look like? In Watkin’s $Q(\lambda)$, we considers two terminate cases:</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221014092301366.png" alt="image-20221014092301366" style="zoom:50%;" /></p>

<p>so that your last look-ahead either is</p>
<ul>
  <li>the actual terminate state</li>
  <li>your behavior policy picked an action that is non-greedy</li>
</ul>

<p>So that your backward view becomes</p>

\[\delta_{t} = R_{t+1} + \gamma \max_a Q(S_{t+1}, a) - Q(S_t, A_t)\]

<p>with eligibility trace</p>

\[E_t(s,a) = \begin{cases}
1 + \gamma \lambda E_{t-1}(s,a) &amp; \text{if }s=s_t, \text{ and } a\sim \epsilon\text{-greedy}(Q(s,a)) = \arg\max_{a} Q(s,a) \\
0, &amp; \text{if }a \neq \arg\max_{a} Q(s,a)\\
\gamma \lambda E_{t-1}(s,a) &amp; \text{otherwise, i.e. not at } s_t
\end{cases}\]

<p>with the upadte rule being</p>

\[Q(s,a) \gets Q(s,a) + \alpha E_t(s,a) \delta_t\]

<p>Hence the algorithm looks like</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221014092949925.png" alt="image-20221014092949925" style="zoom:50%;" /></p>

<p>so basically</p>
<ul>
  <li>if action I took w.r.t. to my current $\epsilon\text{-greedy}(Q)$ is the greedy action, then we do the normal eligibility trace update</li>
  <li>if not, then reset all to zero, because we reached a “dummy terminal state” which we defined by next move being not greedy action (by this definition, we can still have equivalence of backward and forward view)</li>
  <li>so again, my error is the Belmman Optimality Error using the $A^{*}$ from the greedy policy, but my behavior policy is to do $A’$ which is $\epsilon$-greedy. Hence this is off-policy as is Q-learning.</li>
</ul>

<blockquote>
  <p>Recall that all algorithms we see here <strong>needs a tabular value</strong>. Hence for large state space/state-action space, those algorithms are slow due to this loop for all state/state-action.</p>

  <p>This problem is solved by using <strong>function approximation</strong>: the only parameters are the parmeters of the functions which can spit out those values, which we will see in the next section.</p>
</blockquote>

<h2 id="unified-view-of-rl-solutions">Unified View of RL Solutions</h2>

<p>All the basics of RL algorithms can be put in one picture, and we can understand their differences/similarities</p>

<p><img src="/lectures/images/2022-12-15-ELEN6885_Reinforcement_Learning/image-20221014094057829.png" alt="image-20221014094057829" style="zoom:50%;" /></p>

<p>where</p>

<ul>
  <li>shallow means update only looks at 1 step, and deep is like MC (<strong>depth</strong>). This depth can be changed depending on n-step return and hence the $\lambda$ parameter weighting <strong>how many future</strong> you want to use.</li>
  <li>full backup means you look at all possible neighbors (<strong>width</strong>)</li>
  <li>in practice, all algorithms such as Q-learning and SARSA are based on sample backups, as the updates are faster and more efficient</li>
  <li>MCTS with truncation and approximations would be similar to the exhaustive search on top right</li>
</ul>]]></content><author><name></name></author><category term="2022@Columbia" /><summary type="html"><![CDATA[Reinforcement Learning]]></summary></entry><entry><title type="html">COMS4995 Deep Learning part1</title><link href="/lectures/2022@columbia/COMS4995_Deep_Learning_part1.html/" rel="alternate" type="text/html" title="COMS4995 Deep Learning part1" /><published>2022-12-08T00:00:00-05:00</published><updated>2022-12-08T00:00:00-05:00</updated><id>/lectures/2022@columbia/COMS4995_Deep_Learning_part1</id><content type="html" xml:base="/lectures/2022@columbia/COMS4995_Deep_Learning_part1.html/"><![CDATA[<h1 id="logistics-and-introduction">Logistics and Introduction</h1>

<p>Office hours</p>

<ul>
  <li>Lecturer, Iddo Drori (idrori@cs.columbia.edu), Tuesday 2:30pm, Zoom (Links to an external site.)</li>
  <li>CA, Anusha Misra, Wednesday 3:30-4:30pm, Zoom (Links to an external site.)</li>
  <li>CA, Vaibhav Goyal, Friday 3-4pm, Zoom (Links to an external site.)</li>
  <li>CA, Chaewon Park (cp3227@columbia.edu), Thursday 3:30-4:30PM, Zoom (Links to an external site.)</li>
  <li>CA, Vibhas Naik (vn2302@columbia.edu), Monday 11AM-12PM, Zoom</li>
</ul>

<p>Grades:</p>

<ul>
  <li>9 Exercises (30%, 3% each, <strong>individual</strong>, quizzes on Canvas)
    <ul>
      <li>quizzes will timed in some of the live lectures. So attend lectures!</li>
    </ul>
  </li>
  <li>Competition (30%, in pairs)</li>
  <li>Projects (40%, in teams of 3 students)</li>
</ul>

<p><strong>Projects Timeline</strong></p>

<ul>
  <li><em>Feb 18</em>: Form Teams and Signup</li>
  <li><em>Feb 25</em>: Select project</li>
  <li><em>Mar 10-11</em>: Project Kick-off and proposal meetings</li>
  <li><em>Mar 31 - Apr 1</em>: Milestone Meetings</li>
  <li><em>Apr 21-11</em>: Final Project Meetings</li>
  <li><em>Apr 28</em>: Project poster session</li>
</ul>

<h2 id="human-brain-deep-learning">Human Brain Deep Learning</h2>

<p>In comparison of sizes of number of neurons:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220118133414667.png" alt="image-20220118133414667" style="zoom: 67%;" /></p>

<p>where the left hand size are the deep learning models and the right hand size the human brain</p>

<ul>
  <li>however, it is also said that humans are “generalized”, where machines are “specialized”</li>
</ul>

<p>What happens</p>

<p>| <img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220118133924987.png" alt="image-20220118133924987" /> | <img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220118133935376.png" alt="image-20220118133935376" /> |
| ———————————————————— | ———————————————————— |</p>

<ul>
  <li>Type 2 process, your pupil will dilate (slow)</li>
</ul>

<p>Then, in AlphaGo, as well as other models, essentially it is doing:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220118134044859.png" alt="image-20220118134044859" style="zoom:50%;" /></p>

<p>where the</p>

<ul>
  <li>neural networks DNN are doing Type 1 processes</li>
  <li>tree search doing Type 2. (e.g. Monte Carlo Tree Search)</li>
</ul>

<h2 id="intro-transformers">Intro: Transformers</h2>

<p><a href="https://arxiv.org/abs/1706.03762">The paper</a> ‘Attention Is All You Need’ describes transformers and what is called a <strong>sequence-to-sequence architecture</strong>. Sequence-to-Sequence (or Seq2Seq) is a neural net that transforms a given sequence of elements, such as the  sequence of words in a sentence, into another sequence. (Well, this  might not surprise you considering the name.)</p>

<p>Seq2Seq models are particularly good at translation, where the sequence of words from one language is transformed into a sequence of different words in another language. A brief sketch of how it works would be:</p>

<ol>
  <li>Input (e.g. in English) passes through an encoder</li>
  <li>Encoder takes the input sequence and maps it into a higher dimensional space (imagine translating it to some imaginary language $A$)</li>
  <li>Decoder takes in the sequence in the imaginary language $A$ and turns it into an output sequence (e.g. French)</li>
</ol>

<p>Initially, neither the Encoder or the Decoder is very fluent in the imaginary language. To learn it, we train them (the model) on a lot of examples.</p>

<ul>
  <li>A very basic choice for the Encoder and the Decoder of the Seq2Seq model is a single LSTM for each of them.</li>
</ul>

<p>More details:</p>

<ul>
  <li>
    <p>https://medium.com/inside-machine-learning/what-is-a-transformer-d07dd1fbec04</p>
  </li>
  <li>
    <p>https://towardsdatascience.com/transformers-141e32e69591</p>
  </li>
</ul>

<h3 id="example-application">Example Application</h3>

<p>Consider the task of trying to use AI to solve math problems (e.g. written in English)</p>

<p>It turns out that using language models, it doesn’t work if you want to do those math questions. However, if you turn math questions into programs, then it worked!</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220118134738566.png" alt="image-20220118134738566" style="zoom: 33%;" /></p>

<p>Then, some example output of this using Codex would be:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220118134913140.png" alt="image-20220118134913140" /></p>

<p>notice that questions will need to be able to <strong>rephrased/transformed</strong> so that it is clearly a <strong>programming task</strong>, before putting into learning models.</p>

<ul>
  <li>this also means a full automation would be difficult</li>
</ul>

<h2 id="dl-timeline">DL Timeline</h2>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220118135630742.png" alt="image-20220118135630742" /></p>

<h2 id="supervised-deep-learning-example">Supervised Deep Learning Example</h2>

<p>Consider the following data, and we want to use a linear model to separate the data</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220118135900287.png" alt="image-20220118135900287" style="zoom:50%;" /></p>

<p>notice that by default, a linear transformer does not work. Hence we need to consider $x_1x_2$ as a feature</p>

<ul>
  <li>the idea is that we may want to consider ==feature extraction/processing== before putting them into the network</li>
</ul>

<p>However, what if we are given the following data:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220118140203431.png" alt="image-20220118140203431" /></p>

<p>where there doesn’t seem to be a clear/easy solution if we stick with a linear classifier even with some single layer feature transformation. As a result, in this case you will have to use a neural network:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220118140229608.png" alt="image-20220118140229608" /></p>

<p>the upshot is that we really need to consider <strong>extracting features and use linear classifiers</strong> before using deep neural network, which is necessary only in some cases like the one above.</p>

<h2 id="representations-sharing-weights">Representations Sharing Weights</h2>

<p>Some nowadays popular NN architectures are:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220118145207752.png" alt="image-20220118145207752" /></p>

<p>where notice that one common feature that made them successful is to <strong>share weights $W$ between layers/neurons</strong>:</p>

<ul>
  <li>
    <p>CNN share $W$ through space</p>
  </li>
  <li>
    <p>RNN share $W$ through time</p>
  </li>
  <li>
    <p>GNN share $W$ across neighborhoods</p>
  </li>
</ul>

<h1 id="forward-and-back-propagation">Forward and Back Propagation</h1>

<p>The basics of all the NN is a Neuron/Perceptron</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120131919835.png" alt="image-20220120131919835" style="zoom:50%;" /></p>

<p>where:</p>

<ol>
  <li>input is a single vector</li>
  <li>the $\Sigma$ represents we are summing the components of $\vec{x}$ ($w_0$ is a scalar representing bias)</li>
  <li>then the scalar is passed into an activation function $f$, often non-linear</li>
</ol>

<p>Now, remember that our aim is to ==minimize loss== with a given training label:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120132007260.png" alt="image-20220120132007260" style="zoom:50%;" /></p>

<p>where $\mathcal{L}$ is a loss function of our choice:</p>

<ul>
  <li>this is summed over all the training $m$ samples</li>
  <li>$w_0$ will represent the bias, often/later absorbed into $W$</li>
  <li>our objective is to minimize this $J$</li>
</ul>

<blockquote>
  <p><em>Note</em></p>

  <p>Remember that for any Learning task</p>

  <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120203244526.png" alt="image-20220120203244526" style="zoom:80%;" /></p>

  <p>Before the step of feature extraction and selection, you may want to pay careful attention on how to do <strong>feature extraction/selection</strong> to improve your model.</p>
</blockquote>

<h2 id="neural-networks">Neural Networks</h2>

<p>The simplest component is a Neuron/Perceptron, whose mathematical model was basically finding:</p>

\[g(\vec{x}) = w^T\vec{x}+w_0 = 0\]

<p>and doing the following for classification:</p>

\[f(x):= 
\begin{cases}
+1 &amp; \text{if } g(x) \ge 0\\
-1 &amp; \text{if } g(x) &lt; 0
\end{cases} \quad = \text{sign}(\vec{w}^T\vec{x}+w_0)\]

<p>However, since the output is $\text{sign}$ function which is not differentiable, in Neural Network we will use $\sigma$ sigmoid instead. This also means that, instead of using Perceptron Algorithm to learn, we can use <strong>backpropagation</strong> (basically a taking derivatives using chain rule backwards).</p>

<p>That said, a ==Neural Network== basically involves connecting a number of <strong>neurons</strong>:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120205520527.png" alt="image-20220120205520527" style="zoom: 33%;" /></p>

<p>where since at $\Sigma$ we are just doing $\vec{w}^T \vec{x}$, which is a linear combination, we used the $\Sigma$ symbol.</p>

<p>Then, combining those neurons in a <strong>fully connected network</strong>:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120132436067.png" alt="image-20220120132436067" style="zoom:67%;" /></p>

<p>Conceptually, since each neuron/layer $l$ basically does two things, from the book:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120204213314.png" alt="image-20220120204213314" /></p>

<p>Hence each layer can be expressed as:</p>

\[z^l = W^l \vec{a}^{l-1},\quad \vec{a}^l = f(z^l)\]

<p>where we assumed a single data point input (i.e. a vector instead of a matrix), but note that:</p>

<ul>
  <li>
    <p>$Z^l$ is the linear transformation, $a^l$ is the $\sigma$ applied to each element if activation is $\sigma$.</p>

    <p>Therefore, since we are just doing a bunch of linear transformation (stretchy) and passing to a sigmoid (squash):</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Start</th>
          <th> </th>
          <th> </th>
          <th> </th>
          <th> </th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120204442993.png" alt="image-20220120204442993" /></td>
          <td><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120204456452.png" alt="image-20220120204456452" /></td>
          <td><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120204624982.png" alt="image-20220120204624982" /></td>
          <td><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120205207727.png" alt="image-20220120205207727" /></td>
          <td><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120205247722.png" alt="image-20220120205247722" /></td>
        </tr>
      </tbody>
    </table>

    <p>where:</p>

    <ul>
      <li>at the start, the red will be labeled as $+1$, and blue $-1$ in a space perpendicular to the graph</li>
      <li>the last one looks separable.</li>
    </ul>
  </li>
  <li>
    <p>This can be easily gerealized when you have $n$ data points, so that:</p>

\[Z^l = (W^{l})^T A^{l-1},\quad A^l = f(Z^l)\]

    <p>basically you have now <strong>matrices</strong> as input and output, weights are still the same. To be more precise, a layer then looks like</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120210731448.png" alt="image-20220120210731448" style="zoom:50%;" /></p>

    <p>so that you are doing $z^l = (W^{l})^T a^{l-1}+W_0$, if again, we have a single data point input of $m$ dimension. Yet often we would have absorbed the $W_0$ by lifting, so that we have:</p>

\[\vec{a} = \begin{bmatrix}
a_1\\
\vdots\\
a_m\\
1
\end{bmatrix} \in \mathbb{R}^{m+1}, \quad W^T \leftarrow [W^T, W_0] \in \mathbb{R}^{n \times (m+1)}\]
  </li>
</ul>

<p>In general, if there are $n_l$ neurons in the $l$-th layer, then at the $l$-th layer:</p>

\[A^{l-1} = \text{input} \in \mathbb{R}^{(n_{l-1}+1)) \times m},\quad  (W^l)^T \in \mathbb{R}^{n_l \times (n_{l-1} + 1)}\]

<p>where $n_0 = m$ is the dimension of the data, and we absorbed in the bias.</p>

<ul>
  <li>a quick check is to make sure that $Z^l = (W^l)^T A^{l-1}$ works</li>
  <li>a visualization is that data points are now aligned <strong>vertically</strong> in the matrix</li>
</ul>

<h3 id="neuron-layer">Neuron Layer</h3>

<p>To make it easier to digest <strong>mathematically</strong>, we can think of ==each layer as a single operation==. Graphically, we convert:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120132436067.png" alt="image-20220120132436067" style="zoom: 50%;" /></p>

<p>To this, simply three “neurons” (excluding the input):</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120212259363.png" alt="image-20220120212259363" style="zoom: 33%;" /></p>

<p>where notice that:</p>

<ul>
  <li>
    <p>$F(x) = f(W^Tx)$ is a shorthand for notating the entire linear and nonlinear operation. This would be <em>nonlinear</em>.</p>
  </li>
  <li>
    <p>therefore, each layer $l$ basically just does:</p>

\[F^l(A^{l-1}) = A^l\]

    <p>outputting $A^l$. Hence we can do a “Markov chain” view of the NN as just doing:</p>

\[F(x) = F^3 (F^2 (F^1(x)))\]
  </li>
  <li>
    <p>if $f$ are identities, then the output is just a linear transformation since $F$ would be <em>linear</em>.</p>
  </li>
</ul>

<hr />

<p><em>For Example</em>:</p>

<p>Consider the following NN. For brevity, I only cover the first layer:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120212538132.png" alt="image-20220120212538132" /></p>

<p>First we do the pre-activation $z^1$ for the input of a single data point of dimension $3$:</p>

\[z^1 = (W^1)^T a^{0} = \begin{bmatrix}
w_{11} &amp; w_{21} &amp; w_{31}\\
w_{12} &amp; w_{22} &amp; w_{32} \\
\end{bmatrix}\begin{bmatrix}
x_{1}\\
x_2\\
x_3
\end{bmatrix} = \begin{bmatrix}
z_{1}^1\\
z_2^1\\
\end{bmatrix}\]

<p>where bias would be ignored for now (otherwise there will be one more column of $[b_1, b_2^T$ for $(W^1)^T$ and a row of $1$ for $a^0$. Then the activation does:</p>

\[a^1 =  \begin{bmatrix}
f(z_{1}^1)\\
f(z_{2}^1)
\end{bmatrix}= \begin{bmatrix}
a_1^1\\
a_2^1
\end{bmatrix}\]

<p>which will be input of the second layer. Eventually:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120134137821.png" alt="image-20220120134137821" style="zoom: 50%;" /></p>

<p>the last part does not have an activation since we are doing a regression instead of classification.</p>

<h3 id="activation-functions">Activation Functions</h3>

<p>The activation function always does a mapping from $f: \mathbb{R} \to \mathbb{R}$. Hence they are applied element-wise.</p>

<p>Common examples of activation functions include:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120213419561.png" alt="image-20220120213419561" style="zoom:50%;" /></p>

<p>where:</p>

<ul>
  <li>
    <p>a difference between Swish and ReLU is that Switch has a defined derivative at $z=0$</p>
  </li>
  <li>
    <p>In the case of ReLU, consider an input space of dimension $2$. Now fold it along an axis, returning two separately smooth planes intersecting at a “fold”. At this point, one of them is flat, and the other is angled at $45$ degrees. Since the input dimension is $2$, we will be folding again at the y-axis.</p>

    <ul>
      <li>By repeating this to create many ‘folds’, we can use the ReLU function to generate an “n-fold hyperplane” from the smooth 2D input plane.</li>
    </ul>

    <p>Therefore, combined with linear transformation, the folds will be slanted:</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120220614045.png" alt="image-20220120220614045" style="zoom:67%;" /></p>

    <p>in the end we just have a sharded space from many folds.</p>
  </li>
  <li>
    <p>Swish: notice that $\lim_{\beta \to \infty}$ Swish becomes ReLU</p>
  </li>
</ul>

<p>Their derivatives are important to know since we will use them when taking derivatives during backpropagation:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120132903520.png" alt="image-20220120132903520" style="zoom:50%;" /></p>

<p>where notice that</p>

<ul>
  <li>Sigmoid: $\sigma’$ depends on $\sigma$ means we would have ==already computed this== in the forward pass. This will save computational effort!</li>
  <li>ReLU: the simplest derivative among all. Saves computational effort.</li>
</ul>

<p>Last but not least, for multiclass classification, often the <strong>last layer</strong> uses SoftMax, which maps $\mathbb{R}^d \to \mathbb{R}^d$. This is often used <strong>only for the last layer if we are doing multiclass</strong>:</p>

\[g^L(z^L)_i = \frac{e^{z_i^L}}{\sum_{j=1}^d e^{z_{j}^L}}\]

<p>where:</p>

<ul>
  <li>
    <p>$z_i^L$ basically is the pre-activatoin on the last layer $l$</p>
  </li>
  <li>
    <p>this is a generalizatoin of logistic regression because $\sum_i^d g(z)_i = 1$, i.e. elements sum up to 1.</p>
  </li>
  <li>
    <p>also pretty easy to implemnet:</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">lambda</span> <span class="n">z</span><span class="p">:</span> <span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="n">z</span><span class="p">)</span> <span class="o">/</span> <span class="n">np</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="n">z</span><span class="p">))</span>
</code></pre></div>    </div>
  </li>
</ul>

<p>yet since they add up to 1, they can also be seen as a generalization of logistic regressoin.</p>

<h3 id="loss-functions">Loss Functions</h3>

<p>Now we have several choice of $f$, our final objective of minimize is:</p>

\[\frac{1}{n} \sum_{i=1}^n \mathcal{L}(y^i, \hat{y}^i)\]

<p>for $\hat{y}^i$ is basically the $F^3 (F^2 (F^1(\vec{x}^i)))$, for example. Therefore, a couple of different choices for $\mathcal{L}$ function:</p>

<ul>
  <li>
    <p>Mean Squared Error</p>

\[\mathcal{L}(y^i, \hat{y}^i) = (y^i - \hat{y}^i)^2\]
  </li>
  <li>
    <p>Other power $p$ error:</p>

\[\mathcal{L}(y^i, \hat{y}^i) = |y^i - \hat{y}^i|^p\]

    <p>Graphically:</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120214540633.png" alt="image-20220120214540633" style="zoom: 80%;" /></p>
  </li>
  <li>
    <p>Logistic Regression Loss (Cross-Entropy Loss)</p>

\[\mathcal{L}(y^i, \hat{y}^i) = -y^i \log(\hat{y}^i) - (1-y^i) \log (1-\hat{y}^i)\]

    <p>If this loss is used, the objective $J$ is convex in $W$.</p>
  </li>
  <li>
    <p>There is also a Softmax version/multiclass version of the logistic loss. Checkout the book for more info.</p>
  </li>
</ul>

<blockquote>
  <p><strong>Note</strong></p>

  <p>In general, the loss function is <strong>not</strong> convex with respect to $W$, therefore solving:</p>

\[\min_W \frac{1}{n} \sum_{i=1}^n \mathcal{L}(y^i, \hat{y}^i)=\min_W \frac{1}{n} \sum_{i=1}^n \mathcal{L}(y^i, F(x^i, W))\]

  <p>does not guarantee a global minimum. We therefore <strong>use gradient descent</strong> to find a <strong>local minimum</strong>.</p>
</blockquote>

<h3 id="regularization">Regularization</h3>

<p>What happens if we add regularization, such that we consider:</p>

\[\min_W \frac{1}{n} \sum_{i=1}^n \mathcal{L}(y^i, F(x^i, W)) + R(W)\]

<p>In general, this will more or less force values inside $W$ to be small.</p>

<p>Now, recall that $W$ basically does the linear part/composes the pre-activation before putting into $f$:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120215157181.png" alt="image-20220120215157181" style="zoom:50%;" /></p>

<p>So we if have $f$ being a function such as sigmoid, it means that pre-activation would be most at the blue part:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120215433180.png" alt="image-20220120215433180" style="zoom: 80%;" /></p>

<p>where notice that:</p>

<ul>
  <li>adding regularization will likely shrink the $W$, which means that $Z^l$ would be small. Hence, $A^l=f^l(Z^l)$  would likely be ==linear== (the green part)!</li>
  <li>This means our activation being less complex, i.e. $f$ becomes almost a <strong>linear</strong> operation. Intuitively, the more we regularize, the less complicated our model</li>
</ul>

<h2 id="forward-propagation">Forward Propagation</h2>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120134756312.png" alt="image-20220120134756312" style="zoom: 80%;" /></p>

<p>where if we use the previous example:</p>

<ul>
  <li>
    <p>e.g. $L=3$ since we have 3 layers</p>
  </li>
  <li>
    <p>$T$ is the number of iterations we want to perform (e.g. number of epochs if we are doing over the entire batch)</p>
  </li>
  <li>
    <p>the ==initialization must be randomized==, so that the updates for new $W$ will not be identical/same (when doing back prop)</p>

    <ul>
      <li>
        <p>If we set all the weights to be the same, then all the the neurons in the same layer <strong>performs the same calculation</strong>, there by making the whole deep net useless. If the weights are zero, complexity of the whole deep net would be the same as that of a single neuron.</p>

        <p>E.g.</p>

\[z^1 = (W^1)^T a^{0} = \begin{bmatrix}
w_{11} &amp; w_{21} &amp; w_{31}\\
w_{12} &amp; w_{22} &amp; w_{32} \\
\end{bmatrix}\begin{bmatrix}
x_{1}\\
x_2\\
x_3
\end{bmatrix} = \begin{bmatrix}
z_{1}^1\\
z_2^1\\
\end{bmatrix}\]

        <p>will have $z_1^1 = z_2^1$ and updates within the same layer will be identical.</p>
      </li>
    </ul>
  </li>
  <li>
    <p>we are picking only one sample from the set because we will be doing <strong>stochastic gradient descent</strong> with the backprop algorithm. This is commonly used when datasets are large so we don’t want to do the entire dataset per step.</p>
  </li>
</ul>

<h2 id="back-propagation">Back Propagation</h2>

<p>The aim of this algorithm is, for each $W^l$ at layer $l$ (assumed bias is absorbed):</p>

\[W^l := W^l - \alpha \frac{\partial \mathcal{L}}{\partial \mathcal{W^l}}\]

<p>basically doing a gradient descent to minimize our loss:</p>

<ul>
  <li>$\alpha$ would be the learning step size, which we can tune as a parameter</li>
</ul>

<p>Now, to compute the derivative, instead of <strong>doing it in a forward pass</strong> so that we need to do:</p>

<ol>
  <li>compute $\partial \mathcal{L}/\partial \mathcal{W^1}$</li>
  <li>then compute $\partial \mathcal{L}/\partial \mathcal{W^2}$</li>
  <li>then compute $\partial \mathcal{L}/\partial \mathcal{W^3}$</li>
</ol>

<p>if we have 3 layers. However, it turns out we can do ==achieve all the calculations== if we do it in ==a backward pass==:</p>

<ol>
  <li>
    <p>Notice that:</p>

\[\frac{\partial \mathcal{L}}{\partial \mathcal{W^l}}=\frac{\partial \mathcal{L}}{\partial \mathcal{A^l}}\frac{\partial \mathcal{A^l}}{\partial \mathcal{Z^l}}\frac{\partial \mathcal{Z^l}}{\partial \mathcal{W^l}} = \frac{\partial \mathcal{L}}{\partial \mathcal{Z^l}}\frac{\partial \mathcal{Z^l}}{\partial \mathcal{W^l}} = \frac{\partial \mathcal{L}}{\partial \mathcal{Z^l}}(A^{l-1})^T\]

    <p>since $Z^l = (W^l)^TA^{l-1}$. notice that $A^{l-1}$ is already computed in the forward pass. Graphically, if $l=2$, we are here:</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120225335839.png" alt="image-20220120225335839" /></p>

    <p>note that we basically are doing derivative of a scalar w.r.t. a vector, so ==Jacobians== would be the brute force way:</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120231135345.png" alt="image-20220120231135345" /></p>

    <p>yet the point is that we can save much effort using chain rule.</p>

    <ul>
      <li>if you have a $f:\mathbb{R}^n \to \mathbb{R}^m$, then the Jacobian will be dimension $\mathbb{R}^{m \times n}$. You can image each row doing $[df_i/dx_1,…,df_i/dx_n]$.</li>
    </ul>
  </li>
  <li>
    <p>Then, we need:</p>

\[\frac{\partial \mathcal{L}}{\partial \mathcal{Z^l}} 
= \frac{\partial \mathcal{L}}{\partial \mathcal{A^l}}\frac{\partial \mathcal{A^l}}{\partial \mathcal{Z^l}}
=\frac{\partial \mathcal{L}}{\partial \mathcal{A^l}}\frac{\partial \mathcal{f(Z^l)}}{\partial \mathcal{Z^l}}\]

    <p>since we know $A^l=f(Z^l)$. If we have sigmoid, then we know $\sigma’(x) = \sigma(x)\cdot(1- \sigma(x))$.</p>

    <ul>
      <li>
        <p>Hence each element such as</p>

\[\frac{\partial \mathcal{L}}{\partial \mathcal{Z^l_{11}}} 
= \frac{\partial \mathcal{L}}{\partial \mathcal{A^l}}\frac{\partial \mathcal{A^l}}{\partial \mathcal{Z^l_{11}}}
=\frac{\partial \mathcal{L}}{\partial \mathcal{A^l}}\frac{\partial \mathcal{\sigma(Z^l_{11})}}{\partial \mathcal{Z^l_{11}}}
=\sigma(Z_{11}^l)\cdot(1-\sigma(Z_{11}^l))\frac{\partial \mathcal{L}}{\partial \mathcal{A^l}}
=A_{11}^l\cdot(1-A_{11}^l)\frac{\partial \mathcal{L}}{\partial \mathcal{A^l}}\]

        <p>so then computing for the derivative for the entire matrix, means just doing the above for each element</p>
      </li>
      <li>
        <p>so the ==one thing we actually have to compute== would be:</p>

\[\frac{\partial \mathcal{L}}{\partial \mathcal{A^l}}\]

        <p>though we know $\partial Z^l / \partial A^{l-1}=W^l$, we don’t know the loss function. However, it turns out we only needed to compute this for ==one (the last) layer== (see next step)</p>
      </li>
    </ul>
  </li>
  <li>
    <p>Lastly, the real shortcut in back propagation is that:</p>

\[\frac{\partial \mathcal{L}}{\partial \mathcal{A^{l-1}}}
=\frac{\partial \mathcal{L}}{\partial \mathcal{Z^{l}}}\frac{\partial \mathcal{Z^l}}{\partial \mathcal{A^{l-1}}}
=W^l\frac{\partial \mathcal{L}}{\partial \mathcal{Z^{l}}}\]

    <p>hence, the ==other thing we have to compute is==:</p>

\[\frac{\partial \mathcal{L}}{\partial \mathcal{Z^{l}}}\]

    <p>and that from this formula, knowing $\partial L / \partial Z^{l}$ means we can compute $\partial L / \partial A^{l-1}$ of the <strong>previous layer</strong>!</p>
  </li>
</ol>

<blockquote>
  <p><strong>In summary</strong></p>

  <p>To compute</p>

\[\frac{\partial \mathcal{L}}{\partial \mathcal{W^l}}= \frac{\partial \mathcal{L}}{\partial \mathcal{Z^l}}(A^{l-1})^T\]

  <p>we needed to know</p>

\[\frac{\partial \mathcal{L}}{\partial \mathcal{Z^l}} 
=\frac{\partial \mathcal{L}}{\partial \mathcal{A^l}}\frac{\partial \mathcal{f(Z^l)}}{\partial \mathcal{Z^l}}\]

  <ul>
    <li>notice that this computation is <strong>local</strong>: it only involves stuff from layer $l$</li>
  </ul>

  <p>which requires</p>

\[\frac{\partial \mathcal{L}}{\partial \mathcal{A^l}}\]

  <p>which can be done in an efficient way once we are done with a layer:</p>

\[\frac{\partial \mathcal{L}}{\partial \mathcal{A^{l-1}}}
=\frac{\partial \mathcal{L}}{\partial \mathcal{Z^{l}}}\frac{\partial \mathcal{Z^l}}{\partial \mathcal{A^{l-1}}}
=W^l\frac{\partial \mathcal{L}}{\partial \mathcal{Z^{l}}}\]

</blockquote>

<p>Therefore, the back propagation algorithm looks like:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120232037290.png" alt="image-20220120232037290" style="zoom: 67%;" /></p>

<p>where notice that:</p>

<ul>
  <li>
    <p>we have an “extra” step here because this assumes that the <em>biases are not absorbed</em></p>
  </li>
  <li>the three main steps are outlined in the summary mentioned above. Due to dependency, they are done in reverse order</li>
  <li>the purple line shows the efficiency, that $\partial L / \partial A^{l}$ can be  computed from previous result with layer $l+1$. The only one what requires computation is the first iteration/last layer.</li>
  <li>this is basically the entire model! i.e. back propagation does the <strong>training/update</strong> of the parameters</li>
</ul>

<hr />

<p><em>For Example</em></p>

<p>In the first iteration, if we don’t care about losses yet, we need to figure out the second step on $\partial L / \partial Z^{l}$:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120232507028.png" alt="image-20220120232507028" style="zoom: 67%;" /></p>

<p>which we are doing element-wise for clarity. This can be easily generalized and placed into a vector:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120232742923.png" alt="image-20220120232742923" style="zoom:67%;" /></p>

<ul>
  <li>
    <p>then we can compute easily:</p>

\[\frac{\partial \mathcal{L}}{\partial \mathcal{W^l}}= \frac{\partial \mathcal{L}}{\partial \mathcal{Z^l}}(A^{l-1})^T\]
  </li>
</ul>

<p>In the second iteration, we notice that we can reuse the results above:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120232935679.png" alt="image-20220120232935679" style="zoom:67%;" /></p>

<ul>
  <li>which then can compute the $$</li>
</ul>

<p>Lastly:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120233035309.png" alt="image-20220120233035309" style="zoom:67%;" /></p>

<p>which again reused the result from its higher up layer.</p>

<blockquote>
  <p><strong>Note</strong></p>

  <p>If we take derivatives in the forward pass, we get only derivative of one variable. If we do it in the backward pass, we do it once and get ==all the derivatives== with little effort</p>

  <p>A big advantage of back propagation is also utilizing the fact that we are doing <strong>local</strong> computation (and passing on the result)</p>

  <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120140038638.png" alt="image-20220120140038638" style="zoom:50%;" /></p>

  <p>which means backpropagation is a special case of <strong>differential programming</strong>, which can be optimized.</p>
</blockquote>

<h2 id="weight-initialization">Weight Initialization</h2>

<p>Basically a uniform distribution for weights and zeros for bias</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127141900682.png" style="zoom:50%;" /></p>

<p>Program</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">l</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">num_layers</span><span class="p">):</span>
    <span class="c1"># glorot init
</span>    <span class="n">epa</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="mf">2.0</span> <span class="o">/</span> <span class="n">layer_dimensions</span><span class="p">[</span><span class="n">l</span><span class="p">]</span> <span class="o">+</span> <span class="n">layer_dimensions</span><span class="p">[</span><span class="n">l</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
    <span class="bp">self</span><span class="p">.</span><span class="n">parameters</span><span class="p">[</span><span class="s">"W"</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">l</span><span class="p">)]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">rand</span><span class="p">(</span><span class="n">layer_dimensions</span><span class="p">[</span><span class="n">l</span><span class="p">],</span> <span class="n">layer_dimensions</span><span class="p">[</span><span class="n">l</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span> <span class="o">*</span> <span class="n">eps</span>
    <span class="bp">self</span><span class="p">.</span><span class="n">parameters</span><span class="p">[</span><span class="s">"b"</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">l</span><span class="p">)]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">zeros</span><span class="p">((</span><span class="n">layer_dimensions</span><span class="p">[</span><span class="n">l</span><span class="p">],</span> <span class="mi">1</span><span class="p">))</span> <span class="o">+</span> <span class="mf">0.01</span>
</code></pre></div></div>

<h2 id="problems-with-nn">Problems with NN</h2>

<p>Recall that our objective is to minimize:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220120233655595.png" alt="image-20220120233655595" style="zoom: 50%;" /></p>

<p>This implies the following problem:</p>

<ol>
  <li>What if $n$ is large? Since our loss sums over all $n$ data points, it would take a long time to compute
    <ul>
      <li><strong>Solution</strong>: Stochastic Gradient Descent</li>
    </ul>
  </li>
  <li>Computing derivatives/doing gradient descent of large network takes time
    <ul>
      <li><strong>Solution</strong>: Backpropagation</li>
    </ul>
  </li>
  <li>For each time step/update, the gradient would be <em>perpendicular</em> to the previous one, forming a slow zig-zag pattern (slow to converge).
    <ul>
      <li><strong>Solution</strong>: Adaptive gradient Descent</li>
    </ul>
  </li>
</ol>

<h2 id="example-implementation">Example Implementation</h2>

<p>Consider the implementing the following architecture</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/neural_network_practice.png" style="zoom: 23%;" /></p>

<p>Then we would have:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Implement the forward pass
</span><span class="k">def</span> <span class="nf">forward_propagation</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">weights</span><span class="p">):</span>
    <span class="n">Z1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">weights</span><span class="p">[</span><span class="s">'W1'</span><span class="p">].</span><span class="n">T</span><span class="p">)</span>  <span class="o">+</span> <span class="n">weights</span><span class="p">[</span><span class="s">'b1'</span><span class="p">]</span>
    <span class="n">H</span> <span class="o">=</span> <span class="n">sigmoid</span><span class="p">(</span><span class="n">Z1</span><span class="p">)</span>

    <span class="n">Z2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="n">H</span><span class="p">,</span> <span class="n">weights</span><span class="p">[</span><span class="s">'W2'</span><span class="p">].</span><span class="n">T</span> <span class="o">+</span> <span class="n">weights</span><span class="p">[</span><span class="s">'b2'</span><span class="p">])</span>
    <span class="n">Y</span> <span class="o">=</span> <span class="n">sigmoid</span><span class="p">(</span><span class="n">Z2</span><span class="p">)</span>    
    <span class="c1"># Z1 -&gt; output of the hidden layer before applying activation
</span>    <span class="c1"># H -&gt; output of the  hidden layer after applying activation
</span>    <span class="c1"># Z2 -&gt; output of the final layer before applying activation
</span>    <span class="c1"># Y -&gt; output of the final layer after applying activation
</span>    <span class="k">return</span> <span class="n">Y</span><span class="p">,</span> <span class="n">Z2</span><span class="p">,</span> <span class="n">H</span><span class="p">,</span> <span class="n">Z1</span>
</code></pre></div></div>

<p>And backward:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Implement the backward pass
# Y_T are the ground truth labels
</span><span class="k">def</span> <span class="nf">back_propagation</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">Y_T</span><span class="p">,</span> <span class="n">weights</span><span class="p">):</span>
    <span class="n">N_points</span> <span class="o">=</span> <span class="n">X</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
    
    <span class="c1"># forward propagation
</span>    <span class="n">Y</span><span class="p">,</span> <span class="n">Z2</span><span class="p">,</span> <span class="n">H</span><span class="p">,</span> <span class="n">Z1</span> <span class="o">=</span> <span class="n">forward_propagation</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">weights</span><span class="p">)</span>
    <span class="n">L</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="o">/</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="n">N_points</span><span class="p">))</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">square</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">Y</span> <span class="o">-</span> <span class="n">Y_T</span><span class="p">))</span>
    
    <span class="c1"># back propagation
</span>    <span class="n">dLdY</span> <span class="o">=</span> <span class="mi">1</span><span class="o">/</span><span class="n">N_points</span> <span class="o">*</span> <span class="p">(</span><span class="n">Y</span> <span class="o">-</span> <span class="n">Y_T</span><span class="p">)</span>
    <span class="c1"># dLdZ2 = dLdA2 * dA2dZ2 = dLdA2 * sig(Z2)*[1-sig(1-Z2)] # broadcast multiply
</span>    <span class="n">dLdZ2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">multiply</span><span class="p">(</span><span class="n">dLdY</span><span class="p">,</span> <span class="p">(</span><span class="n">sigmoid</span><span class="p">(</span><span class="n">Z2</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="n">sigmoid</span><span class="p">(</span><span class="n">Z2</span><span class="p">))))</span> 
    <span class="c1"># dLW2 = dLdA2 * dA2dZ2 * dZ2dW2 = dLdZ2 * dZ2dW2 = dLdZ2 * A1 # matrix multiply
</span>    <span class="n">dLdW2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="n">H</span><span class="p">.</span><span class="n">T</span><span class="p">,</span> <span class="n">dLdZ2</span><span class="p">)</span> 

     <span class="c1"># dLb2 = dLdA2 * dA2dZ2 * dZ2db2 = dLdZ2 * dZ2db2 = dLdZ2 * 1
</span>    <span class="n">dLdb2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="n">dLdZ2</span><span class="p">.</span><span class="n">T</span><span class="p">,</span> <span class="n">np</span><span class="p">.</span><span class="n">ones</span><span class="p">(</span><span class="n">N_points</span><span class="p">))</span>
    
    <span class="c1"># dLdA1 = dLdA2 * dA2dZ2 * dZ2dA1 = dLdZ2 * dZ2dA1 = dLdZ2 * W2
</span>    <span class="n">dLdA1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="n">dLdZ2</span><span class="p">,</span> <span class="n">weights</span><span class="p">[</span><span class="s">'W2'</span><span class="p">])</span> 
    <span class="c1"># dLdZ1 = dLdA1 * dA1dZ1 = dLdA1 * sig(A1) * [1-sig(A1)] # broadcast multiply
</span>    <span class="n">dLdZ1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">multiply</span><span class="p">(</span><span class="n">dLdA1</span><span class="p">,</span> <span class="n">sigmoid</span><span class="p">(</span><span class="n">H</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="n">sigmoid</span><span class="p">(</span><span class="n">H</span><span class="p">)))</span>
     <span class="c1"># dLW1 = dLdA1 * dA2dZ1 * dZ2dW1 = dLdZ1 * dZ2dW1 = dLdZ1 * A0 # matrix multiply
</span>    <span class="n">dLdW1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="n">X</span><span class="p">.</span><span class="n">T</span><span class="p">,</span> <span class="n">dLdZ1</span><span class="p">)</span> 

    <span class="n">dLdb1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="n">dLdZ1</span><span class="p">.</span><span class="n">T</span><span class="p">,</span> <span class="n">np</span><span class="p">.</span><span class="n">ones</span><span class="p">(</span><span class="n">N_points</span><span class="p">))</span>
    
    <span class="n">gradients</span> <span class="o">=</span> <span class="p">{</span>
        <span class="s">'W1'</span><span class="p">:</span> <span class="n">dLdW1</span><span class="p">,</span>
        <span class="s">'b1'</span><span class="p">:</span> <span class="n">dLdb1</span><span class="p">,</span>
        <span class="s">'W2'</span><span class="p">:</span> <span class="n">dLdW2</span><span class="p">,</span>
        <span class="s">'b2'</span><span class="p">:</span> <span class="n">dLdb2</span><span class="p">,</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">gradients</span><span class="p">,</span> <span class="n">L</span>
</code></pre></div></div>

<h1 id="optimization">Optimization</h1>

<p>In practice, it is important to have the some understanding of the optimizer we will use (e.g. how to gradient descent), because they perform differently in different scenarios.</p>

<p>The ones we use in practice the ==different algorithms to find minima== can be separated into the following three classes:</p>

<ul>
  <li>First order methods.
    <ul>
      <li>Gradient Descent (Stochastic, Mini-Batch, Adaptive)</li>
      <li>Momentum Related (Adagrad, Adam, Hypergradient Descent)</li>
    </ul>
  </li>
  <li>Second order methods
    <ul>
      <li>Newton’s Method (<em>generally faster than gradient descent</em> because it uses Hessian/is higher order)</li>
      <li>Quasi Newton’s Method (SR1 update, DFP, BFGS)</li>
    </ul>
  </li>
  <li>Evolution Strategies
    <ul>
      <li>Cross-Entropy Method (uses cluster of initial points as initial conditions, then descent as a group)</li>
      <li>Distributed Evolution Strategies, Neural Evolution Strategies</li>
      <li>Covariance Matrix Adaptation</li>
    </ul>
  </li>
</ul>

<h2 id="overview">Overview</h2>

<p>Again, our goal of learning this is to understand, given an optimization problem of finding best $\theta^*$:</p>

\[\theta^* = \arg\min_\theta J(\theta)\]

<p>where $J$ would be the total loss we are dealing with.</p>

<ul>
  <li>
    <p>an example for $J$ would be</p>

\[J(\theta)  = \left( \frac{1}{n} \sum_{i=1}^n \mathcal{L}(y^{(i)}, h(x^{(i)}; \theta)) \right) + \lambda R(\theta)\]

    <p>where we included a regularization term $R(\theta)$ here as well.</p>
  </li>
</ul>

<p>First, let us recall that the basic gradient descent algorithm generally looks like</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125132905495.png" alt="image-20220125132905495" /></p>

<p>where $\eta$ would be tunable:</p>

<ul>
  <li>its aim is to obvious find the $\theta^*$, but it might get <strong>stuck at local minima</strong>
    <ul>
      <li>in that case, we need to add some noise, or use stochastic gradient descent</li>
    </ul>
  </li>
  <li>for large NN, finding $dJ/dW$ takes effort.
    <ul>
      <li>this is optimized with back-propagation algorithm</li>
    </ul>
  </li>
  <li>but obviously this is not the only way to do it, as you shall see soon</li>
</ul>

<blockquote>
  <p><strong>Convex Optimization</strong></p>

  <p>It would be so little pain if $J$ is convex w.r.t. $W$, so that any <strong>local minimum</strong> is also a <strong>global minimum</strong>.</p>

  <ul>
    <li>but often in NN, $J$ is not a convex function of $W$, so we do have the problem of stopping at local minimas.</li>
  </ul>

  <p>For a problem to be a convex optimization (with constraints):</p>

  <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20211014155124853.png" alt="image-20211014155124853" /></p>

  <p>this problem is a convex optimization ==IFF both holds==:</p>

  <ul>
    <li>the <strong>feasible</strong> region of output (due to the constraint) is a <strong>convex set</strong></li>
    <li>the <strong>objective</strong> function $f(\vec{x})$ is a <strong>convex function</strong></li>
  </ul>

</blockquote>

<p>But in reality, this is what are we are facing:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125133004782.png" alt="image-20220125133004782" style="zoom: 50%;" /></p>

<p>where recall that:</p>

<ul>
  <li>Linear programs: objective function is linear (affine), and constraints are also linear (affine)
    <ul>
      <li>so that the feasible region is a convex set (because the feasible region is always a polygon = convex set)</li>
    </ul>
  </li>
  <li>Quadratic program: objective function is quadratic, and constraints are linear (affine)
    <ul>
      <li>if constraints are quadratic, then the feasible region might not be a convex set.</li>
    </ul>
  </li>
  <li>Conic Program: where constraints are a conic shaped region</li>
  <li>Other common solvers include: <code class="language-plaintext highlighter-rouge">CVX</code>, <code class="language-plaintext highlighter-rouge">SeDuMi</code>, <code class="language-plaintext highlighter-rouge">C-SALSA</code>,</li>
</ul>

<hr />

<p><em>For Example</em>:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125133237058.png" alt="image-20220125133237058" style="zoom:50%;" /></p>

<p>where:</p>

<ul>
  <li>LHS shows starting with different initial points yields different result, i.e. some ended up at local minimas</li>
  <li>RHS shows starting from different initial points yields the same result, i.e. global minimum.</li>
</ul>

<h2 id="derivative-and-gradient">Derivative and Gradient</h2>

<p>Most of the cases we will be dealing with $f(\vec{x})$ where $\vec{x}$ is multi-dimensional. For instance $L(W)$ with loss being dependent on weights. Then, an obvious usage of this would be in gradient descent:</p>

\[w_{t+1} = w_t - \alpha_t \nabla f(w_t)\]

<p>for us using $\alpha_t$ because it can be changing (e.g. in adaptive methods)</p>

<blockquote>
  <p><em>Recall</em></p>

\[\nabla f(\vec{x}) = (\frac{\partial f}{\partial x_1}, \frac{\partial f}{\partial x_2} , ..., \frac{\partial f}{\partial x_n}  )\]

  <p>being a $n$ dimensional vector:</p>

  <ul>
    <li>imagine graphing $f(\vec{x})$ in a $\mathbb{R}^{n+1}$ since $\vec{x}\in \mathbb{R}^n$</li>
    <li>then $\nabla f$ points at direction of steepest ascent</li>
  </ul>
</blockquote>

<p>Another useful quantity would be the second derivative:</p>

<blockquote>
  <p><strong>Hessian</strong></p>

  <p>Again, for a scalar function with vector input:</p>

  <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125133408736.png" alt="image-20220125133408736" style="zoom: 33%;" /></p>

  <p>which is useful because:</p>

  <ul>
    <li>$\vec{x}^*$ is a local minimum if $H\equiv \nabla^2f$ is <strong>positive semi-definite</strong>
      <ul>
        <li>in the case of $x\in \mathbb{R}$, we know that $f’‘(x) \ge 0$ means minima. In the case of vector input space, you have $n$-directions to look at. If each direction satisfies $Hx = ax$ for $a \ge 0$, then obviously it is “concave up”, and that $Hx = ax$ for all $x$ means $H$ contains only non-negative eigenvalues -&gt; positive semidefinite</li>
      </ul>
    </li>
  </ul>
</blockquote>

<p>Sometimes, we may want to use <strong>numerical calculations of derivatives</strong> to make sure our formula put in practice is correct:</p>

\[f'(x) \approx \frac{f(x+\epsilon) - f(x - \epsilon)}{2 \epsilon}\]

<p>for small $\epsilon$.</p>

<ul>
  <li>
    <p>notice we are all using $x$ as the input variable. It might be useful in context if we think of $x \to \vec{w}$ being the weights that we need to optimize on.</p>
  </li>
  <li>
    <p>an example program would be</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125133621511.png" alt="image-20220125133621511" /></p>
  </li>
</ul>

<blockquote>
  <p><strong>Note</strong></p>

  <p>To compute gradient using:</p>

  <ul>
    <li>analytic equation: exact, fast
      <ul>
        <li>e.g. for NN, we derive the derivatives and used the formula</li>
      </ul>
    </li>
    <li>numerical equation: slow, contains error
      <ul>
        <li>useful for debugging, .e.g if backprop is implemented correctly</li>
      </ul>
    </li>
  </ul>
</blockquote>

<h2 id="first-order-methods">First Order Methods</h2>

<p>Now, we talk about first order methods: <strong>using only first order derivative</strong> $g_t \equiv \nabla f(x_t)$ for weight (remember we generalized weights $w \to x$ any input) at iteration $t$.</p>

<h3 id="gradient-descent">Gradient Descent</h3>

<p>The easiest and direct use of $\nabla f(x_t)$:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125133718470.png" alt="image-20220125133718470" style="zoom: 33%;" /></p>

<p>where note that:</p>

<ul>
  <li>
    <p>you could add an early-stopping criteria at the end</p>
  </li>
  <li>
    <p>the tunable learning rate $\alpha_t$ is critical:</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Too Big</th>
          <th style="text-align: center">Too Small</th>
          <th>Just Right</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125133933698.png" alt="image-20220125133933698" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125133949095.png" alt="image-20220125133949095" /></td>
          <td><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125134009975.png" alt="image-20220125134009975" /></td>
        </tr>
      </tbody>
    </table>

    <p>but as you might have guessed, step size $\alpha_t$ could be updated automatically in some other methods</p>
  </li>
  <li>
    <p>However, at saddle points, it may cause the <strong>update</strong> be too small. Hence often a noise term will be added</p>

\[x_{t+1} = x_t - \alpha_tg_t + \epsilon_t\]

    <p>for $\epsilon_t \sim N(0, \sigma)$ hoping that it goes out of local minima/saddle points. (related: <a href="#Vanishing/Exploding Gradient">Vanishing/Exploding Gradient</a>)</p>
  </li>
</ul>

<hr />

<p><em>For Example</em></p>

<p>Consider logistic loss:</p>

\[J(x;\theta) = -\frac{1}{m}\sum_{i=1}^m 
\left[ y^{(i)}\log\left(h_\theta \left(x^{(i)}\right)\right) +
(1 -y^{(i)})\log\left(1-h_\theta \left(x^{(i)}\right)\right)\right]\]

<p>Then, compute the gradient:</p>

\[\frac{\partial J(\theta)}{\partial \theta_j}  = 
\frac{\partial}{\partial \theta_j} \,\frac{-1}{m}\sum_{i=1}^m 
\left[ y^{(i)}\log\left(h_\theta \left(x^{(i)}\right)\right) +
(1 -y^{(i)})\log\left(1-h_\theta \left(x^{(i)}\right)\right)\right]\]

<p>Carefully computing the derivative yields:</p>

\[\frac{\partial J(\theta)}{\partial \theta_j} = \frac{1}{m}\sum_{i=1}^m\left[h_\theta\left(x^{(i)}\right)-y^{(i)}\right]\,x_j^{(i)}\]

<p>Then you can update $\theta_j$ using this.</p>

<hr />

<p><strong>Problems with Gradient Descent</strong></p>

<ol>
  <li>
    <p>The above takes an entire training set for computing the loss. Takes time.</p>

    <ul>
      <li>use mini-batch or stochastic</li>
    </ul>
  </li>
  <li>
    <p>Computing derivative w.r.t weights $\theta$ takes effort if $\theta$ is high dimensional</p>

    <ul>
      <li>use backpropagation</li>
    </ul>
  </li>
  <li>
    <p>What step-size should we use? We may overshoot if too large of a stepsize.</p>

    <ul>
      <li>adaptive learning rate</li>
    </ul>
  </li>
  <li>
    <p>Gradient descent typically spend too much time in regions that is relatively flat as gradient is small</p>

    <ul>
      <li>
        <p>e.g.</p>

        <table>
          <thead>
            <tr>
              <th style="text-align: center">Normal Region</th>
              <th style="text-align: center">Flat Region</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125134255982.png" alt="image-20220125134255982" style="zoom:50%;" /></td>
              <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125134221684.png" alt="image-20220125134221684" style="zoom:50%;" /></td>
            </tr>
          </tbody>
        </table>
      </li>
      <li>
        <p>Use <a href="#Adaptive Gradient Descent">Adaptive Gradient Descent</a></p>
      </li>
    </ul>
  </li>
</ol>

<h4 id="adaptive-step-size">Adaptive Step Size</h4>

<p>There are certain options we can choose from:</p>

<ul>
  <li>
    <p><strong>decrease learning rate as training progresses</strong> (learn less in the future -&gt; prevent overfitting)</p>

    <ul>
      <li>
        <p>this can be done using either a decay factor that gets smaller over time:</p>

\[\alpha_t = \alpha_0 \frac{1}{1+t\beta}\]

        <p>for $\beta$ being small</p>
      </li>
      <li>
        <p>simply exponential decay:</p>

\[\alpha_t = \alpha_0 \gamma^t\]

        <p>for some $\gamma &lt; 1$ but close to $1$, or</p>

\[\alpha_t = \alpha_0 \exp(-\beta t)\]
      </li>
    </ul>
  </li>
  <li>
    <p><strong>line searches</strong>: given some $\min_x f(x)$, and suppose we are currently at $x_t$ being our <strong>current best guess</strong>. We know the current gradient is $g_t = \nabla f(x)\vert _{x_t} = \nabla f(x_t)$. We consider some step size $\alpha_t$ we <strong>might take</strong>:</p>

\[\phi(\alpha_t) \equiv f(x_t + \alpha_t g_t)\]

    <p>and we want to <strong>approximately minimize $\phi(\alpha_t)$</strong> to output a $\alpha_t$ to use. Basically we are ==sliding along the tangent line of the current point and see how far we should slide==</p>

    <ul>
      <li>
        <p><strong>backtrack line search</strong></p>

        <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125222301156.png" alt="image-20220125222301156" /></p>

        <p>where $t^*$ is our desired $\alpha_t$</p>

        <p>Graphically:</p>

        <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125225435921.png" alt="image-20220125225435921" style="zoom: 67%;" /></p>
      </li>
      <li>
        <p><strong>exact line search</strong></p>

        <p>Solve the following exactly:</p>

\[\min_{\alpha_t} f(x_t + \alpha_t \hat{g}_t)\]

        <p>where $\hat{g}_t = g_t  /\vert g_t\vert$. So this means we want:</p>

\[\nabla f(x_t + \alpha_t \hat{g}_t) \cdot \hat{g}_t = 0\]

        <p>and we need to solve this for $\alpha_t$</p>

        <ul>
          <li>
            <p>one property of this result is that, since we know:</p>

\[\quad \hat{g}_{t+1} = \nabla f(x_t + \alpha_t \hat{g}_t)\]

            <p>So we see that</p>

\[\hat{g}_{t+1} \cdot \hat{g}_t = 0\]

            <p>meaning <strong>consecutive runs gives perpendicular gradient direction</strong>. This makes sense since we are taking the <em>optimal step size</em>, i.e. we have walked the farthest along that direction.</p>
          </li>
          <li>
            <p>Finding $\alpha_t$ is computationally expensive as we need to solve for it, so it is rarely used</p>
          </li>
        </ul>
      </li>
      <li>
        <p><strong>adaptive line search</strong>: skipped</p>
      </li>
    </ul>
  </li>
</ul>

<h4 id="mini-batch-gradient-descent">Mini-Batch Gradient Descent</h4>

<p>A common technique within gradient descent is to split your dataset into $n$ sets of size $k$, and train each set as <strong>one step for updating the gradient</strong>.</p>

<ul>
  <li>so that we don’t spend time computing the loss function on the entire data</li>
  <li>if you want, you can also parallelize this computation</li>
</ul>

<p>This is useful because, for a sample of size $k$, the <strong>sample mean</strong> follows the central limit theorem:</p>

\[\hat{\mu} \sim N(\mu, \sigma^2/n)\]

<p>which can be easily seen because:</p>

<ul>
  <li>
    <p>$\text{Var}[X_i] = \sigma^2$, and using linearity:</p>

\[\text{Var}\left[\frac{1}{n}\sum X_i\right] = \frac{1}{n^2} \text{Var}\left[\sum X_i\right] = \frac{1}{n^2} \sum\text{Var}\left[ X_i\right] = \sigma^2 / n\]
  </li>
  <li>
    <p>This is good because **standard deviation of $\hat{\mu} \propto 1/\sqrt{n}$ **</p>

    <p>So if using 100 samples vs 10000 samples means:</p>

    <ul>
      <li>faster computation for factor of 100</li>
      <li>but only more error of factor of 10</li>
    </ul>
  </li>
</ul>

<h4 id="stochastic-gradient-descent">Stochastic Gradient Descent</h4>

<p>Basically equivalent of Mini-batch of size $1$</p>

<ul>
  <li>i.e. each update involves <strong>taking 1 random sample</strong></li>
</ul>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125225520623.png" alt="image-20220125225520623" style="zoom: 67%;" /></p>

<p>Some common nomenclatures:</p>

<ul>
  <li><strong>Epoch</strong>: a pass through the entire data</li>
</ul>

<p>Some <strong>properties</strong>:</p>

<ul>
  <li>unbiased estimators of the true gradient</li>
  <li>
    <p>early steps often converge fast towards the minimum</p>
  </li>
  <li>very noisy -&gt; but increases the chance of getting a global minima
    <ul>
      <li>e.g. at saddle points, it may cause the step be too small. But this is <strong>already noisy</strong>, so no problem.</li>
    </ul>
  </li>
</ul>

<h3 id="adaptive-gradient-descent">Adaptive Gradient Descent</h3>

<p>Either we use normal gradient descent, or gradient descent with optimized steps, we faced the problem of taking too long to converge in <strong>flat regions</strong>.</p>

<p>An overview would be that it uses <strong>gradients from previous steps</strong> to compute current gradient.</p>

<ul>
  <li>want to achieve faster convergence by move faster in dimension with low curvature, and slower in dimension with oscillations</li>
  <li>
    <p>the more official documentation:  <strong>AdaGrad</strong> for short, is an <strong>extension of the gradient</strong> descent optimization algorithm that allows the step size in each dimension used by the optimization algorithm to be automatically adapted ==based on the gradients seen for the variable==</p>
  </li>
  <li>however, some critics of this would say that it yields different result with gradient descent</li>
</ul>

<p>Examples with adaptive gradients include:</p>

<ul>
  <li>Momentum</li>
  <li>AdaGrad</li>
  <li>Adam</li>
</ul>

<h4 id="momentum">Momentum</h4>

<p>The basic idea is that the momentum vector <strong>accumulates gradients from previous iterations</strong> for computing the current gradient.</p>

<p><strong>Arithmetically weighted moving average</strong></p>

\[a_t = \frac{na_t +  (n-1)a_{t-1}) + ... + a_{t-n+1}}{n+(n-1)+ ... + 1}\]

<p>for basically imagining $a_t \to g_t$ is the gradient</p>

<ul>
  <li>$n$ is the <strong>weight</strong> which we can specify</li>
  <li>basically this is in a ==weighted moving average== the weights decrease ==arithmetically==, normalized by the sum of weights</li>
</ul>

<p>In the end, we see <strong>accumulation of gradients</strong> because:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125232040667.png" alt="image-20220125232040667" style="zoom: 80%;" /></p>

<p>where notice that:</p>

<ul>
  <li>$s_t = \sum_{i=t-n+1}^ta_i$ is the accumulation of past gradients, since $a_t \to g_t$</li>
</ul>

<hr />

<p>Alternatively, there is also an expoentially weighted version</p>

<p><strong>Exponentially Weighted Moving Average</strong></p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125232352096.png" alt="image-20220125232352096" style="zoom: 80%;" /></p>

<p>where here:</p>

<ul>
  <li>
    <p>again basically $a_t \to g_t$</p>
  </li>
  <li>
    <p>the parameter is actually $(1-\alpha) = \beta$ for convenience, and we want $\beta \in [0,1)$</p>
  </li>
  <li>
    <p>in an algorithm:</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125232534974.png" alt="image-20220125232534974" style="zoom:80%;" /></p>

    <p>where basically $x$ would be our weights.</p>
  </li>
</ul>

<blockquote>
  <p><strong>Note</strong></p>

  <p>A first problem with momentum is that the step sizes may not decrease once we have reached close to the minimum that may cause oscillations, which can be remedied by using Nesterov momentum (Dozat 2016) that replaces the gradient with the gradient after computing momentum (Dozat 2016):</p>

  <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125232704982.png" alt="image-20220125232704982" style="zoom:80%;" /></p>
</blockquote>

<p>Graphically</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125233001622.png" alt="image-20220125233001622" /></p>

<h4 id="adagrad">AdaGrad</h4>

<p>This deals with the case that we <strong>didn’t talk about what to do with $\alpha_t$</strong>:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125232534974.png" alt="image-20220125232534974" style="zoom:80%;" /></p>

<p>So one variation, AdaGrad, ==adapts the learning rate== to the parameters, i.e. $\alpha_t$ is different for <strong>each $\theta_i$</strong>/parameter:</p>

<ul>
  <li>performing smaller updates (i.e. low learning rates) for parameters associated with frequently occurring features</li>
  <li>larger updates (i.e. high learning rates) for parameters associated with infrequent features</li>
</ul>

<p>For this reason, it is well-suited for dealing with sparse data, and suitable for SGD.</p>

<p>Instead of using $\alpha_t$ for all parameters at current time, use</p>

\[\theta_{t+1,i} = \theta_{t,i} - \frac{\alpha_t}{\sqrt{s_{t,i} + \epsilon}} g_{t,i}\]

<p>and that $s_{t,i}$ is a weighted sum of gradients of $\theta_i$ up to time $t$:</p>

\[s_{t,i} = \beta s_{t-1,i} + g_{t,i}^2\]

<p>for $g_{t,i}$ is the gradient for the $\theta_i$.</p>

<p><strong>Problem</strong></p>

<p>This in turn causes the learning rate to shrink and eventually become infinitesimally small, at which point the algorithm is <strong>no longer able to acquire additional knowledge</strong>:</p>

\[\lim_{s_{t,i} \to \infty} \frac{1}{\sqrt{s_{t,i} + \epsilon}} = 0\]

<p>This is then solved by:</p>

<ul>
  <li>
    <p><strong>Adadelta</strong></p>

    <p>An exponential decaying average of square updates without a learning rate, replacing</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125234218229.png" alt="image-20220125234218229" style="zoom:80%;" /></p>
  </li>
  <li>
    <p><strong>RMSProp</strong></p>

    <p>Adagrad using a weighted moving average, replacing:</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125234149326.png" alt="image-20220125234149326" style="zoom: 80%;" /></p>
  </li>
</ul>

<h4 id="adam">Adam</h4>

<p>Adaptive moment estimation, or Adam (Kingma &amp; Ba 2014), combines the best of both momentum updates and Adagrad-based methods as shown in Algorithm 6.</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125234407385.png" alt="image-20220125234407385" style="zoom:67%;" /></p>

<p>where basically:</p>

<ul>
  <li>uses momentum in the red part</li>
  <li>uses AdaGrad like adaptive learning rate on the yellow part</li>
  <li>since it combined two models, we have <strong>two parameters to specify</strong>. Typically $\beta_1 = 0.9, \beta_2 = 0.99$</li>
</ul>

<p>Several improvements upon Adam include:</p>

<ul>
  <li>
    <p><strong>NAdam</strong> (Dozat 2016) is Adam with Nesterov momentum</p>
  </li>
  <li>
    <p><strong>Yogi</strong> (Zaheer, Reddi, Sachan, Kale &amp; Kumar 2018) is Adam with an improvement to the second momentum term which is re-written as:</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125234659018.png" alt="image-20220125234659018" style="zoom:80%;" /></p>
  </li>
  <li>
    <p><strong>AMSGrad</strong> (Reddi, Kale &amp; Kumar 2018) is Adam with the following improvement</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125234724476.png" alt="image-20220125234724476" style="zoom:80%;" /></p>
  </li>
</ul>

<h3 id="hyper-gradient-descent">Hyper-gradient Descent</h3>

<p>Hypergradient descent (Baydin, Cornish, Rubio, Schmidt &amp; Wood 2018) performs ==gradient descent on the learning rate== within gradient descent.</p>

<ul>
  <li>may be applied to any adaptive stochastic gradient descent method</li>
</ul>

<p>The basic idea is to consider $\partial f(x_t)/ \partial \alpha$, for $x \to w$</p>

\[\frac{\partial f(w_t)}{\partial \alpha} = \frac{\partial f(w_t)}{\partial w_t} \frac{\partial w_t}{\partial \alpha}\]

<p>we know that $w_t =  w_{t-1} - \alpha g_{t-1}$:</p>

\[\frac{\partial f(w_t)}{\partial \alpha} = g_t \cdot \frac{\partial }{\partial \alpha} ( w_{t-1} - \alpha g_{t-1})\]

<p>where:</p>

<ul>
  <li>The schedule may lower the learning rate when the network gets stuck in a local minimum, and increase the learning rate when the network is progressing well.</li>
</ul>

<p>Algorithm:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125234826019.png" alt="image-20220125234826019" style="zoom:80%;" /></p>

<h3 id="vanishingexploding-gradient">Vanishing/Exploding Gradient</h3>

<p>These problem is encountered when training artificial <strong>neural networks</strong> with ==gradient-based learning methods== and ==backpropagation==. In such methods:</p>

<ul>
  <li>
    <p><strong>vanishing gradient:</strong> during each iteration of training each of the neural network’s weights receives an update proportional to the partial derivative of the error function with respect to the current weight.</p>

\[W^l := W^l - \alpha \frac{\partial L}{\partial W^l}\]

    <p>The problem is that in some cases, the <strong>gradient will be vanishingly small</strong>, effectively preventing the weight from changing its value. In the worst case, this may completely stop the neural network from further training.</p>
  </li>
  <li>
    <p>When <strong>activation functions</strong> are used whose derivatives can take on larger values, one risks encountering the related <strong>exploding gradient problem</strong></p>
  </li>
</ul>

<p>One example of the problem cause for vanishing gradient</p>

<ul>
  <li>traditional <strong>activation</strong> functions such as the hyperbolic tangent function have gradients in the range $(0,1]$, is very small</li>
  <li>Since <strong>backpropagation</strong> computes gradients by the chain rule. This has the effect of ==multiplying $n$ of these small numbers== to compute gradients of the early layers in an n-layer network, meaning that the gradient (error signal) decreases exponentially</li>
</ul>

<h2 id="second-order-methods">Second Order Methods</h2>

<p>First order methods are easier to implement and understand, but they are <strong>less efficient than second order methods</strong>.</p>

<ul>
  <li>Second order methods use the first and ==second derivatives== of a univariate function or the gradient and Hessian of a multivariate
function to compute the step direction</li>
  <li>Second order methods approximate the objective function using a <strong>quadratic</strong> which results in faster convergence
    <ul>
      <li>imagine basically 2nd order methods -&gt; parabola -&gt; go down a bowl with a bowl (2nd order); as compared to with a ruler (1st order method)</li>
    </ul>
  </li>
  <li>but a problem that they need to overcome is how to deal with computing/storing <strong>Hessian</strong> matrix, which could be large</li>
</ul>

<h3 id="newtons-method">Newton’s Method</h3>

<p>Basically we know that we can find the <strong>root of an equation</strong> using newton’s method:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125235632561.png" alt="image-20220125235632561" style="zoom: 67%;" /></p>

<p>so we basically guessed $x_{t+1}$ to be the root by <strong>fitting a line</strong>:</p>

\[x_{t+1} = x_t - \frac{f(x_t)}{f'(x_t)}\]

<p>which basically does:</p>

<ul>
  <li>the number of steps to move being $\Delta x = f(x_t)/{f’(x_t)}$</li>
</ul>

<p>Then, since our goal is to solve (in 1-D case):</p>

\[\min f(x) \to f'(x) = 0\]

<p>So basically we consider finding root for $f’(x)$:</p>

\[x_{t+1} = x_t - \frac{f'(x_t)}{f''(x_t)}\]

<p>This results in</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125235919309.png" alt="image-20220125235919309" style="zoom: 67%;" /></p>

<p>where the blue line is the “imagined function” using Newton’s Method</p>

<ul>
  <li>notice it is a <strong>quadratic</strong></li>
  <li>therefore, it goes down the “bowl” <strong>faster than first order methods</strong> as mentioned before</li>
</ul>

<hr />

<p>The same formula can be derived using Taylor’s methods as well</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220126000201474.png" alt="image-20220126000201474" style="zoom: 67%;" /></p>

<p>However, this is <strong>useful</strong> because it guides on how to deal with ==vector input functions $f(\vec{x})$== which we need to deal with:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220126000337166.png" alt="image-20220126000337166" style="zoom: 67%;" /></p>

<p>where the last step is basically our new update rule.</p>

<ul>
  <li>
    <p>note that this $H^{-1}$ basically <strong>takes place of the $\alpha_t$</strong> we had in first order methods</p>
  </li>
  <li>
    <p>therefore the algorithm is:</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220126000628969.png" alt="image-20220126000628969" style="zoom:67%;" /></p>
  </li>
</ul>

<p>However, some problem resides:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220126000538635.png" alt="image-20220126000538635" style="zoom:80%;" /></p>

<p>notice that computing and inverting Hessian takes lots of computation, and storing Hessian takes space!</p>

<h3 id="quasi-newton-methods">Quasi-Newton Methods</h3>

<p>Quasi-Newton methods, which provide an iterative <strong>approximation</strong> to the inverse Hessian $H^{-1}$, so that it may:</p>

<ul>
  <li>avoid computing the second derivatives</li>
  <li>avoid inverting the Hessian</li>
  <li>may also avoid storing the Hessian matrix.</li>
</ul>

<p>The idea is to start thinking exactly what we need to approximate. Our goal is anyway the <strong>iterative update</strong>:</p>

\[x^+ = x - B^{-1}\nabla f(x)\]

<p>so our goal is to ==approximate $B^{-1} \approx \nabla^2 f$==. The task is therefore find some <strong>conditions to calculate $B$</strong></p>

<p>By definition of second derivative, we know that:</p>

\[\nabla f(x^k+s^k) - \nabla f(x^k) \approx B^k s^k\]

<p>where:</p>

<ul>
  <li>$s^k$ is the <strong>step size</strong> at iteration $k$</li>
  <li>$B^k$ is our approximation of Hessian/second derivative at step $k$</li>
</ul>

<p>Now, since it will be an approximation, we want to impose some constraints to make the approximation good:</p>

<ol>
  <li>
    <p>Second equation <strong>for next $B$</strong> should hold eaxctly:</p>

\[\nabla f(x^{k+1}) - \nabla f(x^k) =  B^{k+1}s^k\]

    <p>where $x^{k+1} = x^k+s^k$. This will be then represented as:</p>

\[B^{k+1}s^k = y^k\]

    <p>for $\nabla f(x^{k+1}) - \nabla f(x^k)  \equiv y^k$, or even more simply:</p>

\[B^{+}s = y\]
  </li>
  <li>
    <p>We also want the following <strong>desirable properties</strong></p>

    <ul>
      <li>$B^+$ is symmetric, as Hessians are symmetric</li>
      <li>$B^+$ should be close to $B$, which is the previous approximation</li>
      <li>$B,B^+$ being positive definite</li>
    </ul>
  </li>
</ol>

<p>Now, we explore some <strong>approximations for $B^+$</strong> that attempts to satisfy the above constraint.</p>

<h4 id="sr1-update">SR1 Update</h4>

<p>This is the simpliest update procedure, such that $B^+$ can be close to $B$, and it will be symmetric:</p>

\[B^+ = B + a u u^T\]

<p>for some $a,u$ we will solve soon. Notice that if we let this be our <strong>update rule for $B$</strong> (first iteration just initialize $B=I$), and we have the ==enforcement that secant equation should hold==:</p>

\[y=B^+s = Bs + a u u^Ts=Bs + (au^Ts)u\]

<p>for $s, u, y$ all being vectors. Notice that this means:</p>

\[y - Bs = (au^Ts)u\]

<p>where:</p>

<ul>
  <li>both sides of the equation are <strong>vectors</strong>! This means that $u$ is a scalar multiple of $y-Bs$.</li>
</ul>

<p>So we can ==solve for $u,a$==, and obtain the solution and <strong>plug back into our update rule for $B^+$</strong>:</p>

\[B^+ = B + \frac{(y-Bs)(y-Bs)^T}{(y-Bs)^Ts}\]

<p>where at iteration $k$, we already know $B\equiv B^k, s \equiv s^k$ and $y$, so we can compute $B^+$ at iteration $k$.</p>

<hr />

<p><em>Just to be clear</em>, using the above formula our <strong>descent algorithm</strong> would be:</p>

<p><strong>At iteration $k$</strong></p>

<ol>
  <li>compute $(B^{k})^{-1} \nabla f(x^k)$</li>
  <li>do the descent $x^{k+1} = x^k - \alpha_k (B^{k})^{-1} \nabla f(x^k)$ for some tunable parameter $\alpha_k$</li>
  <li>prepare $B^{k+1}$ using the above formula.</li>
</ol>

<hr />

<p>Now, while this technically <strong>computes the approximation</strong>, we can make the algorithm even better by <strong>directly computing $H = B^{-1}$</strong> and its updates using the above formula for $B^+$.</p>

<p>Using the following theorem:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220130161458549.png" alt="image-20220130161458549" /></p>

<p>We can show that $(B^+)^{-1}$ <strong>can be computed directly</strong></p>

\[(B^+)^{-1} = H^+ = H + \frac{(s-Hy)(s-Hy)^T}{(s-Hy)^Ty}\]

<p>then we just use $H$ and $H^+$ all the time instead of $B,B^+$ in the above algorithm.</p>

<h4 id="other-approximations">Other Approximations</h4>

<p>The <strong>David-Fletcher-Powell (DFP)</strong> correction is defined by</p>

\[H^+ = H+ \frac{ss^T}{y^Ts} - \frac{(Hy)(Hy)^T}{y^T(Hy)}\]

<p>The <strong>Broyden-Fletcher-Goldfarb-Shannon</strong> (BFGS) is defined by:</p>

\[H^+ = H+ \frac{2(Hy)s^T}{y^T(Hy)} - \left( 1 + \frac{y^T s^T}{y^T(Hy)} \right)\frac{(Hy)(Hy)^T}{y^T(Hy)}\]

<p>In summary, they all attempt to approximate the real Hessian, which is expensive in computation.</p>

<blockquote>
  <p><strong>Note</strong></p>

  <p>These methods are similar to each other in that they all begin by initializing the inverse Hessian to the identity matrix and then iteratively update the inverse Hessian. These three update rules differ from each other in that their <strong>convergence properties improve upon one another</strong>.</p>
</blockquote>

<h2 id="evolution-strategies">Evolution Strategies</h2>

<p>In contrast to gradient descent methods which advance a single point towards a local minimum, evolution strategies update
a probability distribution, from which multiple points are sampled, lending itself to a highly efficient distributed computation</p>

<blockquote>
  <p><strong>Useful resource</strong></p>

  <ul>
    <li>https://lilianweng.github.io/lil-log/2019/09/05/evolution-strategies.html#simple-gaussian-evolution-strategies</li>
  </ul>
</blockquote>

<p>Intuition: Instead of updating a single initial point and go downhill, use <strong>a distribution of points</strong> to go downhill</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220125140715802.png" alt="image-20220125140715802" /></p>

<h3 id="simple-gaussian-evolution-strategies">Simple Gaussian Evolution Strategies</h3>

<p>at each iteration, we sample from distribution and update that distribution</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220126002014142.png" alt="image-20220126002014142" /></p>

<h3 id="covariance-matrix-adaptation">Covariance Matrix Adaptation</h3>

<p><img src="https://lilianweng.github.io/lil-log/assets/images/CMA-ES-algorithm.png" alt="CMA-ES Algorithm" style="zoom: 33%;" /></p>

<p>Example:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220126002131825.png" alt="image-20220126002131825" style="zoom: 67%;" /></p>

<h3 id="natural-evolution-strategies">Natural Evolution Strategies</h3>

<p><img src="https://lilianweng.github.io/lil-log/assets/images/NES-algorithm.png" alt="NES" style="zoom: 33%;" /></p>

<h1 id="regularization-1">Regularization</h1>

<p>Regularization is a technique that helps prevent over-fitting by <strong>penalizing the complexity</strong> of the network. Often, we want our model to achieve <strong>low bias and low variance</strong> for ==test set==:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127131208903.png" alt="image-20220127131208903" style="zoom: 50%;" /></p>

<p>where</p>

<ul>
  <li>our final aim is to have the model generalize to <strong>unseen data</strong>.</li>
</ul>

<blockquote>
  <p>Why <strong>overfitting</strong> happens? In general it is because your ==training dataset is not representative of all the trends in the population==, so that you could fit too much to the training data and <strong>miss the real “trends”</strong> in the population.</p>

  <ul>
    <li>hence, it cannot generalize to test sets well</li>
  </ul>
</blockquote>

<hr />

<p><em>Recall that</em></p>

<p>Bias and variance are basically:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127164739968.png" alt="image-20220127164739968" style="zoom:50%;" /></p>

<p>and intuitively:</p>

<ul>
  <li><strong>bias</strong>: error introduced by approximating a complicated true model by a simpler model</li>
  <li><strong>variance</strong>: amount by which our approximation/model would change for different training sets</li>
</ul>

<p>e.g. an unbiased estimator would have:</p>

\[\mathbb{E}_{\vec{x}\sim \mathcal{D}}[\hat{\theta}(\vec{x})] = \lang \hat{\theta}(\vec{x}) \rang = \theta\]

<p>which is different from consistency:</p>

\[\lim_{n \to \infty} \hat{\theta}_n(\vec{x}) = \theta\]

<p>In reality, NN does better than traditional ML models such as SVM by being more complicated:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127131541371.png" alt="image-20220127131541371" style="zoom: 67%;" /></p>

<hr />

<p>Main <strong>regularization techniques</strong> here include:</p>

<ol>
  <li>add a penalty term of the weights $W$ directly to the loss function</li>
  <li>use dropouts, which randomly “disables” some neuron during training</li>
  <li>augment the data</li>
</ol>

<h2 id="generalization">Generalization</h2>

<p>Training data is a sample from a population and we would like our neural network model to ==generalize well to unseen test data== drawn from the same population.</p>

<p>Specifically, the <strong>definition of generalization error</strong> would be the difference between the <strong>empirical loss</strong> and <strong>expected loss</strong></p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127171220853.png" alt="image-20220127171220853" style="zoom: 67%;" /></p>

<p>where in Machine Learning, you would have seen something like this:</p>

\[\mathrm{err}(f) := \mathbb{P}_{(x,y)\sim \mathcal{D}}[f(x) \neq y]\]

<p>here:</p>

<ul>
  <li>
    <p>$f$ is a given model to test, and $\text{err}(f)$ is the generalization error.</p>
  </li>
  <li>
    <p>so it is technically equivalent to the red highlighted box only. Yet the whole expression resembles the PAC learning criterion:</p>

\[\mathrm{err}(f_m^A) - \mathrm{err}(f^*) \le \epsilon\]

    <p>where $f^<em>$ is the optimal predictor in the class $\mathcal{F}$, such that $f^</em> =\arg\min_{f \in \mathcal{F}}\mathrm{err}(f)$.</p>

    <ul>
      <li>however, notice that it is <strong>not</strong>, because here we are computing $\text{err}$ which is “generalization error” for both, instead of computing sample error.</li>
    </ul>
  </li>
</ul>

<p>The difference between the two is <strong>important</strong>:</p>

<ul>
  <li>suppose $G(f(X,W))  = 0$ for our model $f$. Then it means our empirical loss is as good as the expected loss. This only implies that our model has done the “best it could”.</li>
  <li>but suppose $\mathrm{err}(f)=0$, this means that our model is performing perfectly on the population, which I think is a stronger statement than the above.</li>
</ul>

<blockquote>
  <p>The key idea is that, if <strong>generalization error is low</strong>, then our model is not overfitting (doing the same performance for both train and test dataset)</p>

  <ul>
    <li>though this metric is ==not computable== since we don’t have the population, there are various ways to “estimate” it, like doing Cross Validation with many folds. (<a href="#Cross Validation">Cross Validation</a>)</li>
  </ul>

  <p>However, it is important to remember that <strong>generalization error</strong> depends on ==both variance and bias== (and noise) of the model/dataset:</p>

\[\mathbb{E}[y-\hat{f}(x)]^2 =  \text{Var}[\hat{f}] + ( \text{Bias}(\hat{f}))^2 + \text{Var}[\epsilon]\]

  <p>where $\text{Var}[\epsilon]$ is the variance of the <strong>noise of the data</strong>, i.e. $y = W^Tx + \epsilon$ if you think about regression.</p>

  <ul>
    <li>therefore, this is why we want to ==reduce bias and variance==!</li>
  </ul>
</blockquote>

<p>In practice, we see things like this:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127131908115.png" alt="image-20220127131908115" style="zoom:67%;" /></p>

<p>where usually:</p>

<ul>
  <li>Adding more training data $(X, Y)$ increases the generalization accuracy until a limit, i.e. the best our model can do anyway $\neq$ the optimal bayes</li>
  <li>Unless we have sufficient data, a very complex neural network may <strong>fit the training data very well at the expense of a poor fit to the test data</strong>, resulting in a large gap between the training error and test error, which is over-fitting, as shown above</li>
</ul>

<hr />

<p>However, in Deep Learning, recent results have shown:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127132009196.png" alt="image-20220127132009196" style="zoom: 50%;" /></p>

<p>where:</p>

<ul>
  <li>for DL it seems that we are double descending, so we may want to “overfit”</li>
</ul>

<h3 id="cross-validation">Cross Validation</h3>

<blockquote>
  <p><strong>Cross validation</strong> allows us to estimate the <strong>mean and variance of the generalization error</strong> using our limited data.</p>

  <ul>
    <li>mean generalization error is the average of the generalization error over all $k$ models and is a good ==indicator for how well a model performs on unseen data==</li>
  </ul>
</blockquote>

<p>In short, the idea is simple. We randomly split the data <strong>into $k$ folds</strong></p>

<ol>
  <li>take the $i$-th fold to be testing, and the rest, $k-1$ folds being training data</li>
  <li>learn a model $f_i$</li>
  <li>compute generalization error of $f_i$</li>
  <li>repeat 1-3 for $k$ times, but with a <strong>new $i$</strong></li>
</ol>

<p>This is useful because now we can compute the <strong>mean and variance of generalization error</strong> using the $k$ different models we trained.</p>

<ul>
  <li>i.e. think of the evaluation metric being applied on your <em>model choice/architecture</em>, hence the need of mean/variance so it doesn’t depend much on “which data is chosen to be training”</li>
</ul>

<blockquote>
  <p><strong>Note</strong></p>

  <p>We can also use cross validation to select features for building a model. We can build many models with <strong>different subsets of features</strong> and then compute their mean and variance of the generalization error to determine ==which subset performs best==.</p>
</blockquote>

<h2 id="regularization-methods">Regularization Methods</h2>

<p>Our general goal is to <strong>reduce both bias and variance</strong></p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127190032359.png" alt="image-20220127190032359" style="zoom:50%;" /></p>

<p>where:</p>

<ul>
  <li>“better optimization” means using a better optimizer, as covered in the previous chapter</li>
  <li>here, our focus is on the bottom right part: <strong>regularize</strong></li>
</ul>

<p>Some main methods we will discuss</p>

<ol>
  <li>add a penalty term of the weights $W$ directly to the loss function, usually using the <strong>norm</strong></li>
  <li>use <strong>dropouts</strong>, which randomly “disables” some neuron during training</li>
  <li><strong>augment</strong> the data</li>
</ol>

<blockquote>
  <p>Different methods have different specific effects technically, though the overall effect is that they reduce overfitting.</p>
</blockquote>

<h3 id="vector-norms">Vector Norms</h3>

<p>We define vector norms before discussing regularization using different norms.</p>

<p>For all vectors $x$, $y$ and scalars $\alpha$ all vector norms <strong>must satisfy</strong></p>

<ol>
  <li>$\vert \vert x\vert \vert  \ge 0$ and $\vert \vert x\vert \vert =0$ iff $x = 0$</li>
  <li>$\vert \vert x+y\vert \vert  \le \vert \vert x\vert \vert  + \vert \vert y\vert \vert$</li>
  <li>$\vert \vert \alpha x\vert \vert  = \vert \alpha\vert  \,\vert \vert x\vert \vert$</li>
</ol>

<blockquote>
  <p><strong>Note</strong></p>

  <p>Under this definition:</p>

  <ul>
    <li>$L_p$ for $p &lt; 1$ will have non-convex shapes</li>
    <li>$L_0$ does not count as a norm</li>
  </ul>
</blockquote>

<p>The general equation is simply:</p>

\[||x||_p = \left( \sum_{i=1}^n |x_i|^p \right)^{1/p}\]

<p>Some most common norms include:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127191601903.png" alt="image-20220127191601903" /></p>

<h3 id="regularized-loss-functions">Regularized Loss Functions</h3>

<p>One way to regularize it to use <strong>regularized loss function</strong>:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127132745260.png" alt="image-20220127132745260" style="zoom: 33%;" /></p>

<p>where:</p>

<ul>
  <li>$\lambda$ would be tunable.
    <ul>
      <li>If $\lambda$ = 0, then no regularization occurs.</li>
      <li>If $\lambda$ = 1, then all weights are penalized equally.</li>
      <li>A value between $0$ and $1$ gives us a tradeoff between fitting complex models and fitting simple models</li>
    </ul>
  </li>
  <li>Notice that here $R(w)$ refers to regularizing the <strong>entire weight of the network $W$</strong>.
    <ul>
      <li>if you want to have different regularization for different layers, you need to do $R_1(W^1)+R_2(W^2)$ in the final loss term.</li>
    </ul>
  </li>
  <li>Common types of regularization are $L_1$ and $L_2$
    <ul>
      <li>$L_1$ regularization is a penalty on the sum of absolute weights which <strong>promote sparsity</strong></li>
      <li>$L_2$ regularization is a penalty on the sum of the squares of the weights which prefer <strong>feature contribution being distributed evenly</strong></li>
    </ul>
  </li>
</ul>

<hr />

<p><em>For Example</em></p>

<p>If we are using SGD, and we added a $L_2$ regularization would cause our <strong>gradient update rules to change</strong>:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127133353173.png" alt="image-20220127133353173" style="zoom:67%;" /></p>

<p>where:</p>

<ul>
  <li>the extra term is due to regularization. so if $\lambda \to 0$, we get back to regular SGD</li>
  <li>also confirms that $W_t$ in general are smaller if we have regularization</li>
</ul>

<h4 id="ridge-and-lasso-regression">Ridge and Lasso Regression</h4>

<p>Recall that in machine learning, the following is <strong>Ridge Regression</strong></p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127192337546.png" alt="image-20220127192337546" style="zoom: 67%;" /></p>

<p>The solution for the ridge ==regression== can be solved exactly:</p>

\[\vec{w}_{ridge}=(X^TX + \lambda I)^{-1}X^T \vec{y}\]

<p>which basically comes from taking the derivative of the objective and setting it to zero, and note that:</p>

<ul>
  <li>this matrix $X^TX + \lambda I$ is exactly ==invertible== since it is now <strong>positive definite</strong> (because we added some positive number to diagonal)</li>
  <li>since $X^TX + \lambda I$ is invertible, this always result in a ==unique solution==.</li>
</ul>

<blockquote>
  <p><strong>Note</strong></p>

  <ul>
    <li>
      <p>analytic solution doesn’t exist for ==DL==, since our prediction is no longer:</p>

\[\hat{y} = XI\beta\]

      <p>which is for simple linear regression.</p>

      <p>But in DL, we have a NN with many nonlinear functions nested like:</p>

\[\hat{y} = f_3(W^3 \, f_{2}(W^2\,f_{1}(W^1X)))\]

      <p>where each layer $f$ are the activation functions for each layer. The solution of this is no longer analytic.</p>
    </li>
  </ul>
</blockquote>

<p>Yet, since this problem can be converted to the <strong>constraint optimization problem</strong></p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127192522192.png" alt="image-20220127192522192" style="zoom: 67%;" /></p>

<p>using <strong>Lagrange Method</strong>, then, the problem basically looks like:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Objective Function</th>
      <th style="text-align: center">Contour Projection into $w$ Space</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127192856939.png" alt="image-20220127192856939" style="zoom:50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127192905141.png" alt="image-20220127192905141" style="zoom:50%;" /></td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p><em>Recall</em>: Lagrange Penalty Method</p>

  <p>Consider the problem of:</p>

  <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127192658890.png" alt="image-20220127192658890" /></p>

  <p>This problem will be the same as minimizing the augmented function</p>

\[L(\vec{x}, \vec{\lambda}) := f(\vec{x}) + \sum_{i=1}^n \lambda_i g_i(\vec{x})\]

  <p>and recall that :</p>

  <ul>
    <li>our aim was to minimize $f(\vec{x})$ ==such that $g_i(\vec{x}) \le 0$ is satisfied==</li>
    <li>$\vec{x}$ is the original variable, called primal variable as well</li>
    <li>$\lambda_i$ will be some new variable, called <strong>Lagrange/Dual Variables</strong>.</li>
  </ul>
</blockquote>

<hr />

<p>Similarly, if we use $L_1$ norm, then we have <strong>Lasso’s Regression</strong></p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127192950886.png" alt="image-20220127192950886" style="zoom:50%;" /></p>

<p>Geographically, we are looking at:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Actual Aim (Sparsity)</th>
      <th style="text-align: center">Lasso’s Approximation</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127193020129.png" alt="image-20220127193020129" style="zoom:50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127193026129.png" alt="image-20220127193026129" style="zoom: 67%;" /></td>
    </tr>
  </tbody>
</table>

<p>Sadly,  there is <strong>no closed form solution</strong> even for simple regression in this case.</p>

<h3 id="dropout-regularization">Dropout Regularization</h3>

<p>The idea is that we <strong>randomly dropout neurons</strong> by setting their activations to be $0$.</p>

<ul>
  <li>
    <p>this will reduce cause the training to be less accurate, but makes it more robust in overfitting as those neurons “won’t fit all the time” to the data</p>
  </li>
  <li>
    <p>this is done in training only. When testing, we don’t drop them out</p>
  </li>
</ul>

<p>Graphically:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Fully connected neural network</th>
      <th style="text-align: center">Dropout regularization</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127193519465.png" alt="image-20220127193519465" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127193527248.png" alt="image-20220127193527248" /></td>
    </tr>
  </tbody>
</table>

<p>Since activations are randomly set to zero during training, we basically <strong>implement it by adding a layer before after activation</strong></p>

\[a_j^l := a_j^l I_{j}^l\]

<p>where $I_j^l$ is like a <strong>mask, deciding whether if it will be dropped</strong></p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127193726263.png" alt="image-20220127193726263" style="zoom: 67%;" /></p>

<p>Intuitively:</p>

<ul>
  <li>over iterations, some neurons will be dropped -&gt; less overfitting on those neurons. In some other cases, those neurons will need to stand in for others.</li>
  <li>
    <p>overall, we want to keep the <strong>same magnitudes of “neurons”</strong> for that layer even if we dropped out, hence $1/(1-p_l)$ scale up, so that they ==stand in== for the dropped out neurons</p>
  </li>
  <li>$p_l$ is a hyper-parameter. In some framework we can set it, in some other like <code class="language-plaintext highlighter-rouge">keras</code> it is ==automatically tuned==</li>
</ul>

<p>To implement it in code, we use a mask:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">dropout</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">A</span><span class="p">,</span> <span class="n">prob</span><span class="p">):</span>
    <span class="c1"># a mask
</span>    <span class="n">M</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">rand</span><span class="p">(</span><span class="n">A</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">A</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
    <span class="n">M</span> <span class="o">=</span> <span class="p">(</span><span class="n">M</span> <span class="o">&gt;</span> <span class="n">prob</span><span class="p">)</span> <span class="o">*</span> <span class="mf">1.0</span>
    <span class="n">M</span> <span class="o">/=</span> <span class="p">(</span><span class="mi">1</span> <span class="o">-</span> <span class="n">prob</span><span class="p">)</span>
    <span class="n">A</span> <span class="o">*=</span> <span class="n">M</span> <span class="c1"># applying the mask
</span>    <span class="k">return</span> <span class="n">A</span><span class="p">,</span> <span class="n">M</span>
</code></pre></div></div>

<p>note that:</p>

<ul>
  <li>forward propagation: apply and <em>store the mask</em></li>
  <li>backward propagation: <em>load the mask</em> and apply derivatives
    <ul>
      <li>since $a_j^l := a_j^l I_{j}^l$, then backpropagation equation needs to be updated as well</li>
    </ul>
  </li>
</ul>

<hr />

<p><em>For Examples</em></p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127134329966.png" alt="image-20220127134329966" style="zoom:67%;" /></p>

<h4 id="least-square-dropout">Least Square Dropout</h4>

<p>Dropout is actually not completely new</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127194559956.png" alt="image-20220127194559956" style="zoom:67%;" /></p>

<p>where notice that:</p>

<ul>
  <li>the solution is <strong>exact</strong></li>
</ul>

<blockquote>
  <p><strong>Note</strong></p>

  <ul>
    <li>again, analytic solution doesn’t exist for DL, since our prediction is not a simple linear regression but concatenating a bunch of nonlinear operations as well</li>
  </ul>
</blockquote>

<h4 id="least-squares-with-noise-input">Least Squares with Noise Input</h4>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127194543146.png" alt="image-20220127194543146" style="zoom:67%;" /></p>

<h3 id="data-augmentation">Data Augmentation</h3>

<blockquote>
  <p><strong>Data augmentation</strong> is the process of ==generating new data points by transforming existing ones==.</p>

  <ul>
    <li>For example, if a dataset has a lot of images of cars, data augmentation might generate new images by rotating them or changing their color. Then, it is used to <strong>train a neural network</strong></li>
  </ul>
</blockquote>

<p>Data augmentation may be used to <strong>reduce overfitting</strong>. Overfitting occurs when a model is too closely tailored to the training data and does not generalize well to new data. Data augmentation can be used to generate new training data points that are similar to the existing training data points, but are not identical copies.</p>

<ul>
  <li>This helps the model <strong>avoid overfitting</strong> and generalize better to new data.</li>
</ul>

<p>The general idea here is that we augment the training data by replacing each example pair with a <strong>set of pairs</strong></p>

\[(x_i, y_i) \to  \{(x_i^{*^b} , y_i)\}_{b=1}^B\]

<p>by, transformations including</p>

<ul>
  <li>e.g. rotation, reflection, translation, shearing, crop, color transformation, and added noise.</li>
</ul>

<h4 id="input-normalization">Input Normalization</h4>

<p>This is simply to normalize the input <strong>in the beginning</strong></p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127142128055.png" alt="image-20220127142128055" /></p>

<p>Then perform:</p>

\[\hat{x} = \frac{x- \mu}{\sigma}\]

<h4 id="batch-normalization">Batch Normalization</h4>

<p>Batch normalization basically <strong>standardizes the inputs</strong> to a layer <strong>for each mini-batch</strong>. You can think of this as doing normalization for each layer, for each batch</p>

<ul>
  <li>advantage: avoid exploding/vanishing gradients if the inputs are small!</li>
  <li>usually not only normalizing the input, but also for each <strong>layer</strong> over and over again.</li>
</ul>

<p>So basically, <strong>for input of next layer</strong>:</p>

\[Z = g(\text{BN}(WA))\]

<p>where $\text{BN}$ is doing batch normalization. In essence:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127195826143.png" alt="image-20220127195826143" style="zoom: 80%;" /></p>

<p>note that:</p>

<ul>
  <li>this means you <strong>backpropagation equation</strong>/derivatives needs also to include that term.</li>
</ul>

<h2 id="uncertainty-in-dnns">Uncertainty in DNNs</h2>

<p>Sometimes we also want to measure the <strong>confidence about the outputs</strong> of a neural network.</p>

<ul>
  <li>for instance, confidence in our learnt paramotor $\theta$</li>
</ul>

<p>In theory, we want ask the question: <strong>What is the distribution over weights $\theta$ given the data?</strong> (from which we know the confidence of our current learnt parameter)</p>

\[p(\theta |x,y) = \frac{p(y|x,\theta) p(\theta)}{p(y|x)}\]

<p>where $p(\theta)$ would be the <strong>prior</strong>, and $p(\theta\vert x,y)$ would be the <strong>posterior</strong> since we see the data.</p>

<ul>
  <li>this is not possible to compute since we don’t know them.</li>
</ul>

<p>In practice, we can roughly compute <strong>confidence of current prediction</strong> by “dropout masks”</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127135347957.png" alt="image-20220127135347957" style="zoom: 40%;" /></p>

<p>For instance:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127135432128.png" alt="image-20220127135432128" /></p>

<p>so we are not only <strong>outputting predictions</strong>, but also <strong>outputting confidence of our predictions</strong></p>

<h1 id="convolutional-neural-networks">Convolutional Neural Networks</h1>

<p>The major aim of this section is to discuss <strong>models that solves ML problems with images</strong></p>

<p>A brief overview of what we will discuss:</p>

<ul>
  <li>CNN is basically a “preprocessing neural network” that replaces Linear part from $W^lA^{l-1}$ to <strong>convolution with kernel</strong> (which is also linear)</li>
  <li>problems with deeper CNN layers causes vanishing gradients, hence models such as Residual NN and DenseNet are introduced</li>
</ul>

<p>On a high level, we should know that treating images means our input vector would be <strong>large in size</strong>, with $n$ dimension (after flattening) means that, if we use vanilla model, we need $O(n n_{1})$ matrix for the first layer with $n$ neurons!</p>

<p>Then, CNN aims to</p>

<ul>
  <li>deal with this storage/computation problem by using <strong>sparse matrix (kernel)</strong>, which are essentially matrices with ==repeated elements==.</li>
</ul>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201170511507.png" alt="image-20220201170511507" style="zoom:80%;" /></p>

<p>since the output is size $3$, it means we basically have <strong>3 neurons</strong> essentially having ==the same weight== ($k_1, k_2, k_3$). Therefore, we also call this <strong>sharing weights across space</strong>.</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201142122782.png" alt="image-20220201142122782" style="zoom: 50%;" /></p>

<p>notice that in this case, our number of parameters to learn is $O(3)=O(1)$ is <strong>constant</strong>!</p>

<ul>
  <li>
    <p>another problem of CNN is to encode <strong>spatial and local information</strong>, which would be otherwise lost if we <strong>directly flatten it</strong> and pass it onto a normal NN.</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201133600948.png" alt="image-20220201133600948" style="zoom: 33%;" /></p>

    <p>where you will see the aim of kernels would be that they <strong>captures features such as edges/texture/objects</strong>, which obviously has spatial relationships in the image.</p>
  </li>
</ul>

<blockquote>
  <p><strong>Note</strong></p>

  <ul>
    <li>
      <p>The fact that weights learnt in CNN preprocessing part of the architecture are constant can be thought of as the <strong>result of the constraints we placed on those weights</strong>: we need them to be kernels, hence we need <em>symmetry, sparsity, and the particular output shape</em> as shown above.</p>
    </li>
    <li>
      <p>After using the kernel, CNN architecture then would add a bias and an activation, all of which would assemble the actions taken in <strong>one layer</strong>.</p>

      <ul>
        <li>essentially the linear $W^l A^{l-1}$ is replaced by convolution</li>
        <li>each filter in a layer is of effectively $O(1)$ in size, but we can learn <strong>multiple such filters</strong>. Finally it may look like this</li>
      </ul>

      <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201171758990.png" alt="image-20220201171758990" /></p>

      <p>where notice that:</p>

      <ul>
        <li>the output after <strong>several such layers</strong> will be <strong>piped to a normal NN</strong>, for instance, for the final specific classification tasks.</li>
        <li>subsampling are basically techniques such as <strong>pooling</strong>, which will be covered later. The aim is to <strong>reduce the dimension (width $\times$ height)</strong>.</li>
        <li>To reduce the number of channels, you can use $f$ number of $1\times 1\times c$ filters, which can reduce to $f$ channels.
          <ul>
            <li>make sense since doing $1\times 1\times c$ convolution is telling how to sum the pixel on each channel into $1$ single pixel.</li>
          </ul>
        </li>
      </ul>
    </li>
  </ul>
</blockquote>

<h2 id="convolution">Convolution</h2>

<p>Basically it is nothing than doing:</p>

<ul>
  <li>elementwise multiplication between a patch of a matrix and a filter/kernel</li>
  <li>summing them up</li>
</ul>

<p>Therefore, convolutions in any dimension can be represented as a <strong>matrix vector multiplication</strong>:</p>

\[k * x = Kx_{\text{flatten}}\]

<p>where:</p>

<ul>
  <li>$K$ is the kernel, and $x_{\text{flatten}}$ is the <strong>flattened</strong> version of the image $x$.</li>
  <li>the exact shape of $K$ would be interesting. Think about how you would realize the above equation.</li>
</ul>

<h3 id="one-dimensional-convolution">One-Dimensional Convolution</h3>

<p>The idea is simple, if we are given a <strong>1D vector</strong> and a <strong>1D kernel</strong>:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201172613937.png" alt="image-20220201172613937" style="zoom:67%;" /></p>

<p>so essentially it is a <strong>locally weighted sum</strong>. To think about how we <strong>represent this in linear algrebra</strong>, consider that we have a $1 \times 5$ input with size $3$ kernel:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201172859269.png" alt="image-20220201172859269" /></p>

<p>verify that the above works.</p>

<ul>
  <li>notice that the output is of dimension $3$. This <strong>must be the case</strong> because there are only $3$ unique positions to place the size $3$ filter inside the size $5$ input vector.</li>
  <li>this matrix is also called Koeplitz matrix</li>
</ul>

<p>Therefore, we can reason this as:</p>

\[k * x = Kx = \sum_{i=1}^3 k_iS_i x\]

<p>where $S_i$ are the matrices where only “diagonal” entries are ones, otherwise zeros.</p>

<p>Now, one problem is that we noticed the <strong>output size is smaller</strong>, which can be bad in some cases. We can fix this by adding padding to the edges:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201173324819.png" alt="image-20220201173324819" /></p>

<p>however:</p>

<ul>
  <li>one problem with <strong>zero padding</strong> is that it introduces <strong>discontinuities at boundaries</strong></li>
  <li>another technique is to pad with <strong>reflection</strong>, i.e. replacing the top $0 \to x_1$, and bottom $0 \to x_5$.</li>
</ul>

<hr />

<p><em>For Example</em>: Stride with size 2</p>

<p>The above all assumed a stride with size 1. We can perform the task with stride 2 by doing</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201174111406.png" alt="image-20220201174111406" /></p>

<p>this could be useful as the <strong>output size is decreased</strong> by a factor of $2$.</p>

<hr />

<p><em>For Example</em>: A Simple Single Conv Layer</p>

<p>A typical layer looks like:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220209143859413.png" alt="image-20220209143859413" style="zoom: 67%;" /></p>

<p>where notice that:</p>

<ol>
  <li>pass the 1D image vector to filter (<strong>replacing the linear part</strong> to $Kx$)
    <ul>
      <li>optionally you would then also add the <strong>bias</strong> to the output $Kx + b$</li>
      <li>notice that this linear operation has a <strong>very sparse matrix</strong>, $K$</li>
    </ul>
  </li>
  <li>shortened version of the vector then goes through <strong>activation</strong></li>
</ol>

<p>This particular setup in the end can detect <strong>any block of lonely $1$</strong> in the input.</p>

<blockquote>
  <p><strong>Note</strong></p>

  <p>The fact that we are applying a kernel <strong>everywhere the same</strong> is so that it preserves the property that images are <strong>translational invariant</strong>.</p>
</blockquote>

<hr />

<p><em>Other Filters</em></p>

<p>Sharpening:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201174625087.png" alt="image-20220201174625087" style="zoom:50%;" /></p>

<p>more filters are omitted.</p>

<h3 id="multi-dimensional-convolution">Multi-Dimensional Convolution</h3>

<p>Since our images are usually <strong>2D</strong> if grey scale, so we extend the convolution to a 2D kernel.</p>

<ul>
  <li>the pattern you will see is easily generalizable to 3D inputs as well.</li>
</ul>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201174800911.png" alt="image-20220201174800911" style="zoom: 67%;" /></p>

<p>Then, if we want to <strong>add paddings</strong></p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201174906311.png" alt="image-20220201174906311" style="zoom:67%;" /></p>

<p>But more importantly, we can <strong>put this in a matrix vector multiplication as well</strong>:</p>

<ul>
  <li>flattening 2D matrix to $[x_{11}, x_{12}, …, x_{nm}]^T$.</li>
  <li>the shape of kernel would be <strong>repeatedly assembling 1D filters</strong></li>
</ul>

<p>Consider the following operatoin:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201175143906.png" alt="image-20220201175143906" style="zoom:67%;" /></p>

<p>Can be done by:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201175349503.png" alt="image-20220201175349503" /></p>

<p>which is basically:</p>

<ul>
  <li>the lowest diagonal is the <strong>1D Toeplitz matrix for the first row of $k$</strong></li>
  <li>the second lowest diagonal is the <strong>1D Toeplitz matrix for the second row of $k$</strong></li>
  <li>etc.</li>
  <li>finally, the <strong>output is a vector</strong>, which can be interpreted as a flattened 2D image</li>
</ul>

<blockquote>
  <p>Therefore, convolution with 3D images using 3D kernels, basically is equivalent of matrix-vector multiplication with:</p>

  <ul>
    <li>flattened image to 1D</li>
    <li>repeatedly assembling <strong>2D Toeplitz matrix</strong> for the “$i$-th place” to form a 2D matrix.</li>
  </ul>
</blockquote>

<hr />

<p><em>For Example</em></p>

<p>To find the lonely one:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201135357568.png" alt="image-20220201135357568" style="zoom:33%;" /></p>

<hr />

<h4 id="three-dimensional-convolution">Three Dimensional Convolution</h4>

<p>The technique of expanding 2D Toeplitz matrix for 3D convolution basically does the following for convolution:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201182111825.png" alt="image-20220201182111825" style="zoom:80%;" /></p>

<p>which basically <strong>outputs a single 2D matrix</strong>.</p>

<ul>
  <li>makes sense that the <strong>number of channels</strong> in both kernel and input lines up, as in the end we just do a element-wise multiplication and sum up.</li>
</ul>

<p>However, <strong>another way</strong> would be to do ==two dimensional convolution on each channel==</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201182357125.png" alt="image-20220201182357125" style="zoom:80%;" /></p>

<p>notice that:</p>

<ul>
  <li>this means we would have 3 filters (may be the same), each is a <strong>2D matrix/kernel/filter</strong></li>
  <li>the number of channels for both kernel and their respective input is $1$.</li>
  <li><strong>outputs 3 channels instead of $1$</strong>, as compared to the previous case</li>
</ul>

<h3 id="properties-of-convolution">Properties of Convolution</h3>

<p>There are several nice properties of convolution that are handy for <strong>optimizing computation complexity</strong>.</p>

<p>First, the most obvious ones are due to <strong>convolution</strong> are essentially matrix/vector multiplication as they are from linear algebra</p>

<ul>
  <li><strong>Commutative</strong>: $f*g = g * f$</li>
  <li><strong>Associative</strong>: $f<em>(g</em>h) = (f*g) * h$</li>
  <li><strong>Distributive</strong>: $f*(g + h) = f * g + f * h$</li>
  <li><strong>Differentiation</strong>: $\frac{d}{dx} (f * g) = \frac{df}{dx}* g = f * \frac{dg}{dx}$</li>
</ul>

<h4 id="separable-kernels">Separable Kernels</h4>

<p>Some kernels would be separable like:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201135511859.png" alt="image-20220201135511859" style="zoom: 50%;" /></p>

<p>Then, we can use the <strong>property that</strong>:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201175857580.png" alt="image-20220201175857580" style="zoom: 80%;" /></p>

<p>where this is <strong>very useful because</strong>, if the image is size $n \times n$, and separable kernel $k \times k$</p>

<ul>
  <li>directly convovling needs $O(n^2 k^2)$, since each of the $\approx n^2$ output pixel needs $k^2$ computation.</li>
  <li>if we do it with <strong>two simpler convolutions</strong>, then $O(2n^2k)=O(n^2k)$ which is better</li>
</ul>

<h4 id="composition">Composition</h4>

<p>Since we know convolutions is basically matrix-vector multiplication: Repeated convolutions with a small kernel are equivalent to a single convolution with a large kernel</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201180550990.png" alt="image-20220201180550990" style="zoom:80%;" /></p>

<p>where this is useful because it is more efficient.</p>

<h2 id="convolutional-layers">Convolutional Layers</h2>

<p>Now, we discuss what happens in convolutional layers in a NN such as the following</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201171758990.png" alt="image-20220201171758990" /></p>

<p>Notice that we know:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201182741514.png" alt="image-20220201182741514" style="zoom:50%;" /></p>

<ul>
  <li>
    <p>convolution of $n \times n \times 3$ with a <strong>single kernel $k \times k \times 3$</strong> produces $n \times n$ (if we have padding)</p>
  </li>
  <li>
    <p>if prepare $4$ different $k \times k \times 3$ kernel and we do this ==separately for $4$ times==, we get $n \times n \times 4$ output</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201182937454.png" alt="image-20220201182937454" style="zoom: 67%;" /></p>
  </li>
</ul>

<p>Therefore, since in general <strong>a single layer would have many different filters</strong>, if we have $f$ filters, we would produce $n \times n \times f$ as our output size.</p>

<ul>
  <li>however, before we put this through activation, notice that having $n \times n \times f$ is pretty large. (in practice the performance gain is not too huge, so it doesn’t matter if we put it before or after activation)</li>
</ul>

<p>So, before activation, we would use <strong>pooling techniques</strong> to reduce the dimension.</p>

<h3 id="pooling">Pooling</h3>

<p>Pooling is an operation that reduces the dimensionality of the input. Some simple and common ones are</p>

<blockquote>
  <p><strong>Max pooling</strong> takes the maximum over image ==patches==.</p>

  <ul>
    <li>
      <p>for example over $2 \times 2$ grids of neighboring pixels $m =\max{x_1, x_2, x_3, x_4}$, hence <strong>reducing dimensionality in half</strong> in each spatial dimension as shown in Figure 5.18.</p>

      <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201183419024.png" alt="image-20220201183419024" style="zoom:67%;" /></p>
    </li>
    <li>
      <p>notice that this <strong>does not reduce the number of channels!</strong></p>
    </li>
  </ul>
</blockquote>

<p>To reduce the number of channels, it is essentially saying that <strong>how do we want to sum pixels in different channel</strong>? Therefore, it makes sense that we can use a <strong>one-dimensional convolution</strong> to solve this</p>

<blockquote>
  <p><strong>One dimensional convolution</strong> with $f$ filters also allows reducing the number of channels to $f$ as shown in Figure 5.19.</p>

  <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201183701494.png" alt="image-20220201183701494" style="zoom:80%;" /></p>

  <ul>
    <li>which makes sense as if $f=1$, essentially you summed over all channels, collapsing all channels to $1$ channel.</li>
  </ul>
</blockquote>

<h3 id="simple-convolutional-layer">Simple Convolutional Layer</h3>

<p>Putting everything above together, a typical convolutional layer involves <strong>three operations</strong>:</p>

<ul>
  <li>convolution with kernel (linear)</li>
  <li>pooling</li>
  <li>activation (nonlinear)</li>
</ul>

<p>An example would be:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201184433823.png" alt="image-20220201184433823" style="zoom: 80%;" /></p>

<p>where, In this example, the input is a $28 \times 28$ grayscale image and the output is one of ten classes, such as the digits $0-9$</p>

<ul>
  <li>The first convolutional layer consists of $32$ filters, such as $5 \times 5$ filters, which are applied to the image with padding which yields a $28 \times 28 \times 32$ volume.</li>
  <li>Next, a non-linear function, such as the ReLU, is applied pointwise to each element in the volume</li>
  <li>The first convolution layer of the network shown above is followed by a $2 \times 2$ max pooling operation which reduces dimensionality in half in each spatial dimension, to $14 \times 14 \times 32$.</li>
  <li>then, go from $14 \times 14 \times 32$ to $14 \times 14 \times 64$, you would have <strong>64 filters</strong> of size $5 \times 5 \times 32$, for example</li>
</ul>

<h2 id="architectures">Architectures</h2>

<p>Now we talked about some of the <strong>modern architectures</strong> that builds up on the basic CNN we discussed before.</p>

<ul>
  <li>in fact, now as <strong>Vision Transformers</strong> are out, processing with images have now been mostly done using that as Transformers itself is quite a generic model</li>
</ul>

<h3 id="cnn">CNN</h3>

<p>A basic example of CNN is shown in this example</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203202818491.png" alt="image-20220203202818491" style="zoom: 67%;" /></p>

<ul>
  <li>A deeper network of <strong>eight layers may resemble the cortical visual pathways</strong> in the brain (Cichy, Khosla, Pantazis, Torralba &amp; Oliva 2016).</li>
  <li>note that we are doing activation <strong>then pooling here</strong>
    <ul>
      <li>max-pooling and monotonely increasing non-linearities commute. This means that $\text{MaxPool(Relu(x)) = Relu(MaxPool(x))}$ for any input.</li>
      <li>So the result is the same in that case. Technically it is better to first subsample through max-pooling and then apply the non-linearity (if it is costly, such as the sigmoid). <strong>In practice it is often done the other way round</strong> - it doesn’t seem to change much in performance.</li>
    </ul>
  </li>
  <li>the second Convolution Layer comes from applying 64 filters of size $k \times k \times 32$. Usually this can be <strong>abbreviated</strong> to say applying $k \times k$ dimension filters.</li>
  <li>Many early implementations of CNN architectures were <strong>handcrafted for specific image classification tasks</strong>. These include
    <ul>
      <li>LeNet (LeCun, Kavukcuoglu &amp; Farabet 2010),</li>
      <li>AlexNet (Krizhevsky, Sutskever &amp; Hinton 2012)</li>
      <li>VGGNet (Simonyan &amp; Zisserman 2014),</li>
      <li>GoogLeNet (Szegedy, Liu, Jia, Sermanet, Reed, Anguelov, Erhan, Vanhoucke, Rabinovich et al. 2015)</li>
      <li>Inception (Szegedy, Vanhoucke, Io↵e, Shlens &amp; Wojna 2016).</li>
    </ul>
  </li>
</ul>

<p>(but now, vision transformers are of big focus due to its <strong>generality</strong>)</p>

<h3 id="resnet">ResNet</h3>

<p>The <strong>deep residual neural network</strong> (ResNet) architecture (He, Zhang, Ren &amp; Sun 2016a), (He, Zhang, Ren &amp; Sun 2016b), introduced ==skip connections== between consecutive layers as shown below</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Architecture</th>
      <th style="text-align: center">Details</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201190948331.png" alt="image-20220201190948331" style="zoom:80%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201191036841.png" alt="image-20220201191036841" style="zoom:80%;" /></td>
    </tr>
  </tbody>
</table>

<p>The idea is simple, the <strong>pre-activation of a layer</strong> $z^l$ now has a <strong>residual term from previous layer</strong></p>

\[z^{l+1} = f(W^l,a^l)+a^l;\quad a^{l+1} = g(z^{l+1})\]

<p>instead of $z^{l+1} = f(W^l,a^l)$.</p>

<ul>
  <li>adding those skip connections/residual terms allow training deeper neural networks by <strong>avoiding vanishing gradients</strong>. The ResNet architecture enables training very deep neural networks with hundreds of layers.</li>
  <li>Adding a new layer to a neural network with a skip connection <strong>does not reduce its representation power</strong>. Adding a residual layer results in the network being able to represent all the functions that the network was able to represent before adding the layer plus additional functions, thus <strong>increasing the space of functions</strong>.</li>
</ul>

<p>For instance, a three layer network composition <strong>originally</strong> would look like</p>

\[F(x)=f(f(f(x)))\]

<p>Now it becomes, if each layer has a residual:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201191454941.png" alt="image-20220201191454941" /></p>

<h3 id="densenet">DenseNet</h3>

<p>A DenseNet (Huang, Liu, van der Maaten &amp; Weinberger 2017) layer <strong>concatenates</strong> the input $x$ and output $f(x)$ of each layer to form the next layer $[f(x), x]$.</p>

<ul>
  <li>because it is concatenating it, the input in the first layer also <strong>directly appears in input to any further layers</strong></li>
  <li>in the ResNet, input in the first layer <strong>indirectly appears</strong> as they are absorbed in, such as  $f(f(x)+x)$</li>
</ul>

<p>Therefore, graphically:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201191751076.png" alt="image-20220201191751076" style="zoom:80%;" /></p>

<p>And the formula composition for three layers look like</p>

\[F(x) =  f(f([f(x),x]),[f(x),x]), f([f(x),x]),[f(x),x]\]

<h2 id="understanding-cnns">Understanding CNNs</h2>

<p>Consider the model ImageNet, which has the following architecture</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201192419470.png" alt="image-20220201192419470" style="zoom:80%;" /></p>

<p>When trained on a large dataset, since we also <strong>gradient descent to learn kernel/filters</strong> in CNN, we can look at the <strong>learnt kernels</strong> for different layers.</p>

<ul>
  <li>
    <p>In the end the kernel is just a <strong>matrix with some constraints</strong></p>
  </li>
  <li>
    <p>therefore, we can impose those constraints only and let <strong>back propagation</strong> to learn those weights</p>
  </li>
</ul>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201192533577.png" alt="image-20220201192533577" style="zoom: 67%;" /></p>

<p>which, interestingly, coincides with many of the handcrafted ones we had before</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201140058415.png" alt="image-20220201140058415" style="zoom:33%;" /></p>

<blockquote>
  <p><strong>Note</strong></p>

  <ul>
    <li>now we learn filters, but we need to specify the architecture</li>
    <li>this is now superseded with vision transformer, which learns <strong>both the architecture</strong> and the kernel</li>
  </ul>
</blockquote>

<p>However, we are interested in knowing ==what patterns do each layer learn==. How do we do that?</p>

<h3 id="input-maximizing-activation">Input Maximizing Activation</h3>

<p>Consider transferring the above to an <strong>optimization problem</strong>: given trained network with weights $W$, ==find input $x$ which maximizes activation==.</p>

\[\arg\max_x a^l_{i}(W, x)\]

<p>which we can find by <strong>gradient ascent</strong>.</p>

<ul>
  <li>
    <p>e.g. given some kernel, doing gradient ascent gives:</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201192921549.png" alt="image-20220201192921549" style="zoom: 67%;" /></p>

    <p>where the first steps are basically initializing with <strong>random noise</strong></p>
  </li>
</ul>

<p>Applying this technique to multiple layers, and we find that</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201193034483.png" alt="image-20220201193034483" /></p>

<p>so basically:</p>

<ul>
  <li>first layers learn the edges</li>
  <li>then textures</li>
  <li>then objects</li>
</ul>

<p>Alternatively, you can also use this technique to find out <strong>what patch of images</strong> this kernel is bad at:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201193141397.png" alt="image-20220201193141397" /></p>

<h3 id="transfer-learning">Transfer Learning</h3>

<p>The fact that those CNN learn fundamental concepts such as edges and textures means we can do <strong>transfer learning</strong></p>

<p>Task 1: learn to recognize animals given many (10M) examples which are not horses</p>

<p>Task 2: learn to recognize horses given a few (100) examples</p>

<ul>
  <li>Keep layers from task 1, re-train on <strong>last layer</strong></li>
</ul>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220201193339131.png" alt="image-20220201193339131" style="zoom:50%;" /></p>

<h1 id="sequence-models">Sequence Models</h1>

<p>Applications using sequence models include machine translation, protein structure prediction, DNA sequence analysis, and etc. All of which needs some <strong>representation that remembers previous data/state</strong>.</p>

<p>An overview of what will be discussed</p>

<ul>
  <li><strong>Sequence models</strong></li>
  <li><strong>Recurrent neural networks (RNNs)</strong>: when unrolled, basically modelling Finite State Machine</li>
  <li><strong>Backpropagation through time</strong>: Updating the shared/same weights across states</li>
  <li><strong>GRU and LSTM</strong>: fixing vanishing/exploding gradient in RNN</li>
  <li>Word embeddings, beam search, encoder-decoder attention</li>
  <li>Transformers</li>
</ul>

<p>In general, to reduce computational complexity through this deep network, <strong>weights are shared/same across time</strong>. i.e. shared weights when unrolled.</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203131557649.png" alt="image-20220203131557649" style="zoom: 50%;" /></p>

<p>Another interesting thing to know is the <strong>timeline</strong> of model development w.r.t. sequence models:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203131802058.png" alt="image-20220203131802058" style="zoom:33%;" /></p>

<p>where:</p>

<ul>
  <li>for simple deep models like RNN, there were problems of vanishing gradients. So LSTM and GRU are essentially variants to solve this problem in RNN.</li>
</ul>

<h2 id="natural-language-models">Natural Language Models</h2>

<p>Representing language requires a natural language model which may be a <strong>probability distribution over strings</strong></p>

<p>Some basic methods for <strong>treating input text data</strong> include</p>

<ul>
  <li>Bag of words + Classifier</li>
  <li>Feature Vector + Classifier</li>
  <li>Markov Model</li>
</ul>

<h3 id="bag-of-words">Bag of Words</h3>

<blockquote>
  <p><strong>Bag of words</strong> are text (such as a sentence or a document) is represented as the bag (multiset) of its words, disregarding grammar and even word order but <strong>keeping multiplicity</strong>/count.</p>
</blockquote>

<blockquote>
  <p><strong>Term Frequency</strong>: In a bag of words we count how prevalent each term $x$ is in a single document $d$ which is the term frequency $TF(x, d)$.</p>

  <ul>
    <li>we assume words are commonly normalized to lowercase, stemmed by removing their suffixes, and common stopwords (such as a, an, the, etc.) are removed.</li>
  </ul>
</blockquote>

<p>However, sometimes we also want to get more weight/focus for words that are rare. Therefore, we may want to consider the entropy of the word using <strong>inverse document frequency</strong>:</p>

\[IDF(x) = 1 + \log( \frac{ \text{total number of documents}}{ \text{number of documents containing $x$} })\]

<blockquote>
  <p><strong>TF-IDF</strong>: Then we can <em>boost</em> the frequency of rare words by considering the product of term frequency and inverse document frequency:</p>

\[TFIDF(x,d) = TF(x,d) \times IDF(x)\]

</blockquote>

<p>Finally, we use some <strong>classifier models</strong>, e.g. ML or DL models for classification using the mentioned above features.</p>

<p><strong>Problem</strong></p>

<ul>
  <li>
    <p>however, such a representation does not preserve order information</p>

\[\text{Alice sent a message to Bob} \quad \text{v.s.} \quad \text{Bob sent a message to Alice}\]

    <p>would have the same score/vector representation</p>
  </li>
</ul>

<h3 id="feature-vector">Feature Vector</h3>

<p>In contrast to a bag of words, using a feature vector to represent a sentence <strong>preserves order information</strong>. However, the problem is that sentences that have the <strong>same meaning</strong> could have a different word order:</p>

\[\text{Alice sent a message on Sunday} \quad \text{v.s.} \quad \text{On Sunday Alice sent a message}\]

<p>would need <strong>different feature vectors</strong> even if same information.</p>

<ul>
  <li>hence, there will be a lot of redundancy</li>
</ul>

<h3 id="n-gram-model">N-Gram Model</h3>

<p>Here we basically model <strong>probability distribution of n-grams</strong></p>

<ul>
  <li>
    <p>A Markov model is a 2-gram or bi-gram model where:</p>

\[P(x_ n | x_1 ,....,x_{n-1}) \approx p(x_n | x_{n-1})\]
  </li>
  <li>
    <p>but we want <strong>long term dependencies</strong></p>

    <ul>
      <li>using large/high-order n-gram model requires <strong>large corpus</strong></li>
      <li>hence not effective at capturing long term dependencies</li>
    </ul>
  </li>
</ul>

<h2 id="rnn">RNN</h2>

<blockquote>
  <p><strong>Recurrent Neural Network</strong> both maintain word order and model long term dependencies by sharing parameters across time.</p>

  <ul>
    <li>also allows for inputs and outputs of different length</li>
    <li>model both forward and backward sequence dependencies
      <ul>
        <li>using bidirectional RNN</li>
      </ul>
    </li>
    <li>but generally <em>difficult to train</em>: backpropagation causes gradients to explode/vanish
      <ul>
        <li>hence need LSTM or GRU</li>
      </ul>
    </li>
  </ul>

  <p>Its behavior basically is:</p>

  <ol>
    <li>process the input sequence one word at a time</li>
    <li>attempting to predict the next word from the current word and the previous hidden state $h_{t-1}$.
      <ul>
        <li>RNNs don’t have the limited context problem that n-gram models have, since the hidden state can in principle <strong>represent information about all of the preceding words</strong> all the way back to the beginning of the sequence</li>
      </ul>
    </li>
    <li>output $y_t=f(Vh_t)$ at time $t$ where $V$ will be shared and $f$ is an activation function of your choice.
      <ul>
        <li>exactly when it outputs can be tuned/changed in algorithm, which leads to different architectures such as many-to-one (outputting $y$ only at the last time step)</li>
      </ul>
    </li>
  </ol>
</blockquote>

<p>The basic foundation of a RNN is a <strong>finite state machine</strong></p>

<h3 id="state-machine">State Machine</h3>

<p>In a state machine, we have:</p>

<ul>
  <li>$S$: possible states</li>
  <li>$X$: possible inputs</li>
  <li>$f: S \times X \to S$: <strong>transitions</strong></li>
  <li>$Y$: possible outputs</li>
  <li>
    <p>$g: S \to Y$: mapping from state to outputs</p>
  </li>
  <li>$S_0$ initial state</li>
</ul>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203205139875.png" alt="image-20220203205139875" style="zoom:50%;" /></p>

<p>The key idea is that <strong>a new state</strong> comes from <strong>both the previous state and an input</strong></p>

\[s_t = f(s_{t-1},x_t)\]

<p>This idea will be the ==same in RNN==.</p>

<p>Then, for a <strong>sequence of inputs $x_t$</strong>, the output $y_t$ would be:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203205331091.png" alt="image-20220203205331091" style="zoom:67%;" /></p>

<p>Essentially depends on all previous state/input.</p>

<ul>
  <li><strong>Recurrent neural networks are state machines</strong> with specific definitions of transition function $f$ and mapping $g$, in which the states, inputs, and outputs are vectors.</li>
</ul>

<h3 id="recurrent-neural-network">Recurrent Neural Network</h3>

<p>Given some sequence of data: $x_1, …, x_n$, we consider some <strong>hidden state $h_1, …, h_n$</strong> that will be used to form <strong>output</strong> $y_1, …, y_t$. This is done by <strong>sharing weights $U,W,V$</strong> across time:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203211204415.png" alt="image-20220203211204415" style="zoom:50%;" /></p>

<p>where essentially we see that RNN is modelling <strong>state transitions and outputting stuff</strong>, which is like a FSM</p>

<ul>
  <li>
    <p>hidden state $h_t$ at time $t$ is computed by:</p>

\[h_t = g(Wh_{t-1} + Ux_t)\]

    <p>which is a <strong>nonlinear function</strong> on <strong>previous state and current input</strong>. ($x_t, h_{t-1}$ would be vectors)</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203132556812.png" alt="image-20220203132556812" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>the output then is:</p>

\[y_t = V h_t\]

    <p>which <strong>can be followed by an activation</strong>, in that case we say:</p>

\[y_t = f(z_t) = f(Vh_t)\]

    <p>where $f$ would be a nonlinear function such as sigmoid.</p>
  </li>
  <li>notice that all weights $V,W,U$ <strong>are the same</strong>!</li>
  <li>this means that we only need to update it once for each matrix!</li>
</ul>

<p>Additionally, since to get to the new hidden state $h_t$ we need $Wh_{t-1} + Ux_t$, this can be computed in one shot by:</p>

\[[W,U] \begin{bmatrix}
h_{t-1}\\
x_t
\end{bmatrix} = Wh_{t-1} + Ux_t\]

<p>Then the algorithm looks as follows:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220207183223337.png" alt="image-20220207183223337" style="zoom:67%;" /></p>

<p>which essentially is when we have one layer.</p>

<ul>
  <li>As with feedforward networks (NN), we’ll use a training set, a loss function, and backpropagation to obtain the gradients needed to adjust the weights in these recurrent networks.</li>
  <li>more details on backpropagation through time is shown in later sections.</li>
</ul>

<h3 id="rnn-architecture">RNN Architecture</h3>

<p>Some common architectures used in RNN can be visualized as:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">One to Many</th>
      <th style="text-align: center">Many to One</th>
      <th style="text-align: center">Many to Many</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203133619748.png" alt="image-20220203133619748" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203212927731.png" alt="image-20220203212927731" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203133652920.png" alt="image-20220203133652920" /></td>
    </tr>
  </tbody>
</table>

<p>where in the end you need to <strong>specify size of output</strong>. Neural networks are always trained with fixed length of input and output.</p>

<ul>
  <li><strong>one to many</strong>: e.g. image to caption</li>
  <li><strong>many to one</strong>: caption to image/stock price prediction/sentiment classification</li>
  <li><strong>many to many</strong>: machine translation, video action classification
    <ul>
      <li>e.g. this can be done by “hardcoding” in the algorithm such that you ask the model to only output $y_t=f(Vh_t)$ if $t \in [T-2,T-1,T]$, for example.</li>
    </ul>
  </li>
</ul>

<p>There are many choices of architectures you can use:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203133936167.png" alt="image-20220203133936167" style="zoom:33%;" /></p>

<p>which would be useful for <strong>audio to text</strong></p>

<h3 id="loss-function">Loss Function</h3>

<p>To complete our definition of the RNN architecture requires incorporating a loss function, with which we can <strong>improve our model by gradient descending on the shared weigths</strong>.</p>

<p>The simple idea is that <strong>each output can be compared to the label</strong>, so we are doing:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203214314704.png" alt="image-20220203214314704" style="zoom:50%;" /></p>

<p>where:</p>

<ul>
  <li>
    <p>we have covered how states are computed, but the others:</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203214354503.png" alt="image-20220203214354503" style="zoom: 67%;" /></p>

    <p>so essentially $\hat{y} = \text{softmax}(Vh_t)$</p>
  </li>
</ul>

<p>Then, the <strong>total loss is just the sum over the characters</strong>:</p>

\[\mathcal{L}_{\text{sequence}}(\hat{y}^i, y^i) = \sum_{t=1}^{l_i}\mathcal{L}_{\text{character}}(\hat{y}_t^i, y_t^i)\]

<p>note that the $i$th input $x^i$ is a <strong>sequence of characters</strong>.</p>

<ul>
  <li>
    <p>the sequence length $l_i$ has <strong>nothing</strong> to do with dimension of the <strong>$i$th input $x_t^i$ or $y_t^i$ at time $t$</strong>, which are basically feature/output vectors for <strong>each character</strong> along the sequence of length $l_i$.</p>
  </li>
  <li>
    <p>then, since we could have $m$ sequences/sentences in the entire dataset, we would have:</p>

\[\mathcal{L}_{\text{total}}(\hat{y}_t, y_t) = \sum_{i=1}^{m}\mathcal{L}_{\text{sequence}}(\hat{y}^i, y^i)\]

    <p>this means that together it will be a double sum.</p>
  </li>
</ul>

<h3 id="deep-rnn">Deep RNN</h3>

<p>We can <strong>stack multiple hidden layers and connecting them</strong> as follows:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203220235023.png" alt="image-20220203220235023" style="zoom: 50%;" /></p>

<p>where essentially:</p>

<ul>
  <li>the output of the lowest layer is treated as the “current state/input” of the second last layer.</li>
  <li>
    <p>the weights $U^l,W^l$ will be <strong>shared within each layer $l$</strong>, but there is still a <strong>single $V$</strong> for output</p>
  </li>
  <li>
    <p>therefore, the new state transition equation at layer $l$ becomes:</p>

\[h_t^l = g(W^lh_{t-1}^l + U^lh_{t}^{l-1})\]

    <p>where $h_{t}^{l-1}$ is the state of previous layer at that time $t$, treated as an “input/current state”.</p>
  </li>
</ul>

<p>Additionally, we can build <strong>dependencies by</strong></p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203220609110.png" alt="image-20220203220609110" style="zoom:67%;" /></p>

<p>where then we need to specify a weight for connection  $o_{t-1} \to h_t$, which is certainly doable.</p>

<p>Last but not least, an important variant is the <strong>bidirectional RNN</strong>, which you shall see in the next section.</p>

<h3 id="bidirectional-rnn">Bidirectional RNN</h3>

<p>Basically, the idea is that we not only want to remember <strong>forward information</strong>, but also <strong>backward information</strong> (context in both direction). Therefore, we consider each state $h_t$ being <strong>duplicated into two</strong>:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203221058252.png" alt="image-20220203221058252" style="zoom: 50%;" /></p>

<p>such that</p>

<ul>
  <li>
    <p>then you have two weights $W, \bar{W}$, where the former is used to flow between $h_{t-1} \to h_t$, the latter $\bar{h}_{t+1} \to \bar{h}_t$:</p>

\[\begin{align*}
h_t &amp;= g(Wh_{t-1} + Ux_t)\\
\bar{h}_t &amp;= g(\bar{W}\bar{h}_{t+1} + Ux_t)\
\end{align*}\]
  </li>
  <li>
    <p>then output basically depends on <strong>both state information</strong> by concatenating them</p>

\[o_t = V\begin{bmatrix}
h_t\\
\bar{h}_t
\end{bmatrix}\]
  </li>
</ul>

<p>Then we can stack those as well</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203134545172.png" alt="image-20220203134545172" style="zoom: 80%;" /></p>

<h3 id="backpropagation-through-time">Backpropagation Through Time</h3>

<p>Having defined the RNN architectures and loss function, our goal is to train the RNN by <strong>finding derivatives and descending.</strong> Essentially we will use <strong>backpropagation</strong> again as it is a deep network.</p>

<p>Then general form of the gradient of a sequence loss $\mathcal{L}_{ \text{sequence}}$ on some parameter $\theta$ is:</p>

\[\frac{d\mathcal{L}_{ \text{sequence}}(\hat{y} , y)}{d\theta} = \sum_{t=1}^{l_i}\frac{d\mathcal{L}_{ \text{character}}(\hat{y}_t , y_t)}{d\theta} = \sum_{t=1}^{l_i}\sum_{t}\frac{\partial \mathcal{L}_{ \text{character}}(\hat{y}_t , y_t)}{\partial h_t}\frac{\partial h_t}{\partial \theta}\]

<p>you will see that all derivatives from then on <strong>will have dependence on $t$</strong>, which is why we call it backpropagation through time.</p>

<p>Recall that in a simple RNN:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Label</th>
      <th style="text-align: center">Diagram</th>
      <th style="text-align: center">Recall</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203214354503.png" alt="image-20220203214354503" style="zoom: 67%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203214314704.png" alt="image-20220203214314704" style="zoom:50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203211204415.png" alt="image-20220203211204415" style="zoom:50%;" /></td>
    </tr>
  </tbody>
</table>

<p>Then first computing the gradient for $V$ at time $t=3$</p>

\[\frac{\partial L_3}{\partial V} = \frac{\partial L_3}{\partial \hat{y}_3}\frac{\partial  \hat{y}_3}{\partial V} = \frac{\partial L_3}{\partial \hat{y}_3}\frac{\partial  \hat{y}_3}{\partial o_3}\frac{\partial o_3}{\partial V}\]

<p>notice that it ==does not depend on data from previous time==, since $o_t = Vh_t$ only depends on current time.</p>

<ul>
  <li>therefore, updating $V$ at each iteration at time $t$ is simple</li>
</ul>

<p>Now, if we consider updating $W$:</p>

\[\frac{\partial L_3}{\partial W} = \frac{\partial L_3}{\partial \hat{y}_3}\frac{\partial  \hat{y}_3}{\partial W} = \frac{\partial L_3}{\partial \hat{y}_3}\frac{\partial  \hat{y}_3}{\partial h_3}\frac{\partial h_3}{\partial W}\]

<p>but then we know that $h_3  = f(Wh_2 + Ux_3)$ which <strong>depends on previous time</strong>! Hence in this case we would have:</p>

\[\frac{\partial L_3}{\partial W} = \frac{\partial L_3}{\partial \hat{y}_3}\frac{\partial  \hat{y}_3}{\partial h_3}\frac{\partial h_3}{\partial W} = \frac{\partial L_3}{\partial \hat{y}_3}\frac{\partial  \hat{y}_3}{\partial h_3} \sum_{i=1}^3 \frac{\partial h_3}{\partial h_i} \frac{\partial h_i}{\partial W}\]

<p>but then, for instance:</p>

\[\frac{\partial h_3}{\partial h_1} = \frac{\partial h_3}{\partial h_2} \frac{\partial h_2}{\partial h_1}\]

<p>We can generalize the above even further to:</p>

\[\frac{\partial L_3}{\partial W} = \frac{\partial L_3}{\partial \hat{y}_3}\frac{\partial  \hat{y}_3}{\partial h_3} \sum_{i=1}^3 \left( \prod_{j=i+1}^3 \frac{\partial h_3}{\partial h_{j-1}} \right) \frac{\partial h_i}{\partial W}\]

<p>if we take the activation function to be $\tanh$, then the part in parenthesis above is basically $\prod W^T \, \text{diag}(\tanh’(h_{t-1}))$, which means that as $t » 3$, we would have backpropagation <strong>rasing $W^T$ to a high power</strong>.</p>

<ul>
  <li>
    <p>hence, RNN could suffer vanishing/explode gradients if the eigenvalues are less than one or greater than one, respectively</p>
  </li>
  <li>
    <p>graphically, where $E = L$ that we used above:</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203135108631.png" alt="image-20220203135108631" style="zoom: 50%;" /></p>
  </li>
  <li>
    <p>remember that we <strong>only update once in the end for $W$</strong>, because we only have <strong>one shared $W$</strong>! (same for $U,V$ if we are using a single layer RNN)</p>
  </li>
</ul>

<p>Finally, the algorithm is then summarized here:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203230211497.png" alt="image-20220203230211497" style="zoom:50%;" /></p>

<p>note that this is only the backpropagation part (second pass). The full algorithm of RNN would have a two-pass algorithm</p>

<ol>
  <li>In the first pass, we perform forward inference, computing $h_t$ , $y_t$ , accumulating the loss at each step in time, <strong>saving the value of the hidden layer</strong> at each step for use at the next time step.</li>
  <li>In the second phase, we process the sequence in reverse, computing the required <strong>gradients</strong> as we go, computing and saving the error term for use in the hidden layer for each step <strong>backward</strong> in time</li>
</ol>

<h3 id="rnn-as-language-models">RNN as Language Models</h3>

<p>This is essentially an example of applying RNN in real life. This idea of how you <strong>treat input/output</strong> as probabilities is used in other models introduced next as well.</p>

<p>Now, consider the task of <strong>predicting next word</strong> again. Here we have:</p>

<ul>
  <li>input as <strong>text/sentences</strong></li>
  <li>output <strong>probability</strong> that each word $w_i \in V$ will be the next word</li>
</ul>

<p>Then, we can have the following in each RNN layer:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220207185449002.png" alt="image-20220207185449002" /></p>

<p>where:</p>

<ul>
  <li>
    <p>$E$ is an <strong>embedding matrix</strong>, so $E x_t$ is embedding of current word $t$.</p>
  </li>
  <li>
    <p>the probability that a particular word $w_i$ in the vocabulary is the next word is represented by $y_t[i]$, the $i$th component of $y_t$$.</p>

\[y_t[i] = P(w_{w+1}=w_i| w_1, ..., w_t)\]

    <p>where you can imagine $w_i \in V$ can be indexed easily</p>
  </li>
</ul>

<p>Then, while <strong>training</strong>, you would have a correct distribution $y^<em>_t$, which is essentially a <strong>one-hot encoded vector</strong> for the correct word $w^</em>_t$. Since this can be treated as a probability distribution, and our prediction $y_t$ is also a probability distribution:</p>

\[L_\text{Cross Entropy} = \sum_t L_{\text{CE}}(y_t, y^*_t) = \sum_t - \log y_t[w^*_{t+1}]\]

<p>where essentially $y_t[w^<em>_{t+1}]$ is the probability that our model predicts $w^</em>_{t+1}$ to be the next word correctly.</p>

<p>Graphically, this is what happens when we are training:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220207190334237.png" alt="image-20220207190334237" style="zoom: 80%;" /></p>

<p>where it is important to note that the loss is on the <strong>probability for next word</strong>.</p>

<h2 id="gated-recurrent-unit">Gated Recurrent Unit</h2>

<p>One solution for vanishing/exploding gradient would be to use <strong>GRU</strong> instead of an RNN architecture for transition.</p>

<p>In RNN, we had the following structure</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Structure</th>
      <th style="text-align: center">Encapsulation</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203211204415.png" alt="image-20220203211204415" style="zoom:50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203231239039.png" alt="image-20220203231239039" style="zoom:50%;" /></td>
    </tr>
  </tbody>
</table>

<p>But now, what GRU does is essentially doing <strong>more complicated thing for transition</strong></p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203135552047.png" alt="image-20220203135552047" style="zoom:33%;" /></p>

<p>where:</p>

<ul>
  <li>there are many version of GRU circuits, many of which perform equally well on certain dataset</li>
  <li>the final best design was essentially discovered using a grid search over all possible gates. So there is kind of no theoretical reason why.</li>
</ul>

<p>Schematically, GRU does the following:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">GRU Schematic</th>
      <th style="text-align: center">Equations</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203232453595.png" alt="image-20220203232453595" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203231843814.png" alt="image-20220203231843814" /></td>
    </tr>
  </tbody>
</table>

<p>where it emphasized that we need to be skilled at <strong>translating between a graphical representation to equations</strong></p>

<ul>
  <li>the shared weights are now $W_r, W_z, W$ and $U_r, U_z,U$ (and of course $V$ for output)</li>
  <li>the main changes are that we <strong>added three more gates/components</strong> before deciding what is $h_t$</li>
  <li>it is also important to notice the <strong>plus operation</strong> as the last step for state transition. This plus instead of multiply essentially solves the exploding gradient problem</li>
  <li><strong>inputs</strong> of functions/state have arrows pointing in</li>
  <li><strong>weights</strong> are labelled on the arrow</li>
  <li><strong>nonlinear functions</strong> are not shown but applied <strong>if an operator is not on the graph</strong>
    <ul>
      <li>e.g. $h_t$ does not have a nonlinear function because it is specified we have a $+$ operation</li>
    </ul>
  </li>
  <li>the rest of the architecture is the same as RNN</li>
</ul>

<hr />

<p><em>An analogy of the input/state/gates</em></p>

<p>Consider the example:</p>

<ul>
  <li>state $h_{t-1}$ is the cloth we wear yesterday</li>
  <li>$x_t$ is the weather/input on day $t$/today</li>
  <li>$\bar{h}_t$ is the candidate clothes we <em>prepared/predicted</em> to wear</li>
  <li>$h_t$ is the actual clothes we wear on day $t$/today</li>
</ul>

<p>Then, essentially those additional gates (the update and reset gates) determine ==to what extent== we ==take into account these factors==:</p>

<ul>
  <li>do we <strong>ignore</strong> the weather $x_t$ completely,</li>
  <li>do we <strong>forget</strong> what we wore yesterday $h_{t-1}$</li>
  <li>and do we take into account our candidate clothes we prepared $\bar{h}_t$, and to <strong>which extent.</strong></li>
</ul>

<p>In short, the effect of those can be overviewed as below:</p>

<h3 id="update-gate">Update Gate</h3>

<p>The update gate basically does the following:</p>

\[z_t = \sigma (W_z h_{t-1} + U_z x_t)\]

<p>which is <strong>between 0 and 1</strong>, then is used in $h_t$ as:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203234102881.png" alt="image-20220203234102881" style="zoom:80%;" /></p>

<p>Examples of what $z_t$ does is shown below</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">output is the new candidate</th>
      <th style="text-align: center">output is the previous hidden state</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203233102030.png" alt="image-20220203233102030" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203233355981.png" alt="image-20220203233355981" /></td>
    </tr>
  </tbody>
</table>

<h3 id="reset-gate">Reset Gate</h3>

<p>The reset gate again is nonlinear:</p>

\[r_t = \sigma (W_r h_{t-1} + U_r x_t)\]

<p>This is used by the candidate activation:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203234223392.png" alt="image-20220203234223392" style="zoom: 80%;" /></p>

<p>The effects:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Candidate forgetting the previous hidden state</th>
      <th style="text-align: center">Candidate does same as RNN</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203233449807.png" alt="image-20220203233449807" style="zoom: 67%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203233500860.png" alt="image-20220203233500860" style="zoom:67%;" /></td>
    </tr>
  </tbody>
</table>

<h3 id="function">Function</h3>

<p>The last possible combination is:</p>

<ul>
  <li>$z_t = r_t = 0$, then hidden state is only dependent ton current state as $h_t = \bar{h}_t = \phi(Ux_t)$</li>
  <li>$z_t =0, r_t = 1$, then we get back RNN because $h_t = \bar{h}<em>t = \phi(Wh</em>{t-1} + Ux_t)$</li>
</ul>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Output hidden state is only dependent on the current state</th>
      <th style="text-align: center">Reduced to RNN</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203234523035.png" alt="image-20220203234523035" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203234531917.png" alt="image-20220203234531917" /></td>
    </tr>
  </tbody>
</table>

<h2 id="long-short-term-memory">Long Short-Term Memory</h2>

<p>Long short-term memory (LSTM) (Hochreiter &amp; Schmidhuber 1997) was introduced two decades before the GRU (Cho et al. 2014).</p>

<p>The LSTM is easy to train, and includes an <strong>additional input and output compared with the RNN and GRU</strong>. At each time step $t$:</p>

<ul>
  <li>receives as input the current state $x_t$, the hidden state $h_{t-1}$, and <strong>memory cell</strong> $c_{t-1}$ of the previous time step</li>
  <li>outputs the hidden state $h_t$ and memory cell $c_t$</li>
</ul>

<p>An encapsulation would look like this</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220204000418648.png" alt="image-20220204000418648" style="zoom:50%;" /></p>

<p>It is then combined such that we have</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220204000434163.png" alt="image-20220204000434163" style="zoom:50%;" /></p>

<ul>
  <li>
    <p>similarly, you can also combine to have a <strong>bidirectional LSTM</strong> by:</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Bidirectional RNN</th>
          <th style="text-align: center">Bidirectional LSTM</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220203221058252.png" alt="image-20220203221058252" style="zoom: 33%;" /></td>
          <td style="text-align: center"><img src="http://ai2-s2-public.s3.amazonaws.com/figures/2017-08-08/f7bdb849dafe17c952bfd88b879e01f74cf59d78/4-Figure3-1.png" alt="Bidirectional LSTM (BiLSTM) Training Task - GM-RKB" style="zoom: 50%;" /></td>
        </tr>
      </tbody>
    </table>

    <p>where essentially <strong>each LSTM cell at time $t$ is duplicated</strong> (they also have a separate weights like in bidirectional RNN) into a forward direction and a backward direction.</p>
  </li>
</ul>

<p>Each unit of LSTM look like:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">LSTM Schematic</th>
      <th style="text-align: center">Another View</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220204000548449.png" alt="image-20220204000548449" style="zoom: 50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220207190734060.png" alt="image-20220207190734060" style="zoom: 67%;" /></td>
    </tr>
  </tbody>
</table>

<p>where the highlighted part is clear, same as RNN.</p>

<ul>
  <li>
    <p>so we have an additional five components:</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220204000633720.png" alt="image-20220204000633720" style="zoom:67%;" /></p>
  </li>
  <li>
    <p>so now shared weights are $W_f, W_i, W, W_0$ and $U_f, U_i, U, U_0$</p>
  </li>
  <li>
    <p>outputs will be $c_t, h_t$, which will be inputs in the next LSTM unit.</p>
  </li>
</ul>

<p>Alike GRU, those three gate essentially regulates how much information can get through</p>

<h3 id="forget-gate">Forget Gate</h3>

<p>The forget gate has the following equation</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220204000921911.png" alt="image-20220204000921911" style="zoom: 67%;" /></p>

<ul>
  <li>or somtimes, we can simply this as $f_t = \sigma(W_f \cdot [h_{t-1},x_t]^T )$ for $W_f \equiv [W_f, U_f]$ being concatenated</li>
</ul>

<p>Since it is sigmoid, we can investigate the extreme values</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Memory Cell Ignore Previous Memory</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220204001008540.png" alt="image-20220204001008540" style="zoom:50%;" /></td>
    </tr>
  </tbody>
</table>

<h3 id="input-gate">Input Gate</h3>

<p>The input gate has the function</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220204001140743.png" alt="image-20220204001140743" style="zoom:67%;" /></p>

<p>which again is <strong>used by the memory cell</strong></p>

<ul>
  <li>controls <strong>how much $\bar{c}_t$ will be included</strong> in the new cell state $c_t$</li>
</ul>

<p>For instance, since $\sigma \in [0,1]$</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">new candidate memory $\bar{c}_t$ is ignored</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220204001242584.png" alt="image-20220204001242584" style="zoom: 50%;" /></td>
    </tr>
  </tbody>
</table>

<h3 id="memory-cell">Memory Cell</h3>

<p>The memory cell has equation:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220204001326157.png" alt="image-20220204001326157" style="zoom:67%;" /></p>

<p>which basically is updated very iteration to store some new memory, essentially <strong>candidate memory</strong>:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220204001418530.png" alt="image-20220204001418530" style="zoom: 67%;" /></p>

<p>which then stores <strong>information about previous state and input</strong></p>

<ul>
  <li>then, when we are outputing $h_t$, it will <strong>read from memory cell $c_t$</strong></li>
</ul>

<h3 id="output-gate">Output Gate</h3>

<p>The output gate has equation:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220204001608239.png" alt="image-20220204001608239" style="zoom:67%;" /></p>

<p>which is <strong>essentially RNN</strong>, highlighted in green:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220207163227530.png" alt="image-20220207163227530" style="zoom:33%;" /></p>

<p>but notice that the next state $h_t$ also <strong>included memory</strong>:</p>

\[h_t = o_t \cdot \phi(c_t)\]

<p>which is a point-wise multiplication.</p>

<ul>
  <li>function $\phi$ is a nonlinear function, such as $\tanh$</li>
  <li>so essentially $h_t$ depends on <strong>output $o_t$ and cell memory $c_t$</strong>, where $o_t$ is essentially the RNN cell</li>
</ul>

<hr />

<p><em>For Example</em></p>

<p>Recall that the output will essentially comes out from $h_t$, essentially:</p>

\[y_t = f(z_t) = f(Vh_t)\]

<p>where $f$ is an activation function if we are donig classification.</p>

<p>Then, some of the usages for LSTM would look like:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220207164111464.png" alt="image-20220207164111464" style="zoom: 50%;" /></p>

<p>where your output at time $t$ essentialy comes out from $h_t$.</p>

<hr />

<h2 id="gru-vs-lstm">GRU vs LSTM</h2>

<p><strong>Similarities</strong> between the two:</p>

<ul>
  <li>both units avoid repeated multiplications which cause vanishing or exploding gradients by a similarly positioned ==addition==</li>
</ul>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220204001848344.png" alt="image-20220204001848344" style="zoom: 67%;" /></p>

<ul>
  <li>
    <p>update gate $z_t$​ controls the amount of the new candidate to pass in the GRU; whereas the input gate controls the amount of the new candidate memory to pass in the LSTM</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">GRU</th>
          <th style="text-align: center">LSTM</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220204002239125.png" alt="image-20220204002239125" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220204002134935.png" alt="image-20220204002134935" /></td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <p>Comparing the GRU reset gate controlling the candidate hidden state as highlighted in Figure 6.45 with the LSTM input gate controlling the candidate memory cell as highlighted in Figure 6.46 shows the <strong>modulation of the candidate</strong> in both units.</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">GRU</th>
          <th style="text-align: center">LSTM</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220204002408761.png" alt="image-20220204002408761" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220204002416921.png" alt="image-20220204002416921" /></td>
        </tr>
      </tbody>
    </table>
  </li>
</ul>

<p><strong>Differences</strong></p>

<ul>
  <li>as GRU has fewer gates, they have a <strong>fewer numbe of parameters and trains faster</strong> than LSTM</li>
</ul>

<p>Lastly, an overview of NN, RNN and LSTM as “neuron”:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220207191037059.png" alt="image-20220207191037059" /></p>

<h2 id="sequence-to-sequence">Sequence to Sequence</h2>

<p>You can essentially use LSTM/RNN/GRU blocks as follows;</p>

<p><img src="https://www.researchgate.net/profile/Tryambak-Gangopadhyay/publication/340443252/figure/fig1/AS:876840973520898@1586066587656/Encoder-decoder-model-using-stacked-LSTMs-for-encoding-and-one-LSTM-layer-for-decoding.ppm" alt="Encoder-decoder model using stacked LSTMs for encoding and one LSTM... |  Download Scientific Diagram" style="zoom: 67%;" /></p>

<p>where:</p>

<ul>
  <li>
    <p>each component LSTM used here can be changed to GRU or RNN</p>
  </li>
  <li>
    <p>the <strong>encoder</strong> takes in the input sequence $(x_1, …, x_s)$ and output a <strong>context vector</strong> $z=f(Vh_t)$</p>

    <ul>
      <li>this is a <strong>single vector</strong>, which is treated as hidden state $h_0$ in the decoder</li>
    </ul>
  </li>
  <li>
    <p>the <strong>decoder</strong> also consists of LSTM/GRU that takes $h_0=z$ as the first hidden state, and generates output <strong>sequence $(y_1,…,y_t)$</strong></p>

    <ul>
      <li>
        <p>therefore, the entire model is doing:</p>

\[(y_1,...,y_t) = \text{decoder}(\text{encoder}(x_1, ..., x_s))\]
      </li>
    </ul>
  </li>
  <li>
    <p>this is often used for <strong>machine translation</strong>, for instance</p>
  </li>
</ul>

<h2 id="adding-attention">Adding Attention</h2>

<blockquote>
  <p>Below introduces the idea of attention as essentially a <strong>weighted sum over inputs</strong>, and talks about <strong>encoder-decoder attention</strong>. For reference, checkout <a href="#Self-Attention">Self-Attention</a> which is relevant but different.</p>
</blockquote>

<p>For many applications, it helps to <strong>add “attention”</strong> to RNNs, so that we can <strong>focus on certain part of the input sequence</strong></p>

<ul>
  <li>
    <p>Allows network to learn to ==attend to different parts of the input== at different time steps, shifting its attention to focus on different aspects during its processing.</p>
  </li>
  <li>Used in image captioning to focus on <em>different parts of an image</em> when <em>generating different parts of the output sentence</em>.</li>
  <li>In MT, allows focusing attention on <em>different parts of the source sentence</em> when <em>generating different parts of the translation</em>.</li>
</ul>

<p>For instance:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220207170115608.png" alt="image-20220207170115608" /></p>

<p>where we see that:</p>

<ul>
  <li>the underlined text is our <strong>query</strong></li>
  <li>the image is our <strong>key</strong> (the database of data we have)</li>
  <li>then we want to output the highlighted part</li>
</ul>

<p>To see why this is useful, consider the task of doing <strong>machine translation</strong>, so we are using a Seq2Seq Model which consists of an encoder and a decoder as shown before:</p>

<p><img src="https://www.researchgate.net/profile/Tryambak-Gangopadhyay/publication/340443252/figure/fig1/AS:876840973520898@1586066587656/Encoder-decoder-model-using-stacked-LSTMs-for-encoding-and-one-LSTM-layer-for-decoding.ppm" alt="Encoder-decoder model using stacked LSTMs for encoding and one LSTM... |  Download Scientific Diagram" style="zoom: 67%;" /></p>

<p>Now, Seq2seq models <strong>incorporating attention</strong> can:</p>

<ol>
  <li>the <strong>decoder</strong> receives as input the <strong>encoder encoder output sequence</strong> $c_i=c_i(o_1, …,o_t)$
    <ul>
      <li>where $o_t= V\begin{bmatrix}h_t\\bar{h}_t\end{bmatrix}$ for a bidirectional layer shown below, or sometimes just $o_i = [ h_j;\bar{h}_j]^T$</li>
    </ul>
  </li>
  <li>different parts of the output sequence <strong>pay attention</strong> to <strong>different parts of the input sequence</strong></li>
</ol>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220207210550496.png" alt="image-20220207210550496" style="zoom: 60%;" /></p>

<p>where essentially:</p>

<ul>
  <li>
    <p>for each input to <strong>decoder</strong> hidden state $\tilde{h}_t$, a context vector is used which is <strong>attention</strong> w.r.t step $t=1$ and of <strong>all input sequences $x_1, …, x_t$</strong></p>
  </li>
  <li>
    <p>specifically, in this <strong>bidirectional RNN</strong> as encoder, the context vector is computed as:</p>

\[c_i = \sum_j \alpha_{ij} [ h_j;\bar{h}_j]^T\]

    <p>which is a <strong>weighted sum</strong> over <strong>all hidden states in the encoder</strong> (but will have a larger emphasis on $h_i$). And the weightings $\alpha_{ij}$ are computed by:</p>

\[\alpha_{ij}  = \frac{\exp ( \text{score}(x_i,x_j) )}{\sum_{k=1}^i \text{exp}( \text{score}(x_i , x_k))}, \quad \forall j\]

    <p>which basically represents the <strong>amount of attention</strong> output $o_i$ will give to input word $x_j$, for some score function. (checkout <a href="#Self-Attention">Self-Attention</a>).</p>
  </li>
  <li>
    <p>This context vector, $c_i$, is generated anew with <strong>each decoding step $i$</strong> and takes all of the encoder hidden states into account in its derivation</p>
  </li>
  <li>
    <p>this is also called ==encoder-decoder attention==, which is different from <a href="#Self-Attention">Self-Attention</a>, and covered more in detail in <a href="#Attention">Attention</a></p>
  </li>
</ul>

<h2 id="sgns-embeddings">SGNS Embeddings</h2>

<p>Another common problem in language data is <strong>how do we represent texts/words (tokens)</strong>.</p>

<ul>
  <li>one-hot encoding
    <ul>
      <li>problem: every two words have <strong>the same distance</strong>. i.e. losing relationship between them</li>
      <li>problem: sparse vector.</li>
    </ul>
  </li>
  <li><strong>feature embedding</strong> for each word
    <ul>
      <li>we want to somehow learn word embedding from large <strong>unsupervised</strong> text corpus.</li>
    </ul>
  </li>
</ul>

<p>In this section we introduce one method for computing embeddings: <strong>skip-gram SGNS with negative sampling</strong>, sometimes called SGNS.</p>

<ul>
  <li>The skip-gram algorithm is one word2vec of two algorithms in a software package called word2vec</li>
</ul>

<blockquote>
  <p><em>Intuition</em></p>

  <p>The intuition of ==word2vec== is to train a classifier on a <strong>binary</strong> prediction task: given a word $w$, <strong>how likely is it to show up near another word</strong> $w_i$, e.g. apricot?</p>

  <ul>
    <li>this can be done in <strong>self-supervision</strong>, which avoids the need for any sort of hand-labeled supervision signal</li>
    <li>essentially training a logistic regression classifier</li>
    <li>this is <strong>static</strong>, in that it learns one <strong>fixed embedding for each word</strong> in the embeddings vocabulary.
      <ul>
        <li>In the <a href="#Transformer">Transformer</a>  chapter we will introduce methods for learning <strong>dynamic contextual embeddings</strong> like the popular family of BERT representations, in which the vector for each word is <strong>different in different contexts</strong></li>
      </ul>
    </li>
  </ul>

  <p>Then, ==while we are learning the likelihood==, we would have ==needed/learnt some representation $\vec{w}$ for a word $w$==, which will be our embedding!</p>
</blockquote>

<p>Therefore, the model is simple:</p>

<ol>
  <li>Treat the target word $w$ and a <strong>neighboring</strong> context word as <strong>positive</strong> examples.</li>
  <li>Randomly sample other words in the lexicon to get negative samples.</li>
  <li>Use <strong>logistic regression</strong> to train a classifier to distinguish those two cases.</li>
  <li>Use the <strong>learned weights</strong> $W$ as the <strong>embeddings</strong>, commonly represented as $E$</li>
</ol>

<blockquote>
  <p><strong>Note</strong></p>

  <p>This means that the embedding for word $w_i$ will be similar to $w_j$ if they are <strong>physically close</strong> to each other.</p>

  <ul>
    <li>i.e. if phrases like “bitter sweet” will create problems in the embedding! (physically close but their meanings are different)</li>
  </ul>
</blockquote>

<h3 id="sgns-classifier">SGNS Classifier</h3>

<blockquote>
  <p><strong>Goal of Classifier</strong>:</p>

  <p>Given a tuple $w,c$ being target word $w$ paired with a candidate word $c$, what is the <strong>probability</strong> that $c$ is a <strong>context word</strong> (i.e. physically next to it)?</p>

  <p>To present such <strong>probability</strong>, we will use:</p>

\[P(+|w,c) = \sigma(\vec{w}\cdot \vec{c}) =\frac{1}{1 + \exp(-\vec{w}\cdot \vec{c})}\]

  <p>for $\vec{w},\vec{c}$ being the <strong>embedding of word $w,c$</strong>.</p>

  <ul>
    <li>so on our way to learn such classifier, we would have learnt $\vec{w},\vec{c}$ which will be used for embedding</li>
  </ul>
</blockquote>

<p>Consider we want to find out the <strong>embedding of the word $\text{apricot}$</strong>, and we have the following data:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220208214715503.png" alt="image-20220208214715503" /></p>

<p>where:</p>

<ul>
  <li>
    <p>let us take a window size of $2$, so that we view $[c_1, …, c_4]$ above as <strong>real context word</strong> for $\text{apricot}$.</p>
  </li>
  <li>
    <p>our goal is to have a logistic regression such that:</p>

\[P(+|w,c)\]

    <p>is <strong>high</strong> if $c$ is a <strong>real context word</strong>, and that:</p>

\[P(-|w,c)  = 1-P(+|w,c)\]

    <p>is <strong>high</strong> if $c$ is <strong>not a context word</strong>.</p>
  </li>
</ul>

<p>Then, the question is how do we model such probability? We assumed that <strong>words next to each other</strong> should have ==similar embeddings==. This means that:</p>

\[\text{Similarity}(w,c) \approx \vec{w} \cdot \vec{c}\]

<p>for $\vec{w},\vec{c}$ being the embeddings for the word $w,c$. Then, to map this to <strong>probability that $c$ is a real context word for $w$ as</strong>:</p>

\[P(+|w,c) = \sigma(\vec{w}\cdot \vec{c}) =\frac{1}{1 + \exp(-\vec{w}\cdot \vec{c})}\]

<p>is high if high dot product = similar = next to each other. Then similarly, probability that $c$ is not a context word as:</p>

\[P(-|w,c) = \sigma(-\vec{w}\cdot \vec{c}) =\frac{1}{1 + \exp(+\vec{w}\cdot \vec{c})}\]

<p>for $c$ being <strong>negative samples</strong> (not context words).</p>

<hr />

<p>Now, this means that we can also assign “<strong>similarity score</strong>” between a target word and a <strong>context window</strong>:</p>

\[P(+|w, c_{1:L}) = \prod_{i=1}^L \sigma(\vec{c}_i \cdot \vec{w})\]

<p>where:</p>

<ul>
  <li>we assumed <strong>all contexts words are independent</strong></li>
  <li>we can also compute the log probability to make it a sum</li>
</ul>

<hr />

<p>Now, we can think of what are are learning graphically:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220208220831910.png" alt="image-20220208220831910" /></p>

<p>where essentially:</p>

<ul>
  <li>Embedding matrix $E$ contains two matrices, $W$ for word embedding and $C$ for context embedding
    <ul>
      <li>i.e. for the $i$-th word (in the dictionary), its word embedding will be the $i$-th column of $W$, and similarly for context embedding</li>
      <li>i.e. every word will have <strong>two embeddings</strong>, one in $W$ and another in $C$. In reality people either only take $W$ or take $W+C$</li>
      <li>if your vocabulary size is $\vert V\vert$, and you want an embedding of dimension $d$, then $W,C \in \mathbb{R}^{d \times \vert V\vert }$ so that you can fetch the embedding from a one-hot vector.</li>
    </ul>
  </li>
  <li>we have <strong>two embeddings</strong> because a word $w$ could be treated as a target, but sometimes it might also be picked as a context $c$, in which we update the embedding separately.</li>
</ul>

<h3 id="learning-the-embedding">Learning the Embedding</h3>

<p>Our target is to learn the matrix:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220208220831910.png" alt="image-20220208220831910" /></p>

<p>Let us begin with an example text, where our target word currently is $w=\text{apricot}$.</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220208221658252.png" alt="image-20220208221658252" /></p>

<p>Then taking a window size of $2$, we also want to have <strong>negative samples</strong> (in fact, more negative samples than positive ones per target word so that we are called <strong>SGNS</strong>):</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220208221831637.png" alt="image-20220208221831637" /></p>

<p>where here:</p>

<ul>
  <li>
    <p>each of the training sample $(w, c_{pos})$ comes with $k=2$ negative samples, for $k$ being tunable</p>
  </li>
  <li>
    <p>the negative samples are sampled <strong>randomly by</strong>:</p>

\[\text{Prob of sampling $w$}= P_\alpha(w) = \frac{ \text{Count}(w)^\alpha }{\sum_{w'} \text{Count}(w')^\alpha}\]

    <p>where we usually take $\alpha = 0.75$ so that <strong>rare words have a  better chance</strong></p>

    <p>e.g. if $P(a)=0.99,P(b)=0.01$, doing the power would give:</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220208222147320.png" alt="image-20220208222147320" style="zoom:80%;" /></p>
  </li>
</ul>

<p>Then, <strong>given a positive pair and the $k$ negative pairs</strong>, our ==loss function to minimize would be==</p>

\[L_{CE} = -\log{\left[ P(+|w,c_{pos}) \cdot \prod_{i=1}^k P(- |w,c_{neg})\right]} = - \left[ \log \sigma(c_{pos} \cdot w) + \sum_{i=1}^k  \log \sigma(-c_{neg} \cdot w) \right]\]

<p>which we want to <strong>minimize</strong> by <strong>updating $\vec{w} \in W$</strong> for the target word and $\vec{c} \in C$ for the context word.</p>

<p>Therefore, we need to take the derivatives:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220208222630846.png" alt="image-20220208222630846" style="zoom:80%;" /></p>

<p>Then the update equations</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220208222649078.png" alt="image-20220208222649078" style="zoom:80%;" /></p>

<p>So graphically, we are doing:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220208222800901.png" alt="image-20220208222800901" style="zoom:80%;" /></p>

<p>notice that we update target word embedding in $W$ but context words in $C$.</p>

<p>Then that is it! You now have leant <strong>two separate embeddings</strong> for each word $i$:</p>

<ul>
  <li>$\vec{w}_i = W[i]$ is the embedding <strong>target embedding</strong> for word $i$</li>
  <li>$\vec{c}_i = C[i]$ is the embedding <strong>context embedding</strong> for word $i$</li>
</ul>

<p>(then it is common to either just add them together as $\vec{e}_i = \vec{w}_i+\vec{c}_i$ as the embedding for word $i$, or just take $\vec{e}_i = \vec{w}_i$.)</p>

<h3 id="other-embeddings">Other Embeddings</h3>

<p>Some problem with SGNS Embedding (Word2Vec) is:</p>

<ul>
  <li>what if we want to know the embedding of an <strong>unknown word</strong> (i.e. unseen in the training corpus)?</li>
  <li><strong>sparsity</strong>: in languages with rich morphology, where some of the <em>many forms for each noun and verb may only occur rarely</em></li>
</ul>

<p>There are many other kinds of word embeddings that could deal with those problems. Here we briefly cover two:</p>

<ul>
  <li>
    <p><strong>Fasttext</strong>: Fasttext deals with these problems by using <strong>subword</strong> models, representing each word as itself plus a bag of constituent n-grams, with special boundary symbols <code class="language-plaintext highlighter-rouge">&lt;</code> and <code class="language-plaintext highlighter-rouge">&gt;</code> added to each word</p>

    <p>For example, with $n = 3$ the word where would be represented by the sequence <code class="language-plaintext highlighter-rouge">&lt;where&gt;</code> plus the character n-grams:</p>

\[\text{&lt;wh, whe, her, ere, re&gt;}\]

    <p>then a skipgram embedding is learned for each constituent n-gram, and the word <code class="language-plaintext highlighter-rouge">where</code> is represented by the <strong>sum of all of the embeddings of its constituent n-grams</strong>. Therefore, ==Unknown words== can then be presented only by the sum of the constituent n-grams!</p>
  </li>
  <li>
    <p><strong>GloVe</strong>: GloVe model is based on capturing <strong>global corpus statistics</strong>. GloVe is based on ratios of probabilities from the word-word cooccurrence matrix, combining the intuitions of count-based models like PPMI while also capturing the linear structures used by methods like word2vec.</p>
  </li>
  <li>
    <p>and many more</p>
  </li>
</ul>

<h1 id="graph-neural-network">Graph Neural Network</h1>

<p>In this chapter we describe graph neural networks, applied to networks or general graphs sharing weights across neighborhoods as shown below:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220211223146024.png" alt="image-20220211223146024" style="zoom: 50%;" /></p>

<p>Essentially graphs are everywhere, and we deal with data that can be represented as a graph by the following idea:</p>

<ul>
  <li>Each <strong>node</strong> in a network may have an <strong>associated feature vector</strong> that represents its attributes</li>
  <li>The edge information would be <strong>also encoded</strong> in the <strong>feature vector</strong> of the node
    <ul>
      <li>essentially, a node will <strong>aggregate information from neighbors</strong> to achieve this</li>
    </ul>
  </li>
</ul>

<blockquote>
  <p><strong>Summary</strong></p>

  <p>In the end, a GNN basically attempts to <strong>encode much information about the graph</strong> into <strong>each node of the graph</strong>, resulting in some complicated <strong>embedded vector $h_i^l$ for each node $i$.</strong></p>

  <p>Then, this information is used to do downstream tasks such as node classification.</p>
</blockquote>

<p>Then, essentially we have a list of feature vectors representing the graph. With that, some <strong>common tasks</strong> include:</p>

<ol>
  <li><strong>Node prediction</strong>: Predicting a property of a graph node.</li>
  <li><strong>Link prediction</strong>: Predicting a property of a graph edge.
    <ul>
      <li>For example, in a social network we can predict whether two people will become friends</li>
    </ul>
  </li>
  <li><strong>Graph or sub-graph prediction</strong>: Predicting a property of the entire graph or a sub-graph.
    <ul>
      <li>For example, given a graph representation of a protein we can predict its function as an enzyme or not</li>
    </ul>
  </li>
</ol>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220211222822911.png" alt="image-20220211222822911" style="zoom:50%;" /></p>

<h2 id="definitions">Definitions</h2>

<p>A graph $G = (V, E)$ contains a set of $n$ vertices (or nodes) $V$ and set of $m$ edges $E$ between vertices. The edges of the graph can either be undirected or directed.</p>

<p>Two basic graph representations are an <strong>adjacency matrix</strong> and <strong>adjacency list</strong>.</p>

<blockquote>
  <p>An <strong>adjacency matrix</strong> $A$ of dimensions $n \times n$ is defined such that:</p>

\[A_{i,j} = \begin{cases}
1, &amp; \text{if there is an edge between vertex $i$ and $j$}\\
0,&amp; \text{otherwise}
\end{cases}\]

  <p>where if edges have weights, then replace $1\to w$</p>
</blockquote>

<p>For example:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Adjacency Matrix</th>
      <th style="text-align: center">Graph</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220211230849534.png" alt="image-20220211230849534" style="zoom:50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220211230856499.png" alt="image-20220211230856499" style="zoom:50%;" /></td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>An <strong>adjacency list</strong> is a list of edges for each node.</p>
</blockquote>

<p><strong>Though</strong> adjacency matrix and list encode the same information:</p>

<ul>
  <li>different <strong>permutations of the node labels</strong> result in different adjacency matrices. In contrast, an adjacency list of the edges in the graph is invariant to node permutations.</li>
  <li><strong>storing</strong> an adjacency matrix takes $O(n^2)$ memory for $n$ being the number of nodes; whereas for adjaceny matrix it only takes $O(m)$ for $m$ is the number of edges in the graph. Since most graphs are sparse, this makes it even more appropriate to use adjacency list instead.</li>
</ul>

<blockquote>
  <p>The <strong>degree</strong> of a node $d_i$ represents the number of edges incident to that node (i.e. number of connections that it has to other nodes in the network)</p>

  <ul>
    <li>
      <p>average degree of a graph is the average degree over all its node:</p>

\[\frac{1}{n}\sum_{i=1}^n d_i\]

      <p>which is $2m/n$ for an undirected graph and $m/n$ for a directed graph</p>
    </li>
  </ul>

  <p>You can also represent the degree matrix $D$ being a diagonal matrix (so it can be used for calculating Laplacian):</p>

\[D_{i,i} = \text{degree}(v_i) = \sum_{j=1}^n A_{i,j}\]

</blockquote>

<p>For example, the degree matrix for the above graph:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220211231752362.png" alt="image-20220211231752362" style="zoom:50%;" /></p>

<blockquote>
  <p>for directed graphs the <strong>indegree</strong> of a node is the number of edges leading into that node and its <strong>outdegree</strong>, the number of edges leading away from it.</p>
</blockquote>

<blockquote>
  <p>The <strong>graph Laplacian matrix</strong> $L$ is the difference between the degree matrix and adjacency matrix $L = D − A$.</p>

  <ul>
    <li>
      <p>for functions, Laplacian measures the <em>divergence</em>:</p>

      <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220211232324624.png" alt="image-20220211232324624" style="zoom:67%;" /></p>
    </li>
    <li>
      <p>for more reference to see how it works: https://mbernste.github.io/posts/laplacian_matrix/</p>
    </li>
  </ul>
</blockquote>

<p>An example would be:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220211232434295.png" alt="image-20220211232434295" style="zoom:50%;" /></p>

<p>notice that:</p>

<ul>
  <li>The adjacency matrix and the degree matrix are symmetric and therefore the Laplacian matrix is symmetric</li>
</ul>

<p>Some other related matrix would be:</p>

<ul>
  <li>
    <p><strong>graph symmetric normalized Laplacian</strong></p>

\[\hat{L}=D^{-1/2} L D^{-1/2}=I-D^{-1/2} A D^{-1/2}\]
  </li>
  <li>
    <p><strong>random walk normalized Laplacian matrix</strong>:</p>

\[L_r=D^{-1}L = I-D^{-1}A\]
  </li>
</ul>

<blockquote>
  <p>A Laplacian matrix $L$ of a graph with $n$ nodes ha<strong>s $n$ eigenvectors with eigenvalues which are non-negative</strong> since the Laplacian matrix $L$ has non-negative eigenvalues.</p>

  <p>The number of <strong>zero eigenvalues</strong> of the Laplacian matrix of a graph is the <strong>number of its connected components</strong>.</p>
</blockquote>

<blockquote>
  <p><strong>Sub-graph</strong> of a graph is <strong>a subset of edges</strong> and <strong>all their nodes</strong> in the graph.</p>
</blockquote>

<blockquote>
  <p>A <strong>walk</strong> is a sequence of vertices and edges of a graph i.e. if we traverse a graph then we get a walk.</p>

  <ul>
    <li>a walk can be open or closed (i.e. end same as start)</li>
    <li>vertices and Edges can be <strong>repeated</strong> in a walk</li>
  </ul>
</blockquote>

<p>An example of a walk would be:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220211233110467.png" alt="image-20220211233110467" style="zoom: 50%;" /></p>

<p>here <code class="language-plaintext highlighter-rouge">1-&gt;2-&gt;3-&gt;4-&gt;2-&gt;1-&gt;3</code> is a walk</p>

<blockquote>
  <p><strong>Trail</strong> is an open walk in which <strong>no edge is repeated</strong>.</p>

  <ul>
    <li>vertex can be <strong>repeated</strong></li>
  </ul>
</blockquote>

<p>For example:</p>

<p><img src="https://media.geeksforgeeks.org/wp-content/uploads/Untitled-drawing-1-4.png" alt="img" style="zoom: 33%;" /></p>

<p>here Here <code class="language-plaintext highlighter-rouge">1-&gt;3-&gt;8-&gt;6-&gt;3-&gt;2</code> is trail</p>

<blockquote>
  <p><strong>Path</strong> is a trail in which neither vertices nor edges are repeated</p>
</blockquote>

<blockquote>
  <p>The matrix $A^k$ from an adjacency matrix contains $A_{i,j}$ being the <strong>number of walks of length $k$</strong> in the graph between the node in row $i$ and the node in column $j$.</p>
</blockquote>

<h2 id="problem-using-graphs">Problem using Graphs</h2>

<p>Polynomial</p>

<ul>
  <li>
    <p><strong>Minimum Spanning Tree (MST)</strong>: For an undirected graph, produce an acyclic tree that is the subset of the graph that spans all of the Vertices (Spanning), and it needs to have a minimum sum in terms of the edges included (minimum)</p>

    <ul>
      <li>Greedy algorithms with time complexity $O(\vert E\vert \log\vert V\vert )$: <strong>Boruvka</strong>, <strong>Prim</strong>, <strong>Kruskal</strong></li>
      <li>similar to Dijkstra, basically a graph without cycles</li>
    </ul>
  </li>
  <li>
    <p><strong>Single-Source Shortest Paths (SSP)</strong></p>

    <ul>
      <li>
        <p>For SSP with nonnegative weights: <strong>Dijkstra’s</strong> algorithm. Complexity $O(\vert V\vert \log\vert V\vert  + \vert E\vert )$ using a heap</p>

        <ul>
          <li>
            <p>essentially the greedy step is that we set the node that is marked with <strong>smallest tentative distance</strong> as the current node/completed.</p>

            <p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/Dijkstra_Animation.gif/220px-Dijkstra_Animation.gif" alt="Dijkstra Animation.gif" /></p>
          </li>
        </ul>
      </li>
      <li>
        <p>For general SSP: <strong>Bellman-Ford</strong> runs in $O(\vert V\vert \vert E\vert )$</p>
      </li>
    </ul>
  </li>
</ul>

<p>NP-hard</p>

<ul>
  <li><strong>Traveling Salesman Problem (TSP)</strong>
    <ul>
      <li>e.g. find shortest tour visiting each city once and returns to start.</li>
    </ul>
  </li>
  <li><strong>Vehicle Routing Problem (VRP)</strong></li>
</ul>

<blockquote>
  <p><em>Recall</em></p>

  <p><strong>Dijkstra’s Algorithm</strong>:</p>

  <ol>
    <li>initialization: marks everything as unvisited, and set each $D_v$ field to max. Then set the source $D_v$ to 0 and visited</li>
    <li>vistit each reachable vertices and update the field
      <ul>
        <li>update $D_v$ only when it is smaller</li>
        <li>but not update <em>visited</em>, yet</li>
      </ul>
    </li>
    <li>then we take the greedy step of marking the <strong>unvisited vertex with current smallest $D_v$</strong> to be visited</li>
    <li>continues with that vertex</li>
  </ol>

  <p><strong>Prim’s Algorithm</strong>
this is pretty much the same as Dijkstra’s Algorithm, but since we are constructing a tree, the difference is</p>

  <ul>
    <li><em>known</em> means whether if we have <strong>included that vertex into the tree</strong></li>
    <li>$D_v$ means the current smallest distance we currently know to bring that vertex into the graph (not cumulative)</li>
    <li>$P_v$ vertex that achieves the shortest distance in the $D_v$ field</li>
  </ul>
</blockquote>

<h2 id="node-embeddings">Node Embeddings</h2>

<blockquote>
  <p>Graph embeddings basically means finding “<strong>latent vector representation</strong>” of graphs which captures the <strong>topology</strong> (in very basic sense) of the graph. We can make this “vector representation” rich by also considering the vertex-vertex relationships, edge-information etc.</p>

  <ul>
    <li>the following assumes that ==each vertex/node has an associated feature vector==</li>
    <li>so in a sense it is “node embedding”</li>
  </ul>
</blockquote>

<p>There are roughly two levels of embeddings in the graph (of-course we can anytime define more levels by logically dividing the whole graph into subgraphs of various sizes):</p>

<ul>
  <li><strong>Vertex Embeddings</strong> - Here you find latent vector representation of <em>every vertex</em> in the given graph. You can then compare the different vertices by plotting these vectors in the space and interestingly “similar” vertices are plotted closer to each other than the ones which are dissimilar or less related. This is the same work that is done in “DeepWalk” by Perozzi.</li>
  <li><strong>Graph Embeddings</strong> - Here you find the latent vector representation of the whole graph itself. For example, you have a group of chemical compounds for which you want to check which compounds are similar to each other, how many type of compounds are there in the group (clusters) etc. You can use these vectors and plot them in space and find all the above information. This is the work that is done in “Deep Graph Kernels” by Yanardag.</li>
</ul>

<p><img src="https://snap-stanford.github.io/cs224w-notes/assets/img/node_embeddings.png?style=centerme" alt="node embeddings" style="zoom: 20%;" /></p>

<p>For example, we may optimize for the similarity between nodes $i$ and $j$, such that their similarity $s(i, j)$ is maintained after the embedding $f(i)^T f(j)$.</p>

<h3 id="shallow-embedding">Shallow Embedding</h3>

<p>“Shallow” encoding is the simplest embedding approach, it means it is just an embedding-lookup :</p>

\[f(v_i) =We_i\]

<p>for $e_i \in \mathbb{I}^{n}$ is essentially a <strong>one-hot encoded</strong> vector, and $W \in \mathbb{R}^{d \times n}$ if there are $n$ nodes.</p>

<ul>
  <li>This results in a problem with shallow embeddings, which is that they do not share weights, i.e. does not scale with the number of nodes</li>
</ul>

<h3 id="node-similarity">Node Similarity</h3>

<p>One key idea of embedding is that <strong>similarity of nodes</strong> is preserved in the embedding space. To formally use that as objective for learning the embedding (e.g. shallow encoding), we need to define <strong>similarity</strong></p>

<ul>
  <li>essentially different similarity metric captures <strong>different properties of a graph</strong>, results in <strong>different loss functions</strong> hence <strong>different embedding algorithm</strong></li>
</ul>

<h4 id="adjacency-based-similarity">Adjacency-based Similarity</h4>

<blockquote>
  <p><strong>Similarity</strong> between nodes $i$ and $j$ is the weight on the edge between them $s(i, j) = A_{i,j}$ where $A$ is the weighted adjacency matrix.</p>

  <ul>
    <li>this is a bit “bad” because non-neighbors will have weight $0$ as it is adjacency matrix</li>
  </ul>
</blockquote>

<p>Them, we can define <strong>loss</strong> to find the <strong>embedding matrix $W$</strong>:</p>

\[\mathcal{L} = \sum_{(i,j) \in V \times V}||f(i)^Tf(j)-A_{i,j}||^2\]

<p>over all pairs of nodes in the graph</p>

<h4 id="multi-hop-similarity">Multi-hop Similarity</h4>

<blockquote>
  <p>Instead of only considering immediate neighbor in $A$, we can consider $k$-hop neighbors by using $A^k$ to be the <strong>adjacency matrix</strong>.</p>

  <ul>
    <li>an improvement over adjacency based similarity</li>
  </ul>
</blockquote>

\[\mathcal{L} = \sum_{(i,j) \in V \times V}||f(i)^Tf(j)-A_{i,j}^k||^2\]

<h4 id="overlap-similarity">Overlap Similarity</h4>

<p>Another measure of similarity is the overlap between node neighborhoods as shown in Figure 7.9.</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220212002606862.png" alt="image-20220212002606862" style="zoom: 67%;" /></p>

<p>Suppose nodes $i$ and $j$ share common nodes. We can then minimize the loss function <strong>measuring the overlap</strong> between neighborhood:</p>

\[\mathcal{L} = \sum_{(i,j) \in V \times V}||f(i)^Tf(j)-S_{i,j}||^2\]

<p>where:</p>

<ul>
  <li>$S_{i,j}$ could be Jaccard overlap or Adamic-Adar score</li>
</ul>

<h3 id="random-walk-embeddings">Random Walk Embeddings</h3>

<p>Essentially an alternative of shallow embedding.</p>

<blockquote>
  <p>A <strong>random</strong> walk in a graph begins with a node $i \in V$ and repeatedly walks to one of its neighbors $v\in N(i)$ with probability $1
/d(i)$for$t$steps until reaching and ending node$j$ on the graph.</p>

  <p>In essence:</p>

  <ol>
    <li>given a graph and a starting point, we select a neighbor of it at random</li>
    <li>move to this neighbor; then we select a neighbor of this point at random</li>
    <li>move to it, etc. until $t$ steps are gone</li>
  </ol>

  <p>So $\text{similarity}(u,v)$ is defined as the probability that $u$ and $v$ <strong>co-occur on a random walk</strong> over a network.</p>
</blockquote>

<p>Formally:</p>

\[f(i)^Tf(j) \propto P(\text{$i$ and $j$ co-occur on the random walk}) = p(i|j)\]

<p>So basically we want to learn node embedding such that <strong>nearby nodes are close together in the network</strong>. Hence we want to maximize the likelihood of random walk co-occurrences, we compute loss function as:</p>

\[\mathcal{L} = \sum_{i \in V}\sum_{j \in N(i)} - \log p(j|f(i))\]

<p>for</p>

\[P(j|f(i)) = \frac{\exp(f(i)^T f(j))}{\sum_{j \in V} \exp(f(i)^Tf(j))}\]

<p>Then basically we want to find $W$ for $f(i)=We_i$ such that the loss can be minimized.</p>

<h2 id="graph-embedding">Graph Embedding</h2>

<p>We may also want to embed an entire graph $G$ or subgraph in some applications</p>

<p><img src="https://snap-stanford.github.io/cs224w-notes/assets/img/graph_embedding.png?style=centerme" alt="GraphE" style="zoom:50%;" /></p>

<p>There are several ideas to accomplish graph embedding:</p>

<ol>
  <li>
    <p>The simple idea (Duvenaud et al., 2016) is to run a standard graph embedding technique on the (sub)graph GG, then just sum (or average) the node embeddings in the (sub)graph GG.</p>

    <ul>
      <li>i.e. taking the sum of the embeddings of the nodes in the sub-graph $\sum_{i \ni S} f(i)$</li>
    </ul>
  </li>
  <li>
    <p>Introducing a “virtual node” to <strong>represent</strong> the (sub)graph and run a standard graph embedding technique</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220212000807810.png" alt="image-20220212000807810" style="zoom:50%;" /></p>
  </li>
  <li>
    <p>We can also use <strong>anonymous walk embeddings</strong>. In order to learn graph embeddings, we could enumerate all possible anonymous walks aiai of ll steps and record their counts and represent the graph as a probability distribution over these walks. To read more about anonymous walk embeddings, refer to <em>Ivanov et al., Anonymous Walk Embeddings (2018)</em>.</p>
  </li>
</ol>

<h2 id="neighborhood-aggregation">Neighborhood Aggregation</h2>

<p>Once embedding in done, we finally <strong>start with GNN</strong>.</p>

<p>We consider graph neural networks (GNNs) which ==take into account neighbors of each node== (i.e. their embeddings)</p>

<ul>
  <li>if you naively think of concatenating feature vector $f(i)$ into things such as adjacency matrix. Then this will be problematic as: what if you wanted to add a node to the graph? Then the graph size changed -&gt; adj matrix size change -&gt; new architecture.</li>
  <li>basically, the number of parameters is <strong>linear in the size of the graph</strong>, the network is dependent on the order of the nodes and does not accommodate dynamic graphs</li>
</ul>

<blockquote>
  <p><strong>Desired Properties</strong></p>

  <ul>
    <li>Invariant to node ordering</li>
    <li>Locality, operations depend on neighbors of a given node</li>
    <li>Number of parameters independent of graph size</li>
    <li>Model independent of graph structure</li>
    <li>Able to transfer across graphs</li>
  </ul>
</blockquote>

<p>The problem above can be <strong>solved</strong> by:</p>

<ul>
  <li>
    <p>aggregating information from neighboring nodes in a BFS manner</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220212005141979.png" alt="image-20220212005141979" style="zoom:50%;" /></p>
  </li>
  <li>
    <p>aggregating information in a chain, in a DFS manner</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220212005155734.png" alt="image-20220212005155734" style="zoom:50%;" /></p>
  </li>
</ul>

<p>Here we will discuss the first architecture, which can be visualized as:</p>

<ul>
  <li>for each node in the graph in turn,</li>
  <li>pick up the graph from that node as the root allowing all other nodes to dangle</li>
  <li>building a computation graph where that node is the root</li>
  <li>propagate and transform information from its neighbors, its neighbors’ neighbors etc, as shown below</li>
</ul>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220212005458064.png" alt="image-20220212005458064" style="zoom: 50%;" /></p>

<p>where:</p>

<ul>
  <li>
    <p>the information to collect from each vertex would be their <strong>node embedding</strong></p>
  </li>
  <li>
    <p>each grey box would contain <strong>weights</strong> for them to “transform”</p>
  </li>
</ul>

<p>Most graph neural networks are based on aggregating information into each node from it’s neighboring nodes in a layer in the above manner:</p>

\[h_i^l = \text{combine}^l \{ h_{i}^{l-1}, \text{aggregate}^l\{h_{j}^{l-1},j\in N(i)\} \}\]

<p>so that essentially:</p>

<ul>
  <li>$h_i^l$ is the feature representation of node $i$ <strong>at layer $l$</strong>
    <ul>
      <li>e.g $h_i^0$ is the 0 layer aggregation so $h_i^0 = f(i)$ is the raw embedding</li>
      <li>the feature vector $h_i^{i-1}$ of the previous <strong>layer embedding</strong></li>
    </ul>
  </li>
  <li>essentially we are doing for each $l$:
    <ul>
      <li>aggregate embedding from <strong>neighbors</strong></li>
      <li>combining with your <strong>previous embedding</strong></li>
    </ul>
  </li>
</ul>

<p>Next, we consider each node in turn, and generate a computation graph for each node where that node is the root. Finally, we will <strong>share the aggregation parameters</strong> across all nodes, for every layer of neighbors, as shown in Figure below:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220212012049523.png" alt="image-20220212012049523" style="zoom: 80%;" /></p>

<p>where the grey boxes are the aggregation parameter/weights.</p>

<p>Formalizing with weights:</p>

\[h_{i}^l = \sigma\left(B^l h_{i}^{l-1}+W^l \sum_{j \in N(i)}\frac{h_j^{l-1}}{|N(i)|} \right)\]

<p>where:</p>

<ul>
  <li>
    <p>this is essentially a <strong>recursive formula</strong>, the base case is:</p>

\[h_{i}^1 = \sigma\left(B^1 h_{i}^{0}+W^1 \sum_{j \in N(i)}\frac{h_j^{0}}{|N(i)|} \right)=\sigma\left(B^1 x_{i}+W^1 \sum_{j \in N(i)}\frac{x_j}{|N(i)|} \right)\]

    <p>for the $0$-th layer embedding is the same as the <strong>raw node embedding $x_i=f(i)$</strong>. Notice that ==embedding of the node itself== is included in this operation (along with its neighbors)!</p>
  </li>
  <li>
    <p>so technically each layer has two weights: <strong>$B^l$ is a matrix of weights for self-embedding</strong> and <strong>$W^l$ for neighbor embedding</strong>.</p>
  </li>
</ul>

<p>With this, we can now perform tasks such as <strong>node classification</strong>!</p>

<h3 id="supervised-node-classification">Supervised Node Classification</h3>

<p>For the task of node classification, given $m$ labeled nodes $i$ with labels $y_i$ we train a GNN by minimizing the objective:</p>

\[\mathcal{J}=\frac{1}{m}\sum_{i=1}^m \mathcal{L}(y^i,\hat{y}^i)\]

<p>where the prediction $\hat{y}^i$ will be some neural network output based on the <strong>layered embedding $h_i^l$</strong> (at the last layer) we discussed before.</p>

<h2 id="gnn-architecture">GNN Architecture</h2>

<p>Essentially each architecture varies by <strong>how they perform aggregation</strong>:</p>

\[h_i^l = \text{combine}^l \{ h_{i}^{l-1}, \text{aggregate}^l\{h_{j}^{l-1},j\in N(i)\} \}\]

<h3 id="graph-convolution-network">Graph Convolution Network</h3>

<p>A graph convolution network (GCN) (Kipf &amp; Welling 2017) has a similar formulation using a single matrix for both the neighborhood and self-embeddings:\</p>

\[\begin{align*}
h_{i}^l
&amp;= \sigma\left( \frac{1}{\hat{d}_i}W^l h_{i}^{l-1} + \sum_{j \in N(i)}\frac{\hat{A}_{i,j}}{\sqrt{\hat{d}_j \hat{d}_i}}W^lh_{j}^{l-1} \right)
\end{align*}\]

<p>where:</p>

<ul>
  <li>where $\hat{A}= A+I$ is the adjacency matrix including <strong>self loops</strong>, $\hat{d}_i$ is the degree in the graph with <strong>self loops</strong>, and $\sigma$ a non-linear activation function</li>
</ul>

<h3 id="grated-graph-neural-networks">Grated Graph Neural Networks</h3>

<p>This is the second architecture mentioned in this section, which is similar to DFS: instead of sharing weights across neighborhoods (i.e. horizontally), <strong>weights are shared across all the layers in each computation graph (vertically)</strong>.</p>

<p>In gated graph neural networks (Li, Tarlow, Brockschmidt &amp; Zemel 2016) nodes aggregate messages from neighbors using a neural network, and similar to RNNs parameter sharing is across layers:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220212014256440.png" alt="image-20220212014256440" style="zoom: 67%;" /></p>

<h1 id="transformers">Transformers</h1>

<p>While the addition of gates allows LSTMs/GRUs to handle more <strong>distant information</strong> than RNNs, they don’t completely solve the underlying problem:</p>

<ul>
  <li>passing information through an <strong>extended series of recurrent connections</strong> leads to information <strong>loss</strong>
    <ul>
      <li>i.e. “too distant” information are still lost</li>
    </ul>
  </li>
  <li>Moreover, the inherently sequential nature of recurrent networks makes it <strong>hard to do computation in parallel.</strong></li>
</ul>

<blockquote>
  <p>These considerations led to the transformers development of <strong>transformers</strong> – an approach to sequence processing that ==eliminates recurrent connections== and returns to architectures reminiscent of the fully connected networks</p>

  <ul>
    <li>Transformers map sequences of input vectors $(x_1, …,x_n)$ to sequences of output vectors $y_1,…,y_n$ of the <strong>same length.</strong>
      <ul>
        <li>if our input is a sequence of tokens, then we can image each token represented as vector by $x_i=  Ew_i$ for an embedding matrix (e.g. see <a href="#SGNS Embeddings">SGNS Embeddings</a>)</li>
      </ul>
    </li>
    <li>Transformers are made up of stacks of transformer blocks, which are <strong>multilayer</strong> networks made by combining
      <ul>
        <li>simple linear layers</li>
        <li>feedforward networks (i.e. NN)</li>
        <li>self-attention layers/multihead attention (key innovation)</li>
      </ul>
    </li>
  </ul>
</blockquote>

<h2 id="self-attention">Self-Attention</h2>

<blockquote>
  <p><strong>Self-attention</strong> allows a network to directly ==extract== and use information from ==arbitrarily large contexts== without the need to pass it through intermediate recurrent connections as in RNNs.</p>

  <ul>
    <li>this means when processing each item in the input for $y_i$, the model <strong>has access to all of the inputs up to and including</strong> the one under consideration</li>
    <li>moreover, the computation performed for each item is <strong>independent of other computations</strong>. This allows for ==parallel computation==!</li>
  </ul>
</blockquote>

<blockquote>
  <p><strong>Heuristics</strong>:</p>

  <p>Given some data points you already know, e.g. $x_i, y_i$ being the <strong>keys</strong> and <strong>values</strong></p>

  <ul>
    <li>
      <p>then, you are <strong>given a query</strong> $x$, which you want to know the result $y$. The idea is to output:</p>

\[y = \sum_{i=1}^n a(x,x_i)y_i\]

      <p>so essentially the output for a query $x$ will <strong>be weighted average</strong> for the $x_i$ (keys) that we already know. Since we can say that <strong>$x_i$ near $x$ would be more important</strong> to consider:</p>

\[\alpha (x,x_i) = \frac{k(x,x_i)}{\sum_{j}k(x,x_j)}\]

      <p>for example $k$ kernel could be a <strong>gaussian kernel</strong>.</p>
    </li>
  </ul>

  <p>Hence, attention is essentially $\alpha(x,x_i)$, a measure of <strong>how relevant keys are to a query</strong></p>
</blockquote>

<p>Graphically:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220207193040566.png" alt="image-20220207193040566" style="zoom: 50%;" /></p>

<p>where notice that:</p>

<ul>
  <li>inputs and outputs of the same length</li>
  <li>when processing each item in the input for $y_i$, the model <strong>has access to all of the inputs up to and including</strong> the one under consideration</li>
</ul>

<p>Then, a <strong>simple attention model</strong> would be to consider $y_i$ being some <strong>weighted version</strong>:</p>

\[y_i = \sum_{j \le i} \alpha_{ij} x_j\]

<p>where $\alpha_{ij}$ aims to capture the <strong>similarity/relevance</strong> of input $x_j$ for the <strong>current input $x_i$</strong>:</p>

\[\alpha_{ij} = \text{softmax}( \text{score}(x_i, x_j) ) = \frac{\exp ( \text{score}(x_i,x_j) )}{\sum_{k=1}^i \text{exp}( \text{score}(x_i , x_k))}, \quad \forall j \le i\]

<p>where</p>

<ul>
  <li>
    <p>the key aim is to have $\alpha_{ij}$ compare <strong>an item of interest</strong> (i.e. $x_i$) to a <strong>collection of other items</strong> (i.e. $x_j, \forall j \le i$) in a way that ==reveals their relevance== in the current context</p>
  </li>
  <li>
    <p>a simple example would be relevance = similarity:</p>

\[\text{score}(x_i, x_i) = x_i \cdot x_j\]
  </li>
</ul>

<blockquote>
  <p><strong>Intuition</strong></p>

  <p>Though the above is simplified version it represents the core of an attention-based approach:</p>

  <ul>
    <li>a set of ==comparisons== to <strong>relevant</strong> items in some context</li>
    <li>normalization of those scores to provide a probability distribution</li>
    <li>the output of self-attention $y$ is a <strong>weighted sum</strong> of the inputs using the above distribution</li>
  </ul>
</blockquote>

<p>Transformers allow us to create a more sophisticated way of representing <strong>how words can contribute</strong> to the representation of longer inputs. In essence, we will have <strong>three input embeddings</strong>:</p>

<ul>
  <li><strong>query</strong>: current focus of attention $q_i = W^Q x_i$</li>
  <li><strong>key</strong>: the role of preceding input $k_j=W^Kx_j$, which will be compared against current focus $q_i$</li>
  <li><strong>value</strong>: used to compute the output for the current focus $v_j = W^V x_j$</li>
</ul>

<p>All the intermediate values are of dimension $d$, which means $W^Q,W^K, W^V$ <strong>all will be $\mathbb{R}^{d\times d}$</strong></p>

<ul>
  <li>this will be changed when we have a multi-headed attention, because technically we <strong>only needed $W^Q, W^K$ to be in the same dimension</strong>. (as we need dot products)</li>
</ul>

<p>These <strong>embedded inputs</strong> are then used for:</p>

\[\begin{align*}
\text{score}(x_i, x_j) &amp;= q_i \cdot k_j\\
\alpha_{ij} &amp;= \text{softmax}( \text{score}(x_i, x_j) )\\
y_i &amp;= \sum_{j \le i} \alpha_{ij} v_j
\end{align*}\]

<p>where:</p>

<ul>
  <li>the second step is the same as in our simple model</li>
  <li>now $q_i \cdot k_j$ measures the <strong>relevance</strong> between a <strong>query and key</strong> (e.g. a SQL search <em>query</em>, and the data <em>keys</em> you have in your table)</li>
  <li>finally, the weighted sum of $v_j = W^V x_j$ consists of the focus $x_i$ itself outputs the result <strong>value</strong></li>
</ul>

<p>Graphically, for computing $y_3$ in our previous example:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220207203739212.png" alt="image-20220207203739212" style="zoom: 50%;" /></p>

<p>note that:</p>

<ul>
  <li>
    <p>in reality, the dot product for score could be <strong>very large</strong>, so that having $\text{softmax}$ later on rasing it to some power will cause overflow. Hence we usually do:</p>

\[\text{score}(x_i, x_j) = \frac{q_i \cdot k_j}{\sqrt{d_k}}\]

    <p>for $d_k$ being the <strong>dimensionality of the query/key vector</strong>.</p>
  </li>
</ul>

<p>Finally, we can convert everything to a <strong>single matrix-matrix multiplication</strong> as each $y_i$ is independent:</p>

\[Q = XW^Q; K = XW^K; V=XW^V\]

<p>where we are packing the input embeddings of the $N$ tokens/words of the input sequence into a single matrix $X \in \mathbb{R}^{N \times d}$.</p>

<ul>
  <li>i.e. each <strong>row vector</strong> is the embedding of a token</li>
  <li>then $Q,K,V \in \mathbb{R}^{N\times d}$</li>
</ul>

<p>Then the final output can be done in a <strong>single shot of $Y \in \mathbb{R}^{N \times d}$</strong> as:</p>

\[Y = \text{SelfAttention}(Q,K,V) = \left[\text{Softmax}\left(\frac{QK^T}{\sqrt{d_k}}\right)\right]V\]

<p>where:</p>

<ul>
  <li>
    <p>this can be parallelized and is fast as it is just a matrix-matrix multiplication</p>
  </li>
  <li>
    <p>==but for langue modelling in guess next word==, the part $QK^T$ compute the <strong>full matrix</strong>:</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220207204740770.png" alt="image-20220207204740770" /></p>

    <p>but we obviously want $q_1 \cdot k_2$ to be not there (so that $\text{Softmax}$ of this gives $0$). Hence we will need <strong>upper-triangular values to be set to $-\infty$</strong>. (otherwise we are “seeing the next word” when we want to predict the next word)</p>
  </li>
  <li>
    <p>this makes it clear that the computation is $O(N^2)$ for $N$ being the length of text you are inputting. Hence, generally you want to <strong>avoid</strong> putting in long texts such as Wikipedia pages/novels.</p>
  </li>
</ul>

<hr />

<p><em>For Example</em>:</p>

<p>Essentially what happens is that each output $y_t$ will take into <strong>account the entire input sequence $x_i$</strong>, but have <strong>weights</strong> on more relevant ones to the key (i.e. $x$) to spit out $y_t$ as <strong>a weighted average of the values</strong> (i.e. $y_i$).</p>

<ul>
  <li>
    <p>think of this as output $y$ being a weighted average of:</p>

\[y = \sum_i \alpha(x,x_i)\cdot y_i\]

    <p>for $x$ being the query, $y$ being what we want, and $x_i,y_i$ are known inputs to be keys and values.</p>
  </li>
</ul>

<p>A concrete example would be. consider computing $y_{t=1}$ from three inputs of dimension $4$:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210164535973.png" alt="image-20220210164535973" style="zoom: 50%;" /></p>

<p>Then, essentially this is what happens:</p>

<ol>
  <li>
    <p>Compute key, value, query representation of all input (from some embedding matrix $W^Q,W^K,W^V$)</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210164631592.png" alt="image-20220210164631592" style="zoom: 50%;" /></p>

    <p>so essentially query $q$ is the final question we are interested in</p>
  </li>
  <li>
    <p>Calculate the <strong>attention score</strong> for $y_{t=1}$, essentially meaning how important each data key $k_1,…,k_3$ is relevant to the query</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210165117963.png" alt="image-20220210165117963" style="zoom: 50%;" /></p>

    <p>which basically is doing a SoftMax as mentioned before</p>
  </li>
  <li>
    <p>Then, you use the attention score to <strong>scale the values</strong> (i.e. doing $\alpha(x,x_i)y_i$):</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210165421872.png" alt="image-20220210165421872" style="zoom: 50%;" /></p>
  </li>
  <li>
    <p>Finally, you sum up the weighted values to spit out $y_{t=1}$:</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210165351646.png" alt="image-20220210165351646" style="zoom: 50%;" /></p>

    <p>(note that technically value would be of dimension $4$, so that the final output has the same dimension as input)</p>
  </li>
</ol>

<blockquote>
  <p><strong>Take Away Message</strong></p>

  <p>Like RNN architectures that remembers information of a sequence, self-attention does it even <strong>better</strong> by <strong>taking the entire input sequence into consideration</strong> at each time for output.</p>

  <ul>
    <li>this means parallelization of code</li>
    <li>i.e. <strong>each output</strong> (e.g. token) will have attended to (with weights) the <strong>entire input sequence</strong></li>
  </ul>
</blockquote>

<h2 id="transformer-blocks">Transformer Blocks</h2>

<p>The core of a transformer composes of <strong>transformer blocks</strong>, which essentially consists of:</p>

<ul>
  <li><strong>self-attention</strong> layer (e.g. a multihead attention layer = multiple self-attention layer)</li>
  <li><strong>normalization</strong> layer</li>
  <li><strong>feedforward</strong> layer</li>
</ul>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Single Self-Attention Layer</th>
      <th style="text-align: center">Multihead Self-Attention</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220209004304005.png" alt="image-20220209004304005" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220209004414819.png" alt="image-20220209004414819" style="zoom:67%;" /></td>
    </tr>
  </tbody>
</table>

<p>where here:</p>

<ul>
  <li>we will mainly address the transformer block with single self-attention first.</li>
</ul>

<p>From the left figure, we can summarize what we are doing as:</p>

\[\begin{align*}
z &amp;= \text{LayerNorm}(x+ \text{SelfAttn}(x))\\
y &amp;= \text{LayerNorm}(z+ \text{FFNN}(z))
\end{align*}\]

<p>where we are outputting $y$</p>

<ul>
  <li>
    <p>we have <strong>Layer normalization</strong> (or layer norm) because it can be used to <strong>improve training performance</strong> in deep neural networks by keeping the values of a hidden layer in a range that <strong>facilitates gradient-based training</strong>:</p>

\[\text{LayerNorm}(x) = \gamma \hat{x} + \beta\]

    <p>for $\gamma, \beta$ are <strong>learnable parameters</strong> representing gain and offset, and $\hat{x}$ is the <strong>normalized version of $x$</strong>:</p>

\[\hat{x} = \frac{x-\mu}{\sigma}\]
  </li>
  <li>
    <p><strong>residual connection</strong>, as mentioned before, allows information from the activation going forward and the gradient going backwards to skip a layer <strong>improves learning</strong> and gives higher level layers <strong>direct access to information from the past</strong></p>
  </li>
  <li>
    <p><strong>input and output dimensions</strong> of these blocks are <strong>matched</strong>/the same so they can be stacked just as was the case for stacked RNNs.</p>
  </li>
</ul>

<p>(but what are the inputs $x$? You will soon see that the vector $x$ would come from $x+p$ which is the embedding of the input + positional embedding of the input)</p>

<blockquote>
  <p><strong>Note</strong></p>

  <p>Now you may wonder what is the embedding used for tokens, i.e. $x$?</p>

  <ul>
    <li>e.g. BERT uses Wordpiece embeddings for tokens.</li>
    <li>In fact, the full input embedding for a token is a <strong>sum</strong> of the <strong>token embeddings</strong>, the <strong>segmentation embeddings</strong>, and the <strong>position embeddings</strong>.</li>
  </ul>
</blockquote>

<h3 id="multihead-attention">Multihead Attention</h3>

<p>Why are we not satisfied with single self-attention? A single word in a sentence can relate to each other in <strong>many different ways</strong> simultaneously!</p>

<ul>
  <li>It would be difficult for a single transformer block to learn to capture all of the different kinds of parallel relations among its inputs. (e.g. syntactic, semantic, and discourse relationships)</li>
  <li>Transformers address this issue with <strong>multihead self-attention</strong> layers.</li>
</ul>

<p>Therefore, the idea is that we have sets of <strong>self-attention layers</strong>, called ==heads==, that <strong>reside in a parallel fashion</strong>. The aim is that we want <strong>each self-attention layer/head</strong> capture <strong>different</strong> aspects of the relationships that exists among inputs:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220209010338126.png" alt="image-20220209010338126" style="zoom: 67%;" /></p>

<p>where essentially, in the end we need input and output <strong>both</strong> of <strong>dimension $d$</strong>:</p>

<ul>
  <li>
    <p>here we have four heads, $h=4$</p>
  </li>
  <li>
    <p>since we want to capture different relationships, <strong>each head</strong> consist of its <strong>own set of key, query, value embedding matrix</strong> $W_i^K,W_i^Q,W_i^V$ for head $i$</p>
  </li>
  <li>
    <p>then, what we do inside each head/self-attention is the same as what we have covered before</p>
  </li>
  <li>
    <p>remember that embeddings does not need to have the same dimension as input (which is $d$). Also recall that we <strong>only needed key and query to be of the same dimension</strong>, therefore, here we have:</p>

\[W_i^Q,W_i^K \in \mathbb{R}^{d \times d_k};\quad W_i^V \in \mathbb{R}^{d \times d_v}\]

    <p>Then, if we pack them with inputs:</p>

\[Q_i = XW_i^Q \in \mathbb{R}^{N \times d_k}; \quad K_i = XW_i^K \in \mathbb{R}^{N \times d_k};\quad  V_i=XW_i^V\in \mathbb{R}^{N \times d_v}\]

    <p>for <strong>each</strong> head $i$. Then the final output <strong>for each head</strong> is essentially <strong>the same as mentioned before</strong>:</p>

\[A_{i}(Q_i, K_i, V_i) = \text{SelfAttn}_i(Q_i,K_i,V_i) = \left[\text{Softmax}\left(\frac{Q_iK_i^T}{\sqrt{d_k}}\right)\right]V_i\]

    <p>which is of shape $N \times d_v$</p>
  </li>
  <li>
    <p>Remember that input of <strong>$N$ tokens</strong> of dimension $d$ has size $X \in \mathbb{R}^{N \times d}$. Now we have essentially $h \times N \times d_v$. Therefore, we perform:</p>

    <ol>
      <li>concatenating the outputs $A_i$ from each head</li>
      <li>using a linear projection $W^O \in \mathbb{R}^{hd_v \times d}$ for the concatenated outputs.</li>
    </ol>

    <p>Therefore we have:</p>

\[\text{MultiHeadAttn}(X) = [\text{head}_1 \oplus ... \oplus \text{head}_h] W^O\\
\text{head}_i = \text{SelfAttn}_i(Q_i,K_i,V_i)\]

    <p>so that the final output is of size $N \times d$, which is the same as input.</p>
  </li>
</ul>

<p>Then, since output size is the same as input size, we can stack them easily like:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220209012338218.png" alt="image-20220209012338218" style="zoom: 67%;" /></p>

<p>where in this case the next layer is also a multihead attention layer.</p>

<ul>
  <li>notice that the input is now $X+P$, which is input embedding + positional embedding, which we will cover next</li>
</ul>

<h3 id="positional-embedding">Positional Embedding</h3>

<p>How does a transformer <strong>model the position of each token</strong> in the input sequence? With <strong>RNNs</strong>, information about the order of the inputs was ==built into== the structure of the model</p>

<ul>
  <li>we want to learn the relative, or absolute, positions of the tokens in the input</li>
</ul>

<p><strong>Solution</strong>: modify input embedding by $X:= X+P$ for $P$ being ==positional embedding==.</p>

<p>For example, we can do the following being the <strong>absolute positional embedding</strong>:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220209013143904.png" alt="image-20220209013143904" style="zoom:67%;" /></p>

<p>where:</p>

<ul>
  <li>A potential problem with the simple absolute position embedding approach is that there will be plenty of training examples for the initial positions in our inputs and correspondingly fewer at the outer length limits</li>
  <li>here we are mapping each input embedding vector $x_i$ to a <strong>scalar $p_i$</strong>, which is absolute positional encoding as it is <strong>relative to a global origin</strong> of $0$.
    <ul>
      <li>problems of this include that numbers/encoding will be big for long sequences, which could cause exploding gradients</li>
      <li>if we simply divide by sequence length, the problem is $4/5=8/10=12/15$ all equals $0.8$ but signifies different position.</li>
    </ul>
  </li>
</ul>

<p>It turns out that what we use is this</p>

\[P_{pos,2i} = \sin\left(\frac{pos}{10000^{2i/d}}\right),\quad P_{pos,2i+1} = \cos\left(\frac{pos}{10000^{2i/d}}\right)\]

<p>where we essentially use a <strong>combination of sine and cosine</strong>, $\text{pos}$ is the position of word in the sentence</p>

<ul>
  <li>(resource on explaining how we got there: https://towardsdatascience.com/master-positional-encoding-part-i-63c05d90a0c3)</li>
</ul>

<h2 id="encoder-and-decoder">Encoder and Decoder</h2>

<blockquote>
  <p><strong>Encoder-decoder networks</strong>, or sequence-to-sequence networks, are models capable of generating contextually appropriate, arbitrary length, output sequences.</p>

  <ul>
    <li>an <strong>encoder</strong> network that takes an input sequence and <strong>creates a contextualized representation</strong>, $c$</li>
    <li>a <strong>decoder</strong> then takes that context $c$ which generates a <strong>task specific output sequence</strong></li>
  </ul>
</blockquote>

<p>To be more specific</p>

<ul>
  <li>An <strong>encoder</strong> that accepts an input sequence, $x_1,…x_n$, and generates a corresponding sequence of contextualized representations, $h_1,…h_n$</li>
  <li>A <strong>context vector</strong>, $c$, which is a function of $h_1,…,h_n$, conveys the essence of the input to the decoder.</li>
  <li>A <strong>decoder</strong>, which accepts $c$ as input (first hidden state) and generates an arbitrary length sequence of hidden states $h_1,…,h_m$, from which a corresponding sequence of output states $y_1,…,y_m$, can be obtained</li>
</ul>

<blockquote>
  <p>The important thing of this idea is that LSTMs, convolutional networks, and Transformers <strong>can all be employed as encoders or decoders</strong>.</p>
</blockquote>

<p>Therefore, you will soon see that there are three main types of transformers:</p>

<ul>
  <li>encoder only</li>
  <li>decoder only</li>
  <li>encoder + decoder</li>
</ul>

<hr />

<p><em>For Example</em>, as you might have seen before, consider the simple RNN encoder-decoder architecture for MT:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210183154677.png" alt="image-20220210183154677" style="zoom:67%;" /></p>

<p>where notice that:</p>

<ul>
  <li>
    <p>the <strong>context vector</strong> is simply the <strong>last state of encoder</strong> (you will see how useful Attention is soon)</p>
  </li>
  <li>The <strong>decoder</strong> autoregressively generates a sequence of outputs (i.e. output of previous state becomes input of next state, like a regression), an element at a time, until an end-of-sequence marker is generated.</li>
  <li>Each hidden state of decoder is conditioned on the previous hidden state and the output generated in the previous state</li>
</ul>

<hr />

<h3 id="attention">Attention</h3>

<p>This is also referred to as <strong>encoder-decoder attention</strong></p>

<hr />

<p><em>Recall</em>: this is useful when we have a encoder and decoder of RNN/LSTM/GRU like the following:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220209015006640.png" alt="image-20220209015006640" style="zoom:80%;" /></p>

<p>where:</p>

<ul>
  <li><strong>without attention</strong>, the input to decoder would <strong>only be the last state</strong> of encoder. So attention mechanism is a solution to the bottleneck problem, a way of allowing the <strong>decoder</strong> to get information from <strong>all the hidden states of the encoder</strong> (essentially by a weighted sum over all the states)</li>
  <li>then, the <strong>weights $\alpha_{ij}$</strong> will focus on (‘attend to’) a particular part of the source text that is <strong>relevant for the token the decoder is currently producing</strong>.
    <ul>
      <li>this means that $c_i$ will be different for each token in decoding</li>
    </ul>
  </li>
</ul>

<hr />

<blockquote>
  <p><strong>Goal</strong></p>

  <p>We want to find a way that allows the <strong>decoder</strong> to get information from <strong>all the hidden states of the encoder</strong>, not just the last hidden state.</p>

  <ul>
    <li>we can’t use the entire tensor of encoder hidden state vectors directly as the context for the decoder, as the number of hidden states <strong>varies</strong> with the size of the input</li>
  </ul>
</blockquote>

<p>Essentially, the idea of attention is similar to that of ==self-attention==, but the difference is that the <strong>query</strong> we care about is the <strong>decoding state $h^d_t$</strong>, whereas in self-attention both query and keys are the input.</p>

<ul>
  <li>
    <p>i.e. here we care about: <strong>how relevant is each information from encoder $h^e_i$ to the current decoding step $h^d_t$?</strong></p>
  </li>
  <li>
    <p>therefore, the idea is the same: we are doing some kind of <strong>weighted average of keys $h^e_i$</strong>.</p>
  </li>
</ul>

<blockquote>
  <p><em>Recall</em></p>

  <p>Given some query $x$, and we want the prediction $y$:</p>

\[y = \sum_{i=1}^n a(x,x_i)y_i\]

  <p><strong>Attention</strong> is essentially weights $\alpha(x,x_i)$, a measure of <strong>how relevant keys $x_i$ are to a query $x$</strong></p>
</blockquote>

<p>Therefore, the idea for <strong>encoder-decoder attention</strong> is to consider relevant between $h^e_j,\forall j$ and the current query $h_{i-1}^d$ (we want $h_i^d$, which is not computed yet)</p>

<ol>
  <li>the <strong>decoder</strong> receives as input the <strong>encoder encoder output sequence</strong> $c_i=c_i(h^e_1, …,h^e_t)$
    <ul>
      <li>essentially everything the <strong>encoder</strong> has got</li>
    </ul>
  </li>
  <li>different parts of the output sequence <strong>pay attention</strong> to <strong>different parts of the input sequence</strong>
    <ul>
      <li>essentially, given that we want to compute $h^d_t$, how much weight should be give to each input/stuff we know $h^e_{j}, \forall j$</li>
    </ul>
  </li>
</ol>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Simple Encoder-Decoder</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210185934352.png" alt="image-20220210185934352" style="zoom: 67%;" /></td>
    </tr>
  </tbody>
</table>

<p>where essentially:</p>

<ul>
  <li>
    <p>This context vector, $c_i$, is generated anew with <strong>each decoding step $i$</strong> and takes all of the encoder hidden states into account by a weight computed as:</p>

\[\alpha_{ij}  = \frac{\exp \left( \text{score}(h^d_{i-1},h^d_j ) \right)}{\sum_{k=1}^i \text{exp}( \text{score}(h^d_{i-1},h^d_j))}, \quad \forall j\]

    <p>which obviously <strong>depends on which output stage $i=t$ decoder is at</strong>. Then, simply do:</p>

\[c_i = \sum_{j} \alpha_{ij}h_j^e\]

    <p>being a weighted sum of all the encoder hidden states.</p>
  </li>
  <li>
    <p>then, obviously it is left for us to design a <strong>score function</strong> (e.g. dot product) that reflects the <strong>relevance between $h_{i-1}^d,h^e_{j}$</strong>, so that we could “pay more attention” to only specific $h_j^e$</p>
  </li>
</ul>

<p>Another more complicated example would be:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Encoder-Decoder with Bidirectional</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220207210550496.png" alt="image-20220207210550496" style="zoom: 50%;" /></td>
    </tr>
  </tbody>
</table>

<p>where</p>

<ul>
  <li>
    <p>the context vector is a function $c_i=c_i(o_1, …,o_t)$ instead, for $o_t= V\begin{bmatrix}h_t\\bar{h}_t\end{bmatrix}$ for a bidirectional layer shown below, or sometimes just $o_i = [ h_j;\bar{h}_j]^T$.</p>
  </li>
  <li>
    <p>specifically, in this <strong>bidirectional RNN</strong> as encoder, the context vector is computed as:</p>

\[c_i = \sum_j \alpha_{ij} [ h_j;\bar{h}_j]^T\]

    <p>which is a <strong>weighted sum</strong> over <strong>all hidden states in the encoder</strong> (but will have a larger emphasis on $h_i$). And the weightings $\alpha_{ij}$ are computed by:</p>

\[\alpha_{ij}  = \frac{\exp ( \text{score}(x_i,x_j) )}{\sum_{k=1}^i \text{exp}( \text{score}(x_i , x_k))}, \quad \forall j\]

    <p>which basically represents the <strong>amount of attention</strong> output $o_i$ will give to input word $x_j$, for some score function.</p>
  </li>
</ul>

<h2 id="word-embeddings">Word Embeddings</h2>

<p>For more details, please refer to the <strong>NLP notes</strong> on the section “Vector Semantics”.</p>

<p>The general idea is that:</p>

<ul>
  <li>we want to replace 1-hot word representation with lower dimensional feature vector for each word</li>
  <li>we can do this by learning word embedding from <strong>large unsupervised text corpus</strong>
    <ul>
      <li>e.g. distribution models, logistic regression models (e.g. Word2Vec), etc.</li>
    </ul>
  </li>
</ul>

<p>The goal is to find <strong>an embedding matrix $E$</strong> that takes a one-hot encoded word and returns an embedding. The general approach <strong>machine learning</strong> takes is to do the following:</p>

<ol>
  <li>input: each word in a vocabulary being a one-hot encoded vector</li>
  <li>initialize an embedding matrix $E$ randomly.</li>
  <li>for each sentence/window of words, <strong>mask one word out</strong></li>
  <li>now, given the context words $w_c$, our job is to output <strong>vector of probability</strong> $y$ for the masked word, so that $y[i]$ corresponds to the probability that word $i$ in the dictionary is the masked word
    <ol>
      <li>convert all words to $e_c = Ew_c$</li>
      <li>put it in a neural network, e.g. FFNN, to learn the weights and <strong>update the embedding matrix $E$</strong></li>
    </ol>
  </li>
  <li>After minimization, output $E$</li>
</ol>

<p>For instance, consider the following sentence in our training data:</p>

\[\text{Mary had a little lamb whose \textbf{fleece} was white as snow}\]

<p>We would like to mask the word <em>fleece</em> out. Then, we construct the following network:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210135056641.png" alt="image-20220210135056641" style="zoom:50%;" /></p>

<p>The idea is to <strong>learn by predicting the masked word</strong>, e.g. <em>fleece</em></p>

<ul>
  <li>what is the probability that the masked word (i.e. <em>fleece</em> is masked) given the current context words/sentences in the window</li>
  <li>$\theta$ will be the weights in the FFNN, which we don’t care about in the end</li>
  <li>since we are just masking words in a sentence, we are creating a supervised training set from <strong>unsupervised set</strong>!</li>
</ul>

<p>Once you trained your embedding matrix, you can even <strong>fine tune that to your specific task/vocabulary</strong>. For example:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210135530591.png" alt="image-20220210135530591" style="zoom: 50%;" /></p>

<p>where input will use an embedding matrix $E$ that we have trained before</p>

<ul>
  <li>
    <p>then use the pre-trained embedding and update that during gradient descent as well</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tf</span><span class="p">.</span><span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">Embedding</span><span class="p">(</span>
    <span class="n">input_dim</span><span class="o">=</span><span class="nb">len</span><span class="p">(</span><span class="n">ENCODER</span><span class="p">.</span><span class="n">get_vocabulary</span><span class="p">())</span><span class="o">+</span><span class="mi">2</span><span class="p">,</span>
    <span class="n">output_dim</span><span class="o">=</span><span class="n">LSTM_param</span><span class="p">[</span><span class="s">'units'</span><span class="p">],</span>
    <span class="n">embeddings_initializer</span><span class="o">=</span><span class="n">keras</span><span class="p">.</span><span class="n">initializers</span><span class="p">.</span><span class="n">Constant</span><span class="p">(</span><span class="n">EMBEDDING_MATRIX</span><span class="p">),</span> <span class="c1"># pretrained embedding
</span>    <span class="n">trainable</span><span class="o">=</span><span class="bp">False</span> <span class="c1"># whether if to fine tune
</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
</ul>

<h2 id="beam-search">Beam Search</h2>

<p>The decoding algorithm we gave above for generating translations has a <strong>problem</strong> (as does the autoregressive generation we introduced in Chapter 9 for generating from a conditional language model:</p>

<ol>
  <li>at each time step in decoding, the output $y_t$ is chosen by computing a softmax over the set of possible outputs</li>
  <li>then, <strong>only</strong> the vocabulary with the <strong>highest probability</strong> is picked
    <ul>
      <li>this is also called <strong>greedy decoding</strong></li>
    </ul>
  </li>
</ol>

<p>Indeed, greedy search is not optimal, and <strong>may not find the highest probability translation</strong> as in the end we have a list of tokens.</p>

<p>For instance, consider the goal of <strong>generating a sentence</strong> from the decoder:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210200927842.png" alt="image-20220210200927842" style="zoom:67%;" /></p>

<p>where we see that:</p>

<ul>
  <li>the <strong>most probable sentence</strong> should be “ok ok <code class="language-plaintext highlighter-rouge">&lt;/s&gt;</code>” with probability $0.4 \times 0.7 \times 1$</li>
  <li>the <strong>greedy</strong> algorithm would have picked <em>yes</em> as the first word, which is suboptimal</li>
</ul>

<p>Now, since this tree is growing as $t$ grows, this turns out to be an <strong>exhaustive search</strong> (dynamic programming will not work). This is obviously not good, so we instead consider the method called <strong>beam search</strong>:</p>

<ol>
  <li>instead of choosing the best token to generate at each timestep, we <strong>keep $k$ possible tokens at each step</strong></li>
  <li>At subsequent steps, <strong>each</strong> of the $k$ best hypotheses is extended incrementally by being passed to <strong>distinct decoders</strong>
    <ul>
      <li>i.e. if we have $k=2$ for the first level, then we will have <strong>2 distinct decoders</strong> for the next, as shown below</li>
    </ul>
  </li>
  <li>Each of these hypotheses is scored by $P(y_i \vert  x,y_{&lt;i})$, basically just multiplying the probability.</li>
  <li>Then, we <strong>prune the hypothesis</strong> down to the best $k$, so there are <strong>always only $k$ decoders</strong>.</li>
</ol>

<p>Graphically:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210201708295.png" alt="image-20220210201708295" style="zoom:67%;" /></p>

<p>where we chose $k=2$ as an example:</p>

<ul>
  <li>at $t=2$, we have four hypothesis initially, but then we pruned down to $2$ again. Therefore, we always have only $k=2$ decoders at a time.</li>
</ul>

<p>More details on how we compute the probability score:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210202257019.png" alt="image-20220210202257019" style="zoom:67%;" /></p>

<p>Then, we if use <strong>log probability</strong>, at each step, to compute the probability of a partial translation, we simply <strong>add</strong> the log probability of the prefix translation so far to the log probability of generating the next token:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210202356694.png" alt="image-20220210202356694" style="zoom: 67%;" /></p>

<p>where notice that:</p>

<ul>
  <li>here we <strong>terminated with 2 sentences of different length</strong>. This maybe problematic as sentences with shorter length will have a higher probability</li>
</ul>

<p>Therefore, we would consider some <strong>normalization</strong> against the length of sentences:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210202626578.png" alt="image-20220210202626578" style="zoom: 80%;" /></p>

<p>for a sentence of length $T$.</p>

<p>This ends up with the following algorithm:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210202738922.png" alt="image-20220210202738922" style="zoom:80%;" /></p>

<blockquote>
  <p><strong>Note</strong></p>

  <p>What do we do with the resulting $k$ hypotheses?</p>

  <ul>
    <li>In some cases, all we need from our MT algorithm is the single best hypothesis, so we can return that.</li>
    <li>In other cases our downstream application might want to look at all $k$ hypotheses, so we can pass them all (or a subset) to the downstream application with their respective scores.</li>
  </ul>
</blockquote>

<h2 id="encoder-decoder-with-transformers">Encoder-Decoder with Transformers</h2>

<p>The encoder-decoder architecture can also be <strong>implemented using transformers</strong> (rather than RNN/LSTMs) as the component modules</p>

<ul>
  <li>An <strong>encoder</strong> essentially consist of <strong>stacks of transformer blocks</strong>, typically $6$ layers</li>
  <li>A <strong>decoder</strong> as well consists of stacks of transformer blocks</li>
</ul>

<p>For instance, it could look like the following:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210212353425.png" style="zoom:67%;" /></p>

<p>where we notice that:</p>

<ul>
  <li>the only thing we don’t know is <strong>cross-attention</strong>, which is also very <strong>similar to the encoder-decoder attention</strong>, which we have covered before.</li>
  <li>the <strong>input of decoder</strong> is the auto-regressive output of itself generated</li>
</ul>

<hr />

<p><strong>A more detailed visualization at decoding</strong>:</p>

<p>Essentially for decode, we usually do it <strong>auto-regressively</strong> so that suppose our ==decoder== has <code class="language-plaintext highlighter-rouge">Attention</code> with <code class="language-plaintext highlighter-rouge">MAX_SEQ_LEN=32</code>. Then:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/transformer_decoding_1.gif" style="zoom: 50%;" /></p>

<p>the input to decoder done <strong>auto-regressively</strong>:</p>

<ul>
  <li>at $t=0$, there is no input/or we have <code class="language-plaintext highlighter-rouge">&lt;pad&gt;&lt;pad&gt;...&lt;s&gt;</code> for filling the <code class="language-plaintext highlighter-rouge">32</code> sequence length and a positional embedding</li>
  <li>get cross attention from encoder output</li>
  <li>generate an output “<code class="language-plaintext highlighter-rouge">I</code>” and feed back as input at $t=1$. So we <strong>get <code class="language-plaintext highlighter-rouge">&lt;pad&gt;&lt;pad&gt;...&lt;s&gt;I</code> as the input of decoder</strong></li>
  <li>repeat until <code class="language-plaintext highlighter-rouge">&lt;/s&gt;</code> is generated</li>
</ul>

<blockquote>
  <p><strong>Note</strong>: Comparing with using a RNN based decoder, when we are generating output $o_{t+1}$, the <em>difference</em> is:</p>

  <ul>
    <li><strong>transformer</strong> based can <strong>only condition/read in</strong> $o_{t-31},…,o_t$ for a max sequence length of <code class="language-plaintext highlighter-rouge">32</code> for the attention layer</li>
    <li><strong>RNN</strong> based can use $h_t$ which ==encodes all previous information==. However, it has ==no attention/is sequential==.</li>
  </ul>
</blockquote>

<hr />

<p>To zoom in a bit, we see that</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210212608845.png" alt="image-20220210212608845" style="zoom: 67%;" /></p>

<p>Now, we have:</p>

<ul>
  <li>
    <p>an <strong>encoder</strong> that takes the source language input words $X=x_1, …., x_t$ and maps them to an output representation $H_{enc}=h_1,…,h_t$, as with the encoders discussed before</p>
  </li>
  <li>
    <p>a <strong>decoder</strong> then attends to the <strong>encoder representation</strong> and generates the target words one by one</p>

    <ul>
      <li>here, at each timestep conditioning on the source sentence (weighted by attention) and the previously generated target language words (see previous figure, essentially output $h^d_{t-1}$ is piped in as input)</li>
    </ul>
  </li>
  <li>
    <p><strong>Cross-attention</strong> has the same form as the <strong>multi-headed self-attention</strong> in a normal transformer block, except that while the queries as usual come from the previous layer of the decoder, the keys and values come from the output of the encoder. (i.e. the input/output is similar to the <strong>encoder-decoder attention</strong> discussed in <a href="#Attention">Attention</a>)</p>
  </li>
  <li>
    <p><strong>Self-attention</strong> in <strong>encoder</strong> is allowed to look ahead at the entire source language text, i.e. weights will be distributed on the entire input sequence</p>
  </li>
  <li>
    <p><strong>Casual Self-attention</strong> in <strong>decoder</strong> is what we have covered in the section <a href="#Self-Attention">Self-Attention</a>, so that we only have <strong>previous label inputs available</strong>:</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220207193040566.png" alt="image-20220207193040566" style="zoom: 50%;" /></p>

    <p>(otherwise we will be cheating, as we are predicting the next word yet the next word is already available to us). This is sometimes also referred to as <strong>left-to-right attention</strong>, as it attends to input sequentially left to right.</p>
  </li>
</ul>

<p>Since the only thing “new” here is the cross attention, we focus on that. Essentially we need to consider what is $x,x_i,y_i$ analogue from the equation $\sum \alpha(x,x_i)\cdot y_i$ in this case.</p>

<ul>
  <li>
    <p>the <strong>query</strong>, i.e. $x$, will be sequence of <strong>the output of previous decoder layer</strong> $H^{dec[i-1]}$. We want to know the “answer” to this query</p>
  </li>
  <li>
    <p>the <strong>key, value</strong> will be the <strong>final output of encoder</strong> $H^{enc}=h_1 ,…,h_t$ (stuff we want to pay attention to)</p>
  </li>
</ul>

<p>Then, since it is similar to self-attention, we will have <strong>weights</strong> $W^Q,W^K,W^V$:</p>

\[Q=W^QH^{dec[i-1]};\quad K=W^KH^{enc};\quad V=W^VH^{enc}\]

<p>Then the rest is the same as the weights we calculated in self-attention:</p>

\[\text{CrossAttention}(Q,K,V) = \left[\text{Softmax}\left(\frac{QK^T}{\sqrt{d_k}}\right)\right]V\]

<p>The cross attention thus allows the decoder to attend to each of the source language words with weights that depend on current focus (query).</p>

<h2 id="transformer-models">Transformer Models</h2>

<p>The big thing to distinguish between models would be:</p>

<ul>
  <li>encoder/decoder or both?</li>
  <li><strong>what is the optimization objective</strong>?
    <ul>
      <li>e.g. masked word to predict next, then likely a <strong>decoder only transformer</strong> (e.g. GPT)</li>
      <li>e.g. masked word/fill in blank prediction and next sentence prediction, then likely a <strong>encoder only transformer</strong> (e.g. BERT)</li>
    </ul>
  </li>
  <li><strong>what is the dataset</strong> that it trained on?</li>
</ul>

<h3 id="bert">BERT</h3>

<p>Let’s begin by introducing the <strong>bidirectional transformer</strong> encoder that underlies models like BERT and its descendants like RoBERTa (Liu et al., 2019) or SpanBERT (Joshi et al., 2020).</p>

<blockquote>
  <p>When applied to <strong>sequence classification</strong> and <strong>labeling problems</strong> causal models have obvious shortcomings since they are based on an incremental, <strong>left-to-right processing</strong> of their inputs.</p>

  <ul>
    <li>Bidirectional encoders overcome this limitation by allowing the self-attention mechanism to range over the entire input, as shown below</li>
    <li>hence, it is not suitable for tasks such as predict the next word</li>
  </ul>
</blockquote>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Causal Transformer</th>
      <th style="text-align: center">Bidirectional Transformer</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210220737829.png" alt="image-20220210220737829" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210220745062.png" alt="image-20220210220745062" /></td>
    </tr>
  </tbody>
</table>

<p>where essentially BERT is doing the one on the right.</p>

<ul>
  <li>as you shall soon notice, BERT is a <strong>encoder only transformer</strong></li>
</ul>

<p>Essentially, inside BERT we have essentially stacks of transformer blocks for encoder/decoder:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210221236252.png" alt="image-20220210221236252" style="zoom:67%;" /></p>

<p>where:</p>

<ul>
  <li>
    <p><strong>bidirectional</strong> encoders use self-attention to map sequences of <strong>input</strong> embeddings $x_1,…,x_n$ to sequences of <strong>output</strong> embeddings $y_1,…,y_n$ of the same length. Again, the aim is to produce <strong>contextualized vectors</strong> that takes in information from the entire input sequence</p>
  </li>
  <li>
    <p>the contextualization in <strong>self-attention</strong> is one in the same manner covered in section <a href="#Self-Attention">Self-Attention</a>, so the formulas are still:</p>

\[\text{SelfAttention}(Q,K,V) = \left[\text{Softmax}\left(\frac{QK^T}{\sqrt{d_k}}\right)\right]V\]

    <p>for input $X$, and <strong>embedding matrix</strong> $W^K,W^Q,W^V$ will be learned.</p>

\[Q = XW^Q; K = XW^K; V=XW^V\]

    <p>However, the difference is that for <strong>left-to-right</strong> models, we had the matrix $QK^T$ being:</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Left-To-Right</th>
          <th style="text-align: center">Bidirectional</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210221709470.png" alt="image-20220210221709470" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210221644852.png" alt="image-20220210221644852" /></td>
        </tr>
      </tbody>
    </table>

    <p>so basically we removed the mask</p>
  </li>
  <li>
    <p>Beyond this simple change, all of the other elements of the transformer architecture remain the same for bidirectional encoder models</p>
  </li>
</ul>

<p>However, this is very useful because it is a multi-purpose model. best results in <strong>many different tasks!</strong></p>

<ul>
  <li><strong>Inputs</strong> to the model are segmented using <strong>subword tokenization</strong> and are combined with <strong>positional embeddings</strong>. To be more precise, recall that for transformers, ==input dimension and output dimension are the same==:
    <ul>
      <li>The input embeddings are the sum of the token embeddings, the segmentation embeddings, and the position embeddings.</li>
      <li>BERT uses ==Wordpiece embeddings== for tokens</li>
    </ul>
  </li>
  <li>always remember, essentially what those model learn are <strong>weights</strong> $W$.</li>
</ul>

<h4 id="training-bert">Training BERT</h4>

<p>Since the entire context is available instead of trying to predict the next word, the model learns to perform a <strong>fill-in-the-blank</strong> task, technically called the <strong>cloze task</strong>.</p>

<ul>
  <li>in fact, a lot of the models are trained in this format. Vision Transformer also does it by masking patches in the image and predicting the patch.</li>
</ul>

<p>For instance, ==instead of== doing:</p>

\[\text{Please turn your homework \_\_\_\_}.\]

<p>For bidirectional transformers:</p>

\[\text{Please turn \_\_\_\_ homework in}.\]

<p>Therefore, the idea is that:</p>

<ul>
  <li>during training the model is <strong>deprived of one or more elements of an input sequence</strong> and must generate/<strong>output a probability distribution</strong> over the vocabulary for <strong>each of the missing items</strong></li>
  <li>then, it is essentially again a supervised training from self-supervised data, where loss would simply be <strong>cross entropy.</strong></li>
</ul>

<p>For example, an example architecture would look like:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210222426656.png" alt="image-20220210222426656" style="zoom:67%;" /></p>

<p>so we see that:</p>

<ul>
  <li>
    <p>a token part of a training sequence is used in one of three ways:</p>

    <ul>
      <li>It is replaced with the unique vocabulary token <code class="language-plaintext highlighter-rouge">[MASK]</code>.</li>
      <li>It is replaced with another token from the vocabulary, randomly sampled based on token unigram probabilities.</li>
      <li>It is left unchanged.</li>
    </ul>

    <p>For BERT, 80% are masked, 10% replaced with randomly selected tokens, and 10% are unchanged</p>
  </li>
  <li>
    <p>training objective is to <strong>predict the original inputs</strong> for each of the masked tokens using a bidirectional encoder</p>
  </li>
  <li>
    <p>To produce a probability distribution over the vocabulary for each of the masked tokens, the <strong>output</strong> vector from the final transformer layer for <strong>each of the masked tokens</strong> is:</p>

\[y_i = \text{Softmax}(W_Vh_i)\]

    <p>for some weights $W_V$ which will be learnt.</p>
  </li>
</ul>

<h4 id="transfer-learning-through-fine-tuning">Transfer Learning through Fine-Tuning</h4>

<p>The idea of pretrained model is simple. Consider a pretrained BERT (so that weights such as $W^K,W^V,W^Q$ are already learnt), and you want to use it to do tasks such as <strong>sequence classification</strong></p>

<ul>
  <li>e.g. sentiment analysis</li>
</ul>

<p>The kind of question you need to think about is:</p>

<ul>
  <li>transformer based encoders have <strong>output shape same as input shape</strong>. Therefore, essentially we can get embeddings for each <strong>word</strong> in the context. But here we would like to obtain an <strong>embedding of the entire sequence</strong> for classification. Where do we get that?</li>
  <li>Given an embedding of entire sequence, what should we do next?</li>
  <li>Can we <strong>fine tune weights from pretrained models</strong> as well?</li>
</ul>

<p>In essence, this is what happens:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210224802368.png" alt="image-20220210224802368" style="zoom:67%;" /></p>

<p>where:</p>

<ul>
  <li>We need an additional vector is added to the model to stand for the <strong>entire sentence sequence</strong>. This vector is sometimes called the <strong>sentence embedding</strong>. In BERT, the <code class="language-plaintext highlighter-rouge">[CLS]</code> token plays the role of this embedding. (i.e. the embedding of this token is what we want)
    <ul>
      <li>This unique token is added to the vocabulary and is prepended to the start of all input sequences, both during pretraining and encoding</li>
    </ul>
  </li>
  <li>
    <p>onece we have this <strong>sentence embedding</strong>, we can pipe this into our own <strong>neural network/logistic regression classifier</strong>, which basically learns a weight $W_c$. Then, our output for <strong>classification</strong> essentially comes from:</p>

\[y = \text{Softmax}(W_C y_{cls})\]
  </li>
  <li>we can also <strong>update the pretrained weights</strong> during our fine-tuning as well: In practice, reasonable classification performance is typically achieved with only minimal changes to the language model parameters, often <strong>limited to updates over the final few layers</strong> of the transformer.</li>
</ul>

<hr />

<p><em>For Example</em>: Sequence Labeling</p>

<p>To demonstrate the multipurposeness of BERT, consider the task of <strong>part-of-speech tagging</strong> or <strong>BIO-based named entity recognition</strong>. Since we know that given a sequence of words, BERT produces a sequence of <strong>embeddings</strong>:</p>

<ul>
  <li>the final output vector corresponding to <strong>each input token embedding</strong> is passed to a classifier (since each token will be tagged)</li>
  <li>then, we just need to <strong>learn the weights in the classifier</strong> $W_K$</li>
</ul>

<p>So essentially:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210225529070.png" alt="image-20220210225529070" style="zoom:67%;" /></p>

<p>where</p>

<ul>
  <li>
    <p>notice that the embedding for <code class="language-plaintext highlighter-rouge">CLS</code> is useless in this case</p>
  </li>
  <li>
    <p>our output tag for each token will come from:</p>

\[y_i = \text{Softmax}(W_K z_i)\]

    <p>for output from BERT will be $z_i$, and then we can <strong>greedily assign tags as</strong>:</p>

\[t_i = \arg\max_k(y_i)\]

    <p>for a tag consist of $k$ classes.</p>
  </li>
</ul>

<h3 id="gpt-2">GPT-2</h3>

<p>The GPT-2 is built using <strong>transformer decoder blocks</strong>. BERT, on the other hand, uses <strong>transformer encoder blocks</strong>.</p>

<p>We will examine the difference in a following section. But one key difference between the two is that GPT2, like traditional language models, <strong>outputs one token at a time</strong>:</p>

<p><img src="https://jalammar.github.io/images/xlnet/gpt-2-autoregression-2.gif" alt="img" style="zoom:50%;" /></p>

<p>notice that:</p>

<ul>
  <li>The way these models actually work is that after each token is produced, that <strong>token is added to the sequence of inputs</strong>. And that new sequence becomes the input to the model in its next step. This is an idea called “<strong>auto-regression</strong>”</li>
</ul>

<p>Therefore, essentially the model contains:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210232055303.png" alt="image-20220210232055303" style="zoom:50%;" /></p>

<p>where:</p>

<ul>
  <li>
    <p>unlike BERT which uses bidirectional transformer as it wants to <strong>encode contextualized information</strong>, GPT cares more about <strong>next word prediction</strong>, hence it reverted to the <strong>masked/left-to-right self-attention</strong> during training:</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210232238810.png" alt="image-20220210232238810" style="zoom:50%;" /></p>
  </li>
  <li>
    <p>alike encoders of course, we need some <strong>input to start with</strong></p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210232603576.png" alt="image-20220210232603576" style="zoom:50%;" /></p>

    <p>it turns out that essentially you would also have input <strong>embedded</strong> before putting into your model.</p>
  </li>
</ul>

<blockquote>
  <p><strong>Note</strong></p>

  <p>If you compare the architecture of encoder and decoder, they are kind of similar:</p>

  <table>
    <thead>
      <tr>
        <th style="text-align: center">Encoder Only</th>
        <th style="text-align: center">Decoder Only</th>
        <th style="text-align: center">Encoder-Decoder</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210233157758.png" alt="image-20220210233157758" style="zoom: 67%;" /></td>
        <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210233050700.png" alt="image-20220210233050700" /></td>
        <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210233259239.png" alt="image-20220210233259239" style="zoom:67%;" /></td>
      </tr>
    </tbody>
  </table>

  <p>where:</p>

  <ul>
    <li>both encoder and decoder are transformer blocks, so <strong>output shape same as input shape</strong> (applications bascially only do something to the output of the last layer)</li>
    <li>encoder and decoder used alone have a slightly different attention mechanism, with the latter being usually a <strong>masked/left-to-right attention</strong></li>
    <li>when you have encoder+decoder, you then need a <strong>cross-attention</strong> to get stuff across from encoder to decoder</li>
    <li>the <strong>output embedding</strong> in the decoder is essentially the auto-regressive genreated output. i.e. at $t=0$, it is fed with <code class="language-plaintext highlighter-rouge">&lt;s&gt;</code> and suppose it generated <code class="language-plaintext highlighter-rouge">hello</code>. Then at $t=1$, fed with <code class="language-plaintext highlighter-rouge">&lt;s&gt;, hello</code>.</li>
  </ul>
</blockquote>

<h3 id="efficient-transformers">Efficient Transformers</h3>

<p>One problem now is that <strong>attention computation</strong> is quadratic in the length of sentences.</p>

<p><strong>Solution</strong>: linear time transformer by approximations, transfer learning</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220210234034616.png" alt="image-20220210234034616" style="zoom:67%;" /></p>

<h1 id="generative-adversarial-network">Generative Adversarial Network</h1>

<p>Generative adversarial networks (GANs) are an <strong>unsupervised generative model</strong> used for ==generating samples== that are similar to training examples. GANs have also been used for generating images from text, generating audio from images, and generating images from audio, etc.</p>

<ul>
  <li>we are having a generator that <strong>learns the structure of the data</strong></li>
</ul>

<blockquote>
  <p><strong>Summary</strong></p>

  <p>Essentially you have <strong>two models</strong>, a generator and a discriminator:</p>

  <ul>
    <li><strong>generator</strong> is trained to produce fake examples that fool the discriminator, hence its loss is based on the success of  discriminator</li>
    <li><strong>discriminator</strong> learns to distinguish between the generator’s fake synthesized samples and real data</li>
  </ul>

  <p>Therefore, you will have essentially a <strong>minimax optization problem</strong> that looks like:</p>

\[\min_G\max_DV(D,G)=\mathbb{E}_{x \sim p_{data}(x)}[\log D(x)]+\mathbb{E}_{z \sim p_{z}(z)}[\log (1-D(G(z)))]\]

  <p>where essentially:</p>

  <ul>
    <li>discriminator outputs a <strong>probability</strong> (that it is real) given some data $x$, and generator <strong>generates</strong> some data $G(z)$ from <strong>noise</strong> $z$ from some distribution (e.g. Gaussian)</li>
    <li>the loss says discriminator $D(x)$ should be as high as possible, so that discriminator is doing well, and $D(G(z))$ should be as high as possible as well, so that generator is doing well</li>
    <li>The generator and the discriminator are trained alternately, for $G(z)$ being descent first, and then $D(x)$.</li>
  </ul>

  <p>Then, essentially we update the two models with the two losses:</p>

  <ul>
    <li>
      <p>For <strong>generator</strong>, the the gradient step is:</p>

\[\nabla_{\theta}\left\{ \frac{1}{m} \sum_{i=1}^m \log \left(1-D_\phi(G_\theta(z^{(i)})) \right)  \right\}\]

      <p>in some other algorithm, we could maximize $\log D(G(z))$ instead</p>
    </li>
    <li>
      <p>For <strong>discriminator</strong>, we will have the same as maximization problem as before, so the gradient step is:</p>

\[\nabla_{\phi}\left\{ \frac{1}{m} \sum_{i=1}^m \left[\log D(x^{(i)}) + \log(1-D(G(z^{(i)})))\right]  \right\}\]
    </li>
  </ul>

  <p>In practice</p>

  <ul>
    <li>
      <p>once we finished training, we will take the generator to deploy in our various appications.</p>
    </li>
    <li>
      <p>relevant problems include <strong>saturation problem</strong>, <strong>mode collapse</strong> and <strong>convergence problem</strong>, which will be discussed in more detail later.</p>
    </li>
  </ul>
</blockquote>

<p>Note that:</p>

<ul>
  <li>The idea of minimax is not new. In game theory, we think about <em>minimizing</em> the loss involved when the <strong>opponent</strong> selects the strategy that gives <em>max</em>imum loss</li>
  <li>from a biological point of view, this is essentially co-evolution</li>
  <li>The discriminator and generator form two dueling networks with opposite objectives. This <strong>unsupervised</strong> setting eliminates the need for labels, since the <strong>label is whether the sample is real or not</strong>.</li>
</ul>

<p>On a bigger context, since we are trying to learn the given data distribution:</p>

<ul>
  <li>we can learn it <strong>explicity</strong>
    <ul>
      <li>VAE</li>
      <li>Markvo Chain</li>
    </ul>
  </li>
  <li><strong>implicitly</strong>
    <ul>
      <li>GAN</li>
    </ul>
  </li>
</ul>

<h2 id="minimax-optimization">Minimax Optimization</h2>

<p>Graphically, this is what the architecture looks like</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220211162705009.png" alt="image-20220211162705009" style="zoom: 67%;" /></p>

<p>the joint optimization problem for the two agents is:</p>

\[\min_G\max_DV(D,G)=\mathbb{E}_{x \sim p_{data}(x)}[\log D(x)]+\mathbb{E}_{z \sim p_{z}(z)}[\log (1-D(G(z)))]\]

<p>where we are taking <strong>expected value</strong> over real data, but in <strong>practice</strong> we can only do empirical mean</p>

<ul>
  <li>The term $D(x)$ is the discriminator’s estimated probability that <strong>(real) data $x$ is real</strong>
    <ul>
      <li>The goal of the discriminator is to classify correctly real and generated data.</li>
    </ul>
  </li>
  <li>$G(z)$ is the output of the generator given random noise $z$.
    <ul>
      <li>the goal is to generate a signal from random noise $z \sim P(z)$ in a way that it will be difficult for the discriminator to distinguish</li>
    </ul>
  </li>
  <li>$D(G(z))$ is the discriminator’s estimated probability that a <strong>synthesized sample is real</strong>.
    <ul>
      <li>the goal of geneartor is to make $D(G(z)) \to 1$</li>
    </ul>
  </li>
</ul>

<p>Since we care about the <strong>network parameters</strong> in the end:</p>

\[\min_\phi\max_\theta V(D_\phi,G_\theta)=\mathbb{E}_{x \sim p_{data}(x)}[\log D_\phi(x)]+\mathbb{E}_{z \sim p_{z}(z)}[\log (1-D_\phi(G_\theta(z)))]\]

<p>then <strong>how do we optimize this</strong>?</p>

<ul>
  <li>Since both the generator and discriminator will be represented by neural networks, problem is non-convex and non-concave</li>
  <li>hence we can only do <strong>gradient descent type solution</strong></li>
  <li>The first term of $\log D(x)$ is independent of the generator and therefore the <strong>generator only minimizes</strong> the function $\log(1 − D(G(z)))$.</li>
</ul>

<p>However, there is a problem with this loss. In practice, it saturates for the generator, meaning that the generator quite frequently <strong>stops training</strong> if it doesn’t catch up with the discriminator, so that:</p>

\[\nabla_\phi \log(1-D_\phi(G_\theta(z))) \to 0\]

<p>when the <strong>discriminator becomes optimal</strong> ($D$ is close to $D^*$). So gradient vanishes and <strong>generator</strong> cannot evolve!</p>

<h3 id="mode-collapse">Mode Collapse</h3>

<p>This issue is on the unpredictable side of things. It wasn’t foreseen until someone noticed that the generator model could only generate one or <strong>a small subset of different outcomes</strong> or modes, instead of a range of outputs.</p>

<blockquote>
  <p>If at each iteration the generator optimizes for the specific discriminator and the <strong>discriminator is not able to correctly classify the synthesized samples</strong> as fake, the generator will synthesize a small set of samples, not diverse samples, which is known as <strong>mode collapse</strong></p>
</blockquote>

<p>This may happen when:</p>

<ol>
  <li>In the process of training, the <strong>generator is always trying to find the one output</strong> that seems most plausible to the discriminator.</li>
  <li>if the <strong>next generation of discriminator gets stuck</strong> in a local minimum and doesn’t find its way out by getting its weights even more optimized, it’d get easy for the next generator iteration to find the most plausible output for the current discriminator.</li>
  <li>This way, it will keep on repeating the same output and refrain from any further training.</li>
</ol>

<p>When the discriminator using <strong>Wasserstein loss</strong> does not get stuck in local minima it learns to reject the generator’s repeated synthesized samples, encouraging the generator to synthesize new samples and diversify.</p>

<p>One solution is that:</p>

<ul>
  <li>In order to void mode collapse, encouraging the generator to diversify the synthesized samples and not optimize for a constant discriminator, the <strong>generator</strong> loss function may be modified to include <strong>multiple subsequent discriminators</strong></li>
</ul>

<h3 id="convergence-problem">Convergence Problem</h3>

<p>The utopian <strong>situation where both networks stabilize and produce a consistent result is hard to achieve in most cases.</strong></p>

<ul>
  <li>If the generator succeeds all the time, the discriminator has a 50% accuracy, similar to that of flipping a coin. This poses a threat to the convergence of the GAN as a whole.</li>
</ul>

<p>If discriminator is just randomly guessing, then as the <strong>discriminator’s feedback loses its meaning</strong> over subsequent epochs by giving outputs with equal probability, the <strong>generator may deteriorate its own quality</strong> if it continues to train on these junk training signals.</p>

<h2 id="divergence-between-distributions">Divergence between Distributions</h2>

<blockquote>
  <p><strong>Key Question</strong>:</p>

  <p><strong>Why</strong> did we choose a loss function in the form of:</p>

\[\begin{align*}
V(D_\phi,G_\theta)
&amp;=\mathbb{E}_{x \sim P_{data}(x)}[\log D_\phi(x)]+\mathbb{E}_{z \sim P_{z}(z)}[\log (1-D_\phi(G_\theta(z)))]\\
&amp;=\mathbb{E}_{x \sim P_{data}}[\log D_\phi(x)]+\mathbb{E}_{\hat{x} \sim P_{G}}[\log (1-D_\phi(\hat{x})]
\end{align*}\]

  <p>specifically, why using $\log$ probability?</p>

  <p>The short <strong>answer</strong> is:</p>

  <ul>
    <li>loss function here represents the <strong>distance</strong> between the <strong>distribution</strong> of the synthesized samples and the distribution of the real data</li>
    <li>so essentially we want to <strong>minimize the difference</strong> between our approximate distribution $P_G$ from generator and the true distribution $P_{data}$</li>
  </ul>

  <p>In fact, if $D_\theta(x)$ can be any function, it can be shown that the above is <strong>equivalent to minimizing the JS divergence</strong> between <strong>distribution $P_{data}$ and $P_{G}$</strong>.</p>

  <ul>
    <li>for more detail, checkout https://colinraffel.com/blog/gans-and-divergence-minimization.html</li>
  </ul>
</blockquote>

<p>Essentially, our goal is to <strong>minimize the distribution divergence</strong> between true distribution $P_{data}$ and our generated one $P_G$. To do this, we need a metric to measure <strong>“distance/difference”</strong> between two distributions, and the simplest one would be the KL divergence.</p>

<h3 id="kl-divergence">KL Divergence</h3>

<p>KL Divergence has its origins in information theory. The primary goal of information theory is to quantify how much information is in data, i.e. how many <strong>bits do we need to specify the data</strong>. This idea is captured in Entropy:</p>

\[H = -\sum_{i=1}^N p(x_i) \cdot \log p(x_i)\]

<p>where:</p>

<ul>
  <li>if $\log_2$, then we can interpret entropy as “the minimum number of bits it would take us to encode our information”.</li>
  <li>just looking at extreme values, if $p(x_i)=0$ or $p(x_i)=1$, then there is nothing random and entropy is $0$. For $p(x_i)=0.5$, entropy is large.</li>
</ul>

<p>Then, KL divergence is basically a measure of “<strong>how many bits of information we expect to lose</strong>” if we use $q(x_i)$ to approximate $p(x_i)$:</p>

\[D_{KL}(p||q) = \sum_{i=1}^N p(x_i)\cdot (\log p(x_i) - \log q(x_i))=\sum_{i=1}^N p(x_i)\cdot \log\frac{p(x_i)}{q(x_i)}\]

<p>Then:</p>

<ul>
  <li>
    <p>this is essentially the same as saying:</p>

\[D_{KL}(p||q)=\mathbb{E}[\log p(x) - \log q(x)]\]

    <p>which reminds us of the <strong>original GAN loss</strong>.</p>
  </li>
  <li>
    <p>for a <strong>continuous distribution</strong>:</p>

\[D_{KL}(p||q)=\int p(x)\cdot \log\frac{p(x)}{q(x)}\,dx\]
  </li>
  <li>
    <p>a <strong>reversed KL divergence</strong> is then:</p>

\[D_{KL}(q||p)=\int q(x)\cdot \log\frac{q(x)}{p(x)}\,dx\]

    <p>for $q$ being our approximate distribution.</p>
  </li>
  <li>
    <p>therefore, this means KL divergence is <strong>non-negative and asymmetric</strong></p>
  </li>
</ul>

<p>The analogy in our loss function for GAN is to consider $p = P_{data}$ and $q=P_{G}$</p>

<h3 id="jensen-shannon-divergence">Jensen-Shannon Divergence</h3>

<p>The Jensen-Shannon (JS) divergence $D_{JS}$ is a symmetric smooth version of the KL divergence defined by:</p>

\[D_{JS}(p||q) = \frac{1}{2}D_{KL}(p||m)+\frac{1}{2}D_{KL}(q||m),\quad m=\frac{1}{2}(p+q)\]

<p>The analogy in our loss function for GAN is to consider $p = P_{data}$ and $q=P_{G}$. In fact, this formulation of divergence metric leads to the <strong>formulation of loss</strong>:</p>

\[\mathbb{E}_{x \sim P_{data}}[\log D_\phi(x)]+\mathbb{E}_{\hat{x} \sim P_{G}}[\log (1-D_\phi(\hat{x})]\]

<h3 id="bregman-divergence">Bregman divergence</h3>

<p>The KL divergence and JS divergence are both <strong>special cases of the Bregman divergence</strong>.</p>

<p>The Bregman divergence is defined by a convex function F and is a <strong>measure of distance between two points $p$ and $q$</strong> defined by:</p>

\[D_F(p,q)= F(p)-F(q)-\lang \nabla F(q), p-q \rang\]

<p>where then, many <strong>divergence metrics</strong> come from defining some <strong>convex function $F$</strong>:</p>

<ul>
  <li>
    <p>if $F(p)=p\log p$, then we recover the <strong>generalized KL divergence</strong>:</p>

\[\begin{align*}
D_F(p,q)
&amp;= p\log p - q \log q - (\log q + 1)(p-q)\\
&amp;= p \log(\frac{p}{q}) + (q-p)
\end{align*}\]
  </li>
  <li>
    <p>if $F(p)=p\log p - (p+1)\log(p+1)$, we get <strong>JS divergence</strong>.</p>
  </li>
  <li>
    <p>if $F=(1-p)^2$, we get a <strong>Pearson $\chi^2$ divergence</strong>, which leads to ==loss in least square GAN==.</p>

    <p>The loss for discriminator being:</p>

\[\mathbb{E}_{x \sim P_{data}}[D_\phi(x)^2]-\mathbb{E}_{z \sim p_{z}(z)}[D_\phi(G_\theta(z))^2]\]

    <p>and the loss for geneator:</p>

\[\mathbb{E}_{z \sim p_{z}(z)}[(D_\phi(G_\theta(z))-1)^2]\]

    <p>providing a smoother loss</p>
  </li>
</ul>

<h3 id="optimal-objective-value">Optimal Objective Value</h3>

<p>Now, we come back to our discussion of the original loss function. Since the original loss is essentially <strong>minimizing JS divergence</strong> between $P_{data}$ and $P_{G}$, we obviously want the optimal solution to be $P_G=P_{data}$.</p>

<ul>
  <li>in practice, this is <strong>not computable</strong> since it involves knowing the true distribution. Therefore, in practice we just do <strong>gradient descent type updates</strong>.</li>
</ul>

<p>Here, we show that the above statement is true. For <strong>discriminator</strong>, we want:</p>

\[\max_\phi V(D_\phi,G_\theta)=\mathbb{E}_{x \sim p_{data}(x)}[\log D_\phi(x)]+\mathbb{E}_{\hat{x}\sim p_G}[\log (1-D(\hat{x}))]\]

<p>Hence:</p>

\[\mathcal{L}(x;\theta) = P_{data}\cdot \log D(x) + P_G \cdot \log(1-D(\hat{x}))\]

<p>taking derivative and setting it to zero, we obtain:</p>

\[D^*(x)=\frac{P_{data}}{P_{data}+P_G}\]

<p>Then plugging this back in to solve for <strong>generator</strong>:</p>

\[\min_G  V(G,D^*) = 2D_{JS}(P_{data}||P_G)-2\log 2\]

<p>Then if you plugin to the equation for JS divergence, you will realize that this is <strong>minimized</strong> if $P_{data}=P_G$.</p>

<h2 id="gradient-descent-ascent">Gradient Descent Ascent</h2>

<p>Since in reality we don’t know the true distribution, we only have samples from it, we can only <strong>update our guesses</strong> in a gradient descent type of manner as the overall loss is non-convex and non-concave.</p>

<p>In our setting we use a stochastic variant of GDA with mini-batches, in which the ==descent== update for the <strong>generator</strong> neural network is:</p>

\[\nabla_{\theta}\left\{ \frac{1}{m} \sum_{i=1}^m \log \left(1-D_\phi(G_\theta(z^{(i)})) \right)  \right\}\]

<p>so that we have performed the <strong>$\min_G$</strong> step, and then our <strong>discriminator</strong> will have an ==ascent== update:</p>

\[\nabla_{\phi}\left\{ \frac{1}{m} \sum_{i=1}^m \left[\log D(x^{(i)}) + \log(1-D(G(z^{(i)})))\right]  \right\}\]

<p>note that:</p>

<ul>
  <li>
    <p>If $V$ were convex-concave then playing the game simultaneously or in a sequential order would not matter; however, in our case $V$ is non-convex non-concave and the <strong>order matters</strong></p>
  </li>
  <li>
    <p>Unfortunately, GDA may converge to points that are not local minimax or fail to converge to a local minimax. A modification of GDA (Wang, Zhang &amp; Ba 2020) which partially addresses this issue is:</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220211184103651.png" alt="image-20220211184103651" style="zoom:67%;" /></p>

    <p>which is a modified gradient ascent rule for $f=V$​. This converges and ==only converges to local minimax points==, driving the gradient quickly to zero and improving GAN convergence</p>
  </li>
</ul>

<h3 id="optimistic-gradient-descent-ascent">Optimistic Gradient Descent Ascent</h3>

<p>When introduced, GANs were implemented using momentum. However, later on the implementations did not use momentum, and using a <strong>negative momentum made the saturating GAN work</strong>. An algorithm which solves the minimax optimization problem by using negative momentum is <strong>optimistic gradient descent ascent (OGDA)</strong> (Daskalakis et al. 2017).</p>

<ul>
  <li>this is fonud in empirical experiences</li>
</ul>

<p>The negative momentum update is:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220211184326881.png" alt="image-20220211184326881" style="zoom: 67%;" /></p>

<p>where $f=V$ in our case.</p>

<ul>
  <li>the one with $x$ is for gradient descent, the one with $y$ is for gradient ascent</li>
  <li>OGDA yields better empirical results than GDA, and can be interpreted as an approximation of the proximal point method</li>
</ul>

<h2 id="gan-training">GAN Training</h2>

<p>When the generator training is successful the discriminator cannot distinguish between real data and fake samples synthesized
by the generator. So baically the architecture is as follows:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220211162705009.png" alt="image-20220211162705009" style="zoom: 50%;" /></p>

<p>where both generator and discriminator are represented by neural networks and are both trained by backpropagation.</p>

<p>The algorithm for training is as follows, essentially we train them ==alternatingly==</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220211184827501.png" alt="image-20220211184827501" style="zoom:50%;" /></p>

<p>where the end goal is <strong>we get good quality images from the generator</strong> and discriminator won’t be able to differentiate between real and fake images.</p>

<ul>
  <li>Training the <strong>discriminator</strong> uses real data as positive examples and samples synthesized by the generator as negative examples
    <ul>
      <li>When the discriminator is trained, the ==generator is not trained== and its parameters are held fixed</li>
      <li>discriminator loss serves as a signal to the generator for updating its parameters by backpropagation</li>
    </ul>
  </li>
  <li>the <strong>generator</strong> learns to synthesize realistic samples by the feedback it receives from the discriminator
    <ul>
      <li>During generator training the ==discriminator parameters are held fixed==.</li>
    </ul>
  </li>
  <li>we could have also reversed the training to train generator first, but the result will be difference as order matters.</li>
</ul>

<h2 id="gan-losses">GAN Losses</h2>

<p>As described, different Bregman divergences and loss functions have been explored with the goals of improving GAN training stability and diversity. Here we describe a few that is important.</p>

<h3 id="wasserstein-gan">Wasserstein GAN</h3>

<p>One problem with JS divergence is that, if the real data distribution and generator distribution do not overlap then the JS divergence is zero $D_{JS} = 0$</p>

<ul>
  <li>when distributions have non-overlapping support</li>
  <li>(support of a function is a <strong>closure</strong> $S={x \in \mathbb{R}^n:f(x) \neq 0}$)</li>
</ul>

<p>Graphically:</p>

<p><img src="https://i.stack.imgur.com/NbLrO.png" alt="enter image description here" style="zoom: 40%;" /></p>

<p>Fortunately, this issue has been <strong>resolved</strong> by using the Earth Mover’s Distance (EMD) or <strong>Wasserstein-1 distance</strong>:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220211200143137.png" alt="image-20220211200143137" style="zoom: 67%;" /></p>

<p>where:</p>

<ul>
  <li>where $\gamma$ denotes how much mass, or earth, must be moved from $x$ to $y$ in order to transform distribution $P$ into distribution $Q$,</li>
  <li>$\Pi (P,Q)$ denotes the set of all disjoint distributions with marginals $P$ and $Q$.</li>
</ul>

<p>Graphically, we are doing:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220215142125264.png" alt="image-20220215142125264" style="zoom:33%;" /></p>

<p>where $P_r$ is the real distribution, and the distance between $P_r,P_\theta$ is to measure how many “piles of dirt” dow we need to shovel from $P_r\to P_\theta$ so that the distributions are the same.</p>

<p>Computing $W(P,Q)$ is <strong>intractable</strong> since it requires considering all possible combinations of pairs of points between the two distributions, computing the mean distance of all pairs in each combination, and taking the minimum mean distance across all combinations.</p>

<p>Fortunately, an alternative is to <strong>solve a dual maximization problem</strong> that is tractable, which results in the ==Wasserstein loss==:</p>

\[\min_G\max_DV(D,G)=\mathbb{E}_{x \sim p_{data}(x)}[ D(x)]-\mathbb{E}_{z \sim p_{z}(z)}[D(G(z))]\]

<p>if you use WGAN, which is Wasserstein loss:</p>

<ul>
  <li>this loss outputs <strong>a real value</strong> that is <strong>larger for real data</strong> than <strong>synthesized</strong> samples
    <ul>
      <li>as compared to the original GAN uses the minimax loss in which the discriminator outputs a probability in $[0, 1]$ of a sample being real or synthesized</li>
      <li>therefore, the WGAN discriminator is called a critic since it does not output values in $[0, 1]$ for performing classification</li>
    </ul>
  </li>
  <li>There is no sigmoid in the final layer of the discriminator and the range is $[−\infty,\infty]$.</li>
</ul>

<p>Then, this means that the <strong>generator</strong> loss functions is:</p>

\[\min_G -\mathbb{E}_{z \sim p_{z}(z)}[D(G(z)]\]

<p>The <strong>discriminator</strong> loss function is the entire loss.</p>

<blockquote>
  <p><strong>Note</strong></p>

  <p>Recall that mode collapse happens when a <strong>discriminator hits a local minium</strong>. Then, if it fails to reject the fake sample from generator, <strong>geneartor would only generate a subset of the distribution</strong>, which is mode collapse.</p>

  <p>However, Wasserstein loss ==prevents discriminator from hitting a local minimum==, hence allowing it to learn to escape.</p>
</blockquote>

<h3 id="loss-function-summaries">Loss Function Summaries</h3>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220215140041605.png" alt="image-20220215140041605" style="zoom: 50%;" /></p>

<h2 id="gan-architectures">GAN Architectures</h2>

<p>Firs, an example of the choice of generator/discriminator</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220215140610509.png" alt="image-20220215140610509" style="zoom: 50%;" /></p>

<p>where:</p>

<ul>
  <li>this would be an example of generator (left to right). Discriminator <em>could</em> be the same architecture but left to right</li>
  <li>therefore, the generator above is also called a <strong>transposed CNN</strong></li>
</ul>

<hr />

<p>Below are some nowadays application of the GAN idea</p>

<ul>
  <li>
    <p><strong>Progressive GAN</strong>: A coarse-to-fine approach for training allows generating images at increasing resolutions.</p>

    <ul>
      <li>training the generator and discriminator using low-resolution images and incrementally add layers of higher-resolution images during training.</li>
    </ul>
  </li>
  <li>
    <p><strong>Deep Convolutional GAN</strong>: A GAN that uses convolutional neural networks (CNNs) as the generator and discriminator.</p>

    <ul>
      <li>using a CNN as the discriminator network and a deconvolution neural network as the generator</li>
    </ul>
  </li>
  <li>
    <p><strong>Semi-Supervised GAN</strong>: Instead of having the discriminator be a binary classifier for real or fake samples, in a semi-supervised GAN (SGAN) the discriminator is a multi-class classifier</p>

    <ul>
      <li>recall that all the GANs are normally unsupervised, as labels is just synthetic images or real ones</li>
      <li>The discriminator outputs the likelihood of sample to be synthesized or real, and if the sample is <em>classified as real</em> then the discriminator outputs the <em>probability of the $k$ classes</em>, estimating to which class the sample belongs</li>
    </ul>
  </li>
  <li>
    <p><strong>Conditional GAN</strong>: models the conditional probability distribution $P(x\vert y)$ by training the generator and discriminator on <em>labeled</em> data, with labels being $y$.</p>

    <ul>
      <li>
        <p>Replacing $D(x)$ with $D(x\vert y)$ and $G(z)$ with $G(z\vert y)$ for the loss, you get conditional GAN</p>

\[\min_G\max_DV(D,G)=\mathbb{E}_{x \sim p_{data}(x)}[\log D(x|y)]+\mathbb{E}_{z \sim p_{z}(z)}[\log (1-D(G(z|y)))]\]
      </li>
      <li>
        <p>Providing labels allows us to ==synthesize samples in a specific class== or with a specific attribute, providing a level of control over synthesis</p>
      </li>
    </ul>
  </li>
  <li>
    <p><strong>Pix2Pix:</strong> Image-to-Image Translation</p>

    <ul>
      <li>
        <p>Given a training set of unfiltered and filtered image pairs $A : A’$ and a new unfiltered image $B$ the output is a filtered image $B’$ such that the analogy $A:A’::B : B’$ is <strong>maintained</strong></p>
      </li>
      <li>
        <p>An input image is mapped to a synthesized image with different properties. The loss function is a <strong>combination of the conditional GAN loss</strong> with an additional loss term which is a <strong>pixel-wise loss</strong> (i.e. sum of loss per pixel on the image) that encourages the generator to match the source image:</p>

        <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220211203343602.png" alt="image-20220211203343602" style="zoom:67%;" /></p>

        <p>with weight $\lambda$</p>
      </li>
    </ul>
  </li>
  <li>
    <p><strong>Cycle Consistent GAN</strong>: learns unpaired image-to image translation using GANs <em>without pixel-wise correspondence</em></p>

    <ul>
      <li>
        <p>The training data are image sets $X \in A$ and $Y \in A’$ from two different domains $A$ and $A’$ <strong>without pixel-wise correspondence</strong> between the images in $X$ and $Y$.</p>
      </li>
      <li>
        <p>CycleGAN consists of</p>

        <ul>
          <li>two generators $G(X) = \hat{Y}$ and $F(Y ) = \hat{X}$</li>
          <li>two discriminators $D_Y$ and $D_X$.</li>
        </ul>

        <p>The generator $F$ maps a real image $X$ to a synthesized sample $\hat{Y}$ and the discriminator $D_Y$ compares between them</p>

        <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220211204326281.png" alt="image-20220211204326281" style="zoom:50%;" /></p>
      </li>
      <li>
        <p>CycleGAN maintains two approximate cycle consistencies:</p>

        <ul>
          <li>The first cycle consistency  $F(G(X)) \approx X$ approximately maintains that mapping a real image $X$ to a synthesized image $\hat{Y}$ and back is similar to $X$</li>
          <li>the second cycle consistency $G(F(Y )) \approx Y$ approximately maintains that mapping a real image $Y$ to a synthesized image $\hat{X}$ and back is similar to $Y$.</li>
        </ul>

        <p>Graphically, this is one of the consistency loop</p>

        <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220215143023657.png" alt="image-20220215143023657" style="zoom: 50%;" /></p>
      </li>
      <li>
        <p>The overall loss function is defined by (Zhu et al. 2017):</p>

        <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220211204534646.png" alt="image-20220211204534646" style="zoom:67%;" /></p>

        <p>where the cycle consistency loss is defined by:</p>

        <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220211204602542.png" alt="image-20220211204602542" style="zoom: 67%;" /></p>

        <p>which is weighted by $\lambda$</p>
      </li>
    </ul>
  </li>
</ul>

<h2 id="evaluation-and-application">Evaluation and Application</h2>

<p>After training the generator so that discriminator cannot do any better, there is still the chance that <strong>generated samples are garbage</strong> if discriminator is garbage. Therefore, we have some metrics to <strong>evaluate how well generator’s end product</strong> is doing.</p>

<p>The Inception Score (IS) and Frechet Inception Distance (FID) measure the <strong>quality of synthesized examples</strong> using <strong>pre-trained</strong> neural network classifiers</p>

<ul>
  <li><strong>Inception Score</strong>: The Inception Score (IS) (Salimans et al. 2016) automatically evaluates the quality of images synthesized by the generator by using the <strong>pre-trained Inception v3 model</strong> (Szegedy et al. 2016) for classification.
    <ul>
      <li>A <strong>higher</strong> Inception Score is <strong>better</strong>, which corresponds to a larger KL divergence between the distributions.</li>
    </ul>
  </li>
  <li><strong>Frechet Inception Distance</strong>: The Frechet Inception Distance (FID) is also based on the Inception v3 modally.
    <ul>
      <li>The FID uses the feature vectors of the last layer for real and synthesized images to generate multivariate Gaussians that model the real and synthesized distributions</li>
      <li>A <strong>lower</strong> FID is <strong>better</strong>, which corresponds to similar real and synthesized distributions.</li>
    </ul>
  </li>
</ul>

<p>Finally, GAN architectures can be applied in numerous fields such as:</p>

<ul>
  <li>Image Completion</li>
  <li>Super Resolution and Restoration</li>
  <li>Style Synthesis</li>
  <li>De-Raining</li>
  <li>Text-to-Image Synthesis</li>
  <li>Music Synthesis</li>
  <li>etc.</li>
</ul>

<h1 id="deep-variational-inference">Deep Variational Inference</h1>

<p>This chapter begins with a review of variational inference (VI) as a fast approximation alternative to Markov Chain Monte Carlo (MCMC) methods, solving an optimization problem for <strong>approximating the posterior</strong></p>

<ul>
  <li>Amortized VI leads to the <strong>variational autoencoder (VAE)</strong> framework which is introduced using deep neural networks and graphical models and used for learning representations and generative modeling.</li>
</ul>

<p>The setup is as follows. Consider we are given some <strong>data $x$</strong>, so that we can visualize this as a probability distribution $p(x)$:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220215194410664.png" alt="image-20220215194410664" style="zoom:50%;" /></p>

<p>Now, suppose that in reality, this is the actual data:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220215194455483.png" alt="image-20220215194455483" style="zoom:50%;" /></p>

<p>where essentially:</p>

<ul>
  <li>$z \in [1,2,3]$ is a ==hidden variable== that signifies the three cluster within this data distribution</li>
  <li>Essentially, the real distribution $p(x)$ is actually coming from both $x$ and $z$. But only $x$ is observed, and we <strong>do not know what $z$ is in advance</strong></li>
</ul>

<hr />

<p>More formally, the problem task is as follows.</p>

<ul>
  <li>our target model is $p_\theta (x)$</li>
  <li>
    <p>our data is $D = {x_1, x_2, …,x_N}$</p>
  </li>
  <li>we <strong>want to model hidden variables as well</strong></li>
</ul>

<p>Therefore, our <strong>maximum likelihood fit becomes</strong>:</p>

\[\arg\max_\theta \frac{1}{N}\sum_i \log p_\theta (x_i) \to \arg\max_\theta \frac{1}{N}\sum_i \log \left( \int p_\theta(x_i|z)p(z) dz\right)\]

<p>which is <strong>problematic</strong> we would have needed to compute $\int p_\theta(x_i\vert z)p(z) dz$ for every data.</p>

<p>Therefore, the idea is:</p>

<ol>
  <li>observe some data $x$, and take a guess <strong>on the underlying $z$</strong> (e.g. this pile of data belongs to this cluster)</li>
  <li>construct “fake labels $z$” for your each of your data $x_i$
    <ul>
      <li>technically you would guess a $p(z\vert x_i)$ over it</li>
    </ul>
  </li>
  <li>do maximum likelihood on that $x_i$ and $z$ associated</li>
</ol>

<p>Then, the kind of objective you want to do would be:</p>

\[\arg\max_\theta \frac{1}{N} \sum_i  \mathbb{E}_{z \sim p(z|x_i)}[\log p_\theta (x_i,z)]\]

<p>so you are <strong>maximizing over the joint</strong>, so that once done:</p>

<ul>
  <li>obtain a model $\theta$, but also get information on $p(z\vert x_i)$.</li>
  <li>but we are taking an average/expected value over $p(z\vert x_i)$, ==how do we calculate this==?</li>
</ul>

<h2 id="markov-chain-monte-carlo">Markov Chain Monte Carlo</h2>

<p>The idea is simple. Our task is to compute some <strong>posterior $p(z\vert x_i)$</strong> for some observation $x_i$. For this section, imagine that you are observing a <strong>coin</strong>, and you want to model $p(\theta \vert x)$ for $\theta$ being the probability of getting a head.</p>

<ul>
  <li>essentially $\theta=z$ is some <strong>hidden information from us</strong>, but carries essential information on how data is generated</li>
  <li>the only observables are $x$</li>
</ul>

<p>Using Bayes, we know that:</p>

\[\underbrace{p(\theta |x)}_{\text{posterior}} = \underbrace{p(x | \theta)}_{\text{likelihood}}  \,\,\underbrace{p(\theta)}_{\text{prior}}\,\,\frac{1}{p(x)}\]

<blockquote>
  <p><em>Intuition</em></p>

  <p>We can take a <strong>guess on the prior distribution $p(\theta)$</strong>, and with observables available, we can <strong>compute $p(x\vert \theta)$</strong></p>

  <ul>
    <li>e.g. for a coin toss, guess that $p(\theta) = \text{Unif}[0,1]$, and $p(x\vert \theta)=p_\theta(x) \sim \text{Bern}(\theta)$</li>
    <li>essentially, both quantities are now known</li>
    <li>however we often <strong>cannot compute $p(x)$</strong>, since would involve computing some nasty integrals. Hence, we need some technique to estimate $p(\theta \vert  x)$ when we only know $p(x\vert \theta)p(\theta)$</li>
  </ul>
</blockquote>

<hr />

<p><em>For Example</em>: Coin Toss</p>

<p>The likelihood $p(x=4\vert \theta)$=probability of getting four heads with $\text{Bern}(10,\theta)$, mewing that our traying data has four heads in total. The priors are beta distributions which we guessed. Then, the posterior is the product of the two:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Less Data (for likelihood)</th>
      <th style="text-align: center">More data (for likelihood)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220217152847817.png" alt="image-20220217152847817" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220217152855335.png" alt="image-20220217152855335" /></td>
    </tr>
  </tbody>
</table>

<p>where the key observation here is that:</p>

<ul>
  <li>if <strong>prior is informative</strong>, then we don’t need very good likelihood data to obtain a reasonable estimate for posterior</li>
  <li>if <strong>likelihood is informative</strong>, i.e. we have lots of data, then we don’t need to have a very informative prior</li>
</ul>

<hr />

<p>Now, lets get back to the task of finding out the <strong>posterior $p(\theta\vert x)$</strong>, or in general $p(z\vert x)$.</p>

<blockquote>
  <p><em>Intuition</em>:</p>

  <p>We do know that</p>

\[\underbrace{p(\theta |x)}_{\text{posterior}} \propto \underbrace{p(x | \theta)}_{\text{likelihood}}  \,\,\underbrace{p(\theta)}_{\text{prior}}\]

  <p>So the idea is that:</p>

  <ol>
    <li>pick some proposal distribution $q(\theta)$
      <ul>
        <li>e.g. a normal distribution</li>
      </ul>
    </li>
    <li>sample a data point from the proposal distribution $\theta^*$</li>
    <li>==save this data point $\theta^<em>$ if $p(x\vert \theta^</em>)p(\theta^*)$ is very likely==, reject it otherwise</li>
    <li>repeat step 2 to 3</li>
  </ol>

  <p>Then, you end up with lots of $\theta_i$, and it should <strong>resemble the posterior distribution $p(\theta\vert x)$</strong> due to the save/rejection step.</p>
</blockquote>

<p>In more details, consider the following <strong>MCMC Metropolis Hastings</strong> algorithm</p>

<ol>
  <li>
    <p>select some initial value $\theta_0$ to start with</p>
  </li>
  <li>
    <p>for $i=1,…,m$ do:</p>

    <ol>
      <li>
        <p><strong>Markov</strong>: update the proposal distribution $q(\theta^*\vert \theta_{i-1})$, based on the previous sample</p>
      </li>
      <li>
        <p><strong>Monte Carlo</strong>: pick a candidate $\theta^* \sim q(\theta^* \vert  \theta_{i-1})$</p>
      </li>
      <li>
        <p>consider whether or not to accept the candidate by considering:</p>

\[\alpha = \underbrace{\frac{p(\theta^*|x)}{p(\theta_{t-1}|x)}}_{\text{can't compute}} = \underbrace{\frac{p(x|\theta^*)p(\theta^*)}{p(x|\theta_{i-1})p(\theta_{i-1})}}_{\text{unknown}}\]

        <p>if $\alpha \ge 1$, <em>*accept $\theta^</em>$** so that $\theta_i \leftarrow \theta^*$</p>

        <p>if $0 &lt; \alpha &lt; 1$, accept $\theta^*$ with <strong>probability $\alpha$</strong>, else <strong>reject</strong> it.</p>
      </li>
    </ol>
  </li>
</ol>

<p>The resulting drawn distribution of $\theta^*$s will assemble the posterior distribution $p(\theta\vert x)$.</p>

<ul>
  <li>notice that if our proposal $q$ is <strong>very close to $p(\theta\vert x)$</strong>, then <strong>many samples will be accepted</strong> and we converge fast</li>
  <li>otherwise, we may need a lot of time.</li>
</ul>

<p>Graphically, if we picked</p>

<ul>
  <li>proposal $q(\theta^*\theta_{i-1}) = \mathcal{N}(\theta_{i-1},1)=\text{Beta}(1,1,\theta_{i-1})$,</li>
  <li>likelihood $\text{Bin}(10,\theta)$ and we <strong>observed 4 heads</strong> in our data</li>
</ul>

<table>
  <thead>
    <tr>
      <th style="text-align: center">5 Iterations</th>
      <th style="text-align: center">5000 Iterations</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220217190211945.png" alt="image-20220217190211945" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220217190327902.png" alt="image-20220217190327902" /></td>
    </tr>
  </tbody>
</table>

<p>However, the problem with this approach is that <strong>sampling and adjusting takes time</strong>, and for large number of sampes, it becomes very slow.</p>

<ul>
  <li>this introduces us with the following sections on using ML models such as VAE to solve the <strong>inference problem of $p(\theta\vert x)=p(z\vert x)$</strong> in general.</li>
</ul>

<h2 id="variational-inference">Variational Inference</h2>

<p>We begin with:</p>

<ul>
  <li><strong>observed data $x$</strong>, continuous or discrete
    <ul>
      <li>e.g. $x$ may be an image of a face</li>
    </ul>
  </li>
  <li>suppose that the process <strong>generating the data</strong> involved <strong>hidden latent variables $z$</strong>
    <ul>
      <li>e.g. $z$ a hidden vector describing latent variables such as pose, illumination, gender, or emotion</li>
      <li>e.g. $z$ could represent cluster information</li>
    </ul>
  </li>
</ul>

<p>And you see that constructing a model to model both $x_i,z$ requires knowledge over:</p>

\[p(z|x_i)\]

<p>which is what this method is <strong>attempting to solve</strong>.</p>

<blockquote>
  <p><strong>Summary</strong></p>

  <p>Our aim is to <strong>estimate</strong> $p(z\vert x_i)$: for example, answering the question what are the hidden latent variables (poses, gender, emotion) $z$ for a given observation (image) $x_i$.</p>

  <p>However, this involves computing $p(x_i)$ in the following expression</p>

\[p(z|x_i) = \frac{p(x_i|z)p(z)}{p(x_i)}\]

  <p>which is intractable as the denominator cannot be computed.</p>

  <p>Hence, the idea is to <strong>approximate $p(z\vert x_i)$</strong> using $q_{i}(z) \in Q$, and <strong>minimize the distance</strong> using a metric such as KL-divergence. Therefore, this becomes an <strong>optimization problem</strong>, for ==each $x_i :=x$:==</p>

\[q_{\phi^*}(z) = \arg\min_{q_\phi(z)} KL(q_\phi(z)||p(z|x))=\arg\min_{q_\phi(z)} \int q(z)\log \frac{q(z)}{p(z|x)}dz\]

  <p>which can be simplied using Bayes to (since $p(z\vert x)$ we don’t know either)</p>

\[\arg\max_{q_\phi(z)} \int q(z)\log \frac{q(z,x)}{p(z)}dz=\arg\max_{q_\phi(z)}\,\, \mathbb{E}_{z \sim q_\phi(z)}[\log p(x,z)]-\mathbb{E}_{z \sim q_\phi(z)}[\log q_\phi(z)]\]

  <p>where</p>

  <ul>
    <li>$z$ would be sampled from $z \sim q_\phi(z)$ as $q_\phi$ would be picked by us. Hence we can compute $p(x,z)=p(x\vert z)p(z)$ and $q_\phi(z)$</li>
    <li>essentially $p(x,z)$ would involve a likelihood and a prior, which we know.</li>
    <li>the first term is MAP and the second term encourages diffusion (entropy), or spreading of variational distribution.</li>
  </ul>
</blockquote>

<p>First, let us <em>revise</em> Bayes theorem. For <strong>each data point $x_i:=x$</strong></p>

\[p(z,x) = p(z|x)p(x)=p(x|z)p(z)\]

<p>where:</p>

<ul>
  <li>$p(z,x)$ is the joint</li>
  <li>$p(z\vert x)$ is called the <strong>posterior</strong> (as you observed $x$)</li>
  <li>$p(x)$ is call the <strong>evidence/marginal density</strong></li>
  <li>$p(z)$ is the <strong>prior density</strong> (before you observe $x$)</li>
  <li>$p(x\vert z)$ is the <strong>likelihood</strong> (given $z$, probability of seeing $x$)</li>
</ul>

<blockquote>
  <p><strong>Note</strong></p>

  <p>For using deep generative models, we may also want to say:</p>

\[p(x|z)=p(x|z_1)p(z_1|z_2)...p(z_{l-1}|z_l)p(z_l)\]

  <p>for $l$ layers of hidden variables. This will be <strong>discussed later</strong>. Here we think of the simple case where we have only <strong>one hidden variable</strong>.</p>
</blockquote>

<p>Our aim is to estimate $p(z\vert x_i)$:</p>

\[p(z|x_i) = \frac{p(x_i|z)p(z)}{p(x_i)}\]

<p>which is intractable to compute because:</p>

<ul>
  <li>
    <p>for most models because the denominator is:</p>

\[p(x_i) = \int p(x_i|z)p(z)dz\]

    <p>this is high-dimensional intractable integral which requires integrating over an exponential number of terms for $z$.</p>
  </li>
  <li>
    <p>in the end, the posterior $p(z\vert x_i)$ is often intractable to compute analytically. For example, if $z$ is a vector of length $d$ (i.e. hidden state with $d$ “features”), <strong>then $p(z\vert x_i)$ is a $d \times d$ matrix</strong>, and the posterior is a function of the parameters of the model $p(z\vert x, \theta)$.</p>
  </li>
</ul>

<p>Therefore, the key idea is to ==estimate $p(z_i\vert x)$ by some variational distribution $q_\phi(z)\equiv q_i(z)$== from a family of distributions $Q$ and parameters $\phi$ such that $q_\phi \in Q$. Graphically:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220215171509021.png" alt="image-20220215171509021" style="zoom:33%;" /></p>

<p>A typical choice for $Q$ is the <strong>exponential family of distribution</strong>:</p>

<blockquote>
  <p><strong>Exponential Family Distribution</strong></p>

  <p>We say that a class of distributions is <strong>in the exponential family</strong> if it can be written in the form:</p>

\[p(y; \eta) = b(y) \exp(\eta \, T(y) - a(\eta))\]

  <p>where:</p>

  <ul>
    <li>$y$ means the labels/target in your dataset</li>
    <li>$\eta$ is the <strong>natural parameter</strong> (also called the canonical parameter) of the <strong>distribution</strong></li>
    <li>$b(y)$ is the <strong>base measure</strong></li>
    <li>$T(y)$ is the <strong>sufficient statistic</strong> (see later examples, you often see $T(y)=y$)</li>
    <li>$a(\eta)$ is the <strong>log partition function</strong>, which basically has $e^{-a(\eta)}$ playing the role of <em>normalization constant</em></li>
  </ul>

  <p>so basically you can expression some distribution with the above form with any choice of $b(y), T(y), a(\eta)$, then that expression is in the exponential family.</p>
</blockquote>

<p>And a choice of <strong>closeness/distance</strong> would be the (reverse) ==KL divergence==:</p>

\[KL(q(x) || p(x)) = \int q(x) \log \frac{q(x)}{p(x)}dx\]

<p>Therefore, our ==objective== is then (<strong>recall that here $x_i := x$ represents a single data point</strong>)</p>

\[q_{\phi^*}(z) = \arg\min_{q_\phi(z)} KL(q_\phi(z)||p(z|x))=\arg\min_{q_\phi(z)} \int q(z)\log \frac{q(z)}{p(z|x)}dz\]

<p>which is intractable since $p(z\vert x)$ is what we want to estimate. Hence we use bayes to simplify:</p>

\[\begin{align*}
\int q(z)\log \frac{q(z)}{p(z|x)}dz 
&amp;= \int q(z)\log \frac{q(z)p(x)}{p(z,x)}dz \\
&amp;= \int q(z)\log \frac{q(z)}{p(z,x)}+q(z) \log (p(x))dz \\
&amp;= \log p(x) + \int q(z)\log \frac{q(z)}{p(z,x)}dz \\
&amp;= \log p(x) -\int q(z)\log \frac{p(z,x)}{q(z)}dz
\end{align*}\]

<p>Now, notice that KL divergence is <strong>non-negative</strong>. Hence we know:</p>

\[\begin{align*}
\log p(x) -\int q(z)\log \frac{p(z,x)}{q(z)}dz 
&amp; \ge  0\\
\log p(x) &amp; \ge \int q(z)\log \frac{p(z,x)}{q(z)}dz \equiv \mathcal{L}
\end{align*}\]

<p>where the integral on the right denoted by $\mathcal{L}$ is known as the <strong>evidence lower bound</strong> (ELBO).</p>

<ul>
  <li>therefore, minimizing KL divergence is the same as <strong>maximizing ELBO</strong></li>
  <li>The ELBO is a <strong>lower bound</strong> on the log-likelihood of the data $x$ given the latent variable $z$. It is a lower bound because it is ==not possible to compute the exact log-likelihood== of the data $x$ given the latent variable $z$</li>
  <li>essentially $p(x,z)$ would involve a likelihood and a prior, which we know. See the example algorithm below to see how it works.</li>
</ul>

<p>This finally can be written as:</p>

\[\arg\max_{q_\phi(z)} \int q(z)\log \frac{q(z,x)}{p(z)}dz=\arg\max_{q_\phi(z)}\,\, \mathbb{E}_{z \sim q_\phi(z)}[\log p(x,z)]-\mathbb{E}_{z \sim q_\phi(z)}[\log q_\phi(z)]\]

<p>where we see that there is a tradeoff between these two terms.</p>

<ul>
  <li>the first term places mass on the MAP estimate;</li>
  <li>whereas the second term encourages diffusion, or spreading the variational distribution.</li>
  <li>note that since we would have specified $q_\phi$, we could <strong>sample $z \sim q_\phi$</strong> to compute for $p(x,z)$</li>
</ul>

<blockquote>
  <p><strong>Note</strong></p>

  <p>Compared with this formulation, many other methods have short-comings:</p>

  <ul>
    <li>mean-field variational inference (MFVI) <strong>assumes a full factorization of variables</strong> which is inaccurate</li>
    <li>MCMC sampling methods (Brooks, Gelman, Jones &amp; Meng 2011), such as the Metropolis Hastings algorithm, <strong>may not be scalable to very large datasets</strong> and may require <strong>manually specifying a proposal distribution</strong></li>
  </ul>
</blockquote>

<hr />

<p>Recall that:</p>

<p>In the end we also want to recover our $\theta$ for model $p_\theta(x)$. Hence essentially our loss can be rephrased as (rephrasig $p(x,z)=p(x\vert z)p(z)$)</p>

\[\mathcal{L}_i(p,q_i ) =\mathbb{E}_{z \sim q_\phi(z)}[\log p_\theta(x_i|z) + \log p(z)]-\mathbb{E}_{z \sim q_\phi(z)}[\log q_i(z)]\]

<p>Therefore, our algorithm would be, for each $x_i$:</p>

<ol>
  <li>
    <p>calculate $\nabla_\theta \mathcal{L}_i(p,q_i )$</p>

    <ul>
      <li>
        <p>sample $z \sim q_i(z)$</p>
      </li>
      <li>
        <p>compute the gradient, which is only on the first term:</p>

\[\nabla_\theta \mathcal{L}_i(p,q_i) \approx \log p_\theta(x_i|z)\]

        <p>this we <strong>know because $x_i ,z$</strong> are now “observed”</p>
      </li>
    </ul>
  </li>
  <li>
    <p>Update $\theta \leftarrow \theta + \alpha \nabla_\theta \mathcal{L}_i(p,q_i)$</p>
  </li>
  <li>
    <p>update <strong>$q_i$ to maximize $\mathcal{L}_i(p,q_i)$</strong></p>

    <ul>
      <li>e.g. if you picked $q_i(z) = N(\mu_i, \sigma_i)$, then essentially $\phi = (\mu_i, \sigma_i)$</li>
      <li>hence yuo would try to compute $\nabla_{\mu_i} \mathcal{L}<em>i$ and $\nabla</em>{\sigma_i} \mathcal{L}_i$ to optimize</li>
      <li>but that will be <strong>a lot of parameters</strong>, if we have many data points.</li>
    </ul>
  </li>
</ol>

<p>Therefore, this introduces us to other alternatives such as VAE.</p>

<hr />

<h3 id="optimizing-for-q_phi">Optimizing for $q_\phi$</h3>

<p>In practice, there has been <strong>many methods</strong> in which one can use to update the estimate distribution $q_\phi$. Here we will discuss the approach using</p>

<ul>
  <li><strong>Score function gradient</strong> - generic and has <strong>no requirement on $p_\theta(x)$</strong>, but has ==large variance==;</li>
  <li><strong>Reparameterization gradient</strong>. - less general purpose, <strong>$p_\theta(x)$ needs to  be continuous</strong>, much ==smaller variance==.</li>
</ul>

<h3 id="score-function-gradient">Score Function Gradient</h3>

<p>To find the best $p_\phi(z\vert x_i)$, we consider finding $\phi$:</p>

\[\nabla_{\phi_i} \mathcal{L}_i(p,q_i ) = \nabla \mathbb{E}_{z \sim q_\phi(z)}[\log p_\theta(x_i|z) + \log p(z)-\log q_{\phi_i}(z)]= \nabla \mathbb{E}_{z \sim q_\phi(z)}[\log p(x_i,z)-\log q_{\phi_i}(z)]\]

<p>let us denote $\log p(x_i,z)-\log q_{\phi_i}(z) \equiv f_\phi(z)$, then we have:</p>

\[\begin{align*}
\nabla_\phi \mathbb{E}_{z \sim q_\phi(z)}[f_\phi(z)]
&amp;= \nabla_\phi \int f_\phi(z)q_\phi(z)dz \\
&amp;= \phi \int (\nabla_\phi f_\phi(z))q_\phi(z)+ (\nabla_\phi q_\phi(z))f_\phi(z)dz \\
\end{align*}\]

<p>Now, it turns out that we can <strong>compute</strong> using the following ==trick==</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220215205915090.png" alt="image-20220215205915090" style="zoom: 50%;" /></p>

<p>where:</p>

<ul>
  <li>
    <p>the ==score function== is:</p>

\[\nabla_\phi \log q_\phi(z) = \frac{\nabla_\phi q_\phi(z)}{q_\phi(z)}\]
  </li>
</ul>

<p>This therefore means that:</p>

\[\nabla_{\phi_i} \mathcal{L}_i(p,q_i ) = \mathbb{E}_{z \sim q_\phi(z)}[\log p(x_i,z)-\log q_{\phi_i}(z) \nabla _\phi \log q_\phi(z)]\]

<p>which we can then <strong>estimate by sampling from the distribution $q_\phi(z)$ that we guessed</strong>:</p>

\[\nabla_{\phi_i} \mathcal{L}_i(p,q_i ) =\frac{1}{k}\sum_{i=1}^k[\log p(x_i,z_i)-\log q_{\phi_i}(z_i) \nabla _\phi \log q_\phi(z_i)]\]

<p>which is called <strong>Monte Carlo sampling</strong></p>

<h3 id="reparameterization-gradient">Reparameterization Gradient</h3>

<p>The reparameterization trick utilizes the property that for <strong>continuous</strong> distribution $p_\theta(x)$, the following sampling processes are equivalent:</p>

\[\begin{align*} \hat{x} \sim p(x;\theta) \quad \equiv \quad \hat{x}=g(\hat{\epsilon},\theta) , \hat{\epsilon} \sim p(\epsilon) \end{align*}\]

<p>where:</p>

<ul>
  <li>
    <p>instead of directly sampling from the posterior, we typically take random sample from a standard Normal distribution $\hat{\epsilon} \sim \mathcal{N}(0,1)$ and multiply it by the mean and variance</p>
  </li>
  <li>
    <p>e.g. in our case, we can have $z \sim q_\phi(z) = \mathcal{N}(\mu, \sigma)$ by:</p>

\[z = \mu + \sigma \cdot \epsilon\]

    <p>where $\epsilon \sim \mathcal{N}(0,1)$</p>
  </li>
</ul>

<p>Then, this <strong>reparametrization can</strong>:</p>

<ol>
  <li>express the gradient of the expectation</li>
  <li>achieve a ==lower variance== than the score function estimator, and</li>
  <li>differentiate through the latent variable $z$ to optimize by backpropagation</li>
</ol>

<p>Then</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220215211858216.png" alt="image-20220215211858216" style="zoom: 50%;" /></p>

<p>This finally gives:</p>

\[\nabla_{\phi_i} \mathcal{L}_i(p,q_i ) =\frac{1}{k}\sum_{i=1}^k\{\nabla_\phi [\log p(x, g(\epsilon_i,\phi))-\log q_\phi(g(\epsilon_i,\phi))]\}\]

<p>being the update equation.</p>

<h2 id="autoencoders">Autoencoders</h2>

<p>Instead of optimizing a separate parameter $\phi_i$ for <strong>each example</strong>, amortized variational inference (AVI) approximates the posterior across all examples together</p>

<p>The task of our model essentially involves finding <strong>two sets of parameters $\theta, \phi$</strong>. This makes it natural to consider an architecture using <strong>encoder + decoder</strong>, where essentially:</p>

<ul>
  <li><strong>encoder</strong> will perform $q_\phi(z\vert x)$ mapping. In other words, given an <strong>input $x$</strong>, <strong>output a hidden state $z$</strong></li>
  <li><strong>decoder</strong> will perform $p_\theta(\hat{x}\vert z)$, in an attempt to <strong>reconstruct $x$</strong> hence finding $p(x\vert z)$ with <strong>input from hidden state $z$</strong></li>
</ul>

<hr />

<p><em>Recap</em>: Autoencoder</p>

<p>Essentially an autoencoder is doing:</p>

\[F(x) = \text{decode}(\text{encoder}(x))\]

<p>where <strong>making sure that</strong> the dimension $z = \text{encoder}(x)$ is ==smaller than $x$==, hence we are “<strong>extracting important features</strong>” from $x$.</p>

<p>Therefore, the architecture for autoencoder looks like:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220215220325253.png" alt="image-20220215220325253" style="zoom:67%;" /></p>

<p>where we can say that there are <strong>two networks</strong> (e.g. with two weights):</p>

\[\min_{W_e,W_d} \sum_{i=1}^m ||x_i - (W_d)^T f( (W_e)^T x_i )||^2\]

<p>for each data $x_i \in \mathbb{R}^d$</p>

<ul>
  <li>we want $(W_e)^Tx_i$ to have a <strong>smaller dimension than $d$</strong> (otherwise reconstructing is trivial)</li>
  <li>if $f$ is an <strong>identity matrix</strong>, then this is equivalent of doing ==PCA==</li>
</ul>

<hr />

<p>This architecture can be used for:</p>

<ul>
  <li>
    <p><strong>denoising</strong></p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220217134248515.png" alt="image-20220217134248515" style="zoom:33%;" /></p>
  </li>
  <li>
    <p><strong>completion</strong></p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220217134306323.png" alt="image-20220217134306323" style="zoom:33%;" /></p>

    <p>for example:</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220217134333967.png" alt="image-20220217134333967" style="zoom:33%;" /></p>
  </li>
</ul>

<h3 id="variational-autoencoder">Variational Autoencoder</h3>

<p>Then, for Variational Autoencoder, we are basically using autoencoder to learn $\theta, \phi$ by <strong>maximizing ELBO</strong>:</p>

\[\begin{align*}
\mathcal{L} 
&amp;= \int q(z)\log \frac{p(z,x)}{q(z)}dz \\
&amp;= \int q(z)\log p(x|z) dz - \int q(z) \log \frac{p(z)}{q(z)}dz\\
&amp;= \mathbb{E}_{z \sim q(z)}[\log p(x|z)] - KL(q(z)||p(z))
\end{align*}\]

<p>Therefore, we can think of the following architecture to <strong>solve this optimization problem</strong></p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Network</th>
      <th style="text-align: center">Abstraction</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="https://miro.medium.com/max/1838/1*Q5dogodt3wzKKktE0v3dMQ@2x.png" style="zoom:67%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220215220914001.png" alt="image-20220215220914001" /></td>
    </tr>
  </tbody>
</table>

<p>where:</p>

<ul>
  <li>
    <p>$\mathbb{E}_{z \sim q(z)}[\log p(x\vert z)]$ would correspond to <strong>decoder</strong></p>

    <ul>
      <li>given some <strong>sampled $z \sim q(z)$</strong>, this is the log-likelihood of the observed data $x$ (i.e. $x_i := x$).</li>
      <li>Therefore, this measures how well the samples from $q(z)$ explain the data $x$, which can be seen as the <strong>reconstruction error</strong> to get $x$ back from an encoded latent variable $z$</li>
    </ul>
  </li>
  <li>
    <p>$KL(q(z)\vert \vert p(z))$ would correspond to the <strong>encoder</strong>, because we are trying to find out $q(z)$ that is close to $p(z)$</p>

    <ul>
      <li>represents <strong>encoding data from $x$ to latent variable $z$</strong></li>
      <li>hence, if going well, this means that the explanation of the data ($z \sim q(z)$) does not deviate from the prior beliefs $p(z)$ and
is called the <strong>regularization term</strong></li>
    </ul>
  </li>
</ul>

<p><strong>In summary</strong>:</p>

<ul>
  <li>encoder neural network infers a hidden variable $z$ from an observation $x$.</li>
  <li>decoder neural network which reconstructs an observation $\hat{x}$ from a hidden variable $z$.</li>
  <li>The encoder $q_\phi$ and decoder $p_\theta$ are trained end-to-end, optimizing for <strong>both</strong> the <strong>encoder parameters $\phi$</strong> and <strong>decoder parameters $\theta$</strong> by backpropagation</li>
</ul>

<blockquote>
  <p>Now there is a problem, because in the above algorithm, we would need to <strong>sample $z$</strong> in the encoder (not a differentiable operation). However, for backpropagation, we need each operation to be ==differentiable==.</p>
</blockquote>

<p>Therefore, we need to <strong>reparametrize</strong> the sampling procedure ot the following:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220217134853802.png" alt="image-20220217134853802" style="zoom:33%;" /></p>

<p>therefore, essentially:</p>

<ul>
  <li>
    <p>recall that we can have $z \sim q_\phi(z) = \mathcal{N}(\mu, \sigma)$ by:</p>

\[z = \mu + \sigma \cdot \epsilon\]

    <p>where $\epsilon \sim \mathcal{N}(0,1)$</p>
  </li>
  <li>we are <strong>predicting the mean/variance</strong>, instead of predicting $z$. Therefore, all we need to do is to <strong>update mean/variance</strong> of the distribution instead of update the “sampling procedure”</li>
  <li>the same goes on to decoder.</li>
</ul>

<p>Then together, the model is really <strong>learning</strong>:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220217135020612.png" alt="image-20220217135020612" style="zoom: 50%;" /></p>

<ul>
  <li>which can be seen as a probabilistic model as it involves calculation from samplings using mean and variance</li>
</ul>

<h2 id="probabilistic-programming">Probabilistic Programming</h2>

<p>Essentially you can compute <strong>distributions, conditional distributions, etc</strong> using a program.</p>

<ul>
  <li>e.g. you can infer <strong>conditional distribution $p(a+b+c\vert a+b=1)$</strong> from only knowing the individual probabilities $p(a),p(b),p(c)$</li>
</ul>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220217135414796.png" alt="image-20220217135414796" style="zoom:50%;" /></p>

<p>which is a powerful idea (e.g. used in MCMC and etc)</p>

<h1 id="reinforcement-learning">Reinforcement Learning</h1>

<p>Machine learning can be categorized into supervised learning, unsupervised learning, and reinforcement learning.</p>

<ul>
  <li>In <strong>supervised</strong> learning we are given input-output pairs</li>
  <li>in <strong>unsupervised</strong> learning we are given only input examples</li>
  <li>In <strong>reinforcement</strong> learning we learn from interaction with an environment to achieve a goal</li>
</ul>

<blockquote>
  <p>We have an <strong>agent</strong>, a learner, that makes decisions under uncertainty.</p>

  <p>In this setting there is an <strong>environment</strong> which is what the agent interacts with. The agents selects <strong>actions</strong> and the environment responds to those actions with a new <strong>state</strong> and <strong>reward</strong> .</p>

  <p>The agent goal is to ==maximize reward over time== as shown below:</p>

  <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220217201444646.png" alt="image-20220217201444646" style="zoom:50%;" /></p>
</blockquote>

<blockquote>
  <p><strong>Resource</strong>: https://web.stanford.edu/class/cs234/index.html</p>
</blockquote>

<h2 id="multi-armed-bandit">Multi-Armed Bandit</h2>

<p>Before considering reinforcement learning, we will consider the <strong>stateless</strong> (policy at time $t$ is identical) setting of a multi-armed bandit.</p>

<p>Given $k$ slot machines:</p>

<ul>
  <li>an <strong>action</strong> is to pull an arm of one of the machines</li>
  <li>at each <strong>time step</strong> $t$ the agent chooses an <strong>action</strong> at among the $k$ actions</li>
  <li>taking action a is pulling arm $i$ which gives a <strong>reward $r(a)$</strong> with probability $p_i$, which of course you don’t know
    <ul>
      <li>i.e. Behind each machine there is a probability distribution, and by pulling an arm we get a <em>sample</em> from that distribution</li>
    </ul>
  </li>
</ul>

<p>Our goal is to <strong>maximize the total expected return</strong>. To do this, consider:</p>

<ul>
  <li>
    <p>each action has an expected or mean reward given that that action is selected; we can it <strong>value</strong> of that action</p>

    <ul>
      <li>
        <p>we denote the <strong>true value of action $a$</strong> as $q(a)$</p>
      </li>
      <li>
        <p>the <strong>estimated value of action $a$ at time $t$ as $Q_t(a)$</strong></p>

\[Q_t(a) =\text{Sample Mean}(a)\]

        <p>which we can update per iteration/action taken</p>
      </li>
    </ul>
  </li>
</ul>

<p>Then a simple idea is, at any time step, <strong>pick the action</strong> whose ==estimated value is greatest==</p>

\[a_t = \arg\max_{a}Q_t(a)\]

<p>where if we do this, we are doing a <strong>greedy algorithm</strong></p>

<ul>
  <li>If you select a greedy action, we say that you are <strong>exploiting</strong> your current knowledge of the values of the actions</li>
  <li>If instead you select one of the nongreedy actions, then we say you are <strong>exploring</strong> (could lead to better results in the long run)</li>
</ul>

<hr />

<p><em>For Example</em></p>

<p>Consider you are given</p>

<ul>
  <li>two possible actions, picking red or blue (door, pill, etc).</li>
</ul>

<p>At $t=0$, we can randomly pick an action. For instance we picked the red one, and receives a reward $0$:</p>

<table>
  <thead>
    <tr>
      <th>$t=0$</th>
      <th style="text-align: center">$t=1$</th>
      <th style="text-align: center">$t=2$</th>
      <th style="text-align: center">$t=3$</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220217205400203.png" alt="image-20220217205400203" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220217205412649.png" alt="image-20220217205412649" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220217205426486.png" alt="image-20220217205426486" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220217205443361.png" alt="image-20220217205443361" /></td>
    </tr>
  </tbody>
</table>

<p>notice that</p>

<ul>
  <li>at each time step we have <strong>updated our estimate for value of an action $Q_t(a)$</strong></li>
  <li>we are endlessly choosing blue, but it could have been the case that the value we received for the red door of $0$ was simply bad luck, and that value was sampled from the tail of the distribution behind the red door
    <ul>
      <li>hence we need some <strong>balance</strong> between exploration and expoitation</li>
    </ul>
  </li>
</ul>

<h3 id="varepsilon-greedy-approach">$\varepsilon$-greedy Approach</h3>

<blockquote>
  <p>If instead of taking a greedy action, we behave greedily most of the time, for example</p>

  <ul>
    <li>with a small probability $\varepsilon$ we choose a <strong>random</strong> action</li>
    <li>with probability $1-\varepsilon$ we take the <strong>greedy</strong> action then we are acting $\varepsilon$-greedy</li>
  </ul>
</blockquote>

<p>Then the algorithm is simply:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220217210047233.png" alt="image-20220217210047233" style="zoom: 50%;" /></p>

<p>notice that:</p>

<ul>
  <li>$r(a)-Q(a)$ is like an <strong>error</strong> of current estimate</li>
  <li>as an exercise, try to show that this is the same as calculating the runnning mean $Q_{t+1} = (1/k)\sum_i^k R_i$</li>
</ul>

<h3 id="upper-confidence">Upper Confidence</h3>

<p>We can choose to be optimistic under uncertainty by <strong>using both the mean and variance of the (estimated) reward</strong>, taking the action using the upper confidence bound (UCB) criteria:</p>

\[a_t = \arg\max_a(\mu(r(a)) + \epsilon \sigma(r(a)))\]

<p>then in this case, you would also need to keep track of $\sigma(r(a))$ estimate.</p>

<h2 id="state-machines">State Machines</h2>

<p>The algorithms before are <strong>stateless</strong>. Now we consider adding a state, and the problem can be formalized as a state machine.</p>

<blockquote>
  <p>The tuple $(S,X, f, Y, g, s_0)$ define the <strong>state machine</strong>.</p>

  <ul>
    <li>$S$ is the set of possible states</li>
    <li>$X$ is the set of possible inputs</li>
    <li>$f:S\times X\to S$ transition function</li>
    <li>$Y$ is the set of possible outputs</li>
    <li>$g:S \to Y$ mapping from state to output</li>
    <li>$s_0$ initial state</li>
  </ul>
</blockquote>

<p>An example would be:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220218170329457.png" alt="image-20220218170329457" style="zoom: 50%;" /></p>

<p>where notice that:</p>

<ul>
  <li>$S = { \text{standing, moving} }$, $X = { \text{slow, fast} }$,</li>
  <li>$f$ shown in orange and purple arrows, e.g. $s_1 = f(s_0 , \text{fast}) = \text{moving}$</li>
  <li>$s_0 = \text{standing}$ being the initial state</li>
  <li>$y=g(\text{standing}) = \text{standing}$ is the output in this case</li>
</ul>

<p>Notice when we use a state machine, at each time step $t$ it is essentially resembling <strong>RNN</strong>:</p>

\[\begin{align*}
s_t &amp;= f(s_{t-1},x_t)\\
y_t &amp;= g(s_t)	
\end{align*}\]

<p>notice that</p>

<ul>
  <li>this is the same as RNN if we use hidden state $h_{t-1}$ instead of $s_{t-1}$ here.</li>
  <li>everything is <strong>deterministic</strong>, i.e. given a state and an action, you know for certain what will be the next state</li>
</ul>

<h3 id="markov-processes">Markov Processes</h3>

<blockquote>
  <p>In a <strong>Markov model</strong>, we assume that the probability of a state $s_{t+1}$ is dependent <strong>only on the previous state $s_t$ and an action $a_t$</strong>.</p>

  <p>Formally, we consider</p>

  <ul>
    <li>$S$ a set of possible states</li>
    <li>$A$ a set of possible actions</li>
    <li>$T:S\times A \times S \to \mathbb{R}$ is the transition model with probabilities</li>
    <li>$g$ is the mapping from state to output
      <ul>
        <li>in the following examples they will just be identity operation</li>
      </ul>
    </li>
  </ul>
</blockquote>

<p>(notice that we haven’t included reward $R$ in this model. Adding this information essentially makes the model to become a Markov Decision Process)</p>

<p>For instance:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220218172310634.png" alt="image-20220218172310634" style="zoom:50%;" /></p>

<p>where you see</p>

<ul>
  <li>$A = {\text{slow}, \text{fast}}$ denoted by orange and pick arc</li>
  <li>e.g. if the robot is $\text{fallen}$ and takes $\text{slow}$ action then with probability $p=3/5$ the robot will stay fallen, <strong>but with $p=2/5$</strong> the robot will stand up
    <ul>
      <li>notice that this means an action can potentially lead <strong>any number of states</strong></li>
      <li>this is no longer deterministic!</li>
    </ul>
  </li>
</ul>

<p>Notice that since we have <strong>three states and two actions</strong>, we have <strong>two probability matrices</strong> of $3\times 3$ in size:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220218221548845.png" alt="image-20220218221548845" style="zoom:67%;" /></p>

<p>which corresponds to the figure above, and notice that:</p>

<ul>
  <li>the $i$-th row denote transition from state $s_i$ to $s_j$. Therefore probability per row <strong>adds up to $1$</strong></li>
</ul>

<blockquote>
  <p>Then, a <strong>policy $\pi_t(a\vert s)=P(a_t=a\vert s_t=s)$</strong> maps a <strong>state $s$ to action $a$</strong>, allowing agent to decide which action to take given the current state at time $t$.</p>

  <ul>
    <li>Reinforcement learning methods specify how the agent changes its policy as a result of its experience</li>
  </ul>
</blockquote>

<p>Graphically, this looks like:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220222135047939.png" alt="image-20220222135047939" style="zoom: 33%;" /></p>

<p>This idea can be easily extended when we have observations $o_i \neq s_i$ at each state, and we make decisions <strong>base on the observations $\pi(a_i \vert  o_i)$</strong></p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220222135329258.png" alt="image-20220222135329258" style="zoom: 50%;" /></p>

<h3 id="markov-decision-processes">Markov Decision Processes</h3>

<p>This is the more relevant introduction to RL.</p>

<blockquote>
  <p>The tuple $(S,A,T,R,\gamma)$ define the <strong>Markov Decision Process</strong>.</p>

  <ul>
    <li>$S$ is the set of possible states</li>
    <li>$A$ is the set of possible actions</li>
    <li>$T:S\times A \times S\to \mathbb{R}$ is the transition model with <em>probabilities</em>
      <ul>
        <li>this is assumed to be known in advance in MDP. It will be unknown in RL.</li>
      </ul>
    </li>
    <li>$R: S \times A \to \mathbb{R}$ is reward function, given a state and action
      <ul>
        <li>not $r(s,a,s’)$ here because we need to “estimate” the reward before knowing what $s’$ is, which is probabalistic, so that we can define our policy based only on $s$ so that $\pi = \pi(a\vert s)$</li>
      </ul>
    </li>
    <li>$\gamma$ is the discount factor</li>
  </ul>
</blockquote>

<p>The idea is simple:</p>

<ol>
  <li>At every time step $t$ the agent finds itself in state $s \in S$ and selects an action $a \in A$.</li>
  <li>the agent then moves to a new state $s \leftarrow s’$ in a <strong>probabalistic manner</strong> and receives a <strong>reward</strong>
    <ul>
      <li>the reward is a function of previous state and action $s,a$ (technically the expected value of $r(s,a,s’)$)</li>
    </ul>
  </li>
  <li>repeat step 1</li>
</ol>

<p>For instance, consider the following example, where we have a robot <strong>collecting cans</strong>. It can either search actively for a can (depletes battery), wait for someone to give a can, or recharge:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220218231839711.png" alt="image-20220218231839711" style="zoom: 67%;" /></p>

<p>where we have provided:</p>

<ul>
  <li>
    <p>state $S$ being the larger nodes, actions $A$ being the smaller nodes</p>
  </li>
  <li>
    <p>transition $T(s,a,s’)$ being the probability on the arrow, and $r(s,a,s’)$ being the reward on the arrow.</p>

    <p>Reward function technically is:</p>

\[R(s,a) = \sum_{s'} r(s,a,s') p(s'|s,a)\]
  </li>
</ul>

<p>They can also be summarized in the table:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220218233039582.png" alt="image-20220218233039582" style="zoom:67%;" /></p>

<p>notice that the above table essentially provides a <strong>probability distribution for each possible state-action pair</strong></p>

\[p(s',r|s,a) \equiv P(S_{t+1}=s,R_{t+1}=r| S_t = s,A_t=a)\]

<p>since each transition essentially is a two tuple. Then, we can use this to compute useful quantities such as:</p>

<ul>
  <li>
    <p><strong>expected rewards for state-action</strong> pair</p>

\[r(s,a) = \mathbb{E}[R_{t+1}|S_t=s,A_t=a] = \sum_r r \sum_{s'} p(s',r|s,a)\]

    <p>or alternatively, if we have $r(s,a,s’)$:</p>

\[r(s,a) = \mathbb{E}[R_{t+1}|S_t=s,A_t=a]=\sum_{s'} r(s,a,s')p(s'|s,a)\]

    <p>for instance, we can compute $r(s=\text{low}, a=\text{search})$ as:</p>

\[\begin{align*}
r(s=\text{low}, a=\text{search})
&amp;= -3 \cdot \sum_{s'} p(s',r=-3|s,a) + r_{search}\cdot \sum_{s'}p(s',r=r_{search}|s,a)\\
&amp;= -3 \cdot (1-\beta) + r_{search}(\beta )
\end{align*}\]

    <p>which is essentially ==weighting the reward on the arrow with probability== (see graph above). We can compute this for <strong>every state-action pair</strong> and get a matrix of size $\vert S\vert  \times \vert A\vert$:</p>

\[R(s,a) = \begin{bmatrix}
r(s_0,a_0) &amp; r(s_0,a_1)\\
r(s_1,a_0) &amp; r(s_1,a_1)\\
r(s_2,a_0) &amp; r(s_2,a_1)
\end{bmatrix}\]

    <p>then we can take the action that maximizes the reward from that state per <strong>row</strong> (greedy)</p>
  </li>
  <li>
    <p><strong>state transition probability</strong></p>

\[p(s'|s,a) = P(S_{t+1}=s| S_t = s,A_t=a) = \sum_r p(s',r|s,a)\]
  </li>
  <li>
    <p><strong>expected rewards for state-action-next-state</strong>:</p>

\[r(s,a,s') = \mathbb{E}[R_{t+1}|S_t=s,A_t=a,S_{t+1}=s'] = \frac{\sum_r r\, p(s',r|s,a)}{p(s'|s,a)}\]
  </li>
</ul>

<blockquote>
  <p><strong>Note</strong></p>

  <ul>
    <li>The latter two quantities will be <strong>the most important</strong>, which are the ones drawn on the graph/in the table, and dynamics will be expressed almost exclusively using those two in further chapters.</li>
    <li>In reality, the agent does not know $T(s,a,s’)=P(s’\vert s,a)$ and $R(s,a)$. We wil lneed to learn them by <strong>sampling</strong> the environment.</li>
  </ul>
</blockquote>

<h2 id="value-functions">Value Functions</h2>

<p>Almost all reinforcement learning algorithms involve estimating some kind of value functions:</p>

<ul>
  <li>either estimating <strong>functions of states</strong> that estimate how good it is for the agent to be in a given state</li>
  <li>or <strong>functions of state-action pairs</strong> that estimate how good it is to perform a given action in a given state</li>
</ul>

<blockquote>
  <p>The notion of “how good” here is defined in terms of <strong>future rewards</strong> that can be expected. To be specific, we want to maximize the <strong>cumulative reward it receives in the long run</strong>, which is called the ==expected return $G_t$==</p>
</blockquote>

<p>To formalize the above idea, we need to consider the <strong>sequence of rewards</strong> received ==at each step== after some time $t$:</p>

\[R_{t+1}, R_{t+2}, R_{t+3}, ...\]

<p>Then, we can define our ==goal being maximizing the expected return at time $t$==:</p>

\[G_t = f(R_{t+1},R_{t+2},...,R_{T})\]

<p>for $T$ being the final step. A simple example would be:</p>

\[G_t = R_{t+1} + R_{t+2} + .... + R_T\]

<p>and more commonly we can generalize this with <strong>discounting</strong>:</p>

\[G_t = R_{t+1} + \gamma R_{t+2} + \gamma^2 R_{t+3}+.... = \sum_{k=0}^T \gamma^k R_{t+k+1}\]

<p>where $\gamma \in [0,1]$ is a discount rate:</p>

<ul>
  <li>a reward received $k$ time steps in the future is worth only $\gamma^{k-1}$ times what it would be worth if it were received immediately.</li>
  <li>if $\gamma=0$, then the agent is <strong>myopic</strong> as it only consider maximizing immediate reward as $G_t = R_{t+1}$</li>
  <li>if $\gamma \to1$, then the objective takes future rewards into account more strongly: the agent becomes more <strong>farsighted</strong>. (if $\gamma =1$ the sum might explode if $T \to \infty$ and your sequence is not bounded.)</li>
</ul>

<p>With this, we can define the following quantity that are crucial in making decisions.</p>

<blockquote>
  <p><strong>State Value Function</strong></p>

  <p>The value of a state $s$ under a policy $\pi$, denoted $V_\pi(s)$, is the <strong>expected return when starting in $s$</strong> and following $\pi$ thereafter.</p>

\[V_\pi(s) = \mathbb{E}_\pi [G_t | S_t = s] = \mathbb{E}_\pi \left[ \sum_{k=0}^T \gamma^k R_{t+k+1}|S_t=s\right]\]

  <p>and we call $T\equiv h$ is the horizon, which can be seen as the <strong>number of time steps left</strong>. Additionally, we define the value of the last state $t=T=h$ being</p>

\[V_\pi^{0}(s) = 0\]

</blockquote>

<p>Of course, in reality we can only estimate this expected value. This means that we need to consider the <strong>most general case</strong> for a ==stochastic policy $\pi(a\vert s)$ being a distribution==:</p>

\[\begin{align*}
V_\pi (s)
= \mathbb{E}_\pi [G_t | S_t =s]
&amp;= \mathbb{E}_\pi \left[ \sum_{k=0}^T \gamma^k R_{t+k+1}|S_t=s\right]\\
&amp;= \mathbb{E}_\pi \left[ R_{t+1} + \gamma \sum_{k=0}^T \gamma^k R_{t+k+2}|S_t=s\right]\\\\
&amp;= \mathbb{E}_\pi [R_{t+1}|s] + \gamma \mathbb{E}\left[\sum_{k=0}^T \gamma^k R_{t+k+2}|S_t=s\right]\\
&amp;= \mathbb{E}_\pi [R_{t+1}|s] + \sum_a \pi(a|s) \sum_{s'}\sum_r p(s',r|s,a)\gamma \mathbb{E}\left[\sum_{k=0}^T \gamma^k R_{t+k+2}|S_{t+1}=s\right]\\
&amp;= \sum _aR(s,a) \pi(a|s) + \gamma  \sum_a \pi(a|s)\sum_{s'}\sum_r p(s',r|s,a)V_\pi(s')\\
\end{align*}\]

<p>is a essentially <strong>recursive formula</strong>, which we can <strong>dynamically update</strong>. Note that:</p>

<ul>
  <li>$s’$ is essentially the <strong>next state</strong> from $s,a$ tuple we chose</li>
  <li>
    <p>we have all the fuss/sums because the policy $\pi(a\vert s)$ is spitting out a <strong>probability for taking each action $a$</strong> when in a state $s$</p>
  </li>
  <li>
    <p>remember that:</p>

\[R(s,a)=\mathbb{E}[R_{t+1}|S_t=s,A_t=a] = \sum_r r \sum_{s'} p(s',r|s,a)\]

    <p>which</p>

    <ul>
      <li>do not forget that $R$ is basically the <strong>expected reward after taken $s,a$ tuple</strong>.</li>
      <li>the $r$ is a random variable, and $p(s’,r\vert s,a)$ would be the joint for all possible $s’,r$ output.</li>
    </ul>

    <p>Therefore, the above essentially becomes the <strong>Bellman equation</strong></p>
  </li>
</ul>

<blockquote>
  <p><strong>Bellman Equation for $V_\pi$</strong></p>

  <p>For a <strong>stochastic policy $\pi(a\vert s)$</strong>, the formula above can be rewritten as:</p>

\[V_\pi (s)
= \sum_a \pi(a|s)\sum_{s'}\sum_r p(s',r|s,a)[r + \gamma V_\pi(s')]\]

  <p>which can be interpreted as the <strong>expected value over $a,s’,r$</strong> for $r+\gamma V_\pi(s’)$, and we are <strong>weighting it by $\pi(a\vert s)p(s’,r\vert s,a)$</strong>. Hence, graphically, we are essentially considering <strong>all the possibilities from $s$</strong>:</p>

  <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220222220640857.png" alt="image-20220222220640857" /></p>

  <p>and summing over <strong>all of them</strong>.</p>

  <p>Notice that this value function $V_\pi(s)$ is the <strong>unique solution to its Bellman equation, given a $\pi(a\vert s)$</strong>.</p>

  <ul>
    <li>
      <p>this <strong>yields $\vert S\vert$ equations to be solved</strong>, because it can be written as:</p>

\[V_\pi = r + TV_\pi\]

      <p>for $V_\pi(s)$ is a <strong>vector of values for each state $s$</strong>, $T$ being the transition matrix, $r$ being the reward for each state.</p>
    </li>
    <li>
      <p>We show in subsequent chapters how this Bellman equation forms the basis of a number of ways to compute, approximate, and learn $V_\pi(s)$.</p>
    </li>
  </ul>
</blockquote>

<p>If $\pi(s) \to a \in A$ being some <strong>deterministic</strong> policy, then we can say that:</p>

\[V_\pi(s) =  R(s,\pi(s)) + \gamma  \sum_{s'}p(s'|s,\pi(s))V_\pi(s')\]

<p>so that essentially:</p>

<ul>
  <li>current reward + an expected value summing over all the possible next state $s’$ we could take</li>
  <li>again, a <strong>recursive formula</strong>, which we can dynamically update to solve for $V_\pi(s)$</li>
  <li>since this acts on $\pi(s)\to a \in A$ instead of $\pi(a\vert s)$ being a distribution, e.g. $\pi(s) = \arg\max_a \pi(a\vert s)$, we can use this formula to ==find a policy that maximizes the discounted return==.</li>
  <li>this <strong>yields $\vert S\vert$ equations to be solved</strong></li>
</ul>

<hr />

<p>Similarly, we can inductively compute $Q^h(s,a)$ which is the <strong>action value function</strong>.</p>

<blockquote>
  <p><strong>Action Value Function</strong></p>

  <p>We denote $Q_\pi(s,a)$ as the <strong>expected return</strong> starting from $s$, taking the action $a$, and thereafter following policy $\pi$:</p>

\[Q_\pi(s,a)=\mathbb{E}_\pi [G_t | S_t = s,A_t=a] = \mathbb{E}_\pi \left[ \sum_{k=0}^T \gamma^k R_{t+k+1}|S_t=s,A_t=a\right]\]

  <p>Notice that obviously:</p>

\[V_\pi(s) = \sum_{a} \pi(a|s)Q_\pi(s,a)\]

  <p>are related quantities.</p>
</blockquote>

<p>Similar to the state value function, we can compute the $Q_\pi(s,a)$ using <strong>dynamic programming</strong> with the <strong>Bellman’s Equation</strong> again:</p>

\[\begin{align*}
Q_\pi (s,a)
= \mathbb{E}_\pi [G_t | S_t =s, A_t=a]
&amp;= \mathbb{E}_\pi \left[ \sum_{k=0}^T \gamma^k R_{t+k+1}|S_t=s,A_t=a\right]
\end{align*}\]

<p>which following a similar derivation with the state value function, we can arrive at:</p>

<blockquote>
  <p><strong>Bellman Equation for $Q_\pi$</strong></p>

  <p>For a <strong>stochastic policy $\pi(a\vert s)$</strong>, the formula above can be rewritten as:</p>

\[Q_\pi (s,a)
= \sum_{s'}\sum_r p(s',r|s,a)\left[r + \gamma \sum_a \pi(a|s)\sum_{s'}  Q_\pi(s',a')\right]\]

  <p>which can be interpreted as the <strong>expected value over $s’,r$</strong> whatever is in the bracket, meaning covering all possible $s’,r$ as the next step if we did $s,a$. Then we are <strong>weighting it by $p(s’,r\vert s,a)$</strong>. Hence, graphically, we are essentially considering <strong>all the possibilities from $s,a$</strong>:</p>

  <p>Graphically you are doing:</p>

  <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220222221819799.png" alt="image-20220222221819799" style="zoom: 80%;" /></p>

  <p>And <strong>summing over all possibilities</strong> weighted by their probability.</p>
</blockquote>

<p>Again, this is not computable, so we usually consider estimating $V_\pi,Q_\pi$ from experience. For example:</p>

<ul>
  <li>if an agent follows policy $\pi$ and <strong>maintains an average</strong>, for each state encountered, <strong>of the actual returns that have followed that state</strong>, then the average will converge to the state’s value, $V_\pi(s)$.</li>
  <li>If <strong>separate averages are kept for each action</strong> taken <strong>in a state</strong>, then these averages will similarly converge to the action values, $Q_\pi(s,a)$.</li>
</ul>

<hr />

<p><em>For Example</em></p>

<p>Consider a setup where each cells of the grid correspond to the states of the environment.</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220222232047833.png" alt="image-20220222232047833" /></p>

<p>where:</p>

<ul>
  <li>at each cell, <strong>four actions are possible</strong>: north, south, east, and west, and we assume the <strong>actions are deterministic</strong> in that $p(s \to s’\vert a)=1$.</li>
  <li>actions that would take the agent out of the grid leave its location unchanged, but also result in a <strong>reward of $-1$</strong></li>
  <li>from state $A$, <strong>all four actions yield a reward of $+10$</strong> and take the agent to $A’$.</li>
  <li>from state $B$, <strong>all actions yield a reward of $+5$</strong> and take the agent to $B’$.</li>
  <li>other actions result in <strong>a reward of $0$</strong></li>
</ul>

<p>Now, to compute the <strong>value function $V_\pi(s)$</strong>, we need to specify a policy: Suppose the agent selects <strong>all four actions with equal probability in all states</strong>. Then, using $\gamma=0.9$, this policy gives:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220222232432754.png" alt="image-20220222232432754" /></p>

<p>which is the <strong>value functions $V_\pi(s)$ for all state $s$ given this policy</strong>.</p>

<ul>
  <li>since the policy is stochastic, verify it using the Bellman’s equation</li>
  <li>negative values near the lower edge; these are the result of the high probability of hitting the edge of the grid there under the random policy</li>
  <li>$A$ is the best state to be in under this policy but its <strong>expected return is less than 10</strong> (which is its immediate reward), because from $A$ the agent is taken to $A’$, from which it is likely to run into the edge of the grid.</li>
  <li>State $B$, on the other hand, is <strong>valued more than $5$</strong> (which is its immediate reward), because from $B$ the agent is taken to $B’$, which has a positive value
    <ul>
      <li>because at $B’$ you have a possibility of bumping into $A$ or $B$</li>
    </ul>
  </li>
</ul>

<p>(At this point, you might want to improve the policy, i.e. to move towards $A$ more rather than randomly going in all direction. If you do that, then you will need to <strong>recompute $V_\pi(s)$</strong> because the above is only true for the stochastic policy)</p>

<h3 id="optimal-value-functions">Optimal Value Functions</h3>

<blockquote>
  <p><strong>Goal</strong></p>

  <p>Solving a reinforcement learning task means, roughly, <strong>finding a policy that achieves the most reward over the long run</strong>. Then, with this definition, we can order policies by their <strong>expected return</strong>:</p>

  <p>A policy $\pi$ is defined to be better than or equal to a policy $\pi’$ if</p>

\[\pi \ge \pi' \iff V_\pi(s) \ge V_{\pi'}(s),\quad \forall s\]

  <p>which means its expected return is greater than or equal to that of $\pi’$ <strong>for all states</strong>. And there is ==always at least one policy that is better== than or equal to all other policies</p>
</blockquote>

<p>Hence, we can define an <strong>optimal policy $\pi^*$</strong> that must satisfy the following:</p>

\[\pi^* \to \begin{cases}
V_{\pi^*}(s) = V^*(s) &amp;= \max_\pi V_\pi(s)\\
Q_{\pi^*}(s,a) = Q^*(s,a) &amp;= \max_\pi Q_\pi(s,a)
\end{cases}\]

<p>note that there may be more than one $\pi^*$, but then by definition they must share the same constraint above, i.e have the same state value function and action value function.</p>

<p>At this point, you might wonder <strong>why do we need both $V_\pi(s),Q_\pi(s,a)$</strong>? ==Technically, we only need one of them to find $\pi^*$==</p>

<ul>
  <li>
    <p>If you have the optimal value function, $V^*$, then the actions that appear <strong>best after a one-step search</strong> (i.e. the action that goes to the best valued next state) will be <strong>optimal actions</strong></p>

    <p>Aa greedy policy is actually optimal in the long term sense <strong>because $V^*$ already takes into account the reward consequences of all possible future behavior</strong>.</p>
  </li>
  <li>
    <p>With $Q^*$, the agent does not even have to do a one-step-ahead search: for any state $s$, it can simply <strong>pick any action that maximizes $Q^*(s\vert a)$</strong> by:</p>

\[\pi^*(s) = \arg\max_a Q^*(s,a)\]

    <p>again, a deterministic policy results.</p>

    <p>Hence, at the cost of representing a function of state{action pairs, instead of just of states, the optimal action-value function allows optimal actions to be selected without having to know anything about possible successor states and their values</p>
  </li>
</ul>

<p>Before we discuss <strong>how to solve for the optimal solution</strong>, consider the MDP case of the grid:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220222235445697.png" alt="image-20220222235445697" /></p>

<p>The <strong>optimal solution of state value function</strong> looks like</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220222235513192.png" alt="image-20220222235513192" /></p>

<p>which, by greedily looking one step ahead, we have <strong>found the optimal policy $\pi(s):S \to a \in A$</strong>:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220222235610203.png" alt="image-20220222235610203" /></p>

<hr />

<p>Now, consider <strong>solving for $V^*$</strong>. We know that:</p>

<ol>
  <li>
    <p>The solution must satisfy Bellman’s Equation</p>

\[V_\pi (s)
= \sum_a \pi(a|s)\sum_{s'}\sum_r p(s',r|s,a)[r + \gamma V_\pi(s')]\]
  </li>
  <li>
    <p>But because it is <strong>optimal</strong> (i.e. corresponds to the optimal policy), <strong>value of a state</strong> under an optimal policy must <strong>equal the expected return for the best action from that state</strong>.</p>
  </li>
</ol>

<p>Therefore, we get:</p>

\[\begin{align*}
V^* (s)
= \max_{a \in A} Q^*(s,a)
&amp;= \max_a \mathbb{E}_{\pi^*}[G_t | S_t =s, A_t=a]\\
&amp;= \max_a\mathbb{E}_{\pi^*} \left[ \sum_{k=0}^T \gamma^k R_{t+k+1}|S_t=s,A_t=a\right]\\
&amp;= \max_a\mathbb{E}_{\pi^*} \left[R_{t+1}+\gamma \sum_{k=0}^T \gamma^k R_{t+k+2}|S_t=s,A_t=a\right]\\
&amp;= \max_a\mathbb{E}_{\pi^*} \left[R_{t+1}+\gamma V^*(s_{t+1})|S_t=s,A_t=a\right]\\
&amp;= \max_{a \in A}\sum_{s'}\sum_r p(s',r|s,a)[r + \gamma V^*(s')]\\
\end{align*}\]

<p>notice that the last two lines have <strong>no reference to the optimal policy</strong>. Those two lines are also called the ==optimality equation for $V^*$==.</p>

<p>Graphically:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Bellman’s Optimality equation</th>
      <th style="text-align: center">Bellman’s Equation</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220223005457522.png" alt="image-20220223005457522" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220223005536963.png" alt="image-20220223005536963" /></td>
    </tr>
  </tbody>
</table>

<p>(recall that once you have $V^<em>$, you can find $\pi^</em>$ easily.)</p>

<blockquote>
  <p><strong>Note</strong></p>

  <p>To solve for the optimal state value function, the Bellman optimality equation is actually <strong>a system of equations</strong>, ==one such equation for each state==. So if there are $N$ states, then there are $N$ equations in $N$ unknowns (see example at the end)</p>
</blockquote>

<p>The <strong>Bellman’s optimality equation for $Q^*$</strong> also has to satisfy</p>

<ol>
  <li>
    <p>Bellman’s equation:</p>

\[Q_\pi (s,a)
= \sum_{s'}\sum_r p(s',r|s,a)\left[r + \gamma \sum_a \pi(a|s)\sum_{s'}  Q_\pi(s',a')\right]\]
  </li>
  <li>
    <p>Is <strong>optimal</strong>. Hence we consider $\gamma \max_{a \in A} Q^*(s’,a’)$ instead of $\gamma \sum_a \pi(a\vert s)\sum_{s’}  Q_\pi(s’,a’)$</p>
  </li>
</ol>

<p>This gives the following <strong>optimality equation</strong>:</p>

\[\begin{align*}
Q^* (s,a)
&amp;= \mathbb{E}_{\pi^*} \left[R_{t+1}+\gamma \max_a Q^*(s_{t+1},a')|S_t=s,A_t=a\right]\\
&amp;= \sum_{s'}\sum_r p(s',r|s,a)\left [r + \gamma \max_{a \in A} Q^*(s',a') \right]\\
\end{align*}\]

<p>and graphically:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Bellman’s Optimality equation</th>
      <th style="text-align: center">Bellman’s Equation</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220223010401381.png" alt="image-20220223010401381" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220223010502964.png" alt=" but " /></td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p><strong>Note</strong></p>

  <p>The runtime of solving the optimal action value function will take $O(\vert A\vert \times\vert S\vert )$ for having $\vert A\vert$ possible actions.</p>
</blockquote>

<hr />

<p><em>For Example</em>: Solving Optimal Solution for Robot Collection</p>

<p>Recall the setup being:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Transitions</th>
      <th style="text-align: center">Tabluated</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220218231839711.png" alt="image-20220218231839711" style="zoom: 67%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220218233039582.png" alt="image-20220218233039582" style="zoom:67%;" /></td>
    </tr>
  </tbody>
</table>

<p>Essentially we know $p(s’,r\vert s,a)$, then since we have <strong>two states</strong>, let us encode the two states as $s_0=\text{high}=h,s_1=\text{low}=l$. Additinally:</p>

<ul>
  <li>$s,w,re$ represents the <strong>actions</strong> search, wait, recharge.</li>
  <li>parameters $\gamma, \beta, \alpha$ are assumed to be known</li>
</ul>

<p>Then, we have <strong>two equations because we have two states</strong>:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220223011058649.png" alt="image-20220223011058649" style="zoom:80%;" /></p>

<p>And</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220223011119229.png" alt="image-20220223011119229" style="zoom:80%;" /></p>

<p>Once we solved it, say $V^<em>(h)=21$, $V^</em>(l)=10$, we have <strong>solved the Bellman’s Optimality</strong></p>

<ul>
  <li>
    <p>there is exactly one pair of numbers, $V^<em>(h), V^</em>(l)$ that simultaneously satisfy these two nonlinear equations.</p>
  </li>
  <li>
    <p>essentially we can fill in the “cells” with values we found like in this example we discussed before</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220223011350739.png" alt="image-20220223011350739" style="zoom:67%;" /></p>
  </li>
</ul>

<h2 id="iterative-dp-methods">Iterative DP Methods</h2>

<p>If one can solve the Bellman’s optimality equations, then an optimal policy can be easily found and there is no more work to do. However, in reality you need to face the following problem:</p>

<ul>
  <li>even if all the information is known, computing for the solution takes <strong>huge computation power</strong></li>
  <li>In most cases of practical interest there are <strong>far more states</strong> than could possibly be entries in a table/hence need huge memory, and <strong>approximations</strong> must be made</li>
  <li>in reality, certain aspects of the environment <strong>may not be known</strong>, such as transition probabilities</li>
</ul>

<blockquote>
  <p>In reinforcement learning we are very much concerned with cases in which optimal solutions cannot be found but must be <strong>approximated</strong> in some way</p>
</blockquote>

<p>Recall that for the Bellman’s equation for <strong>any policy</strong></p>

\[V_\pi (s)
= \sum_a \pi(a|s)\sum_{s'}\sum_r p(s',r|s,a)[r + \gamma V_\pi(s')]\]

\[Q_\pi (s,a)
= \sum_{s'}\sum_r p(s',r|s,a)\left[r + \gamma \sum_a \pi(a|s)\sum_{s'}  Q_\pi(s',a')\right]\]

<p>and the <strong>optimality equations</strong>:</p>

\[\begin{align*}
V^* (s)
&amp;= \max_a\mathbb{E}_{\pi^*} \left[R_{t+1}+\gamma V^*(s_{t+1})|S_t=s,A_t=a\right]\\
&amp;= \max_{a \in A}\sum_{s'}\sum_r p(s',r|s,a)[r + \gamma V^*(s')]\\
\end{align*}\]

\[\begin{align*}
Q^* (s,a)
&amp;= \mathbb{E}_{\pi^*} \left[R_{t+1}+\gamma \max_a Q^*(s_{t+1},a')|S_t=s,A_t=a\right]\\
&amp;= \sum_{s'}\sum_r p(s',r|s,a)\left [r + \gamma \max_{a \in A} Q^*(s',a') \right]\\
\end{align*}\]

<blockquote>
  <p><strong>Essentially</strong> dynamic programming methods:</p>

  <ul>
    <li>
      <p>==uses Bellman’s equations as update rules== and improve policy by $\arg\max$ gives <a href="#Policy Iteration">Policy Iteration</a></p>
    </li>
    <li>
      <p>==uses the optimality constraint as update rules== for improving approximations of the desired value functions. This gives <a href="#Value Iteration">Value Iteration</a></p>
    </li>
  </ul>
</blockquote>

<h3 id="policy-evaluation">Policy Evaluation</h3>

<p>First we consider how to compute the state-value function $V_\pi$ for an arbitrary policy $\pi$, using Bellman’s equation.</p>

\[V_\pi (s)
= \sum_a \pi(a|s)\sum_{s'}\sum_r p(s',r|s,a)[r + \gamma V_\pi(s')]\]

<p>Then we have $\vert S\vert$ simultaneous linear equations since we have $V_\pi(s):s \in S$. Then the idea is to consider a <strong>sequence of approximate solutions $V_0,V_1,V_2,…$</strong> such that they obey:</p>

\[V_{k+1} (s)
= \sum_a \pi(a|s)\sum_{s'}\sum_r p(s',r|s,a)[r + \gamma V_k(s')]\]

<p>Then, it can be shown that $\lim_{k \to \infty} {V_k} = V_\pi$, i.e. converges. Therefore our algorithm is simply:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220224173242299.png" alt="image-20220224173242299" style="zoom:67%;" /></p>

<p>where the Bellman’s equation essentially will iterate over all possible $s’ \in S$ while using the current $V$.</p>

<ul>
  <li>
    <p>this algorithm is also called <strong>iterative policy evaluation</strong></p>
  </li>
  <li>
    <p>To produce each successive approximation, $V_{k+1}$ from $V_k$, iterative policy evaluation applies the same operation to each state $s$ by looking at the old values of $s$ and <strong>all possible one-step transitions</strong>, which is called a ==full backup== since it looks at the entire tree:</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220222220640857.png" alt="image-20220222220640857" style="zoom:50%;" /></p>
  </li>
</ul>

<p>In reality, Algorithm 11 will need <strong>two arrays</strong>, one to keep track of old $V_{k-1}(s)$ and the other to fill in the new $V_k(s)$:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220224175028170.png" alt="image-20220224175028170" style="zoom:50%;" /></p>

<p>Another variant would be to use one array and <strong>update the values in place</strong>, that is, with each new backed-up value immediately overwriting the old one.  (it can be shown that this <strong>also converges to $V_\pi$</strong>)</p>

<ul>
  <li>Then, depending on the order in which the states are backed up, sometimes new values are used instead of old ones on the right-hand side of Bellman’s equation</li>
  <li>since it uses new data as soon as possible, it actually <strong>converges faster</strong>. Hence this will be used more often in reality.</li>
</ul>

<hr />

<p><em>For Example</em>:</p>

<p>Consider the setup of the following environment, with each state/cell assigned a value for easier math definitions:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220224175845046.png" alt="image-20220224175845046" style="zoom:67%;" /></p>

<p>where:</p>

<ul>
  <li>non-terminal states are $S = {1,2…,14}$, and terminal states are the grey boxes</li>
  <li>We will assign a reward of $-1$ on all transitions until terminal state is reached. Therefore, the expected reward function becomes $r(s,a,s’)=-1$ for all states/actions.</li>
  <li>the movement will be deterministic, so that $p(6\vert 5,\text{Right})=1$, for example.</li>
</ul>

<p>We consider evaluating a policy $\pi$ being equi-probable for all actions. Then, we can <strong>iteratively compute $V_k$</strong> using the above algorithm, and at each $V_k$, we can compute the <strong>greedy policy w.r.t. $V_k$</strong>.</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220224180250255.png" alt="image-20220224180250255" style="zoom:67%;" /></p>

<p>notice that the greedy policy for $V_3,V_{10},V_\infty$ is actually an <strong>optimal policy in this setup</strong> (though it is obtained from the state value function from random policy). In general, it is only ==guaranteed== that the <strong>last policy</strong>/bottom right would be an ==improvement over the given policy $\pi$==.</p>

<ul>
  <li>this will hint at what we want to do in the next section</li>
</ul>

<h3 id="policy-improvement">Policy Improvement</h3>

<p>Our reason for computing the value function for a policy is to help <strong>find better policies</strong>, just as what we have seen in the previous section. In general, it can be shown that</p>

<blockquote>
  <p><strong>Policy Improvement Theorem</strong></p>

  <p>Let $\pi$ and $\pi’$ be any pair of deterministic policies such that, for all $s \in S$:</p>

\[Q_\pi(s, \pi'(s)) \ge V_\pi(s)\]

  <p>Then it ==must be that==</p>

\[V_{\pi'}(s) \ge V(s),\quad \forall s\]

  <p>Moreover, if there is a strict inequality in one of the state $Q_\pi(s, \pi’(s)) &gt; V_\pi(s)$, then there must be at least a strict inequality for $V_{\pi’}(s) &gt; V(s)$.</p>
</blockquote>

<p>A simple simple example to see how the theorem works is to consider a changed policy, $\pi’$, that is identical to $\pi$ except that $\pi(s’)=a \neq \pi(s)$ for <strong>only one $s \in S$.</strong> Then, if we know $Q_\pi(s,a) &gt; V_\pi(s)$ for that $s$, it follows that $V_{\pi’}(s) &gt; V_\pi(s)$.</p>

<p>Then, since it works for <strong>one $s \in S$</strong>, we can extend it to <strong>all $s \in S$</strong>: selecting at each state the action that appears best according to $Q_\pi(s,a)$ ==after you computed $V_\pi(s)$==:</p>

\[\begin{align*}
\pi^\prime (s)
= \arg\max_{a \in A} Q_\pi(s,a)
&amp;= \arg\max_a\mathbb{E}_{\pi} \left[R_{t+1}+\gamma V_\pi(s_{t+1})|S_t=s,A_t=a\right]\\
&amp;= \arg\max_{a \in A}\sum_{s'}\sum_r p(s',r|s,a)[r + \gamma V_\pi(s')]\\
\end{align*}\]

<p>notice that:</p>

<ul>
  <li>By construction, the greedy policy meets the conditions of the policy improvement theorem, so we know that it is as good as, or better than, the original policy: it <strong>guarantees improvement</strong> unless we are optimal already.</li>
  <li>it is essentially a function of $V_\pi(s)$, which depends on the original $\pi$ and a converged $V_\pi$. (this should provide enough hint how to design an algorithm to find out best $\pi^*$)</li>
</ul>

<blockquote>
  <p><strong>Extension to Stochastic Policy</strong></p>

  <p>Recall that for a stochastic policy $\pi(s)=\pi(a\vert s)$ spit out a probability distribution:</p>

\[Q_\pi(s,\pi^\prime(s)) = \sum_a \pi^\prime (a|s)Q_\pi(s,a)\]

  <p>Then the idea is to basically, if there are several actions which the maximum can be achieved, we assign <strong>each of those actions a portion of the probability</strong> in the new greedy policy. A simple example of this would be the case we discussed before:</p>

  <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220224191414214.png" alt="image-20220224191414214" style="zoom:67%;" /></p>

  <p>where the LHS was the state function for equi-probable stochastic policy, whereas the RHS is the improved greedy policy, which is still stochastic.</p>
</blockquote>

<h3 id="policy-iteration">Policy Iteration</h3>

<p>At this point, you know how to:</p>

<ol>
  <li>evaluate $V_\pi$ of a policy $\pi$</li>
  <li>improve a policy $\pi \to \pi’$</li>
</ol>

<p>Then we can basically repeat the above loop again and again to improve our policy. We can thus obtain a sequence of monotonically improving policies and value functions:</p>

\[\pi_0 \to V_{\pi_0}\to \pi_1 \to V_{\pi_1}\to .... \pi_* \to V_{\pi_*}\]

<p>Hence the algorithm is simply:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220224191804784.png" alt="image-20220224191804784" style="zoom:67%;" /></p>

<p>which works because a <strong>finite MDP has only a finite number of policies</strong>, this process must converge to an optimal policy and optimal value function in a finite number of iterations.</p>

<ul>
  <li>
    <p>While this looks like a painful computation heavy algorithm, it converges actually pretty fast, presumably because the value function changes little from one policy to the next are our policy is getting better</p>
  </li>
  <li>
    <p>but still, sometimes it takes a long time, in which case we can look at value iteration methods</p>
  </li>
</ul>

<h3 id="value-iteration">Value Iteration</h3>

<p>The key idea is that <strong>policy evaluation</strong> step of policy iteration can be <strong>truncated in several ways without losing the convergence</strong> guarantees of policy iteration. The idea is to <strong>combine policy improvement and evaluation</strong>:</p>

\[V_{k+1} (s)
= \max_a \sum_{s'}\sum_r p(s',r|s,a)[r + \gamma V_k(s')]\]

<p>which if you recall, was the optimality constraint:</p>

\[\begin{align*}
V^* (s)
&amp;= \max_a\mathbb{E}_{\pi^*} \left[R_{t+1}+\gamma V^*(s_{t+1})|S_t=s,A_t=a\right]\\
&amp;= \max_{a \in A}\sum_{s'}\sum_r p(s',r|s,a)[r + \gamma V^*(s')]\\
\end{align*}\]

<blockquote>
  <p>And it can be shown that this sequence $\lim_{k \to \infty }{V_k} \to V^*$ <strong>converges</strong> directly to optimal state value function.</p>
</blockquote>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220224193336422.png" alt="image-20220224193336422" style="zoom:67%;" /></p>

<p>where</p>

<ul>
  <li>
    <p>Value iteration effectively combines, in each of its sweeps, one sweep of policy evaluation and one sweep of policy improvement</p>
  </li>
  <li>
    <p>we can again use early stopping if it would run for a long time.</p>
  </li>
</ul>

<h2 id="monte-carlo-methods">Monte Carlo Methods</h2>

<p>In this chapter we consider our first learning methods for estimating value functions and discovering optimal policies. Unlike the previous chapter, here we ==do not assume complete knowledge of the environment==. Therefore, this big change means that MC methods requires only <em>experience</em>, i.e. ==sampling state/action/rewards== from an environment.</p>

<blockquote>
  <p>Monte Carlo methods are ways of solving the reinforcement learning problem based on <strong>averaging sample returns</strong>. This places an assumption that it is defined for <strong>episodic tasks</strong>, instead of a continuous space.</p>

  <p>Specifically, features of this method include:</p>

  <ul>
    <li>
      <p>experience is divided into episodes, and that all episodes eventually terminate no matter what actions are selected</p>
    </li>
    <li>
      <p>only on the completion of an episode are value estimates and policies changed</p>
    </li>
  </ul>
</blockquote>

<p>Again, the key difference here is that before we <strong>computed value functions</strong> from knowledge of the MDP, here we <strong>learn value functions from sample returns</strong> with the MDP.</p>

<h3 id="monte-carlo-prediction">Monte Carlo Prediction</h3>

<p>We begin by considering Monte Carlo methods for <strong>learning the state-value function</strong> for a given policy</p>

<blockquote>
  <p><strong>Key Idea</strong></p>

  <p>The value of a state $s$ is the <strong>expected return</strong> - expected cumulative future discounted reward - <strong>starting from that state</strong>. So an obvious idea to estimate it is simply to <strong>average the returns observed after visits to that state $s$</strong></p>
</blockquote>

<p>Suppose we wish to estimate $V_\pi(s)$, the value of a <strong>specific state $s$</strong>, given a set of episodes obtained by following $\pi$ and passing through $s$. Each occurrence of state s in an episode is called a <em>visit</em> to $s$, so that $s$ may be visited many times in an episode.</p>

<ul>
  <li>first-visit MC method estimates $V_\pi(s)$ as the ==average of the returns following first visits to $s$==</li>
  <li>every-visit MC method averages the returns following all visits to $s$</li>
</ul>

<p>Then the algorithm for First visit MC prediction is:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Abstraction</th>
      <th style="text-align: center">Details</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220224201733290.png" alt="image-20220224201733290" style="zoom:50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220224201144309.png" alt="image-20220224201144309" style="zoom:67%;" /></td>
    </tr>
  </tbody>
</table>

<p>where notice that:</p>

<ul>
  <li>the <code class="language-plaintext highlighter-rouge">if</code> statement in the highlight box basically checks if $S_t$ is the first time encountered in the sequence of states, action, reward pair.</li>
</ul>

<p>The every-visit versoin looks like:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220224201238212.png" alt="image-20220224201238212" style="zoom: 67%;" /></p>

<p><strong>Both first-visit MC and every-visit MC converge</strong> to $V_\pi(s)$ as the number of visits (or first visits) to s goes to infinity. However, they do have certain different theoretic properties, which is not covered here. In reality, the first visit version is used more often.</p>

<p>Last but not least, we can also leverage DP to make the averaging easier as:</p>

\[\mu_t = \mu_{t-1} + \frac{1}{t}(x_t - \mu_{t-1})\]

<p>for each new data $x_t$ that would contribute to $\mu_t$.</p>

<hr />

<p><em>For Example:</em> Black Jack</p>

<p>This would be a nice exercise for you to think of how to convert a real life game into <strong>state/action/reward</strong> where we can use the above method to optimize.</p>

<p>Assuming you are clear of the rules, then</p>

<ul>
  <li>Each game of blackjack is an episode.</li>
  <li>Rewards of $+1,-1,0$ are given for winning, losing, and drawing, respectively.</li>
  <li>All <strong>rewards</strong> within a game are zero, and we do not discount ($\gamma = 1$); therefore these terminal rewards are also the returns.</li>
  <li>The player’s <strong>actions</strong> are to hit or to stick.</li>
  <li>The <strong>states</strong> depend on the player’s cards and the dealer’s showing card.</li>
</ul>

<p>We further impose the assumption that the deck is infinite, so you don’t need to remember what cards are dealt, and you are competing independently against the dealer. This then restricts our states and actions to:</p>

<ul>
  <li>the player makes decisions on the basis of three variables: his current sum  $[12-21]$, the dealer’s one showing card ($A-10$, and whether or not he holds a <em>usable</em> ace (if the player holds an ace that he could count as 11 without going bust, then the ace is said to be usable)</li>
  <li>if you have sum below $12$, then you definitely call hit so that we don’t need to compute.</li>
</ul>

<p>This makes for a total of 200 states, and we can use MC method to compute best policy.</p>

<h3 id="backup-diagram-for-mc-method">Backup Diagram for MC Method</h3>

<blockquote>
  <p>The general idea of a backup diagram is to show at the top the <strong>root node to be updated</strong> and to show below all the transitions and leaf nodes <strong>whose rewards and estimated values contribute to the update</strong></p>
</blockquote>

<p>Graphically, MC methods when given an episode does:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Iterative Method</th>
      <th style="text-align: center">MC Method</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220224205607347.png" alt="image-20220224205607347" style="zoom: 67%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220224205437456.png" alt="image-20220224205437456" style="zoom:50%;" /></td>
    </tr>
  </tbody>
</table>

<p>so the difference with those DP based method is that:</p>

<ul>
  <li>DP diagram (LEFT) shows <strong>all possible transitions</strong>, the Monte Carlo diagram shows only those <strong>sampled</strong> <strong>on the one episode</strong>.</li>
  <li>DP diagram includes only <strong>one-step transitions</strong>, the Monte Carlo diagram goes <strong>all the way to the end of the episode</strong></li>
</ul>

<blockquote>
  <p>In particular, note that the computational expense of estimating the value $V_\pi(s)$ of a single state is <strong>independent of the number of states</strong>. This can make Monte Carlo methods particularly attractive when one requires the value of only one or a subset of states.</p>
</blockquote>

<h3 id="mc-for-action-values">MC for Action Values</h3>

<p>Again, if the model is not available (i.e. no external device can tell you $p(s’,r\vert s,a)$ directly, or $r(s,a)$), you will need sampling to compute action value functions $Q_\pi$. Luckily, you soon realize the idea is the same as Prediction for state value function</p>

<blockquote>
  <p>The policy evaluation problem for action values is to estimate $Q_\pi(s,a)$, the <strong>expected return</strong> when starting in state $s$, taking action $a$, and thereafter following policy $\pi$.</p>

  <p>Therefore, now we talk about <strong>visits to a state-action pair</strong> (state $s$ is visited and action $a$ is taken in it) rather than to a state in an episode. We estimates the value of a state-action pair as the <strong>average of the returns</strong> that have followed from:</p>

  <ul>
    <li>the first time in each episode that the state was visited and the action was selected - First Time Method</li>
    <li>or doing every time method</li>
  </ul>
</blockquote>

<p>The only complication is that many state-action pairs <strong>may never be visited</strong>.</p>

<ul>
  <li>
    <p>If $\pi$ is a deterministic policy, then in following $\pi$ one will observe returns <strong>only for one of the actions from each state</strong>.</p>

    <p>One way to fix this is by <em>specifying</em> that the episodes start in a state-action pair, and that <em>every pair has a nonzero probability</em> of being selected as the start.</p>
  </li>
  <li>
    <p>if policy $\pi$ is stochastic with a nonzero probability of selecting all actions in each state, then there is <strong>no problem</strong>. This is more reliable and used more often.</p>
  </li>
</ul>

<h3 id="monte-carlo-control">Monte Carlo Control</h3>

<p>We are now ready to consider how Monte Carlo estimation can be used in control, that is, to approximate <strong>optimal policies</strong> using what we have built up so far (<strong>methods for evaluating value functions</strong>)</p>

<p>To begin, let us consider a Monte Carlo version of classical policy iteration. In this method, we perform alternating complete steps of <strong>policy evaluation and policy improvement</strong>, beginning with an arbitrary policy $\pi_0$ and ending with the optimal policy and optimal action-value function\</p>

\[\pi_0 \to q_{\pi_0} \to \pi_1 \to q_{\pi_1} \to ...\pi_* \to q_{\pi_*}\]

<p>which is like the DP iterative algorithm, but  now:</p>

<ul>
  <li>
    <p>Policy evaluation step: <strong>Generating episodes</strong> and using MC method to compute $q_{\pi_i}$ following that $\pi_i$</p>
  </li>
  <li>
    <p>Policy improvement: <strong>Making the policy greedy</strong> with respect to the current value function</p>

\[\pi_{k+1}(s) = \arg \max_a q_{k}(s,a)\]
  </li>
</ul>

<p>Hence the full algorithm looks like:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220224213351523.png" alt="image-20220224213351523" style="zoom:67%;" /></p>

<h2 id="temporal-difference-learning">Temporal-Difference Learning</h2>

<p>TD learning is a combination of Monte Carlo ideas and dynamic programming (DP) ideas.</p>

<ul>
  <li>Like Monte Carlo methods, TD methods can learn directly from raw experience without a model of the environment’s dynamics</li>
  <li>Like DP, TD methods update estimates based in part on other learned estimates, without waiting for a final outcome (they bootstrap).</li>
</ul>

<p>Again this is a model-free approach.</p>

<blockquote>
  <p><em>Recall</em>: Model Free vs Model-Based</p>

  <p><strong>Model-based</strong>: the agent, while learning, can ask the model for the <em>expected</em> next reward, or the full <em>distribution</em> of next states and next reward. i.e. it has <em>complete information for next state, next reward</em>.</p>

  <ul>
    <li>e.g. by computer code that understands the rules of a dice or board game</li>
  </ul>

  <p><strong>Model-free</strong>: have nothing, purely sample from experience.</p>

  <ul>
    <li>e.g. MC methods, TD learning, etc.</li>
  </ul>
</blockquote>

<h3 id="td-prediction">TD Prediction</h3>

<p>Both TD and Monte Carlo methods use experience to solve the prediction problem. Given some experience following a policy $\pi$:</p>

<ul>
  <li>both methods update their estimate $V_\pi(s)$ for the nonterminal states $s_t$ occurring in that experience</li>
</ul>

<p>However, the difference is that:</p>

<ul>
  <li>
    <p>Monte Carlo methods wait until the return following the visit is known, then use that return as a target for $V_\pi(s_t)$, i.e.  estimates $V_\pi(s)$ as the average of the returns following first visits to $s$. The every-visit update rule can be generalized to:</p>

\[V(s_t) \leftarrow V(s_t) + \alpha [G_t - V(s_t)]\]

    <p>for $G_t$ is the actual return following time $t$, and $\alpha$ is a constant step-size parameter</p>
  </li>
  <li>
    <p>Whereas Monte Carlo methods must <strong>wait until the end of the episode</strong> to determine the increment to $V(s_t)$ (only then is $G_t$ known), TD methods need <strong>wait only until the next time step</strong>:</p>

\[V(s_t) \leftarrow V(s_t) + \alpha[R_{t+1} + \gamma V(s_{t+1}) - V(s_t)]\]
  </li>
</ul>

<p>Therefore, the big difference stems from the fact that the target value for MC update is $G_t$, but for TD update it is</p>

\[R_{t+1} + \gamma V(s_{t+1})\]

<p>The idea basically comes from the derivation that</p>

\[\begin{align*}
V_\pi (s)
&amp;= \mathbb{E}_\pi [G_t | S_t =s]\\
&amp;= \mathbb{E}_\pi \left[ \sum_{k=0}^T \gamma^k R_{t+k+1}|S_t=s\right]\\
&amp;= \mathbb{E}_\pi \left[ R_{t+1} + \gamma \sum_{k=0}^T \gamma^k R_{t+k+2}|S_t=s\right]\\
&amp;= \mathbb{E}_\pi \left[ R_{t+1}+ \gamma V_\pi(s_{t+1})|S_t=s \right]\\
\end{align*}\]

<p>so that MC is using the first equality for estimating $V_\pi$, DP is using the last equality for estimating $V_\pi$.</p>

<ul>
  <li>Monte Carlo target is an estimate because the expected value in the first line is not known</li>
  <li>The DP target is an estimate because $V_{\pi}(s_{t+1})$ is not known</li>
</ul>

<p>Then TD is <strong>combining DP + MC</strong> by sampling form the environment like in the first equality, but uses DP for estimate $V_\pi(s)\approx V_\pi(s’)$ and converge for solution. Hence the algorithm is</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220301170155096.png" alt="image-20220301170155096" style="zoom: 67%;" /></p>

<p>Graphically:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Backoff Diagram for TD(0)</th>
      <th style="text-align: center">Backoff Diagram for MC</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220224223527026.png" alt="image-20220224223527026" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220224205437456.png" alt="image-20220224205437456" style="zoom:50%;" /></td>
    </tr>
  </tbody>
</table>

<p>On a larger scale, you are basically only looking ahead a single step</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220224223446750.png" alt="image-20220224223446750" style="zoom: 50%;" /></p>

<hr />

<p><em>For Example</em></p>

<p>Consider predicting the time for you to return to your home from an office.</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220224225822737.png" alt="image-20220224225822737" style="zoom:67%;" /></p>

<p>then in this example:</p>

<ul>
  <li><strong>state</strong> is given as “leaving office”. “reach car”, etc.</li>
  <li><strong>return</strong> for each state is the actual time to go <em>from that state</em></li>
  <li><strong>value</strong> of each state $V_\pi(s)$ is the expected/actual time to go. Current <strong>estimated value</strong> for each state will there for be the “Predicted Time to Go”</li>
  <li>we pick $\gamma=1$</li>
</ul>

<p>Then, if we do MC method, then essentially updates are proportional to the difference between $G_t - V(s_t)$, where $G_t$ is the actual time in the end:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220224230158369.png" alt="image-20220224230158369" /></p>

<p>essentially the error here would be the difference between “Actual Time to Go” and “Predicted Time to Go”</p>

<p>If we do TD method, then the update will be based on the <strong>next immediate observed value</strong> $R_{t+1}+\gamma V(s_{t+1})-V(s_t)$, hence it is ==Markov like== and looks like</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220224230353766.png" alt="image-20220224230353766" /></p>

<p>where the length of the arrow is proportional to the error, proportional to the <strong>temporal difference</strong>.</p>

<h3 id="td-vs-mc-methods">TD vs MC Methods</h3>

<p>Under batch updating, TD(0) converges deterministically to a single answer independent of the step-size parameter, $\alpha$, as long as $\alpha$ is chosen to be sufficiently small. The constant-$\alpha$ MC method also converges deterministically under the same conditions, but to a <strong>different</strong> answer.</p>

<hr />

<p><em>For Example</em></p>

<p>Suppose you observe the following eight episodes:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220301175321270.png" alt="image-20220301175321270" style="zoom:67%;" /></p>

<p>where we would like to estimate $V(A),V(B)$:</p>

<ul>
  <li>
    <p>the true value of $V(B)$ will be clearly $6/8$ because six out of the eight times in state $B$ the process terminated immediately with a return of $1$ and the other two $0$. This would also be the answer that both MC and TD will converge to.</p>
  </li>
  <li>
    <p>the value of $V(A)$ differs:</p>
    <ul>
      <li>
        <p>Observe that $100\%$ of the times the process was in state $A$ it traversed immediately to $B$ (with a reward of $0$); and since we have already decided that $B$ has value $V(B)=3/4$ , therefore $A$ must have value $3/4$ as well. This would be what TD converges to (in TD, the update depends on the difference between current reward and <strong>next expected reward</strong>).</p>

        <p>Graphically:</p>

        <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220301175551863.png" alt="image-20220301175551863" style="zoom:67%;" /></p>

        <p>which is basically <strong>Markov</strong></p>
      </li>
      <li>
        <p>The other reasonable answer is simply to observe that we have seen $A$ once and the return that followed it was $0$; we therefore estimate $V(A)$ as $0$​. This is the answer that batch Monte Carlo methods give.</p>

        <p>(recall that in MC, the update depends on the difference between current reward and <strong>final reward in the episode</strong>.)</p>
      </li>
    </ul>
  </li>
</ul>

<p>Consider optimal estimates in the sense that they <strong>minimize the mean-squared error from the actual returns</strong> in the training set, then</p>

<ul>
  <li>MC would converge to the state value that gives minimum squared error on the training data.</li>
  <li>TD estimate would be exactly correct for the maximum-likelihood model of the <strong>Markov process</strong> (i.e. based on first
modeling the Markov process, then computing the correct estimates given the model)</li>
</ul>

<hr />

<p><strong>Advantages of TD Method</strong></p>

<ul>
  <li>
    <p>an advantage over DP methods in that they do not require a model of the environment</p>
  </li>
  <li>most obvious advantage of TD methods over Monte Carlo methods is that they are naturally implemented in an <strong>on-line</strong>, fully incremental fashion.</li>
  <li>even as it is online, for any fixed policy $\pi$, the TD algorithm described above has been proved to <strong>converge</strong> to $V_\pi$,</li>
</ul>

<h3 id="td-lambda">TD lambda</h3>

<p>Notice that another view of the difference between TD and MC is essentially their backoff diagram:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220301133529126.png" alt="image-20220301133529126" style="zoom: 67%;" /></p>

<p>where we notices that:</p>

<ul>
  <li>TD looks at one step ahead in backoff diagram and updates <strong>only depend on the next state</strong></li>
  <li>MC looks at a full height/depth in backoff diagram and updates depends on all the state until terminal</li>
</ul>

<p>Then in TD $\lambda$, we essentially combine the two:</p>

<p><img src="https://miro.medium.com/max/1838/1*L-LUOyW5W-0gBxx80GHdHQ.png" alt="Reinforcement Learning — TD(λ) Introduction(1) | by Jeremy Zhang | Towards  Data Science" style="zoom:33%;" /></p>

<p>so that basically $TD(0)$ with $\lambda = 0$ is the same as the TD prediction we discussed in the previous section.</p>

<h2 id="onoff-policy-learning">On/Off Policy Learning</h2>

<p>On policy methods:</p>

<ol>
  <li>Estimate the value of a policy while using it for control (i.e. generating episodes)</li>
  <li>Evaluate or improve the policy that is used to make decision (e.g. take greedy step)</li>
</ol>

<p>Off policy methods</p>

<ul>
  <li>Evaluate or improve a policy <strong>different from that used to generate the data</strong></li>
  <li>Separate these two functions</li>
  <li>Behavior policy: policy used to generate behaviour</li>
  <li>Target policy: policy that is imitated and improved</li>
  <li>Follow behavior policy while improving target policy</li>
  <li>Reuse experience generated from old policie</li>
</ul>

<h3 id="sarsa">SARSA</h3>

<p>SARSA is an <strong>on-policy method</strong> using TD methods for the evaluation of a <strong>action value function</strong>. In particular, this is done by:</p>

<ol>
  <li>for an on-policy method we must estimate $Q_\pi(s,a)$ for the current behavior policy $\pi$ and for all states $s$ and actions $a$.</li>
</ol>

<p>Recall that an episode essentially looks like:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220301202009996.png" alt="image-20220301202009996" style="zoom:67%;" /></p>

<p>where:</p>

<ul>
  <li>
    <p>In the previous section we considered transitions from state to state and <strong>learned the values of states</strong>. Now we consider transitions from state-action pair to state{action pair, and learn the <strong>value of state-action pairs</strong></p>
  </li>
  <li>
    <p>therefore, as it is TD learning, we consider the update rule being</p>

\[Q(s_t, a_t) \leftarrow Q(s_t,a_t) + \alpha [R_{r+1} + \gamma Q(s_{t+1},a_{t+1})-Q(s_t,a_t) ]\]

    <p>This update is done after every transition from a nonterminal state $s_t$.</p>

    <p>This rule uses every element of the quintuple of events, $(s,a,r’,s’,a’)$, hence it is called SARSA</p>
  </li>
</ul>

<p>As in all on-policy methods, we continually <strong>estimate $Q_\pi$ for the behavior policy $\pi$,</strong> and at the same time <strong>change $\pi$ toward greediness</strong> with respect to $Q_\pi$.</p>

<p>Algorithm:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220301201435273.png" alt="image-20220301201435273" style="zoom: 50%;" /></p>

<p>where</p>

<ul>
  <li>in Sutton and Bartol, the “improve policy” step is also called “policy derived from $Q$ from $\epsilon$-greedy”</li>
  <li>it can be shown that this will converge to some <strong>optimal $Q_\pi$</strong>, hence returning optimal policy</li>
  <li>note that this update of $Q_\pi$ is <strong>updating  $Q_\pi$ for the $\pi$ it is currently following</strong>. Hence it is called ==on policy==.</li>
</ul>

<h3 id="q-learning">Q-Learning</h3>

<p>Recall that we know:</p>

\[Q_\pi (s,a)
= \sum_{s'}\sum_r p(s',r|s,a)\left[r + \gamma \sum_a \pi(a|s)\sum_{s'}  Q_\pi(s',a')\right]\]

<p>But we know that here we are model-less, hence we <em>don’t know $p(s’,r\vert s,a)$</em>. The idea is to essentially will learn the $Q$ function directly from experience, known as Q-learning:</p>

\[Q(s_t, a_t) \leftarrow Q(s_t,a_t) + \alpha [R_{r+1} + \gamma \max_a Q(s_{t+1},a)-Q(s_t,a_t) ]\]

<p>comes from the <strong>optimality constraint</strong>, where the target is $R_{r+1} + \gamma \max_a Q(s_{t+1},a)$:</p>

\[\begin{align*}
Q^* (s,a)
&amp;= \mathbb{E}_{\pi^*} \left[R_{t+1}+\gamma \max_a Q^*(s_{t+1},a')|S_t=s,A_t=a\right]
\end{align*}\]

<blockquote>
  <p><strong>Therefore</strong>, Q-learning <strong>directly approximates $Q^*$</strong> using MC + DP like approach: TD update rule.</p>
</blockquote>

<p>Hence, the algorithm looks like:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220301203045085.png" alt="image-20220301203045085" style="zoom: 80%;" /></p>

<p>where in this case</p>

<ul>
  <li>the TD prediction task is to <strong>evaluate $V_\pi(s)$</strong> when given $\pi$, but here we can directly find $Q^<em>$ hence $\pi^</em>$!</li>
  <li>note that this update of $Q$ is <strong>updating  $Q$ for the $\pi^<em>$** by directly estimating $Q^</em>$, but it **behaves by $\pi_b$</strong>, which could be a policy with equal probability for every action. Hence it is <strong>not</strong> estimating $Q_\pi$ for the $\pi$ that generated the action like the one in SARSA. Hence it is called ==off policy==.
    <ul>
      <li>this way it is also continuously exploring</li>
    </ul>
  </li>
</ul>

<p>Since this is TD like rule, the backoff tree is also Markov like:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220224232119132.png" alt="image-20220224232119132" /></p>

<p>where updating the root node only depends on nodes one step away.</p>

<hr />

<p><em>For Example</em>: Cliff Walking</p>

<p>This example aims to compare the difference of the optimal policy learnt by SARSA and Q-learning. Consider the game of cliff walking, where you will have a start state $S$, and an end state $G$. Additionally:</p>

<ul>
  <li>each state along any element will have reward of $-1$</li>
  <li>if you fall off the cliff (i.e. on the cliff cell), you have $-100$ and will be sent back to the start state</li>
  <li>the available actions are still left, right, up and down</li>
</ul>

<p>Graphically:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220301205614330.png" alt="image-20220301205614330" /></p>

<p>Interestingly, assuming our action will be $\epsilon$-greedy (i.e. optimal for $1-\epsilon$ of the time)</p>

<ul>
  <li>
    <p><strong>SARSA</strong> will converge to the <strong>safe path</strong> while <strong>Q-learning</strong> to the <strong>optimal</strong> path</p>

    <ul>
      <li>so Q-learning results in its occasionally falling off the cliff because of the $\epsilon$-greedy action selection</li>
      <li>SARSA takes the action selection into account and learns the longer but safer path through the upper part of the grid</li>
    </ul>

    <p>So in a sense Q-learning is <strong>optimistic</strong> about what happens when an action $a$ is taken, while SARSA is <strong>realistic</strong> about it.</p>
  </li>
  <li>
    <p>Of course, if $\epsilon$ were gradually reduced, then <strong>both</strong> methods would asymptotically converge to the optimal policy.</p>
  </li>
</ul>

<p>For those who are interested, the learning curve looks like:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220301210416783.png" alt="image-20220301210416783" style="zoom:80%;" /></p>

<h2 id="maximum-entropy-rl">Maximum Entropy RL</h2>

<p>Before, our objective for those algorithms are to learn the <strong>optimal policy by maximizing the expected return</strong>.</p>

\[\pi^* = \arg\max_\pi \mathbb{E}[G_t]\]

<p>However, another interesting objective to consider is to <strong>also maximize the entropy of actions</strong>\pi^* = \arg\max_\pi \mathbb{E}[G_t]</p>

\[\pi^* = \arg\max_\pi \mathbb{E}[G_t] + H_\pi(a|s)\]

<p>where the entropy term is</p>

\[H_\pi(a|s) = \sum_t H_\pi(a_t|s_t) = \sum_t \mathbb{E}[-\log \pi(a_t|s_t)]\]

<p>Optimizing this objective will promote both high return and exploration. This then will lead to designing loss functions when doing NN based reinforcement learning.</p>

<h2 id="summary-of-rl-models">Summary of RL Models</h2>

<p>In general, we have covered RL methods that are</p>

<ul>
  <li><strong>Value-based</strong>
    <ul>
      <li>Estimate value function $Q^<em>(s,a)$ or $V^</em>(s)$</li>
      <li>then return policy by greedy</li>
    </ul>
  </li>
  <li><strong>Policy-based</strong>
    <ul>
      <li>Search directly for optimal policy $\pi$ Achieving maximum future reward</li>
    </ul>
  </li>
  <li><strong>Model-based</strong>
    <ul>
      <li>here it refers to you are either given the model/interaction environment</li>
      <li>or you are learning the model itself
        <ul>
          <li>Build transition model of environment</li>
          <li>Plan by lookahead using model (i.e. ask the model what the reward if action $a$ is taken, then choose best action)</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p>Taxonomy:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220301135343105.png" alt="image-20220301135343105" style="zoom: 50%;" /></p>

<hr />

<p><em>For Example</em>: World Model</p>

<blockquote>
  <p>Our <em>world model</em> can be trained quickly in an unsupervised manner to learn a compressed spatial and temporal representation of the environment. By using features extracted from the world model as inputs to an agent, we can train a very compact and simple policy that can solve the required task. We can even train our agent entirely inside of its own dream environment generated by its world model, and transfer this policy back into the actual environment</p>
</blockquote>

<p>The architecture is basically as follows, where as the observation is the game</p>

<p><img src="https://miro.medium.com/proxy/1*9WsfCbPtdoKzL5IPThLWRg.png" alt="World models — a reinforcement learning story | by SmartLab AI | Medium" style="zoom:50%;" /></p>

<p>then, notice that the controller $C$ output also to the RNN model, which <strong>models the game</strong> (in-game graphics)</p>

<ul>
  <li>therefore, once trained, you can essentially play by just using RNN model, by feeding in actions to it and let it generate the output observaton/images</li>
  <li>since the policy it learns will then be <strong>based on how $M$ models the game</strong>, it is essentially learning the model.</li>
</ul>

<h1 id="deep-reinforcement-learning">Deep Reinforcement Learning</h1>

<p><em>Recall that</em></p>

<p>The previous chapter presents MDPs and reinforcement learning. A key difference between the two is that</p>

<ul>
  <li>when solving MDPs we know the transition function $T$ and reward function $R$</li>
  <li>in reinforcement learning we do not know the transition or reward functions. In reinforcement learning an agent samples the
environment and the previous chapter ends with the Q-learning algorithm which learns $Q^*(s, a)$ from experience.</li>
</ul>

<p>But regardless which one we use, they are all <strong>tabular methods</strong> in nature, i.e. we need to he value function in some table. (e.g. for a state function with $\vert S\vert$ states, your table will be $\vert S\vert$ in size)</p>

<hr />

<p>In many cases, storing the $Q$ values in a table may be infeasible when the state or action spaces are very large or when they are continuous. For example, the game of Go consists of $10^{170}$ states, or when the state or action spaces include continuous variables or complex sensations. A solution is to <strong>approximate the value function or approximate the policy</strong>.</p>

<blockquote>
  <p>In Deep RL, we essentially take examples from a desired function (e.g., a value function) and attempts to generalize from them
to construct an <strong>approximation of the entire function</strong> (e.g. in the entire continuous domain).</p>

  <ul>
    <li>e.g. instead of predicting image classes using CNN, we may <strong>predict</strong> the values of a state or the <strong>probabilities of actions $\pi(s\vert a)$ using a neural network</strong>, and based on these probabilities we can take action</li>
  </ul>
</blockquote>

<p>Then the idea for using NN as function approximation in RL can be shown below:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220301135857210.png" alt="image-20220301135857210" style="zoom: 67%;" /></p>

<p>where essentially:</p>

<ul>
  <li>Given a state $s$ as input, such as an image of pixels</li>
  <li>neural network outputs an approximated vector of probabilities for each action given the state, i.e. $\pi_\theta(a\vert s)$</li>
  <li>finally we can pick $a_t$ be the action by, e.g. taking the highest probability</li>
</ul>

<p>To train the model in a supervised case, we have in general</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">General Supervised ML</th>
      <th style="text-align: center">Supervised RL</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220301134342206.png" alt="image-20220301134342206" style="zoom:50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220301134356226.png" alt="image-20220301134356226" style="zoom:50%;" /></td>
    </tr>
  </tbody>
</table>

<p>So that in a supervised case, we would need ground truth actions $a$ as the label to train the neural network to learn the stochastics policy $\pi_\theta(a\vert s)$ with weights $\theta$.</p>

<h2 id="function-approximations">Function Approximations</h2>

<p>As mentioned before, real-world problems often consists of large or continuous state and action spaces, so tabular methods introduced in the previous section will not work for finding $V_\pi(s)$ or $Q_\pi(a\vert s)$. Hence, we resort to use <strong>deep neural network</strong> to find <strong>approximations such as</strong></p>

<ul>
  <li>$V_\theta(s) \approx V_\pi(s)$ for state value</li>
  <li>or $Q_\theta(s,a)\approx Q_\pi(s,a)$ for action value</li>
  <li>or $\pi_\theta(a\vert s)$</li>
</ul>

<p>using only some finite number of weights usually much smaller than the total number of possible states.</p>

<p>However, the techniques learnt in previous sections aren’t useless, recall that all the <strong>back-off operations</strong> we were doing for estimating some value function at state $s$:</p>

<ul>
  <li>MC does $V(s_t) \to G_t$, shifting the estimated value towards $G_t$ (by some fraction), for $G_t$ being the <strong>target</strong></li>
  <li>TD(0) does $V(s_t) \to R_{t+1} + \gamma V(s’)$</li>
  <li>TD($\lambda$) does $V(s_t) \to G_t^\lambda$</li>
  <li>DP does $V(s_t) \to \mathbb{E}<em>\pi[R</em>{t+1} + \gamma V(s’)\vert S_t=s]$ which is exact since model would be given.</li>
</ul>

<p>Also, notice that the first three will backup the state $s_t$ only when encountered in some episode, whereas the last one will update every single $s$ as they are known.</p>

<blockquote>
  <p>Another way to view this would be to think of the backoff shift as an <strong>input-output pair</strong>: the input of the function will be $s_t$, and you <strong>want</strong> the <strong>output to be close to the RHS of the expression above</strong>. Hence this could be used as a supervised dataset!</p>
</blockquote>

<h3 id="state-value-function-approximation">State Value Function Approximation</h3>

<p>As we are training a NN to approximate $V_\pi(s)$, e.g. w.r.t. ==some policy $\pi$==, we first need some definition of <strong>loss function</strong>.</p>

<ul>
  <li>Most supervised learning methods seek to minimize the <strong>mean-squared error (MSE)</strong></li>
  <li>the label/<strong>ground truth</strong> will be $V_\pi(s)$ which is unknown, but can be any of the <strong>approximate target</strong> mentioned above, e.g. $R_{t+1} + \gamma \hat{V}_\theta(s’)$.</li>
</ul>

<p>Therefore, often our loss would be:</p>

\[J(\theta) = \frac{1}{2}\sum_{s \in S} \mu(s)\cdot (V_\pi(s) - V_\theta(s))^2 = \frac{1}{2}\mathbb{E}_s[(V_\pi(s) - V_\theta(s))^2] \iff J(\theta) = \frac{1}{2} \mathbb{E}[(y - \hat{y})^2]\]

<p>where:</p>

<ul>
  <li>technically this will be a <strong>weighted version</strong> of MSE because $\sum_s \mu(s)=1$ gives relative importance to learn certain states. (because the number of parameters we learn will be much less than $\vert S\vert$, we cannot find the exact solution)</li>
  <li>$V_\theta(s)$ will be our approximate, and we want to learn $\theta$.</li>
  <li>in reality we use the sum term for loss, but for doing math using the $\mathbb{E}_s$ notation will be easier.</li>
  <li>so basically the <strong>label is $V_\pi(s)$</strong>, hint that we essentially have a ==supervised training==.</li>
</ul>

<p>This general form is differentiable, simply:</p>

\[\nabla_\theta J(\theta) = - \mathbb{E}_s[(V_\pi(s)-V_\theta(s))\cdot \nabla_\theta V_\theta(s)]\\
\theta_{i+1} = \theta_i - \alpha \nabla_\theta J(\theta_i)\]

<p>for the gradient descent update. If we use <strong>stochastic gradient descent of a single sample</strong>, then we throw away the expectation/weighted average of the samples and do:</p>

\[\theta_{i+1} = \theta_i + \alpha (V_\pi(s_i) - V_\theta(s_i)) \nabla_\theta V_\theta(s_i)\]

<p>where now the only <strong>known is $V_\pi(s)$</strong>. Hence, we consider using an <strong>estimate such as the four targets mentioned before</strong></p>

<ul>
  <li>
    <p>MC learning with $V_\pi(s_i) \approx G_i$ being the return following state $s_i$:</p>

\[\theta_{i+1} = \theta_i + \alpha (G_i - V_\theta(s_i)) \nabla_\theta V_\theta(s_i)\]
  </li>
  <li>
    <p>TD(0) learning with</p>

\[\theta_{i+1} = \theta_i + \alpha (R_{i+1}+\gamma V_\theta(s_{i+1})- V_\theta(s_i)) \nabla_\theta V_\theta(s_i)\]
  </li>
</ul>

<blockquote>
  <p>Not all approximation targets are <strong>unbiased</strong>. By unbiased, we need:</p>

\[\mathbb{E}[V_i] = V_\pi(s_i)\]

  <p>where $V_i$ we inserted estimates such as $G_i$ in MC method.</p>

  <ul>
    <li>for MC, this is <strong>unbiased</strong> because $\mathbb{E}[G_i] = V_\pi(s_i)$​ by definition of value function. Therefore, this converges to a locally optimal approximation to $V_\pi(s_i)$.</li>
    <li>but for methods such as TD($\lambda$), it can be shown that $\lambda &lt; 1$​ has a <strong>biased estimate</strong>, hence does not actually converge to a local optimum. (Nevertheless, such bootstrapping methods can be quite effective, and other performance guarantees are available for important special cases)</li>
  </ul>
</blockquote>

<p>Essentially, though we do not know the ground truth $V_\pi(s)$, we can assume that every sample we got from reality <strong>is the ground truth</strong>, hence those update rules.</p>

<h3 id="action-value-function-approximation">Action-Value Function Approximation</h3>

<p>Here the neural network inputs are the states $s$ and actions $a$ and the network parameterized by $\theta$ outputs a value $Q_\theta(s, a)$.</p>

<p>Then, in the same line, our objective would be be minimizing the MSE between the approximate action-value function $Q_\theta(s, a)$ and $Q_\pi(s,a)$. The idea is basically the same as above:</p>

\[J(\theta) = \frac{1}{2}\sum_{s \in S} \mu(s)\cdot (Q_\pi(s,a) - Q_\theta(s,a))^2 = \frac{1}{2}\mathbb{E}_s[(Q_\pi(s,a) - Q_\theta(s,a))^2]\]

<p>Then computing the gradient and updating in SGD fashion:</p>

\[\theta_{i+1} = \theta_i + \alpha (Q_\pi(s_i,a_i) - Q_\theta(s_i,a_i)) \nabla_\theta Q_\theta(s_i,a_i)\]

<p>where since we don’t know $Q_\pi(s,a)$, we use approximates such as:</p>

<ul>
  <li>
    <p>MC method:</p>

\[\theta_{i+1} = \theta_i + \alpha (G_i - Q_\theta(s_i,a_i)) \nabla_\theta Q_\theta(s_i,a_i)\]
  </li>
  <li>
    <p>TD(0) learning</p>

\[\theta_{i+1} = \theta_i + \alpha (R_{i+1}+\gamma Q_\theta(s_{i+1},a_{i+1}) - Q_\theta(s_i,a_i)) \nabla_\theta Q_\theta(s_i,a_i)\]
  </li>
</ul>

<blockquote>
  <p><strong>Note</strong></p>

  <p>Both of the function approximation methods only approximates $Q_\pi(s,a)$ or $V_\pi(s)$ for some $\pi$. It <strong>does not improve $\pi$</strong>, hence it is purely doing the evaluation step.</p>
</blockquote>

<h2 id="model-free-methods">Model-Free Methods</h2>

<p>Challenges of function approximation in the reinforcement learning setting include that</p>

<ul>
  <li>the agent’s experience is <strong>not independent and identically distributed</strong> (IID)</li>
  <li>the agent’s policy affects the future data it will sample</li>
  <li>the environment may change, i.e. our <strong>target is moving</strong> (hence certain NN should not be used as they assume stationary target)</li>
  <li>may not converge (e.g. biased approximations)</li>
</ul>

<p>And this section as well as the following are more models that help overcome those challenges. Here, we discuss model-free methods.</p>

<p>Model-free approaches may be divided into</p>

<ol>
  <li>value-based or Q-leaning methods such as NFQ (Riedmiller 2005) and DQN (Mnih et al. 2015)</li>
  <li>policy-based or policy optimization methods such as PPO (Schulman et al. 2017), and</li>
  <li>actor-critic methods such as DDPG (Lillicrap et al. 2016) which are a combination of both (i) and (ii).</li>
</ol>

<h3 id="experience-replay">Experience Replay</h3>

<p>In supervised learning the training examples may be sampled independently from an underlying distribution, but here data are corelated in time as we are taking actions.</p>

<blockquote>
  <p>A solution to this problem, known as experience replay, is to use a replay buffer that stores a collection of previous states, actions, and rewards, specifically storing tuples of $(s, a, r, s’)$</p>

  <p>Then each saved experience tuple may be <strong>sampled</strong> and used for updating the network weights.</p>
</blockquote>

<p>This means an experience tuple may be used multiple times, which is an efficient use of the data.</p>

<h3 id="neural-fitted-q-learning">Neural Fitted Q-Learning</h3>

<p>Recall that in value approximation we are only approximating $Q_\pi(s,a)$ for some $\pi$. In order to <em>*directly find $\pi^</em>$<strong>, we can use the idea from **Q-learning</strong> which directly finds $\pi^*$:</p>

\[Q(s_t, a_t) \leftarrow Q(s_t,a_t) + \alpha [R_{r+1} + \gamma \max_a Q(s_{t+1},a)-Q(s_t,a_t) ]\]

<p>Therefore, the <strong>analogy</strong> here is to do, similarly:</p>

\[J(\theta) = \frac{1}{2}\sum_{s \in S} \mu(s)\cdot (Q^*(s,a) - Q_\theta(s,a))^2 = \frac{1}{2}\mathbb{E}_s[(Q^*(s,a) - Q_\theta(s,a))^2]\iff J(\theta) = \frac{1}{2} \mathbb{E}[(y - \hat{y})^2]\]

<p>where the update rule is the same using SGD:</p>

\[\theta_{i+1} = \theta_i + \alpha (Q^*\pi(s_i,a_i) - Q_\theta(s_i,a_i)) \nabla_\theta Q_\theta(s_i,a_i)\]

<p>finally <strong>approximating $Q^*$</strong> using the update from Q-learning:</p>

\[\theta_{i+1} = \theta_i + \alpha (R_{i+1} + \gamma \max_a Q(s_{i+1},a) - Q_\theta(s_i,a_i)) \nabla_\theta Q_\theta(s_i,a_i)\]

<blockquote>
  <p>Q-learning diverges when using a neural network since there are correlations between the samples and the target is non-stationary.</p>

  <p>Therefore, to remove the correlations between samples we may generate a data set from the agent’s experience and use it as a <strong>supervised training</strong></p>
</blockquote>

<p>Then the algorithm becomes:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220302001029747.png" alt="image-20220302001029747" style="zoom:67%;" /></p>

<p>where essentially:</p>

<ul>
  <li>the pocliy we used to explore the world is just using $Q_\theta$, which is just a <strong>forward pass of the NN</strong></li>
  <li>putting this in a ==supervised== fashion, labels become $y_i = R_{i+1} + \gamma \max_a Q(s_{i+1},a)$.</li>
  <li>notice that states and rewards are generated by the environment and therefore the algorithm is <strong>model free</strong></li>
</ul>

<h3 id="deep-q-network">Deep Q-Network</h3>

<blockquote>
  <p>Deep Q-networks (DQN) (Mnih et al. 2015) build upon fitted Q-learning by incorporating a replay buffer and a <strong>second target neural network</strong>.</p>
</blockquote>

<p>In NFG we consider labels being $y_i = R_{i+1} + \gamma \max_a Q(s_{i+1},a)$, but here we consider <strong>another network with $\theta-$</strong> such that:</p>

\[y_i = R_{i+1} + \gamma \max_a Q_{\theta-}(s_{i+1},a)\]

<p>with $\theta-$ being the <strong>target network</strong>. We uses this by making it appear static as compared to the ever changing $Q_\theta$ so that:</p>

\[\mathcal{L}(\theta_i) = \mathbb{E}_{(s,a,r,s')\sim D}[(y_i - Q_{\theta_i}(s_i,a_i))^2] = \mathbb{E}[(R_{i+1} + \gamma \max_a Q_{\theta-}(s_{i+1},a) -Q_{\theta_i}(s_i,a_i))^2]\]

<p>then doing SGD the gradient update step is:</p>

\[\theta_{i+1} = \theta_i + \alpha (R_{i+1} + \gamma \max_a Q_{\theta-}(s_{i+1},a) - Q_{\theta}(s_i,a_i)) \nabla_\theta Q_\theta(s_i,a_i)\]

<p>Then the algorithm is</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220302003105418.png" alt="" /></p>

<p>where notice that:</p>

<ul>
  <li>since we have a target $\hat{Q}$ that is updated much less frequently, this is helping the problem of chasing a non-stationary target as in NFQ. The label $y_i$ becomes dependent on $\hat{Q}<em>{\theta-}$ rather than $Q</em>\theta$</li>
  <li>notice that states and rewards are <strong>generated from $Q_\theta$</strong>, but policy learnt is <strong>based on $Q_{\theta-}$</strong>. Hence this is <strong>off-policy</strong> because the action value function learnt is towards a different policy that generated the data.</li>
</ul>

<h3 id="prioritized-replay">Prioritized Replay</h3>

<p>Before we are sampling from the replay buffer uniformly, prioritized experience replay (Schaul, Quan, Antonoglou &amp; Silver 2016) samples <strong>important transitions more frequently</strong> which results in more efficient learning.</p>

<blockquote>
  <p>We define more important transitions as the ones we <strong>made the large DQN error</strong></p>

\[\text{Err}(s_i,a_i) = R_{i+1} + \gamma \max_a Q_{\theta-}(s_{i+1},a) -Q_{\theta_i}(s_i,a_i)\]

</blockquote>

<p>Then, we prioritize them by:</p>

\[\text{Priority}(s_i,a_i)=\frac{p_i^\alpha}{\sum_j p_j^\alpha}\]

<p>where $p_i$ would be proportional to DQN error and $\alpha$ is hyper-parameter controlling the amount of prioritization</p>

<ul>
  <li>with $\alpha=0$ you have no prioritization and gets back uniform sampling</li>
</ul>

<h2 id="policy-based-methods">Policy-based Methods</h2>

<p>One problem with value based methods in the previous chapter such as NFQ and QDN cannot <em>easily deal with</em> <strong>continuous actions</strong>. Since we only know/approximated $Q^*(s,a)$, to convert that to action we need to do something like:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Value Function</th>
      <th style="text-align: center">Policy/Action</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220304205646509.png" alt="image-20220304205646509" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220304205627824.png" alt="image-20220304205627824" /></td>
    </tr>
  </tbody>
</table>

<p>but imagining those cells being <strong>infinitesimally small and infinitesimally many</strong> so that the action space is continuous. This will be a headache to optimize over.</p>

<p>Then, the idea is why not <strong>approximate policy itself as a continuous function</strong>?</p>

<blockquote>
  <p><strong>Policy-based methods</strong> work well in continuous spaces for <strong>learning stochastic policies</strong>, the most common example would be having:</p>

\[a \sim \mathcal{N}(\mu_\theta(s), \sigma^2_\theta(s))\]

  <p>where we learn $\theta$ from NN.</p>
</blockquote>

<p>First, we present the general setup of obtaining the objective function and its gradients.</p>

<p>Consider starting with some policy $\pi_\theta$ (e.g. randomly initialized):</p>

<ol>
  <li>
    <p>an agent then can interact wit the environment to generate (probabilistically) a <strong>trajectory of state-action-reward episodes</strong>:</p>

\[\tau = s_0,a_0,r_0,....,s_t,a_t,r_t\]

    <p>and hence obtain a <strong>return $g(\tau)$</strong>:</p>

\[g(\tau) = \sum_t \gamma^t r_t\]
  </li>
  <li>
    <p>Then the <strong>value of this policy</strong> would be the the <strong>expected/average return</strong> over all trajectories (since the policy is probabilistic):</p>

\[\mathbb{E}_{\tau \sim \pi_\theta}[g(\tau)] = \mathbb{E}_{\tau \sim \pi_\theta}\left[ \sum_t \gamma^t r_t \right]\]
  </li>
  <li>
    <p>Therefore, naturally we say that the <strong>best policy $\pi_\theta$ would have the highest value</strong>:</p>

\[\max_\theta \mathbb{E}_{\tau \sim \pi_\theta}\left[ \sum_t \gamma^t r_t \right] \equiv \max_\theta J(\pi_\theta)\]
  </li>
</ol>

<p>Now, the we can basically do <strong>gradient ascent</strong> by considering:</p>

\[\theta = \theta + \alpha \nabla_\theta J(\pi_\theta)\]

<h3 id="policy-gradient">Policy Gradient</h3>

<p>The final step is to analytically find the gradient $\nabla_\theta J$. We will derive everything exactly and then replace the integral with the practical sum:</p>

\[J(\pi_\theta) = \mathbb{E}_{\tau \sim \pi_\theta}[g(\tau)] = \int g(\tau) p_\theta(\tau) d\tau \iff \sum_\tau p_\theta(\tau)g(\tau)\]

<p>but notice that since $\tau$ is a <strong>trajectory generated by $\pi_\theta$</strong>, we can further find:</p>

\[p_\theta(\tau) = \prod_t p(s_{t+1}|s_t,a_t)\pi_\theta(a_t|s_t)\]

<p>Now, consider taking the derivative:</p>

\[\nabla_\theta J = \int \nabla_\theta[g(\tau) p_\theta(\tau)]d\tau  =\int g(\tau)\nabla_\theta p_\theta(\tau) d\tau\]

<p>Now we <em>can</em> plugin the expression for $p_\theta(\tau)$, but we can <strong>use a trick to remove the product</strong> by considering:</p>

\[\nabla_\theta \log p_\theta(\tau) = \frac{\nabla_\theta p_\theta(\tau)}{p_\theta(\tau)}\]

<p>hence:</p>

\[\nabla_\theta J =\int g(\tau)p_\theta(\tau)\nabla_\theta \log p_\theta(\tau) d\tau = \mathbb{E}_{\tau \sim \pi_\theta}[g(\tau) \nabla_\theta \log p_\theta(\tau)]\]

<p>Now we substitute in the $p_\theta(\tau)$:</p>

\[\nabla_\theta \log p_\theta(\tau) = \nabla_\theta \sum_t[\log [(s'|s,a) + \log \pi_\theta(a|s)]] =  \sum_t\nabla_\theta \log  \pi_\theta(a|s)\]

<p>so we get finally:</p>

\[\nabla_\theta J = \mathbb{E}_{\tau \sim \pi_\theta}\left[ \sum_t g_t(\tau) \nabla_\theta \log  \pi_\theta(a|s) \right]\]

<p>which we can then <strong>estimate expected value using sums</strong> in practice.</p>

<h3 id="reinforce-algorithm">REINFORCE Algorithm</h3>

<blockquote>
  <p>The REINFORCE algorithm estimates the policy gradient numerically by Monte- Carlo sampling: using <strong>random samples</strong> to <strong>approximate the policy gradient</strong>.</p>
</blockquote>

<p>The idea is simple:</p>

<ol>
  <li>set $\nabla_\theta J=0$ for the start. We are treating each episode IID.</li>
  <li>sample a trajectory $\tau$</li>
  <li>compute $\nabla_\theta J = \sum_t g_t(\tau) \nabla_\theta \log  \pi_\theta(a\vert s)$ in this case</li>
  <li>ascent and repeat</li>
</ol>

<p>Then the algorithm is</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220304214257499.png" alt="image-20220304214257499" style="zoom:67%;" /></p>

<p>however, some problems with this algorithm is that:</p>

<ul>
  <li>updating $\theta$ ==will change $\pi_\theta$==, which will be needed to ==generate $\tau$, the experiences==. Hence there <strong>might be convergence problems</strong>.</li>
  <li>additionally, the above also means this policy gradient have <strong>high variance</strong></li>
</ul>

<h3 id="score-function-generality">Score Function Generality</h3>

<p>Additionally, the general form of:</p>

\[g_t(\tau) \nabla_\theta \log  \pi_\theta(a|s) \to g_t(\tau)\cdot \text{score}(\pi_\theta)\]

<p>and the $\text{score}$ expression appears in <strong>many places when you do gradient</strong>. Example include:</p>

<ul>
  <li>Q actor-critic: $\nabla_\theta J = \mathbb{E}_\pi [\text{score}\cdot V_t]$</li>
  <li>TD: $\nabla_\theta J = \mathbb{E}_\pi [\text{score}\cdot \delta]$</li>
  <li>etc</li>
</ul>

<h3 id="policy-gradient-baseline">Policy Gradient Baseline</h3>

<p>The estimate of a gradient over <strong>many sampled experiences $\tau$</strong> would be:</p>

\[\nabla_\theta J  \approx \hat{g} = \frac{1}{n}\sum_{i=1}^n g(\tau^{(i)}) \nabla_\theta \log p_\theta(\tau^{(i)})\]

<p>but notice that if we consider a constant/variable $b$ that is <strong>independent on $\theta$</strong>:</p>

\[\frac{1}{n}\sum_{i=1}^n (g(\tau^{(i)}) - b) \nabla_\theta \log p_\theta(\tau^{(i)}) =  \frac{1}{n}\sum_{i=1}^n g(\tau^{(i)}) \nabla_\theta \log p_\theta(\tau^{(i)}) - \frac{1}{n}\sum_{i=1}^n b\nabla_\theta \log p_\theta(\tau^{(i)})\]

<p>but notice that for $\lim n\to \infty$</p>

\[\frac{1}{n}\sum_{i=1}^n b\nabla_\theta \log p_\theta(\tau^{(i)}) \to \sum_\tau b \nabla_\theta \log p_\theta  (\tau)\cdot p_\theta(\tau)\]

<p>and we can show thiat this is zero:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220304215546064.png" alt="image-20220304215546064" style="zoom:67%;" /></p>

<p>so to measure performance we will usually <strong>subtract of some baseline $b$</strong> in the model, which is still an unbiased model.</p>

<h2 id="actor-critic-methods">Actor-Critic Methods</h2>

<p>On problem with policy-based method is that it updates $\theta$ whose $\tau$ sampled next depends on. This means that there could be <strong>high variance</strong> in the gradient which might cause <strong>convergence problems</strong>. The idea of this chapter is to ==solve== this using ==value function approximation to reduce this variance==.</p>

<blockquote>
  <p>Actor-critic methods <strong>combine policy-based methods</strong> with <strong>value-based methods</strong> by using both the policy gradient and value function.</p>
</blockquote>

<p>The basic step up will be a GAN like model:</p>

<ul>
  <li><strong>actor</strong>: a policy network $\pi_\theta$ with parameters $\theta$</li>
  <li><strong>critic</strong>: a value network that contains $V_\phi(s)$ or $Q_\phi(s,a)$, or the advantage function $A_\phi(s,a)=g(\tau) - V_\phi(s)$</li>
  <li><strong>critic provides a loss function for the actor</strong> and the gradients backpropagate from the critic to the actor</li>
</ul>

<p>Since $g(\tau)$ changes every time we sampled. the idea is we <strong>swap out $g(\tau)$</strong> in the update rule:</p>

\[\nabla_\theta J = \mathbb{E}_{\tau \sim \pi_\theta}\left[ \sum_t g_t(\tau) \nabla_\theta \log  \pi_\theta(a|s) \right]\]

<p>for values such as:</p>

<ul>
  <li>$g(\tau) \to Q_\phi(s,a)$, which leads to <strong>Q-value actor-critic</strong></li>
  <li>$g(\tau) \to A_\phi(s,a) = g(\tau) - V_\phi(s)$ for advantage</li>
</ul>

<p>for some <strong>already fitted value functions</strong>.</p>

<p>Therefore, this means the algorithm looks like</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220304220900366.png" alt="image-20220304220900366" style="zoom:67%;" /></p>

<p>where the:</p>

<ul>
  <li>the yellow part updates the critic parameter, and the red updates actor</li>
</ul>

<h3 id="advantage-actor-critic">Advantage Actor-Critic</h3>

<p>Here we essentially consider swapping out $g(\tau)$ for $A_\phi(s,a)$ defined by:</p>

\[A_\phi(s,a) = \mathbb{E}_{r,s'}[r+ \gamma V_{\pi_\theta}(s')  - V_{\pi_\theta}(s)]\]

<p>which can be <strong>estimated by TD error</strong> $r+\gamma V_\phi(s’)-V_\phi(s)$, hence resulting in the objective being</p>

\[\nabla_\theta J = \mathbb{E}_{\tau \sim \pi_\theta}\left[ \sum_t \nabla_\theta \log  \pi_\theta(a|s) \cdot \gamma^{t-1}(r+\gamma V_\phi(s')-V_\phi(s)\right]\]

<h3 id="natural-policy-gradient">Natural Policy Gradient</h3>

<p>In reinforcement learning the data set collected depends on the policy, which has the following <strong>risk</strong>:</p>

<ul>
  <li>if updated parameters result in a poor policy</li>
  <li>will result in poor samples</li>
  <li>algorithm stuck at poor policy</li>
</ul>

<blockquote>
  <p>Therefore, when optimizing policy-based methods <strong>choosing a step size</strong>/learning rate for updating the policy parameters is (one of the) key.</p>
</blockquote>

<p>In general, we had:</p>

\[\theta ' =\theta \gets \theta + \alpha \nabla_\theta J(\pi_\theta) = \theta + \Delta \theta\]

<p>one idea is to <strong>constrain the size of this change of $J(\pi_\theta)$</strong> by considering Taylor expansion and <strong>restricting the latter term</strong></p>

\[J(\pi_{\theta'}) \approx J(\pi_\theta) + \nabla_\theta J(\pi_\theta)^T \Delta \theta\]

<p>with</p>

\[\max_{\theta'} \nabla_\theta J(\pi_\theta)^T \Delta \theta \quad \text{s.t.}\quad ||\Delta \theta||_2^2 \le \epsilon\]

<p>in our case $\Delta \theta = \alpha \nabla_\theta J(\pi_\theta)$. So this can be solved analytically with:\</p>

\[\Delta \theta = \sqrt{2 \epsilon} \frac{\nabla_\theta J(\pi_\theta)}{||\nabla_\theta J(\pi_\theta)||}\]

<p><strong>Alternatively</strong>, we can directly <strong>instead of constraining $\theta$, which constrains $\pi_\theta$</strong>, we can constrain the <strong>episode trajectory</strong> itself. Since the trajectory is essentially a probability distribution, we can use KL divergence can constraint that:</p>

\[D_{KL}[p(\tau|\pi_\theta)\, |\, p(\tau |  \pi_{\theta'})] \le \epsilon\]

<p>Then this result in</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220304223202945.png" style="zoom: 67%;" /></p>

<p>which again can be solved analytically, and this called the <strong>natural gradient</strong></p>

\[\Delta \theta =F^{-1}_\theta \nabla_\theta J(\pi_\theta)\sqrt{\frac{2\epsilon}{||\nabla_\theta J(\pi_\theta)^T F_\theta^{-1}\nabla_\theta J(\pi_\theta)||}}\]

<p>and $\nabla_\theta J(\pi_\theta)$ and $F_\theta$ may be approximated by sampling trajectories using conjugate gradient descent</p>

<blockquote>
  <p><strong>Note</strong> that since we are only dealing with $\Delta \theta$ for the first term in approximation, we are essentially using <strong>first order methods</strong>.</p>
</blockquote>

<h3 id="trust-region-policy-optimization-trpo">Trust Region Policy Optimization (TRPO)</h3>

<p>Essentially a method based on the natural gradient, but here we are:</p>

<ul>
  <li>using second order method but <strong>approximating the hessian</strong> by using <strong>conjugate gradient</strong></li>
  <li>alike NPG, constrain the surrogate loss by the <strong>KL divergence</strong> between the new and old policy</li>
</ul>

<p>This results in the following algorithm</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220303135351156.png" alt="image-20220303135351156" style="zoom: 50%;" /></p>

<p>where surrogate loss is basically the loss that is caused by different policy trajectories.</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220303135530009.png" alt="image-20220303135530009" style="zoom:50%;" /></p>

<h3 id="proximal-policy-optimization-ppo">Proximal Policy Optimization (PPO)</h3>

<p>This method is based on TRPO however:</p>

<ul>
  <li>is a first-order method that avoids computing the Hessian matrix</li>
  <li>also avoids line search (at the end of previous algo) by <strong>clipping</strong> the surrogate objective.</li>
</ul>

<p>This results in the constrained optimization or surrogate objective:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220303135626037.png" alt="image-20220303135626037" style="zoom:50%;" /></p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220304224444380.png" alt="image-20220304224444380" style="zoom:67%;" /></p>

<p>Then the algorithm looks like</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220304224501324.png" alt="image-20220304224501324" style="zoom:67%;" /></p>

<h3 id="deep-deterministic-policy-gradient-ddpg">Deep Deterministic Policy Gradient (DDPG)</h3>

<p>DDPG may be used in continuous action spaces and combines <strong>DQN</strong> with <strong>REINFORCE</strong>. Essentially the idea is again, the actor critic loop:</p>

<ul>
  <li>use DQN to estimate $Q_\phi(s,a)$ which will be a <strong>critic</strong></li>
  <li>use REINFORCE to estimate $\pi_\theta(s)$ which will be an <strong>actor</strong></li>
</ul>

<p>The loss and gradients are defined by:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Critic Loss</th>
      <th style="text-align: center">Actor Loss</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220304224806600.png" alt="image-20220304224806600" style="zoom:67%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220304224852363.png" alt="image-20220304224852363" style="zoom:67%;" /></td>
    </tr>
  </tbody>
</table>

<p>and</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220304224824803.png" alt="image-20220304224824803" style="zoom: 67%;" /></p>

<p>The algorithm being</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220304224921793.png" alt="image-20220304224921793" style="zoom:67%;" /></p>

<h2 id="model-based-reinforcement-learning">Model-based Reinforcement Learning</h2>

<p>Here, model-based reinforcement learning means we are <strong>learning the environment model</strong>, e.g. the transitions, to give us optimal policies. This can further be split into to kinds:</p>

<ul>
  <li>given model/environment: AlphaZero</li>
  <li>learn model by sampling: World Model</li>
</ul>

<h3 id="monte-carlo-tree-search">Monte-Carlo Tree Search</h3>

<blockquote>
  <p>A tree search starts at the root and explores nodes from there, <strong>looking for one particular node</strong> that satisfies the conditions mentioned in the problem.</p>
</blockquote>

<p>Tree search has been used in cases such as board games, where we essentially want to do the best next move when we have a selection of possible moves $A$ and a selection of states $S$ to be in:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220303140820378.png" alt="image-20220303140820378" style="zoom:50%;" /></p>

<p>However, solving this exactly <strong>would need time complexity</strong> of:</p>

\[O\left((|S||A|)^d\right)\]

<p>which is <strong>exponential in time</strong>. Hence, the idea for MC Tree Search is to <strong>sample some branch only</strong> to keep the exploration going.</p>

<blockquote>
  <p>Monte-Carlo Tree Search (MCTS) runs simulations from a given state and therefore has time complexity of $O(nd)$ where $n$ is the number of simulations and $d$ the tree depth.</p>
</blockquote>

<p>Then, once done, we <strong>select actions based on Upper Confidence Bound</strong>:</p>

\[Q(s,a) + c \sqrt{\frac{\log N(s)}{N(s,a)}}\]

<p>for $c$ being an exploration constant and</p>

<ul>
  <li>$N(s,a)$ being the <strong>number of action state pairs</strong></li>
  <li>$N(s) = \sum_a N(s,a)$ is the number of <strong>state visits</strong></li>
</ul>

<p>So we get the algorithm being:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220304230357312.png" alt="image-20220304230357312" style="zoom:67%;" /></p>

<h3 id="expert-iteration-and-alphazero">Expert Iteration and AlphaZero</h3>

<blockquote>
  <p>Expert iteration, or AlphaZero, uses</p>

  <ul>
    <li>a neural network to output a policy approximation $\pi_\theta(a\vert s)$ and state value function $V_\phi(s)$ approximation for guiding MCTS.</li>
    <li>use MCTS to output next best action</li>
  </ul>

  <p>Once dones, this is <strong>merged</strong> into a single network $f_\theta(s)$ that:</p>

  <ul>
    <li>receives a state representation as input $s$</li>
    <li>outputs a vector of probabilities <strong>$p_\theta = P(a\vert s)$ over all valid actions</strong> a and <strong>state values $V_\theta (s)$ over states $s$.</strong></li>
  </ul>

  <p>And AlphaZero learns these action probabilities and estimated values from <strong>games of self-play</strong></p>
</blockquote>

<p>The parameters $\theta$ are updated by stochastic gradient descent on the following loss function:</p>

\[L(\theta) = - \pi \log  p + (V- e)^2 + \alpha ||\theta||^2\]

<p>where:</p>

<ul>
  <li>the first term is a <strong>cross entropy loss</strong> between policy vector $p$ and search probabilities $\pi$ you have in reality</li>
  <li>the second term aims to <strong>minimize the difference</strong> between predicted performance $V$ and actual evaluation $e$</li>
  <li>the third is a <strong>regularization term</strong></li>
</ul>

<p>Then AlphaZero uses MCTS which is a stochastic search using upper confidence bound update rule of the action-value function</p>

\[U(s,a) = Q(s,a) + cP(a|s) \frac{\sqrt{N(s)}}{1+N(s,a)}\]

<p>where:</p>

<ul>
  <li>$N(s,a)$ is the number of times action $a$ was taken from state $s$</li>
  <li>$P(a\vert s)=p_\theta(a)$ is the NN output of probability taking action $a$ from state $s$</li>
</ul>

<p>Then at each step we take:</p>

<ol>
  <li>action $\arg\max_a U(s,a)$</li>
  <li>add this new state to a tree</li>
  <li>use MC Tree search on the new state and repeat</li>
</ol>

<p>Graphically we are doing</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220303141302315.png" alt="image-20220303141302315" style="zoom: 67%;" /></p>

<h3 id="world-models">World Models</h3>

<blockquote>
  <p>A world model is a neural game simulator that uses a VAE and RNN to take action in an environment, which in turn <strong>can be used to model the world/game itself</strong>.</p>
</blockquote>

<p>The overall structure has been covered before</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220303142142395.png" alt="image-20220303142142395" style="zoom:50%;" /></p>

<p>where we essentially learnt $M$.</p>

<ul>
  <li>the VAE is trained on images from the environment learning a <strong>low dimension latent representation</strong> $z$ of state $s$.</li>
  <li>
    <p>RNN is trained on the VAE latent vectors $z_t$ through time <strong>predicting</strong> $p(z_{t+1}\vert a_t, z_t, h_t)$.</p>
  </li>
  <li>$z_t$ and RNN hidden vector $h_t$ are fed into a <strong>neural network controller</strong> which <strong>outputs an action</strong> that effects the environment</li>
</ul>

<p>In addition, the power of this model is that:</p>

<ul>
  <li>essentially the VAE addition could be used to generate and continue playing the game, because we can feed in from RNN and VAE can <strong>“reconstruct” the image</strong></li>
  <li>some difference between GAN and this model is that here we are <strong>learning/reconstructing the latent space $z$</strong>, instead of the real data itself directly.</li>
</ul>

<h2 id="imitation-learning">Imitation Learning</h2>

<p>Rather than learning from rewards, imitation learning <strong>learns from example demonstrations</strong> provided by an expert - ==behavior cloning==.</p>

<p>Therefore, we basically consider <strong>learning $\pi_\theta$</strong> that clones the <strong>expert demonstration $(s,a) \sim D$</strong>:</p>

\[\arg\max_\theta \sum_{(s,a) \in D} \log \pi_\theta(a|s)\]

<blockquote>
  <p>However, learning a policy like by imitation has a natural pitfall: if it <strong>encountered situations not well represented by the demonstrations</strong> it may perform poorly, and once encountered may not recover from cascading errors.</p>
</blockquote>

<p>Related models in this area include:</p>

<ul>
  <li>
    <p><strong>Dataset aggregation</strong> (DAgger) (Ross, Gordon &amp; Bagnell 2011) aims to <em>solve the problem of cascading errors by augmenting the data</em> with expert action labels of policy rollouts</p>
  </li>
  <li>
    <p><strong>Stochastic miximg iterative learning</strong> (SMILe) (Ross &amp; Bagnell 2010) trains a <em>new policy only on the augmented data</em> and then mixes the new policy with the previous policies</p>
  </li>
  <li>
    <p><strong>Generative adversarial imitation learning</strong> (GAIL) (Ho &amp; Ermon 2016) uses state and action examples $(s,a) \sim P_{real}$ from expert demonstrations as real samples for a discriminator in a GAN setting, and ask the generator to leanr $\pi_\theta(a\vert s)$:</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220308131653510.png" alt="image-20220308131653510" style="zoom: 67%;" /></p>

    <p>so that basically discriminators $D_\phi$ wants to distinguish the actions from expert demonstrations $(s,a) \sim P_{real}$ and the generated pair $(s,\pi_\theta(s))$.</p>
  </li>
  <li>
    <p><strong>Inverse reinforcement learning</strong> explicitly derives a <em>reward function from a set of expert demonstrations</em> and <em>uses that reward to learn an optimal policy</em></p>
  </li>
</ul>

<h2 id="maintaining-exploration">Maintaining Exploration</h2>

<p>As we know, if a model has $0$ exploration then it might <strong>not converge</strong> to the optimal solution as it will be stuck with greedy choices. Hence we have introduced $\epsilon$-greedy  approach that does random action with probability $\epsilon$.</p>

<p>Here, we introduce <strong>another way to promote exploration</strong>, which is to add some <strong>internal reward</strong> (i.e. not explicitly given from the environment) each time when a <strong>new state is explored</strong>.</p>

<ul>
  <li>this approach would also be useful for environments with <strong>sparse rewards</strong></li>
</ul>

<p>Related models include</p>

<ul>
  <li>
    <p><strong>Go-Explore</strong>: provide bonus rewards for novel states, you can encourage agents to explore more of the state space, even if they don’t receive any external reward from the environment.</p>

    <p>However,  one problem with these approaches is that they do a poor job at continuing to explore promising areas far away from the start state: <strong>Detachment</strong></p>

    <p><img src="https://www.alexirpan.com/public/go-explore/detachment.png" alt="Detachment diagram" style="zoom: 33%;" /></p>

    <p>And the proposed solution is to maintain a <strong>memory of previously visited novel states</strong>, so that:</p>

    <ol>
      <li>When learning, the agent first <em>randomly samples a previously visited state</em>, biased towards newer ones.</li>
      <li>It travels to that state, then <em>explores from that state</em>.</li>
    </ol>

    <p>Therefore, by chance we will <strong>eventually resample a state near the boundary of visited states</strong>, and from there it is easy to discover unvisited novel states</p>
  </li>
</ul>

<h2 id="multiagent-system">Multiagent System</h2>

<p>Here we consider essentially <strong>other agents/players</strong> in the system, which introduces the following changes:</p>

<ul>
  <li><strong>Environments</strong> that contain multiple agents
    <ul>
      <li>Agents act autonomously</li>
      <li>Outcome depends on actions of all agents</li>
      <li>Agents maximize their own reward</li>
    </ul>
  </li>
  <li><strong>Observation</strong>
    <ul>
      <li>Perfect information (i.e. your action decision can be made deterministically as you <em>already see/have everything you need</em>)
        <ul>
          <li>e.g. chess</li>
        </ul>
      </li>
      <li>Imperfect information (i.e. your action decision would be probabilistic because you <em>do not see/have opponent information yet</em>)
        <ul>
          <li>e.g. rock-paper-scissors</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>Competitive - cooperative</strong>
    <ul>
      <li>Fully competitive zero-sum games: checkers, chess, Go</li>
      <li>Fully cooperative</li>
    </ul>
  </li>
</ul>

<h3 id="strategic-game">Strategic Game</h3>

<p>A matrix game (strategic game) can be described as follows</p>

<blockquote>
  <p>Formally, we have the following setup:</p>

  <ul>
    <li>$n$ agents, numbered from $i=1,…,n$</li>
    <li>at each step, we have some <strong>action profile $(a_1, …, a_n)$</strong> representing the action each agent $i$ took</li>
    <li>utility function for each agent $(u_1,…,u_n)$ measures the “utility” of their action $(a_1, …,a_n)$</li>
    <li>an outcome of the game is the joint action of all agents</li>
  </ul>

  <p>We <strong>assume</strong> that <strong>each agent maximizes its own utility over each outcome</strong></p>
</blockquote>

<p>Additionally, we can represent the games they play as a <strong>tree</strong>, for example:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220308201011752.png" alt="image-20220308201011752" style="zoom:50%;" /></p>

<p>in this example:</p>

<ul>
  <li><strong>nodes</strong> are states, edges are actions, leaves are utilities, e.g. $(u_1,u_2)$</li>
  <li>each node is <strong>labeled with an agent</strong> that can control it, so edge from a node is the action the agent at the node takes</li>
  <li>each path to a leaf is a <strong>run</strong></li>
</ul>

<hr />

<p><em>Perfect Information Game Example</em></p>

<p>in a <strong>perfect information game</strong>, we can explore the state by <strong>not caring how you get to the state</strong></p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220308133714063.png" alt="image-20220308133714063" style="zoom:50%;" /></p>

<p>therefore, the value of a state is based on the <strong>subtree</strong> where the current node is the root.</p>

<hr />

<p><em>Imperfect Information Game</em></p>

<p>Here, we do not have everything you need to determine your action to win 100%. An example would be <strong>rock-paper-scissor</strong>, which we can characterize by:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Matrix</th>
      <th style="text-align: center">Tree</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220308204135128.png" alt="image-20220308204135128" style="zoom:67%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220308204119834.png" alt="image-20220308204119834" style="zoom:67%;" /></td>
    </tr>
  </tbody>
</table>

<p>where the situation is that, if you are player B on the right figure, you do not know what A chose and hence all three states look the same to you</p>

<ul>
  <li>
    <p>if either player has some deterministic strategy, the player would be <strong>exploited</strong>. Hence the optimal solution, or its ==Nash Equilibrium==, is to <strong>choose a random policy of $1/3$ for each action.</strong> This probabilistic policy is often referred to as <strong>mixed strategy</strong>, whereas the deterministic one is called <strong>pure strategy</strong>.</p>
  </li>
  <li>
    <p>This can also be seen as a <strong>zero-sum matrix game</strong>. When we say that it is a zero-sum game, we mean that one wins the same amount as the other loses.</p>
  </li>
</ul>

<h3 id="nash-equilibrium">Nash Equilibrium</h3>

<p>The idea of Nash Equilibrium in a game is a collection of <strong>strategies for all players</strong> such that <strong>no player can do better by changing its own strategy</strong> given that <strong>other players continue playing their NE strategies</strong></p>

<blockquote>
  <p>Formally, the Nash Equilibrium set of strategy for all $n$ players is $(\pi_1^<em>, …,\pi_n^</em>)$ such that</p>

\[V_i(\pi_1^*,...,\pi_i^*,...,\pi_n^*) \ge V_i(\pi_1^*,...,\pi_i,...,\pi_n^*) ,\quad i=1,...,n\]

  <p>where $V_i(\cdot)$ is player $i$’s value function which is player $i$’s <strong>expected reward/utility given all players’ strategies</strong></p>
</blockquote>

<p>It is important to know that:</p>

<ul>
  <li>
    <p>Clearly, the goal of converging to Nash equilibria is a good starting point for multi-agent learning algorithms. However, there commonly can be multiple Nash equilibria with different payouts, leading to greater difficulty in evaluating multiagent learning compared to single agent RL</p>
  </li>
  <li>
    <p>being in Nash Equilibrium therefore <strong>does not equal to maximal gain/utility</strong> attainable in a game, as it is <strong>assuming</strong> that all players want to maximize their <strong>own benefit</strong></p>

    <p>An example would be the following matrix game:</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220308205612393.png" alt="image-20220308205612393" style="zoom:67%;" /></p>

    <p>where the NE is for each player to <em>take</em>, as it maximizes their own benefit. However, the optimal solution is of course for both to <em>give</em>.</p>
  </li>
</ul>

<blockquote>
  <p>In fact:</p>

  <ul>
    <li>in <strong>Perfect information game</strong>, a <strong>unique Nash equilibrium/optimal</strong> is the value for player of current node in tree (as the value would be representative of all possible outcomes)</li>
    <li>in <strong>Imperfect information game</strong>, there may be <strong>multiple Nash equilibria</strong>, no deterministic strategy may be optimal.</li>
  </ul>
</blockquote>

<p><em>For Example</em>: Simple Nash Equilibrium</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220308211944291.png" alt="image-20220308211944291" style="zoom:67%;" /></p>

<p>since the entire action space is shown, we see that:</p>

<ul>
  <li>“Top + Left” is a <strong>Nash Equilibrium</strong> because either can benefit themselves more if the other player stayed there. A can switch to Bottom, but this would reduce his payoff from $5$ to $1$. Player B can switch from left to right, but this would reduce his payoff from $4$ to $3$. “Bottom + Right” is <strong>also a Nash Equilibrium</strong> for the same reason</li>
  <li>other cells are not because one player will be gained more by shifting away.</li>
</ul>

<hr />

<p><em>For Example</em>: Mixed Nash Equilibrium Strategy</p>

<p>To produce mixed strategy, we <strong>must</strong> have at least one player going random policy, as otherwise the optimal solutoin will be determinstic as you can just exploit it.</p>

<p>Consider the example of <em>battle of sexes</em>, where the reward is shown in the table:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220308213228803.png" alt="image-20220308213228803" style="zoom:50%;" /></p>

<p>We now <strong>suppose that</strong> woman go to the Baseball game with ==probability $p$,== and the Man go to the Baseball game with probability $q$. Then, we can look at the <strong>expected return</strong> for each party after choosing an action:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220308213426800.png" alt="image-20220308213426800" /></p>

<p>hence, notice that:</p>

<ul>
  <li>
    <p>A mixed strategy in the battle of the sexes game requires both parties to randomize</p>
  </li>
  <li>
    <p>for <strong>Man to randomize=indifference between going Baseball or Ballet</strong>, we need</p>

\[1+2p = 2-2p \quad \to \quad p=1/4\]

    <p>for woman</p>
  </li>
  <li>
    <p>for the <strong>Woman to randomize</strong>, the Woman must get equal payoffs from going to the Baseball game and going to the Ballet, which requires:</p>

\[2q = 3-2q \quad \to \quad q=3/4\]
  </li>
  <li>
    <p>notice that the <strong>above are independent decisions</strong>, hence we can pick $q=3/4$ ==and== $p=1/4$ to achieve ==Nash Equilibrium== so that the probability of man/woman going to each sport being given by:</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220308213950680.png" alt="image-20220308213950680" style="zoom: 50%;" /></p>

    <p>which is the result if man and woman following the NE.</p>
  </li>
</ul>

<p>Then, putting together the mixed strategy and the reward, we can compute the <strong>expected payoff</strong>:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Reward</th>
      <th style="text-align: center">Random Policy</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220308213228803.png" alt="image-20220308213228803" style="zoom:50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220308213950680.png" alt="image-20220308213950680" style="zoom: 50%;" /></td>
    </tr>
  </tbody>
</table>

<p>where:</p>

<ul>
  <li>
    <p>basically we do element-wise multiplication for the two matrix and will get</p>

\[\mathbb{E}[\text{man reward}] = \frac{9}{16} + \frac{9}{16} + \frac{6}{16} + 0 = \frac{3}{2}\\
\mathbb{E}[\text{woman reward}] = \frac{6}{16} + \frac{9}{16} + \frac{9}{16} + 0 = \frac{3}{2}\\\]
  </li>
  <li>
    <p>the above Nash equilibrium (following $p,q$) is indeed <strong>smaller than if they had coordination</strong> to go both baseball or both ballet.</p>
  </li>
</ul>

<blockquote>
  <p>Here we have shown that <strong>randomization</strong> requires <strong>equality of expected payoffs</strong> (as otherwise it becomes deterministic), which would then result in Nash Equilibrium.</p>
</blockquote>

<hr />

<p><em>For Example</em>:</p>

<p>Consider the game of guessing coin flip:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220308211127704.png" alt="image-20220308211127704" style="zoom: 50%;" /></p>

<p>essentially, if $P1$’s coin is guessed correctly by $P2$ then $P1$ receives a penalty. We want to **consider the Nash Equilibrium **</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Player 2 Guessing Head with $p=3/4$  and tail $p=1/4$</th>
      <th style="text-align: center">Player 1</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220308232956782.png" alt="image-20220308232956782" /></td>
      <td style="text-align: center">Player 1 can always achieve 0 by always playing sell</td>
    </tr>
  </tbody>
</table>

<p>where the key observation for imperfect game is that:</p>

<ul>
  <li>for imperfect information game, you need to consider <strong>the full tree</strong> for possibility to determine your <strong>optimal strategy</strong></li>
</ul>

<h3 id="counterfactual-regret-minimization">Counterfactual Regret Minimization</h3>

<p>Key algorithm used in imperfect information games</p>

<ul>
  <li><strong>Counterfactual</strong>: If I had known</li>
  <li><strong>Regret</strong>: how much better would I have done if I did something else instead?</li>
  <li><strong>Minimization</strong>: what strategy minimizes my overall regret?</li>
</ul>

<p>Then a Monte Carlo CFR does:</p>

<ul>
  <li>Player 1 explores all options and player 2 samples actions</li>
  <li>Traverse entire tree</li>
  <li>Repeat switching roles: player 1 samples actions and player 2 explores all actions</li>
</ul>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220308141226579.png" alt="image-20220308141226579" style="zoom:50%;" /></p>

<p>where:</p>

<ul>
  <li>we know that player 1 played green, which gained 50. But the other options are to get 0 or 100. Hence the regret for them is -50 and 50.</li>
  <li>use neural network to approximate the tree, which <strong>guides the CFR search</strong></li>
</ul>

<h3 id="unification">Unification</h3>

<p>One idea is that perfect information can be seen as a special case of imperfect information:</p>

<ul>
  <li>realize that both basically includes a <strong>Tree Search + DNN</strong> to simulate the tree
    <ul>
      <li>perfect information does DNN + MC tree search</li>
      <li>imperfect information does DNN + MC-CFR</li>
    </ul>
  </li>
  <li>now a unified algorithm has come up which essentially can play both Chess, Go as well as games like Poker.</li>
</ul>

<h1 id="optional">Optional</h1>

<p>Some random stuff added in lecture notes</p>

<h2 id="adversarial-attacks">Adversarial Attacks</h2>

<p>The idea is that we <strong>add some noise</strong> in an image, such that the <strong>classification output</strong> would be ==different==</p>

<ul>
  <li>targeted</li>
  <li>untargeted</li>
</ul>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220217135858473.png" alt="image-20220217135858473" style="zoom:33%;" /></p>

<p>The idea is therefore to do</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220217140014237.png" alt="image-20220217140014237" style="zoom:33%;" /></p>

<p>then</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220217135942981.png" alt="image-20220217135942981" style="zoom:33%;" /></p>

<p>which obviously requires you to know the network architecture in advance</p>

<h2 id="problem-solving-with-dl">Problem Solving with DL</h2>

<p>https://www.cs.columbia.edu/~idrori/drori2021math.pdf</p>

<blockquote>
  <p>We demonstrate that a neural network pre-trained on text <strong>and</strong> finetuned on code solves Mathematics problems by program synthesis.</p>

  <ul>
    <li>In this work we demonstrate that program synthesis is the key to solving math and STEM courses at scale, by turning questions into programming tasks</li>
  </ul>
</blockquote>

<p>Some of the previous interesting work</p>

<ul>
  <li>
    <p>When <strong>paired with graph neural networks (GNNs)</strong> to predict arithmetic expression trees, Transformers pre-trained on text have been used to solve university level problems in Machine Learning (14) with up to 95% accuracy.</p>

    <p>however this previous work is limited to numeric answers and isolated to a specific course and does not readily scale to other courses</p>
  </li>
  <li>
    <p>it works because <strong>humans solving problems by imaging them into computation trees</strong></p>
  </li>
</ul>

<hr />

<p>Here, the idea is to:</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220310205626517.png" alt="image-20220310205626517" /></p>

<ol>
  <li>turn question into programming task
    <ul>
      <li>add context (e.g. what course it is, e.g. use <code class="language-plaintext highlighter-rouge">numpy</code>)
        <ul>
          <li>assume that background knowledges from the available code repos on Github. e.g. if we are to solve a physics problem, it will assume physics knowledge from existing repos.</li>
        </ul>
      </li>
      <li>using codex to prompt codex (e.g. given a question, output a programming task)</li>
    </ul>
  </li>
  <li>automatically genreate program using a Transformer, OpenAI Codex, pre-trained on text and fine-tuned on code</li>
  <li>execute program to obtain and evluate answers</li>
  <li>automatically explain correct solution using codex</li>
</ol>

<blockquote>
  <p>The key takeaways is that:</p>

  <ul>
    <li>transformers pretrained on text does <strong>not directly work</strong> on solving math problems</li>
    <li>program synthesis using codex can assume “knowledge” of physics, math, etc. if there exists related code on Github</li>
  </ul>
</blockquote>

<p>But exactly what context is needed?</p>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220310210250349.png" alt="image-20220310210250349" /></p>

<p>In short we have mainly three kinds:</p>

<ul>
  <li><strong>Topic Context</strong>:  For example, without context, a question about networks may be about neural networks or communication networks, and therefore specifying the context is required.</li>
  <li><strong>Library Context</strong>: using the Python libraries sympy and streamplot are added for solving the question and plotting a visualization</li>
  <li><strong>Definitions Context</strong>: Often times, Codex doesn’t have real-world grounding for what certain terms are defined as. As an illustrative example, Codex lacks knowledge of what a “Full House” means in poker. Explicitly defining these in terms that Codex understands can better guide its program synthesis.</li>
</ul>

<p>Then, when transforming questions to Codex prompts, a key consideration is <strong>how semantically close the original question is to a prompt that produces a correct solution</strong>:</p>

<ul>
  <li>To measure the distance between the original questions and the successful prompts, we use cosine similarity between Sentence-BERT</li>
  <li>we can also run <strong>clusterings</strong> from thos embeddings to see how courses are interrelated.</li>
</ul>

<p>Finally, we can <strong>create new questions</strong> using Codex:</p>

<ul>
  <li>We use Codex to generate new questions for each course. This is done by creating a numbered list of questions from the dataset. This list is cut off after a random number of questions, and the result is used to <strong>prompt Codex to generate the next question</strong>.</li>
</ul>

<p><strong>More details on using Codex</strong></p>

<ul>
  <li>We use OpenAI’s davinci-codex engine for all of our generations. We fix all of Codex’s hyperparameters to be the same for all experiments: top-$p$ which is the portion p of the token probability mass a language model samples from at each step is set to 1, sampling temperature is set to 0 (i.e. argmax), and response length is set to 200 tokens.</li>
  <li>Both frequency and presence penalty are set to 0, and we do not halt on any stop sequences. Each prompt is structured as a Python documentation comment surrounded by triple quotations and line breaks.</li>
</ul>

<h1 id="tutorials">Tutorials</h1>

<p>Tutorials after classes</p>

<h2 id="remote-jupyter">Remote Jupyter</h2>

<p>Here are some notes on how to setup a remote jupyter server and connect to it locally using VSCode.</p>

<p>Firstly, on the <strong>remote</strong> (e.g. <code class="language-plaintext highlighter-rouge">ssh</code> into it)</p>

<ol>
  <li>
    <p>make sure you have already generated a <strong>settings file</strong> for you jupyter server. This should be located under <code class="language-plaintext highlighter-rouge">~/.jupyter/jupyter_notebook_config.py</code>. If not, you can generate it by:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jupyter notebook <span class="nt">--generate-config</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>Make sure that you have the following two lines in your config file</p>

    <div class="language-config highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">c</span>.<span class="n">NotebookApp</span>.<span class="n">allow_origin</span> = <span class="s1">'*'</span> <span class="c">#allow all origins
</span><span class="n">c</span>.<span class="n">NotebookApp</span>.<span class="n">ip</span> = <span class="s1">'0.0.0.0'</span> <span class="c"># listen on all IPs
</span></code></pre></div>    </div>
  </li>
  <li>
    <p>Start your jupyter server by doing (consider putting it into <code class="language-plaintext highlighter-rouge">tmux</code>):</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>jupyter notebook <span class="nt">--no-browser</span> <span class="nt">--port</span><span class="o">=</span>9999
<span class="c"># some logs omitted</span>
<span class="o">[</span>I 13:00:56.602 NotebookApp] Jupyter Notebook 6.4.5 is running at:
<span class="o">[</span>I 13:00:56.602 NotebookApp] http://ip_of_your_server:9999/?token<span class="o">=</span>xxx
</code></pre></div>    </div>

    <p>take a note of the line <code class="language-plaintext highlighter-rouge">http://ip_of_your_server:9999/?token=xxx</code>, which will be used later</p>
  </li>
</ol>

<p>Then, on your <strong>local machine</strong>, open up VSCode and:</p>

<ol>
  <li>
    <p>connect to the remote jupyter server by putting in the url <code class="language-plaintext highlighter-rouge">http://ip_of_your_server:9999/?token=xxx</code> into the following popup</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220223180806747.png" alt="image-20220223180806747" /></p>
  </li>
  <li>
    <p>Reload the window, and if successful, you will be able to see a <strong>remote kernel</strong> at the following pop up</p>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220223180957821.png" alt="image-20220223180957821" /></p>
  </li>
</ol>

<h2 id="pytorch">PyTorch</h2>

<p>In total there will be three parts of the tutorial.</p>

<ol>
  <li>Part I: introduction, compute derivatives, build a simple NN</li>
</ol>

<p>What is PyTorch? It’s a Python-based scientific computing package targeted at two sets of audiences:</p>

<ul>
  <li>A replacement for NumPy to use the power of GPUs</li>
  <li>a deep learning research platform that provides maximum flexibility and speed</li>
</ul>

<p>See the <code class="language-plaintext highlighter-rouge">tutorial/pytorch</code> for more details</p>

<h3 id="part-i">Part I</h3>

<p>Basically data structures are very similar to the <code class="language-plaintext highlighter-rouge">np.array</code>:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">zeros</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="p">.</span><span class="nb">long</span><span class="p">)</span> <span class="c1"># again same as numpy
</span><span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
<span class="s">"""
tensor([[0, 0, 0],
        [0, 0, 0],
        [0, 0, 0],
        [0, 0, 0],
        [0, 0, 0]])
"""</span>
<span class="n">x</span> <span class="o">=</span> <span class="n">x</span><span class="p">.</span><span class="n">new_ones</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="p">.</span><span class="n">double</span><span class="p">)</span>      <span class="c1"># new_* methods take in sizes
</span><span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
<span class="s">"""
tensor([[1., 1., 1.],
        [1., 1., 1.],
        [1., 1., 1.],
        [1., 1., 1.],
        [1., 1., 1.]], dtype=torch.float64)
"""</span>
<span class="c1"># Generates random values from **Normal distribution**
</span><span class="n">x</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">randn_like</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="p">.</span><span class="nb">float</span><span class="p">)</span>    <span class="c1"># override dtype!
</span><span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>        <span class="c1"># result has the same size as x
</span><span class="s">"""
tensor([[-0.0351,  1.3674,  2.3571],
        [ 0.1267,  1.2764, -1.0151],
        [ 1.8572, -3.1128,  0.5551],
        [-0.6236,  0.6248,  0.1378],
        [-0.8379, -0.2349, -1.0931]])
"""</span>

<span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">size</span><span class="p">())</span> <span class="c1"># instead of x.shape
</span></code></pre></div></div>

<p>note that:</p>

<ul>
  <li>So, essentially, <code class="language-plaintext highlighter-rouge">new_ones</code> allows you to quickly create a ==new== <code class="language-plaintext highlighter-rouge">torch.Tensor</code> on the same device and data type ==from a <em>previously existing</em> tensor== (with ones), whereas <code class="language-plaintext highlighter-rouge">ones()</code> serves the purpose of creating a <code class="language-plaintext highlighter-rouge">torch.Tensor</code> ==from scratch== (filled with ones).</li>
</ul>

<p>Some additional feature for arithmetic</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># normal way
</span><span class="n">p</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">rand</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
<span class="n">q</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">rand</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">p</span> <span class="o">+</span> <span class="n">q</span><span class="p">)</span>

<span class="c1"># method 2
</span><span class="n">result</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">empty</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
<span class="n">torch</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">p</span><span class="p">,</span> <span class="n">q</span><span class="p">,</span> <span class="n">out</span><span class="o">=</span><span class="n">result</span><span class="p">)</span> <span class="c1"># as a paramter
</span><span class="k">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

<span class="c1"># method 3
</span><span class="n">q</span><span class="p">.</span><span class="n">add_</span><span class="p">(</span><span class="n">p</span><span class="p">)</span> <span class="c1"># in-place, noitce the UNDERSCORE
</span><span class="k">print</span><span class="p">(</span><span class="n">q</span><span class="p">)</span>
</code></pre></div></div>

<p>Common Operations:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># slicing is the same as numpy
</span><span class="k">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">result</span><span class="p">[:,</span> <span class="mi">1</span><span class="p">])</span> <span class="c1"># all rows, 1st column only
</span><span class="s">"""
tensor([[1.2144, 0.3950, 0.9391],
        [1.0756, 1.0725, 1.1850],
        [1.2121, 1.2862, 0.6270],
        [0.9586, 0.6927, 0.9081],
        [0.8100, 0.7620, 1.6299]])
tensor([0.3950, 1.0725, 1.2862, 0.6927, 0.7620])
"""</span>

<span class="n">x</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">randn</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>
<span class="n">y</span> <span class="o">=</span> <span class="n">x</span><span class="p">.</span><span class="n">view</span><span class="p">(</span><span class="mi">16</span><span class="p">)</span> <span class="c1"># instead of reshape
</span><span class="n">z</span> <span class="o">=</span> <span class="n">x</span><span class="p">.</span><span class="n">view</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">8</span><span class="p">)</span>  <span class="c1"># the size -1 is inferred from other dimensions
</span><span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="n">y</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="n">z</span><span class="p">.</span><span class="n">size</span><span class="p">())</span>
<span class="s">"""
torch.Size([4, 4]) torch.Size([16]) torch.Size([2, 8])
"""</span>

<span class="c1"># permute!
</span><span class="n">x</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">randn</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">220</span><span class="p">,</span> <span class="mi">224</span><span class="p">)</span>
<span class="n">y</span> <span class="o">=</span> <span class="n">x</span><span class="p">.</span><span class="n">permute</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span> <span class="c1"># 1th = 220, 2nd = 224, 0th = 3 
</span><span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="n">y</span><span class="p">.</span><span class="n">size</span><span class="p">())</span>
</code></pre></div></div>

<p>Conversion to list</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">randn</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">tolist</span><span class="p">())</span> <span class="c1"># to a list
</span><span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">item</span><span class="p">())</span> <span class="c1"># gets the number, works for tensors with single value
</span>
<span class="n">x</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">randn</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">tolist</span><span class="p">())</span> <span class="c1">#works for tensors with multiple values
# print(x.item()) # does not work with multiple dimension
</span></code></pre></div></div>

<h4 id="pytorch-and-numpy">PyTorch and Numpy</h4>

<p>PyTorch integrates very nice features with <code class="language-plaintext highlighter-rouge">numpy</code>. ==The Torch Tensor and NumPy array will share their underlying memory locations==, and changing one will change the other.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">ones</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span> <span class="c1"># 1-d arrow
</span><span class="n">b</span> <span class="o">=</span> <span class="n">a</span><span class="p">.</span><span class="n">numpy</span><span class="p">()</span> <span class="c1"># converts to numpy
</span>
<span class="n">a</span><span class="p">.</span><span class="n">add_</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="c1"># has to be inplace
</span><span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
<span class="s">""" both are changed
tensor([2., 2., 2., 2., 2.])
[2. 2. 2. 2. 2.]
"""</span>
</code></pre></div></div>

<p>this works because they will be pointing to the <strong>same memory location</strong> (probably share a field).</p>

<p>The reverse ==also works==</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="n">a</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">ones</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
<span class="n">b</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">from_numpy</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
<span class="n">np</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">out</span><span class="o">=</span><span class="n">a</span><span class="p">)</span> <span class="c1"># in-place
# below does not work because it returns a NEW ARRAY
# a = np.add(a,1) 
# a = a + 1
</span><span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
<span class="s">"""
[2. 2. 2. 2. 2.]
tensor([2., 2., 2., 2., 2.], dtype=torch.float64)
"""</span>
</code></pre></div></div>

<h4 id="cuda-tensors">CUDA Tensors</h4>

<p>This basically will make your code runs faster</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># let us run this cell only if CUDA is available
# We will use ``torch.device`` objects to move tensors in and out of GPU
# Devices available are 'cuda' and 'cpu'
</span>
<span class="n">x</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">rand</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span>
<span class="k">if</span> <span class="n">torch</span><span class="p">.</span><span class="n">cuda</span><span class="p">.</span><span class="n">is_available</span><span class="p">():</span>
    <span class="n">device</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">device</span><span class="p">(</span><span class="s">"cuda"</span><span class="p">)</span>          <span class="c1"># a CUDA device object
</span>    <span class="n">y</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">ones_like</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">device</span><span class="o">=</span><span class="n">device</span><span class="p">)</span>  <span class="c1"># directly create a tensor on GPU
</span>    <span class="n">x</span> <span class="o">=</span> <span class="n">x</span><span class="p">.</span><span class="n">to</span><span class="p">(</span><span class="n">device</span><span class="p">)</span>                       <span class="c1"># or just use strings ``.to("cuda")``
</span>    <span class="n">z</span> <span class="o">=</span> <span class="n">x</span> <span class="o">+</span> <span class="n">y</span>
    <span class="k">print</span><span class="p">(</span><span class="n">z</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="part-2">Part 2</h3>

<p>Too tired, look at the notebook.</p>

<p>Basically you have <code class="language-plaintext highlighter-rouge">pytorch</code> <strong>automatically evaluated gradient</strong> by:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">ones</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">requires_grad</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span> <span class="c1"># gradient evaluated AT this value
# x.add_(1) # once requires_grad, you cannot do in-place operation
</span>
<span class="n">y</span> <span class="o">=</span> <span class="n">x</span> <span class="o">+</span> <span class="mi">2</span> <span class="c1"># only x will have `require_grad=True`
# y.retain_grad() # if you need the gradient of y as well
</span><span class="n">z</span> <span class="o">=</span> <span class="mi">3</span> <span class="o">*</span> <span class="n">y</span> <span class="o">*</span> <span class="n">y</span>
<span class="n">out</span> <span class="o">=</span> <span class="n">z</span><span class="p">.</span><span class="n">mean</span><span class="p">()</span>


<span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">y</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">z</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">out</span><span class="p">)</span>
<span class="s">"""
tensor([[1., 1.],
        [1., 1.]], requires_grad=True)
tensor([[3., 3.],
        [3., 3.]], grad_fn=&lt;AddBackward0&gt;)
tensor([[27., 27.],
        [27., 27.]], grad_fn=&lt;MulBackward0&gt;)
tensor(27., grad_fn=&lt;MeanBackward0&gt;)
"""</span>
</code></pre></div></div>

<p>Then, to evaluate gradient $\quad \frac{\partial o}{\partial x_i}\bigr\rvert_{x_i=1}$:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Let's backprop now
</span><span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">grad</span><span class="p">)</span> <span class="c1"># not yet computed
</span><span class="n">out</span><span class="p">.</span><span class="n">backward</span><span class="p">()</span> <span class="c1"># computed
</span><span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">grad</span><span class="p">)</span>
<span class="s">"""
None

tensor([[4.5000, 4.5000],
        [4.5000, 4.5000]])
"""</span>
</code></pre></div></div>

<p>We have that $o = \frac{1}{4}\sum_i z_i= \frac{1}{4}\sum_i 3(x_i+2)^2$ and $z_i\bigr\rvert_{x_i=1} = 27$. Therefore:</p>

\[\frac{\partial o}{\partial x_i} = \frac{3}{2}(x_i+2)\]

<p>so evaluated at $x_i=1$:</p>

\[\quad \frac{\partial o}{\partial x_i}\bigr\rvert_{x_i=1} = \frac{9}{2} = 4.5\]

<p>which is what we had.</p>

<blockquote>
  <p><strong>Note</strong></p>

  <p>Under the hood, the <code class="language-plaintext highlighter-rouge">grad</code> is done by keeping track of a computation graph behind all the operations.</p>
</blockquote>

<p>Then, to temporarily disable the gradient:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">requires_grad</span><span class="p">)</span>
<span class="k">print</span><span class="p">((</span><span class="n">x</span> <span class="o">**</span> <span class="mi">2</span><span class="p">).</span><span class="n">requires_grad</span><span class="p">)</span>

<span class="k">with</span> <span class="n">torch</span><span class="p">.</span><span class="n">no_grad</span><span class="p">():</span>
	<span class="k">print</span><span class="p">((</span><span class="n">x</span> <span class="o">**</span> <span class="mi">2</span><span class="p">).</span><span class="n">requires_grad</span><span class="p">)</span>
<span class="s">"""
True
True
False
"""</span>
</code></pre></div></div>

<p>useful when the training is done.</p>

<h3 id="part-3">Part 3</h3>

<p>Now we create a NN for MNIST dataset.</p>

<p>First import a bunch:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">torch</span>
<span class="kn">import</span> <span class="nn">time</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="c1"># Import dataset related API
</span><span class="kn">from</span> <span class="nn">torchvision</span> <span class="kn">import</span> <span class="n">datasets</span>
<span class="kn">from</span> <span class="nn">torchvision.transforms</span> <span class="kn">import</span> <span class="n">ToTensor</span>

<span class="c1"># Import common neural network API in pytorch
</span><span class="kn">import</span> <span class="nn">torch.nn</span> <span class="k">as</span> <span class="n">nn</span>
<span class="kn">import</span> <span class="nn">torch.nn.functional</span> <span class="k">as</span> <span class="n">F</span>

<span class="c1"># Import optimizer related API
</span><span class="kn">import</span> <span class="nn">torch.optim</span> <span class="k">as</span> <span class="n">optim</span>

<span class="c1"># Check device, using gpu 0 if gpu exist else using cpu
</span><span class="n">device</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">device</span><span class="p">(</span><span class="s">"cuda"</span> <span class="k">if</span> <span class="n">torch</span><span class="p">.</span><span class="n">cuda</span><span class="p">.</span><span class="n">is_available</span><span class="p">()</span> <span class="k">else</span> <span class="s">"cpu"</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">device</span><span class="p">)</span>
</code></pre></div></div>

<p>We will be mainly dealing with MNIST:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Getting data
</span><span class="n">training_data</span> <span class="o">=</span> <span class="n">datasets</span><span class="p">.</span><span class="n">MNIST</span><span class="p">(</span>
    <span class="n">root</span><span class="o">=</span><span class="s">"data"</span><span class="p">,</span>
    <span class="n">train</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
    <span class="n">download</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
    <span class="n">transform</span><span class="o">=</span><span class="n">ToTensor</span><span class="p">()</span>
<span class="p">)</span>

<span class="n">test_data</span> <span class="o">=</span> <span class="n">datasets</span><span class="p">.</span><span class="n">MNIST</span><span class="p">(</span>
    <span class="n">root</span><span class="o">=</span><span class="s">"data"</span><span class="p">,</span>
    <span class="n">train</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
    <span class="n">download</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
    <span class="n">transform</span><span class="o">=</span><span class="n">ToTensor</span><span class="p">()</span>
<span class="p">)</span>

<span class="c1"># how dset works
</span><span class="n">figure</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">4</span><span class="p">))</span>
<span class="n">cols</span><span class="p">,</span> <span class="n">rows</span> <span class="o">=</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">cols</span> <span class="o">*</span> <span class="n">rows</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
    <span class="n">sample_idx</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">training_data</span><span class="p">),</span> <span class="n">size</span><span class="o">=</span><span class="p">(</span><span class="mi">1</span><span class="p">,)).</span><span class="n">item</span><span class="p">()</span>
    <span class="n">img</span><span class="p">,</span> <span class="n">label</span> <span class="o">=</span> <span class="n">training_data</span><span class="p">[</span><span class="n">sample_idx</span><span class="p">]</span>
    <span class="n">figure</span><span class="p">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="n">rows</span><span class="p">,</span> <span class="n">cols</span><span class="p">,</span> <span class="n">i</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="n">label</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">axis</span><span class="p">(</span><span class="s">"off"</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">img</span><span class="p">.</span><span class="n">squeeze</span><span class="p">(),</span> <span class="n">cmap</span><span class="o">=</span><span class="s">"gray"</span><span class="p">)</span> <span class="c1">#.squeeze() to convert shape from (1, 28, 28) to (28, 28)
</span><span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<p>note that:</p>

<ul>
  <li>
    <p>the shape is <code class="language-plaintext highlighter-rouge">[28,28,1]</code> because <code class="language-plaintext highlighter-rouge">pytorch </code>set the first dimension to the <strong>channel dimension.</strong> We are using grey scale so it is $1$.</p>
  </li>
  <li>
    <p>squeeze can be quite dangerous if you do not know what you are doing:</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">x</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">zeros</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">x</span><span class="p">.</span><span class="n">size</span><span class="p">()</span>
<span class="n">torch</span><span class="p">.</span><span class="n">Size</span><span class="p">([</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">])</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">y</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">squeeze</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">y</span><span class="p">.</span><span class="n">size</span><span class="p">()</span>
<span class="n">torch</span><span class="p">.</span><span class="n">Size</span><span class="p">([</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">])</span>
</code></pre></div>    </div>

    <p>i.e. all dimension 1 will be removed if not specified</p>
  </li>
</ul>

<h4 id="preparing-data">Preparing Data</h4>

<p><strong>Preparing the data</strong></p>

<ul>
  <li>into batches and shuffle</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Important Library!!
</span><span class="kn">from</span> <span class="nn">torch.utils.data</span> <span class="kn">import</span> <span class="n">DataLoader</span>

<span class="c1"># Sectioning dataset into batches using dataloaders
</span><span class="n">train_dataloader</span> <span class="o">=</span> <span class="n">DataLoader</span><span class="p">(</span><span class="n">training_data</span><span class="p">,</span> <span class="n">batch_size</span><span class="o">=</span><span class="mi">64</span><span class="p">,</span> <span class="n">shuffle</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">test_dataloader</span> <span class="o">=</span> <span class="n">DataLoader</span><span class="p">(</span><span class="n">test_data</span><span class="p">,</span> <span class="n">batch_size</span><span class="o">=</span><span class="mi">64</span><span class="p">,</span> <span class="n">shuffle</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</code></pre></div></div>

<h4 id="create-nn">Create NN</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Defining the neural network
</span><span class="k">class</span> <span class="nc">Network</span><span class="p">(</span><span class="n">nn</span><span class="p">.</span><span class="n">Module</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">().</span><span class="n">__init__</span><span class="p">()</span>

        <span class="c1"># define layers
</span>        <span class="bp">self</span><span class="p">.</span><span class="n">layers</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">get_fc_layers</span><span class="p">()</span>

    <span class="k">def</span> <span class="nf">get_fc_layers</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>

        <span class="n">layers</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Sequential</span><span class="p">(</span>
            <span class="n">nn</span><span class="p">.</span><span class="n">Linear</span><span class="p">(</span><span class="mi">784</span><span class="p">,</span> <span class="mi">128</span><span class="p">),</span> <span class="c1"># W^1, notice that 784=28*28
</span>            <span class="n">nn</span><span class="p">.</span><span class="n">ReLU</span><span class="p">(),</span>
            <span class="n">nn</span><span class="p">.</span><span class="n">Linear</span><span class="p">(</span><span class="mi">128</span><span class="p">,</span> <span class="mi">64</span><span class="p">),</span> <span class="c1"># W^2, input 128 dimension, output 64 dimension
</span>            <span class="n">nn</span><span class="p">.</span><span class="n">ReLU</span><span class="p">(),</span>
            <span class="n">nn</span><span class="p">.</span><span class="n">Linear</span><span class="p">(</span><span class="mi">64</span><span class="p">,</span> <span class="mi">10</span><span class="p">),</span> <span class="c1"># W^3, input 64 dimension, output 10
</span>            <span class="n">nn</span><span class="p">.</span><span class="n">LogSoftmax</span><span class="p">(</span><span class="n">dim</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
        <span class="p">)</span>
        <span class="k">return</span> <span class="n">layers</span>


    <span class="c1"># define forward function
</span>    <span class="k">def</span> <span class="nf">forward</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="nb">input</span><span class="p">):</span> <span class="c1"># in this case, it will be (64, 784) where 64 is the batch_size you had
</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">layers</span><span class="p">(</span><span class="nb">input</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">x</span>

    <span class="c1"># backward pass does not need to be specified because they are done automatically
</span>        

<span class="n">net</span> <span class="o">=</span> <span class="n">Network</span><span class="p">()</span> <span class="c1"># Creating an instance of the Network class
</span><span class="n">net</span><span class="p">.</span><span class="n">to</span><span class="p">(</span><span class="n">device</span><span class="p">)</span> <span class="c1"># shifting to cuda if available*
</span>
<span class="c1"># Below is how the network looks
</span><span class="s">"""
Network(
  (layers): Sequential(
    (0): Linear(in_features=784, out_features=128, bias=True)
    (1): ReLU()
    (2): Linear(in_features=128, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=10, bias=True)
    (5): LogSoftmax(dim=1)
  )
)
"""</span>
<span class="c1"># Defining our Loss Function
</span><span class="n">criterion</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">CrossEntropyLoss</span><span class="p">()</span>

<span class="c1"># Defining optimizer
</span><span class="n">optimizer</span> <span class="o">=</span> <span class="n">optim</span><span class="p">.</span><span class="n">SGD</span><span class="p">(</span><span class="n">net</span><span class="p">.</span><span class="n">parameters</span><span class="p">(),</span> <span class="n">lr</span><span class="o">=</span><span class="mf">0.003</span><span class="p">,</span> <span class="n">momentum</span><span class="o">=</span><span class="mf">0.9</span><span class="p">)</span> <span class="c1"># e.g. ADAM
</span></code></pre></div></div>

<h4 id="training-nn">Training NN</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Number of epochs
</span><span class="n">epochs</span> <span class="o">=</span> <span class="mi">15</span>
<span class="k">for</span> <span class="n">epoch</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">epochs</span><span class="p">):</span>

    <span class="c1"># Initialising statistics that we will be tracking across epochs
</span>    <span class="n">start_time</span> <span class="o">=</span> <span class="n">time</span><span class="p">.</span><span class="n">time</span><span class="p">()</span>
    <span class="n">total_correct</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">total</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">total_loss</span> <span class="o">=</span> <span class="mi">0</span>

    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">data</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">train_dataloader</span><span class="p">,</span> <span class="mi">0</span><span class="p">):</span> <span class="c1"># in batches
</span>        <span class="c1"># get the inputs; data is a list of [inputs, labels]
</span>        <span class="n">inputs</span><span class="p">,</span> <span class="n">labels</span> <span class="o">=</span> <span class="n">data</span>
        <span class="c1"># loading onto cuda if available*
</span>        <span class="k">if</span> <span class="n">torch</span><span class="p">.</span><span class="n">cuda</span><span class="p">.</span><span class="n">is_available</span><span class="p">():</span>
            <span class="n">inputs</span> <span class="o">=</span> <span class="n">inputs</span><span class="p">.</span><span class="n">to</span><span class="p">(</span><span class="n">device</span><span class="p">)</span>
            <span class="n">labels</span> <span class="o">=</span> <span class="n">labels</span><span class="p">.</span><span class="n">to</span><span class="p">(</span><span class="n">device</span><span class="p">)</span>

        <span class="c1"># zero the parameter gradients: Clean the gradient caclulated in the previous iteration
</span>        <span class="n">optimizer</span><span class="p">.</span><span class="n">zero_grad</span><span class="p">()</span> <span class="c1">#reset all graidents to zero for each step as they accumulate over backprop
</span>
        <span class="c1"># forward + backward + optimize
</span>        <span class="n">inputs</span> <span class="o">=</span> <span class="n">inputs</span><span class="p">.</span><span class="n">view</span><span class="p">(</span><span class="n">inputs</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="c1"># reshapes [btach_size, 28, 28] to [batch_size, 784]
</span>
        <span class="c1"># 1. forward propagation
</span>        <span class="n">outputs</span> <span class="o">=</span> <span class="n">net</span><span class="p">.</span><span class="n">forward</span><span class="p">(</span><span class="n">inputs</span><span class="p">)</span>
        <span class="n">loss</span> <span class="o">=</span> <span class="n">criterion</span><span class="p">(</span><span class="n">outputs</span><span class="p">,</span> <span class="n">labels</span><span class="p">)</span>

        <span class="c1"># 2. backward propagation
</span>        <span class="c1"># Calculate gradient of matrix with requires_grad = True
</span>        <span class="n">loss</span><span class="p">.</span><span class="n">backward</span><span class="p">()</span> <span class="c1">#computes dloss/dx for every parameter x which has requires_grad=True
</span>
        <span class="c1"># 3. Apply the gradient calculate from last step to the matrix
</span>        <span class="n">optimizer</span><span class="p">.</span><span class="n">step</span><span class="p">()</span> <span class="c1"># x += -lr * x.grad ie updates the weights of the parameters
</span>
        <span class="c1"># housekeeping
</span>        
        <span class="c1"># Adding loss to total loss
</span>        <span class="n">total_loss</span> <span class="o">+=</span> <span class="n">loss</span><span class="p">.</span><span class="n">item</span><span class="p">()</span>

        <span class="c1"># Checking which output label has max probability
</span>        <span class="n">_</span><span class="p">,</span> <span class="n">predicted</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="nb">max</span><span class="p">(</span><span class="n">outputs</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
        <span class="n">total</span> <span class="o">+=</span> <span class="n">labels</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>

        <span class="c1"># Tracking number of correct predictions
</span>        <span class="n">total_correct</span> <span class="o">+=</span> <span class="p">(</span><span class="n">predicted</span> <span class="o">==</span> <span class="n">labels</span><span class="p">).</span><span class="nb">sum</span><span class="p">().</span><span class="n">item</span><span class="p">()</span>

    <span class="c1"># Calculating accuracy, epoch-time
</span>    <span class="n">accuracy</span> <span class="o">=</span> <span class="mi">100</span><span class="o">*</span> <span class="n">total_correct</span><span class="o">/</span><span class="n">total</span>
    <span class="n">end_time</span> <span class="o">=</span> <span class="n">time</span><span class="p">.</span><span class="n">time</span><span class="p">()</span> <span class="o">-</span> <span class="n">start_time</span>    

    <span class="c1"># Printing out statistics
</span>    <span class="k">print</span><span class="p">(</span><span class="s">"Epoch no."</span><span class="p">,</span><span class="n">epoch</span><span class="o">+</span><span class="mi">1</span> <span class="p">,</span><span class="s">"|accuracy: "</span><span class="p">,</span> <span class="nb">round</span><span class="p">(</span><span class="n">accuracy</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span><span class="s">"%"</span><span class="p">,</span> <span class="s">"|total_loss: "</span><span class="p">,</span> <span class="n">total_loss</span><span class="p">,</span> <span class="s">"| epoch_duration: "</span><span class="p">,</span> <span class="nb">round</span><span class="p">(</span><span class="n">end_time</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="s">"sec"</span><span class="p">)</span>
</code></pre></div></div>

<p>you basically have to specify the entire training steps.</p>

<h4 id="evaluating-nn">Evaluating NN</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">correct</span> <span class="o">=</span> <span class="mf">0.0</span>
<span class="n">total</span> <span class="o">=</span> <span class="mf">0.0</span>

<span class="c1"># Since, we're now evaluating, we don't have to track gradients now!
</span>
<span class="k">with</span> <span class="n">torch</span><span class="p">.</span><span class="n">no_grad</span><span class="p">():</span>
  <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">data</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">test_dataloader</span><span class="p">,</span> <span class="mi">0</span><span class="p">):</span>

    <span class="c1"># everything here is similar to the train function, 
</span>    <span class="c1"># except we're not calculating loss and not preforming backprop
</span>    <span class="n">inputs</span><span class="p">,</span> <span class="n">labels</span> <span class="o">=</span> <span class="n">data</span>
    <span class="k">if</span> <span class="n">torch</span><span class="p">.</span><span class="n">cuda</span><span class="p">.</span><span class="n">is_available</span><span class="p">():</span>
      <span class="n">inputs</span> <span class="o">=</span> <span class="n">inputs</span><span class="p">.</span><span class="n">to</span><span class="p">(</span><span class="n">device</span><span class="p">)</span>
      <span class="n">labels</span> <span class="o">=</span> <span class="n">labels</span><span class="p">.</span><span class="n">to</span><span class="p">(</span><span class="n">device</span><span class="p">)</span>


    <span class="n">inputs</span> <span class="o">=</span> <span class="n">inputs</span><span class="p">.</span><span class="n">view</span><span class="p">(</span><span class="n">inputs</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
    <span class="c1"># just forward propagatoin for computing Y_pred
</span>    <span class="c1"># no more backward updates
</span>    <span class="n">outputs</span> <span class="o">=</span> <span class="n">net</span><span class="p">.</span><span class="n">forward</span><span class="p">(</span><span class="n">inputs</span><span class="p">)</span>
    <span class="n">_</span><span class="p">,</span> <span class="n">predicted</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="nb">max</span><span class="p">(</span><span class="n">outputs</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
    <span class="n">total</span> <span class="o">+=</span> <span class="n">labels</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">correct</span> <span class="o">+=</span> <span class="p">(</span><span class="n">predicted</span> <span class="o">==</span> <span class="n">labels</span><span class="p">).</span><span class="nb">sum</span><span class="p">().</span><span class="n">item</span><span class="p">()</span>

<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">'Accuracy: </span><span class="si">{</span><span class="mi">100</span> <span class="o">*</span> <span class="n">correct</span><span class="o">/</span><span class="n">total</span><span class="si">}</span><span class="s">%'</span><span class="p">)</span>    
</code></pre></div></div>

<p>notice that we asked <code class="language-plaintext highlighter-rouge">pytorch</code> not to track gradients any more.</p>

<h4 id="create-own-dset">Create Own Dset</h4>

<p>We can subclass <code class="language-plaintext highlighter-rouge">Dataset</code>. This gives us more control how the data is to be extracted from source (<strong>before training</strong>)</p>

<ul>
  <li>We can also perform some additional transformatios before returning the data</li>
  <li>will work natively with <code class="language-plaintext highlighter-rouge">DataLoader</code></li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#CustomDataset is subclass of Dataset.
</span><span class="kn">from</span> <span class="nn">torch.utils.data</span> <span class="kn">import</span> <span class="n">Dataset</span>
<span class="k">class</span> <span class="nc">CustomDataset</span><span class="p">(</span><span class="n">Dataset</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">labels</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">data</span> <span class="o">=</span> <span class="n">data</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">labels</span> <span class="o">=</span> <span class="n">labels</span>

    <span class="k">def</span> <span class="nf">__len__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span> <span class="c1"># how many data points are there in your dset
</span>        <span class="k">return</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">labels</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">__getitem__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">idx</span><span class="p">):</span> <span class="c1"># get one (x_train, y_train) sample
</span>        <span class="c1"># we can do transformation on the given input before it is returned
</span>        <span class="n">X</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="n">idx</span><span class="p">]</span>
        <span class="n">y</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">labels</span><span class="p">[</span><span class="n">idx</span><span class="p">]</span>
        <span class="k">return</span> <span class="n">X</span><span class="p">,</span> <span class="n">y</span>
    
<span class="c1">#Usage
</span><span class="n">train_dataset</span> <span class="o">=</span> <span class="n">CustomDataset</span><span class="p">(</span><span class="n">X_train</span><span class="p">,</span> <span class="n">y_train</span><span class="p">)</span>
<span class="n">train_loader</span> <span class="o">=</span> <span class="n">DataLoader</span><span class="p">(</span>
    <span class="n">train_dataset</span><span class="p">,</span>
    <span class="n">batch_size</span> <span class="o">=</span> <span class="mi">32</span><span class="p">,</span>
    <span class="n">shuffle</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="tensorflow">Tensorflow</h2>

<p>Implemented in C++ in the back, so highly optimized in performance.</p>

<p>The basic components are <strong>tensors</strong>, which is a multi-dimensional arrays with a ==uniform type==. Basicallya generalized matrix.</p>

<ul>
  <li>
    <p>we also talk about ranks in a tensor: a rank is the same idea as “dimension”</p>

    <ul>
      <li>
        <p>rank 1 tensor for vector</p>
      </li>
      <li>
        <p>rank 2 for matrix</p>
      </li>
      <li>
        <p>rank 3 for rgb image</p>
      </li>
    </ul>
  </li>
  <li>
    <p>deep learning basically does <strong>computations using tensors</strong> that are very large.</p>

    <ul>
      <li>e.g. for NN, we can see the system as a graph and passing tensors across. Hence the name <strong>TensorFlow</strong></li>
    </ul>
  </li>
</ul>

<h3 id="basics">Basics</h3>

<p>In general, you should specify:</p>

<ul>
  <li>the size of the tensor</li>
  <li>the datatype</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tf</span><span class="p">.</span><span class="n">zeros</span><span class="p">([</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">],</span> <span class="n">dtype</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">dtypes</span><span class="p">.</span><span class="n">float32</span><span class="p">)</span>

<span class="n">x</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">normal</span><span class="p">(</span>
    <span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span>
    <span class="n">mean</span><span class="o">=</span><span class="mf">0.0</span><span class="p">,</span>
    <span class="n">stddev</span><span class="o">=</span><span class="mf">1.0</span><span class="p">,</span>
    <span class="n">dtype</span><span class="o">=</span><span class="n">tf</span><span class="p">.</span><span class="n">dtypes</span><span class="p">.</span><span class="n">float32</span><span class="p">,</span>
    <span class="n">seed</span><span class="o">=</span><span class="mi">42</span>
<span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">dtype</span><span class="p">)</span>
<span class="s">"""
(3, 4, 3)
&lt;dtype: 'float32'&gt;
"""</span>
</code></pre></div></div>

<p><strong>Integrated with <code class="language-plaintext highlighter-rouge">numpy</code></strong></p>

<ul>
  <li>yet there is no “in-place operation” in tensorflow.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ndarray</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">ones</span><span class="p">([</span><span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">])</span>

<span class="n">tf_tensor</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">multiply</span><span class="p">(</span><span class="n">ndarray</span><span class="p">,</span> <span class="mi">42</span><span class="p">)</span>
<span class="n">tf_tensor</span>
<span class="s">"""
&lt;tf.Tensor: shape=(3, 3), dtype=float64, numpy=
array([[42., 42., 42.],
       [42., 42., 42.],
       [42., 42., 42.]])&gt;
"""</span>

<span class="n">np</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">tf_tensor</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<span class="s">"""
array([[43., 43., 43.],
       [43., 43., 43.],
       [43., 43., 43.]])
"""</span>
</code></pre></div></div>

<p><strong>GPU Support</strong></p>

<ul>
  <li>TensorFlow is able to detect it automatically</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">tf</span><span class="p">.</span><span class="n">config</span><span class="p">.</span><span class="n">list_physical_devices</span><span class="p">(</span><span class="s">'GPU'</span><span class="p">))</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
    <span class="k">print</span> <span class="p">(</span><span class="s">"GPU available and ready to use!"</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="k">print</span> <span class="p">(</span><span class="s">"Unable to detect GPU"</span><span class="p">)</span>

        <span class="c1"># to run on some specific GPU
</span><span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">tf</span><span class="p">.</span><span class="n">config</span><span class="p">.</span><span class="n">list_physical_devices</span><span class="p">(</span><span class="s">'GPU'</span><span class="p">))</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
    <span class="k">with</span> <span class="n">tf</span><span class="p">.</span><span class="n">device</span><span class="p">(</span><span class="s">"GPU"</span><span class="p">):</span> <span class="c1"># Or GPU:1 for the 2nd GPU, GPU:2 for the 3rd etc.
</span>        <span class="n">x</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">uniform</span><span class="p">([</span><span class="mi">1000</span><span class="p">,</span> <span class="mi">1000</span><span class="p">])</span>
        <span class="c1"># x.device specifies the device for operations on x 
</span>        <span class="k">assert</span> <span class="n">x</span><span class="p">.</span><span class="n">device</span><span class="p">.</span><span class="n">endswith</span><span class="p">(</span><span class="s">"GPU:0"</span><span class="p">)</span>
        <span class="k">print</span> <span class="p">(</span><span class="s">"On GPU"</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">'GPU unavailable'</span><span class="p">)</span>
</code></pre></div></div>

<h4 id="variables-and-constants">Variables and Constants</h4>

<p>Basically they are wrappers around Tensor object, but it is <strong>important because</strong></p>

<ul>
  <li>it allows ==in-place updates==</li>
  <li>they are automatically watched by <code class="language-plaintext highlighter-rouge">tf.GradientTape</code>, which does auto-differentiating
    <ul>
      <li>hence they are used for parameters such as <strong>weights in NN</strong></li>
    </ul>
  </li>
</ul>

<p>Then, to create variables and constants</p>

<ul>
  <li>variables are <strong>tensors</strong> that can be changed. They will be watched if you use <code class="language-plaintext highlighter-rouge">GradientTape</code></li>
  <li>constants are <strong>tensors</strong> that <em>cannot be updated</em>. They will <em>not be</em> watched automatically.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># for creating a Variable, you need to provide an initial value
</span><span class="n">my_tensor</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">constant</span><span class="p">([[</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">],</span> <span class="p">[</span><span class="mf">3.0</span><span class="p">,</span> <span class="mf">4.0</span><span class="p">]])</span>
<span class="n">my_variable</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">Variable</span><span class="p">(</span><span class="n">my_tensor</span><span class="p">)</span> <span class="c1"># so a wrapper
</span>
<span class="c1"># Variables can be all kinds of types, just like tensors
</span><span class="n">bool_variable</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">Variable</span><span class="p">([</span><span class="bp">False</span><span class="p">,</span> <span class="bp">False</span><span class="p">,</span> <span class="bp">False</span><span class="p">,</span> <span class="bp">True</span><span class="p">])</span>
<span class="n">complex_variable</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">Variable</span><span class="p">([</span><span class="mi">5</span> <span class="o">+</span> <span class="mf">4j</span><span class="p">,</span> <span class="mi">6</span> <span class="o">+</span> <span class="mf">1j</span><span class="p">])</span>
</code></pre></div></div>

<p><strong>In-place Updates</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">Variable</span><span class="p">([</span><span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.0</span><span class="p">])</span>
<span class="c1"># This will keep the same dtype, float32
</span><span class="n">a</span><span class="p">.</span><span class="n">assign</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="s">"a:"</span><span class="p">,</span> <span class="n">a</span><span class="p">)</span>

<span class="c1"># Not allowed as it resizes the variable:
</span><span class="n">a</span><span class="p">.</span><span class="n">assign</span><span class="p">([</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.0</span><span class="p">])</span>
</code></pre></div></div>

<p><strong>Naming</strong></p>

<ul>
  <li>
    <p>helpful for you to know <strong>what this tensor is for</strong>, .e.g when reloading some model weights</p>
  </li>
  <li>
    <p>Variable names are preserved when saving and loading models.</p>

    <p>By default, variables in models will acquire unique variable names automatically, so you don’t need to assign them yourself unless you want to.</p>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Create a and b; they will have the same name but will be backed by
# different tensors.
</span><span class="n">a</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">Variable</span><span class="p">(</span><span class="n">my_tensor</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s">"Tutorial"</span><span class="p">)</span>

<span class="c1"># A new variable with the same name, but different value
# Note that the scalar add is broadcast
</span><span class="n">b</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">Variable</span><span class="p">(</span><span class="n">my_tensor</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s">"Tutorial"</span><span class="p">)</span>

<span class="c1"># These are elementwise-unequal, despite having the same name
</span><span class="k">print</span><span class="p">(</span><span class="n">a</span> <span class="o">==</span> <span class="n">b</span><span class="p">)</span>
</code></pre></div></div>

<h4 id="gradients">Gradients</h4>

<p>Basically the same as PyTorch, so that you need to do something “special” to enable it to <strong>start memorizing the operations</strong></p>

<p>Consider the function we want to differentiate:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">forward</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="p">):</span>
  <span class="k">return</span> <span class="p">(</span><span class="n">x</span> <span class="o">+</span> <span class="n">y</span><span class="p">)</span> <span class="o">*</span> <span class="n">z</span>
  
<span class="n">forward</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">z</span><span class="o">=-</span><span class="mi">4</span><span class="p">)</span> <span class="c1"># -12
</span></code></pre></div></div>

<p>then, suppose we want to compute:</p>

\[\left. \nabla f  \right|_{1,2,-4}\]

<p>Then:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># input needs to be tracked, hence using variables
</span><span class="n">params</span> <span class="o">=</span> <span class="p">[</span><span class="n">tf</span><span class="p">.</span><span class="n">Variable</span><span class="p">(</span><span class="mf">1.0</span><span class="p">),</span> <span class="n">tf</span><span class="p">.</span><span class="n">Variable</span><span class="p">(</span><span class="mf">2.0</span><span class="p">),</span> <span class="n">tf</span><span class="p">.</span><span class="n">Variable</span><span class="p">(</span><span class="o">-</span><span class="mf">4.0</span><span class="p">)]</span> 

<span class="k">with</span> <span class="n">tf</span><span class="p">.</span><span class="n">GradientTape</span><span class="p">()</span> <span class="k">as</span> <span class="n">tape</span><span class="p">:</span> <span class="c1"># start tracking, i.e. a blank sheet of paper where each operatoin is recorded
</span>    <span class="n">r</span> <span class="o">=</span> <span class="n">forward</span><span class="p">(</span><span class="o">*</span><span class="n">params</span><span class="p">)</span>
  
<span class="n">grads</span> <span class="o">=</span> <span class="n">tape</span><span class="p">.</span><span class="n">gradient</span><span class="p">(</span><span class="n">r</span><span class="p">,</span> <span class="n">params</span><span class="p">)</span> <span class="c1"># W.R.T. the params
</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Gradients:  drdx: %0.2f, drdy: %0.2f, drdz: %0.2f"</span> <span class="o">%</span> 
      <span class="p">(</span><span class="n">grads</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">numpy</span><span class="p">(),</span> <span class="n">grads</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="n">numpy</span><span class="p">(),</span> <span class="n">grads</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="n">numpy</span><span class="p">()))</span>
<span class="s">"""
Gradients:  drdx: -4.00, drdy: -4.00, drdz: 3.00
"""</span>
</code></pre></div></div>

<p>notice that:</p>

<ul>
  <li>we used ` tape.gradient(r, params)<code class="language-plaintext highlighter-rouge"> to differentiate w.r.t. all the </code>params<code class="language-plaintext highlighter-rouge"> hence achieving the gradient. You can also compute $\partial f / \partial x$ by just passing in </code>tape.gradient(r, params[0])`</li>
  <li>you also <strong>cannot call it multiple times</strong></li>
</ul>

<p>Another example</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">W</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">Variable</span><span class="p">([[</span><span class="o">-</span><span class="mf">0.5</span><span class="p">,</span> <span class="mf">0.2</span><span class="p">],</span>
              <span class="p">[</span><span class="o">-</span><span class="mf">0.3</span><span class="p">,</span> <span class="mf">0.8</span><span class="p">]])</span>            <span class="c1"># track the weight      
</span><span class="n">x</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">Variable</span><span class="p">([</span><span class="mf">0.2</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">])</span>            <span class="c1"># does not need if we do not diff w.r.t x
</span><span class="n">x</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">expand_dims</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="n">forward</span><span class="p">(</span><span class="n">W</span><span class="p">,</span><span class="n">x</span><span class="p">).</span><span class="n">numpy</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">params</span> <span class="o">=</span> <span class="p">[</span><span class="n">W</span><span class="p">,</span> <span class="n">x</span><span class="p">]</span>
<span class="k">with</span> <span class="n">tf</span><span class="p">.</span><span class="n">GradientTape</span><span class="p">()</span> <span class="k">as</span> <span class="n">tape</span><span class="p">:</span>
  <span class="n">result</span> <span class="o">=</span> <span class="n">forward</span><span class="p">(</span><span class="o">*</span><span class="n">params</span><span class="p">)</span>
<span class="n">grads</span> <span class="o">=</span> <span class="n">tape</span><span class="p">.</span><span class="n">gradient</span><span class="p">(</span><span class="n">result</span><span class="p">,</span> <span class="n">W</span><span class="p">)</span> <span class="c1"># w.r.t the weight only
</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Gradient with respect to w:  "</span><span class="p">,</span> <span class="n">grads</span><span class="p">.</span><span class="n">numpy</span><span class="p">())</span>
<span class="s">"""
Gradient with respect to w:   [[0.  0. ]
 [0.2 0.4]]
"""</span>
</code></pre></div></div>

<ul>
  <li>
    <p>note that if you have a <strong>constant Tensor</strong> that you want to watch:</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">constant</span><span class="p">(</span><span class="mf">3.0</span><span class="p">)</span>
<span class="k">with</span> <span class="n">tf</span><span class="p">.</span><span class="n">GradientTape</span><span class="p">()</span> <span class="k">as</span> <span class="n">g</span><span class="p">:</span>
    <span class="n">g</span><span class="p">.</span><span class="n">watch</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="c1"># NEEDED!
</span>    <span class="n">y</span> <span class="o">=</span> <span class="n">x</span> <span class="o">*</span> <span class="n">x</span>
<span class="n">dy_dx</span> <span class="o">=</span> <span class="n">g</span><span class="p">.</span><span class="n">gradient</span><span class="p">(</span><span class="n">y</span><span class="p">,</span> <span class="n">x</span><span class="p">)</span> <span class="c1"># Will compute to 6.0
</span><span class="k">print</span><span class="p">(</span><span class="n">dy_dx</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
</ul>

<h3 id="training">Training</h3>

<p>The complete version.</p>

<p><strong>preparing data</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">tensorflow.keras.layers</span> <span class="kn">import</span> <span class="n">Dense</span><span class="p">,</span> <span class="n">Flatten</span> 
<span class="kn">from</span> <span class="nn">tensorflow.keras</span> <span class="kn">import</span> <span class="n">Model</span><span class="p">,</span> <span class="n">Input</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib.image</span> <span class="k">as</span> <span class="n">mpimg</span>
<span class="kn">from</span> <span class="nn">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span>
<span class="kn">import</span> <span class="nn">timeit</span>


<span class="c1"># Download a dataset
</span><span class="p">(</span><span class="n">x_train</span><span class="p">,</span> <span class="n">y_train</span><span class="p">),</span> <span class="p">(</span><span class="n">x_test</span><span class="p">,</span> <span class="n">y_test</span><span class="p">)</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">keras</span><span class="p">.</span><span class="n">datasets</span><span class="p">.</span><span class="n">mnist</span><span class="p">.</span><span class="n">load_data</span><span class="p">()</span>

<span class="k">print</span><span class="p">(</span><span class="n">x_train</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">x_test</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
<span class="s">"""
(60000, 28, 28)
(10000, 28, 28)
"""</span>

<span class="c1"># normalize the values to [0-1], hsuffle, and generates to batches
# returns an iterator
</span><span class="n">train_ds</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">data</span><span class="p">.</span><span class="n">Dataset</span><span class="p">.</span><span class="n">from_tensor_slices</span><span class="p">(</span>
    <span class="p">(</span><span class="n">x_train</span><span class="p">.</span><span class="n">astype</span><span class="p">(</span><span class="s">'float32'</span><span class="p">)</span> <span class="o">/</span> <span class="mi">255</span><span class="p">,</span> <span class="n">y_train</span><span class="p">)).</span><span class="n">shuffle</span><span class="p">(</span><span class="mi">1024</span><span class="p">).</span><span class="n">batch</span><span class="p">(</span><span class="mi">32</span><span class="p">)</span>

<span class="n">test_ds</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">data</span><span class="p">.</span><span class="n">Dataset</span><span class="p">.</span><span class="n">from_tensor_slices</span><span class="p">(</span>
    <span class="p">(</span><span class="n">x_test</span><span class="p">.</span><span class="n">astype</span><span class="p">(</span><span class="s">'float32'</span><span class="p">)</span> <span class="o">/</span> <span class="mi">255</span><span class="p">,</span> <span class="n">y_test</span><span class="p">)).</span><span class="n">batch</span><span class="p">(</span><span class="mi">32</span><span class="p">)</span>

<span class="c1"># A quick example of iterating over a dataset object
</span><span class="k">for</span> <span class="n">image</span><span class="p">,</span> <span class="n">label</span> <span class="ow">in</span> <span class="n">train_ds</span><span class="p">.</span><span class="n">take</span><span class="p">(</span><span class="mi">1</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Batch Shape: "</span><span class="p">,</span> <span class="n">image</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>  <span class="c1">#  (32, 28, 28) where 32 is the batch size
</span>    <span class="n">plt</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">image</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
    <span class="k">print</span><span class="p">(</span><span class="n">label</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</code></pre></div></div>

<p><strong>Training</strong></p>

<p>Now, in general there are two ways to establish and train a model</p>

<ul>
  <li>using <code class="language-plaintext highlighter-rouge">Sequential</code> - easier to use</li>
  <li>using <code class="language-plaintext highlighter-rouge">subclassing</code> API - more flexible</li>
</ul>

<p>Here we discuss the subclassing idea:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">MyCustomModel</span><span class="p">(</span><span class="n">Model</span><span class="p">):</span> <span class="c1"># inherits from tf.keras.Model
</span>  <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="nb">super</span><span class="p">(</span><span class="n">MyCustomModel</span><span class="p">,</span> <span class="bp">self</span><span class="p">).</span><span class="n">__init__</span><span class="p">()</span>
    <span class="c1"># define your network architecture
</span>    <span class="bp">self</span><span class="p">.</span><span class="n">flatten</span> <span class="o">=</span> <span class="n">Flatten</span><span class="p">()</span> <span class="c1"># Layer 1: flatten
</span>    <span class="bp">self</span><span class="p">.</span><span class="n">dl_1</span> <span class="o">=</span> <span class="n">Dense</span><span class="p">(</span><span class="mi">128</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">'relu'</span><span class="p">)</span> <span class="c1"># Layer 2: dense layer
</span>    <span class="bp">self</span><span class="p">.</span><span class="n">dl_2</span> <span class="o">=</span> <span class="n">Dense</span><span class="p">(</span><span class="mi">128</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">'relu'</span><span class="p">)</span> <span class="c1"># Layer 3: dense layer
</span>    <span class="bp">self</span><span class="p">.</span><span class="n">d1_3</span> <span class="o">=</span> <span class="n">Dense</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">'softmax'</span><span class="p">)</span> <span class="c1"># Layer 4: multiclass classification
</span>
  <span class="k">def</span> <span class="nf">call</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">):</span>
    <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">flatten</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="c1"># basically the FORWARD PASS
</span>    <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">dl_1</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
    <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">dl_2</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
    <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">d1_3</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">model</span> <span class="o">=</span> <span class="n">MyCustomModel</span><span class="p">()</span>

<span class="n">loss_fn</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">keras</span><span class="p">.</span><span class="n">losses</span><span class="p">.</span><span class="n">SparseCategoricalCrossentropy</span><span class="p">()</span>  <span class="c1"># loss function
# what optimization method we use. i.e. HOW you want to update the weights
</span><span class="n">optimizer</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">keras</span><span class="p">.</span><span class="n">optimizers</span><span class="p">.</span><span class="n">SGD</span><span class="p">()</span>

<span class="c1"># For each epoch
</span><span class="k">for</span> <span class="n">epoch</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">5</span><span class="p">):</span>

    <span class="c1"># For each batch of images and labels
</span>    <span class="k">for</span> <span class="n">images</span><span class="p">,</span> <span class="n">labels</span> <span class="ow">in</span> <span class="n">train_ds</span><span class="p">:</span>

        <span class="c1"># Open a GradientTape.
</span>        <span class="k">with</span> <span class="n">tf</span><span class="p">.</span><span class="n">GradientTape</span><span class="p">()</span> <span class="k">as</span> <span class="n">tape</span><span class="p">:</span>

            <span class="c1"># Forward pass
</span>            <span class="n">predictions</span> <span class="o">=</span> <span class="n">model</span><span class="p">(</span><span class="n">images</span><span class="p">)</span>

            <span class="c1"># Calculate loss, done INSIDE the GradientTape since we want to do derivatives afterwards
</span>            <span class="n">loss</span> <span class="o">=</span> <span class="n">loss_fn</span><span class="p">(</span><span class="n">labels</span><span class="p">,</span> <span class="n">predictions</span><span class="p">)</span>

        <span class="c1"># Backprop to calculate gradients
</span>        <span class="n">gradients</span> <span class="o">=</span> <span class="n">tape</span><span class="p">.</span><span class="n">gradient</span><span class="p">(</span><span class="n">loss</span><span class="p">,</span> <span class="n">model</span><span class="p">.</span><span class="n">trainable_variables</span><span class="p">)</span>

        <span class="c1"># Gradient descent step, apply the `gradients` to `model.trainable_variables`
</span>        <span class="n">optimizer</span><span class="p">.</span><span class="n">apply_gradients</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="n">gradients</span><span class="p">,</span> <span class="n">model</span><span class="p">.</span><span class="n">trainable_variables</span><span class="p">))</span>

    <span class="c1"># Calculate loss on the test data
</span>    <span class="n">test_loss</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">images</span><span class="p">,</span> <span class="n">labels</span> <span class="ow">in</span> <span class="n">test_ds</span><span class="p">:</span>
        <span class="n">predictions</span> <span class="o">=</span> <span class="n">model</span><span class="p">(</span><span class="n">images</span><span class="p">)</span>
        <span class="n">loss_on_batch</span> <span class="o">=</span> <span class="n">loss_fn</span><span class="p">(</span><span class="n">labels</span><span class="p">,</span> <span class="n">predictions</span><span class="p">)</span>
        <span class="n">test_loss</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">loss_on_batch</span><span class="p">)</span>

    <span class="k">print</span><span class="p">(</span><span class="s">"Epoch {}, Test loss: {}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">epoch</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">tf</span><span class="p">.</span><span class="n">reduce_mean</span><span class="p">(</span><span class="n">test_loss</span><span class="p">)))</span>
    
<span class="s">"""
Epoch 1, Test loss: 0.320291668176651
Epoch 2, Test loss: 0.26357364654541016
Epoch 3, Test loss: 0.2302776277065277
Epoch 4, Test loss: 0.20258881151676178
Epoch 5, Test loss: 0.17977921664714813
"""</span>
</code></pre></div></div>

<h3 id="note">Note</h3>

<p>TensorFlow 2.x</p>

<ul>
  <li>uses <strong>eager execution by default</strong>: executes line by line, the same fashion as you wrote the code</li>
</ul>

<p>TensorFlow 1.x</p>

<ul>
  <li>
    <p>builds a graph from your code, and execute according to the graph</p>
  </li>
  <li>
    <p>Graph execution has the obvious advantage that, since you can track the dependency of operations, you can <strong>optimize the run by parallelization</strong></p>
    <ul>
      <li>this means Graph based execution can be faster when you do model training</li>
      <li>however, since the order of computation maybe different from your code, it would be ==hard to debug==</li>
    </ul>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Model building
</span><span class="n">inputs</span> <span class="o">=</span> <span class="n">Input</span><span class="p">(</span><span class="n">shape</span><span class="o">=</span><span class="p">(</span><span class="mi">28</span><span class="p">,</span> <span class="mi">28</span><span class="p">))</span> 
<span class="n">x</span> <span class="o">=</span> <span class="n">Flatten</span><span class="p">()(</span><span class="n">inputs</span><span class="p">)</span> 
<span class="n">x</span> <span class="o">=</span> <span class="n">Dense</span><span class="p">(</span><span class="mi">256</span><span class="p">,</span> <span class="s">"relu"</span><span class="p">)(</span><span class="n">x</span><span class="p">)</span>
<span class="n">x</span> <span class="o">=</span> <span class="n">Dense</span><span class="p">(</span><span class="mi">256</span><span class="p">,</span> <span class="s">"relu"</span><span class="p">)(</span><span class="n">x</span><span class="p">)</span> 
<span class="n">x</span> <span class="o">=</span> <span class="n">Dense</span><span class="p">(</span><span class="mi">256</span><span class="p">,</span> <span class="s">"relu"</span><span class="p">)(</span><span class="n">x</span><span class="p">)</span> 
<span class="n">outputs</span> <span class="o">=</span> <span class="n">Dense</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="s">"softmax"</span><span class="p">)(</span><span class="n">x</span><span class="p">)</span> 

<span class="n">input_data</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">uniform</span><span class="p">([</span><span class="mi">100</span><span class="p">,</span> <span class="mi">28</span><span class="p">,</span> <span class="mi">28</span><span class="p">])</span>

<span class="c1"># Eager Execution, by default
</span><span class="n">eager_model</span> <span class="o">=</span> <span class="n">Model</span><span class="p">(</span><span class="n">inputs</span><span class="o">=</span><span class="n">inputs</span><span class="p">,</span> <span class="n">outputs</span><span class="o">=</span><span class="n">outputs</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Eager time:"</span><span class="p">,</span> <span class="n">timeit</span><span class="p">.</span><span class="n">timeit</span><span class="p">(</span><span class="k">lambda</span><span class="p">:</span> <span class="n">eager_model</span><span class="p">(</span><span class="n">input_data</span><span class="p">),</span> <span class="n">number</span><span class="o">=</span><span class="mi">10000</span><span class="p">))</span>

<span class="c1">#Graph Execution 
</span><span class="n">graph_model</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">function</span><span class="p">(</span><span class="n">eager_model</span><span class="p">)</span> <span class="c1"># Wrap the model with tf.function 
</span><span class="k">print</span><span class="p">(</span><span class="s">"Graph time:"</span><span class="p">,</span> <span class="n">timeit</span><span class="p">.</span><span class="n">timeit</span><span class="p">(</span><span class="k">lambda</span><span class="p">:</span> <span class="n">graph_model</span><span class="p">(</span><span class="n">input_data</span><span class="p">),</span> <span class="n">number</span><span class="o">=</span><span class="mi">10000</span><span class="p">))</span>
<span class="s">"""
Eager time: 21.913783847000104
Graph time: 6.057469765000064
"""</span>
</code></pre></div></div>

<h2 id="keras">Keras</h2>

<p>Keras has faster performance</p>

<ul>
  <li>backed by TensorFlow, so <code class="language-plaintext highlighter-rouge">Keras </code>is a <strong>high level API</strong></li>
  <li>easier to use than raw TensorFlow</li>
</ul>

<p>Since <code class="language-plaintext highlighter-rouge">keras</code> is like a subclass of <code class="language-plaintext highlighter-rouge">tensorflow</code>, there is no “basics” per se.</p>

<h3 id="sequential-model">Sequential Model</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">tensorflow</span> <span class="k">as</span> <span class="n">tf</span>
<span class="kn">from</span> <span class="nn">tensorflow</span> <span class="kn">import</span> <span class="n">keras</span>
<span class="kn">from</span> <span class="nn">tensorflow.keras</span> <span class="kn">import</span> <span class="n">layers</span>
<span class="kn">from</span> <span class="nn">keras.layers</span> <span class="kn">import</span> <span class="n">Flatten</span><span class="p">,</span> <span class="n">Dense</span> <span class="c1"># Dense layer is a normal NN layer
</span><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">datetime</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
</code></pre></div></div>

<p>note that we imported <code class="language-plaintext highlighter-rouge">keras</code> from <code class="language-plaintext highlighter-rouge">tensorflow</code></p>

<p>We will use <code class="language-plaintext highlighter-rouge">Sequential</code>:</p>

<ul>
  <li>architecture is basically like a list</li>
  <li>output of previous will be input of next</li>
</ul>

<p>A Sequential model is <strong>not</strong> appropriate when:</p>

<ul>
  <li>Your model has multiple inputs or multiple outputs</li>
  <li>Any of your layers has multiple inputs or multiple outputs</li>
  <li>You need to do layer sharing</li>
  <li>You want non-linear topology (e.g. a residual connection, a multi-branch model)</li>
</ul>

<p>For dealing with these cases, Keras offers a Functional API as well. This handles non-linear topologies, shared layers and even multiple inputs or outputs.</p>

<ul>
  <li>Read more here: https://keras.io/guides/functional_api/</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">keras.models</span> <span class="kn">import</span> <span class="n">Sequential</span>
<span class="n">keras</span><span class="p">.</span><span class="n">backend</span><span class="p">.</span><span class="n">clear_session</span><span class="p">()</span>
</code></pre></div></div>

<blockquote>
  <p>More information on <code class="language-plaintext highlighter-rouge">Keras </code>layers: https://keras.io/api/layers/</p>

  <p>Look into <code class="language-plaintext highlighter-rouge">Keras </code>models: https://keras.io/api/models/</p>
</blockquote>

<p>Now let us <strong>prepare the data</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="n">x_train</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">x_test</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
<span class="s">"""
(60000, 28, 28)
(10000, 28, 28)
"""</span>
<span class="n">x_train</span> <span class="o">=</span> <span class="n">x_train</span><span class="p">.</span><span class="n">astype</span><span class="p">(</span><span class="s">'float32'</span><span class="p">)</span> <span class="o">/</span> <span class="mf">255.</span> <span class="c1"># "normalizing it"
</span><span class="n">x_test</span> <span class="o">=</span> <span class="n">x_test</span><span class="p">.</span><span class="n">astype</span><span class="p">(</span><span class="s">'float32'</span><span class="p">)</span> <span class="o">/</span> <span class="mf">255.</span>
</code></pre></div></div>

<p>The four ==most important steps you will use==</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> <span class="n">model</span> <span class="o">=</span> <span class="n">Sequential</span><span class="p">()</span> <span class="c1"># define model
</span>
<span class="o">&gt;</span> <span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">Dense</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="n">input_shape</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="p">,)))</span> <span class="c1"># define architecture
</span>
<span class="o">&gt;</span> <span class="n">model</span><span class="p">.</span><span class="nb">compile</span><span class="p">(...)</span> <span class="c1"># define optimizer
</span>
<span class="o">&gt;</span> <span class="n">model</span><span class="p">.</span><span class="n">fit</span><span class="p">(...)</span> <span class="c1"># fit
</span></code></pre></div></div>

<p>Let us build a 3 layer model:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">model</span><span class="o">=</span> <span class="n">keras</span><span class="p">.</span><span class="n">Sequential</span><span class="p">()</span>
<span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">Flatten</span><span class="p">())</span>
<span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">Dense</span><span class="p">(</span><span class="mi">128</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">'relu'</span><span class="p">,</span> <span class="n">input_shape</span><span class="o">=</span> <span class="n">x_train</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">:]))</span> <span class="c1"># because input will be 28*28=724
</span><span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">Dense</span><span class="p">(</span><span class="mi">128</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">'relu'</span><span class="p">))</span>
<span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">Dense</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">'softmax'</span><span class="p">))</span>

<span class="c1"># add how we want to optimize the weights
</span><span class="n">model</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="n">optimizer</span><span class="o">=</span><span class="s">'adam'</span><span class="p">,</span>
              <span class="n">loss</span><span class="o">=</span><span class="s">'sparse_categorical_crossentropy'</span><span class="p">,</span>
              <span class="n">metrics</span><span class="o">=</span><span class="p">[</span><span class="s">'acc'</span><span class="p">])</span>

<span class="c1"># train
</span><span class="n">history</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">x_train</span><span class="p">,</span>
                    <span class="n">y_train</span><span class="p">,</span>
                    <span class="n">batch_size</span><span class="o">=</span><span class="mi">64</span><span class="p">,</span> <span class="c1"># each weigth update occurs per 64 data
</span>                    <span class="n">epochs</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span>
                    <span class="n">validation_data</span><span class="o">=</span><span class="p">(</span><span class="n">x_test</span><span class="p">,</span> <span class="n">y_test</span><span class="p">))</span>
</code></pre></div></div>

<p>where:</p>

<ul>
  <li>Keras optimizers: https://keras.io/api/optimizers/</li>
  <li>Keras Losses: https://keras.io/api/losses/</li>
</ul>

<p>the <code class="language-plaintext highlighter-rouge">model</code> and <code class="language-plaintext highlighter-rouge">history</code> variables are <strong>important</strong>.</p>

<ul>
  <li>
    <p>save/load/visualize the model</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">model</span><span class="p">.</span><span class="n">save</span><span class="p">(</span><span class="s">'mnist_recognition.model'</span><span class="p">)</span> <span class="c1"># save
</span>   
<span class="n">loaded_model</span><span class="o">=</span> <span class="n">keras</span><span class="p">.</span><span class="n">models</span><span class="p">.</span><span class="n">load_model</span><span class="p">(</span><span class="s">'mnist_recognition.model'</span><span class="p">)</span> <span class="c1"># load
</span>  
<span class="n">predictions</span> <span class="o">=</span> <span class="n">loaded_model</span><span class="p">.</span><span class="n">predict</span><span class="p">(</span><span class="n">x_test</span><span class="p">)</span> <span class="c1"># predict
</span></code></pre></div>    </div>

    <p>visualize</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">keras</span><span class="p">.</span><span class="n">utils</span><span class="p">.</span><span class="n">plot_model</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="s">"mnist_model.png"</span><span class="p">,</span> <span class="n">show_shapes</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</code></pre></div>    </div>

    <p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127211241339.png" alt="image-20220127211241339" style="zoom:67%;" /></p>
  </li>
  <li>
    <p>plotting model performance overtime</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">history</span><span class="p">.</span><span class="n">history</span><span class="p">[</span><span class="s">'acc'</span><span class="p">])</span>
<span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">history</span><span class="p">.</span><span class="n">history</span><span class="p">[</span><span class="s">'val_acc'</span><span class="p">])</span>
<span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">'Model accuracy'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'Accuracy'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'Epoch'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">legend</span><span class="p">([</span><span class="s">'Train'</span><span class="p">,</span> <span class="s">'Test'</span><span class="p">],</span> <span class="n">loc</span><span class="o">=</span><span class="s">'upper left'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
  
<span class="c1"># Plot training &amp; validation loss values
</span><span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">history</span><span class="p">.</span><span class="n">history</span><span class="p">[</span><span class="s">'loss'</span><span class="p">])</span>
<span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">history</span><span class="p">.</span><span class="n">history</span><span class="p">[</span><span class="s">'val_loss'</span><span class="p">])</span>
<span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">'Model loss'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'Loss'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'Epoch'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">legend</span><span class="p">([</span><span class="s">'Train'</span><span class="p">,</span> <span class="s">'Test'</span><span class="p">],</span> <span class="n">loc</span><span class="o">=</span><span class="s">'upper left'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div>    </div>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Acc</th>
          <th style="text-align: center">Loss</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127211406254.png" alt="image-20220127211406254" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127211415578.png" alt="image-20220127211415578" /></td>
        </tr>
      </tbody>
    </table>

    <p>where it is clear that test performance has stopped improving pretty much after the 1st epoch</p>
  </li>
</ul>

<h3 id="callbacks">Callbacks</h3>

<p>Reading: https://keras.io/api/callbacks/</p>

<p>A callback is an object that can <strong>perform actions at various stages of training</strong> (e.g. at the start or end of an epoch, before or after a single batch, etc).</p>

<p>You can use callbacks to:</p>

<ul>
  <li>Write TensorBoard logs after every batch of training to monitor your metrics</li>
  <li>Periodically save your model to disk</li>
  <li>Do early stopping</li>
  <li>Get a view on internal states and statistics of a model during training</li>
  <li>…and more</li>
</ul>

<p>Common usages include:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">my_callbacks</span> <span class="o">=</span> <span class="p">[</span>
    <span class="n">tf</span><span class="p">.</span><span class="n">keras</span><span class="p">.</span><span class="n">callbacks</span><span class="p">.</span><span class="n">EarlyStopping</span><span class="p">(</span><span class="n">patience</span><span class="o">=</span><span class="mi">2</span><span class="p">),</span>
    <span class="n">tf</span><span class="p">.</span><span class="n">keras</span><span class="p">.</span><span class="n">callbacks</span><span class="p">.</span><span class="n">ModelCheckpoint</span><span class="p">(</span><span class="n">filepath</span><span class="o">=</span><span class="s">'model.{epoch:02d}-{val_loss:.2f}.h5'</span><span class="p">),</span>
    <span class="n">tf</span><span class="p">.</span><span class="n">keras</span><span class="p">.</span><span class="n">callbacks</span><span class="p">.</span><span class="n">TensorBoard</span><span class="p">(</span><span class="n">log_dir</span><span class="o">=</span><span class="s">'./logs'</span><span class="p">),</span>
<span class="p">]</span>
<span class="n">model</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">dataset</span><span class="p">,</span> <span class="n">epochs</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">callbacks</span><span class="o">=</span><span class="n">my_callbacks</span><span class="p">)</span>
</code></pre></div></div>

<h4 id="tensorboard">TensorBoard</h4>

<p>TensorBoard is a visualization tool provided with TensorFlow. This callback logs events for TensorBoard, including:</p>

<ul>
  <li>
    <p>Metrics summary plots</p>
  </li>
  <li>
    <p>Training graph visualization</p>
  </li>
</ul>

<blockquote>
  <p><strong>Note</strong></p>

  <ul>
    <li>
      <p>The exclamation mark <code class="language-plaintext highlighter-rouge">!</code> is used for executing commands from the uderlying operating system; here is an example using WIndows <code class="language-plaintext highlighter-rouge">dir</code>:</p>

      <div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">!</span><span class="nb">dir</span>
<span class="c1"># result:
</span><span class="n">Volume</span> <span class="ow">in</span> <span class="n">drive</span> <span class="n">C</span> <span class="n">has</span> <span class="n">no</span> <span class="n">label</span><span class="p">.</span>
 <span class="n">Volume</span> <span class="n">Serial</span> <span class="n">Number</span> <span class="ow">is</span> <span class="mi">52</span><span class="n">EA</span><span class="o">-</span><span class="n">B90C</span>
  
 <span class="n">Directory</span> <span class="n">of</span> <span class="n">C</span><span class="p">:</span>\<span class="n">Users</span>\<span class="n">Root</span>
  
<span class="mi">27</span><span class="o">/</span><span class="mi">11</span><span class="o">/</span><span class="mi">2018</span>  <span class="mi">13</span><span class="p">:</span><span class="mi">08</span>    <span class="o">&lt;</span><span class="n">DIR</span><span class="o">&gt;</span>          <span class="p">.</span>
<span class="mi">27</span><span class="o">/</span><span class="mi">11</span><span class="o">/</span><span class="mi">2018</span>  <span class="mi">13</span><span class="p">:</span><span class="mi">08</span>    <span class="o">&lt;</span><span class="n">DIR</span><span class="o">&gt;</span>          <span class="p">..</span>
<span class="mi">23</span><span class="o">/</span><span class="mi">08</span><span class="o">/</span><span class="mi">2016</span>  <span class="mi">11</span><span class="p">:</span><span class="mi">00</span>             <span class="mi">2</span><span class="p">,</span><span class="mi">258</span> <span class="p">.</span><span class="n">adalcache</span>
<span class="mi">12</span><span class="o">/</span><span class="mi">09</span><span class="o">/</span><span class="mi">2016</span>  <span class="mi">18</span><span class="p">:</span><span class="mi">06</span>    <span class="o">&lt;</span><span class="n">DIR</span><span class="o">&gt;</span>          <span class="p">.</span><span class="n">anaconda</span>
</code></pre></div>      </div>

      <p>you can even do crazy things like</p>

      <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">In</span> <span class="p">[</span><span class="mi">4</span><span class="p">]:</span> <span class="n">contents</span> <span class="o">=</span> <span class="err">!</span><span class="n">ls</span>
  
<span class="n">In</span> <span class="p">[</span><span class="mi">5</span><span class="p">]:</span> <span class="k">print</span><span class="p">(</span><span class="n">contents</span><span class="p">)</span>
<span class="p">[</span><span class="s">'myproject.txt'</span><span class="p">]</span>
  
<span class="n">In</span> <span class="p">[</span><span class="mi">6</span><span class="p">]:</span> <span class="n">directory</span> <span class="o">=</span> <span class="err">!</span><span class="n">pwd</span>
  
<span class="n">In</span> <span class="p">[</span><span class="mi">7</span><span class="p">]:</span> <span class="k">print</span><span class="p">(</span><span class="n">directory</span><span class="p">)</span>
<span class="p">[</span><span class="s">'/Users/jakevdp/notebooks/tmp/myproject'</span><span class="p">]</span>
</code></pre></div>      </div>
    </li>
    <li>
      <p>the <code class="language-plaintext highlighter-rouge">%</code> mark is for <strong>magic functions</strong></p>

      <ul>
        <li>
          <p>basically a way to provide richer output than simple CLI, but also allows for customization.</p>

          <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">%</span><span class="n">load_ext</span> <span class="n">tensorboard</span> <span class="c1"># allows for magic functions in tensorboard
</span>    
<span class="c1"># do something
</span>    
<span class="o">%</span><span class="n">tensorboard</span> <span class="o">--</span><span class="n">logdir</span> <span class="n">logs</span><span class="o">/</span><span class="n">fit</span>
</code></pre></div>          </div>
        </li>
        <li>
          <p>Besides <code class="language-plaintext highlighter-rouge">%cd</code>, other available shell-like magic functions are <code class="language-plaintext highlighter-rouge">%cat</code>, <code class="language-plaintext highlighter-rouge">%cp</code>, <code class="language-plaintext highlighter-rouge">%env</code>, <code class="language-plaintext highlighter-rouge">%ls</code>, <code class="language-plaintext highlighter-rouge">%man</code>, <code class="language-plaintext highlighter-rouge">%mkdir</code>, <code class="language-plaintext highlighter-rouge">%more</code>, <code class="language-plaintext highlighter-rouge">%mv</code>, <code class="language-plaintext highlighter-rouge">%pwd</code>, <code class="language-plaintext highlighter-rouge">%rm</code>, and <code class="language-plaintext highlighter-rouge">%rmdir</code>, any of which can be used without the <code class="language-plaintext highlighter-rouge">%</code> sign if <code class="language-plaintext highlighter-rouge">automagic</code> is on. This makes it so that you can almost treat the IPython prompt as if it’s a normal shell:</p>

          <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">In</span> <span class="p">[</span><span class="mi">16</span><span class="p">]:</span> <span class="n">mkdir</span> <span class="n">tmp</span>
                                                                                                                                                                                                                                                                                                                                                                                                                
<span class="n">In</span> <span class="p">[</span><span class="mi">17</span><span class="p">]:</span> <span class="n">ls</span>
<span class="n">myproject</span><span class="p">.</span><span class="n">txt</span>  <span class="n">tmp</span><span class="o">/</span>
                                                                                                                                                                                                                                                                                                                                                                                                                
<span class="n">In</span> <span class="p">[</span><span class="mi">18</span><span class="p">]:</span> <span class="n">cp</span> <span class="n">myproject</span><span class="p">.</span><span class="n">txt</span> <span class="n">tmp</span><span class="o">/</span>
                                                                                                                                                                                                                                                                                                                                                                                                                
<span class="n">In</span> <span class="p">[</span><span class="mi">19</span><span class="p">]:</span> <span class="n">ls</span> <span class="n">tmp</span>
<span class="n">myproject</span><span class="p">.</span><span class="n">txt</span>
                                                                                                                                                                                                                                                                                                                                                                                                                
<span class="n">In</span> <span class="p">[</span><span class="mi">20</span><span class="p">]:</span> <span class="n">rm</span> <span class="o">-</span><span class="n">r</span> <span class="n">tmp</span>
</code></pre></div>          </div>
        </li>
      </ul>
    </li>
  </ul>
</blockquote>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">%</span><span class="n">load_ext</span> <span class="n">tensorboard</span>
<span class="c1"># Clear any logs from previous runs
</span><span class="err">!</span><span class="n">rm</span> <span class="o">-</span><span class="n">rf</span> <span class="p">.</span><span class="o">/</span><span class="n">logs</span><span class="o">/</span> 
</code></pre></div></div>

<p>Then we configure:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">log_dir</span><span class="o">=</span><span class="s">"logs/fit/"</span> <span class="o">+</span> <span class="n">datetime</span><span class="p">.</span><span class="n">datetime</span><span class="p">.</span><span class="n">now</span><span class="p">().</span><span class="n">strftime</span><span class="p">(</span><span class="s">"%Y%m%d-%H%M%S"</span><span class="p">)</span>
<span class="n">tensorboard_callback</span> <span class="o">=</span> <span class="n">keras</span><span class="p">.</span><span class="n">callbacks</span><span class="p">.</span><span class="n">TensorBoard</span><span class="p">(</span><span class="n">log_dir</span><span class="o">=</span><span class="n">log_dir</span><span class="p">,</span> <span class="n">histogram_freq</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="n">model</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="n">optimizer</span><span class="o">=</span><span class="s">'adam'</span><span class="p">,</span>
              <span class="n">loss</span><span class="o">=</span><span class="s">'sparse_categorical_crossentropy'</span><span class="p">,</span>
              <span class="n">metrics</span><span class="o">=</span><span class="p">[</span><span class="s">'acc'</span><span class="p">])</span>

<span class="n">model</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">x_train</span><span class="p">,</span> 
          <span class="n">y</span><span class="o">=</span><span class="n">y_train</span><span class="p">,</span>
          <span class="n">batch_size</span><span class="o">=</span><span class="mi">64</span><span class="p">,</span>
          <span class="n">epochs</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span> 
          <span class="n">validation_data</span><span class="o">=</span><span class="p">(</span><span class="n">x_test</span><span class="p">,</span> <span class="n">y_test</span><span class="p">),</span> 
          <span class="n">callbacks</span><span class="o">=</span><span class="p">[</span><span class="n">tensorboard_callback</span><span class="p">])</span> <span class="c1"># specify callback
</span></code></pre></div></div>

<p>Finally:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">%</span><span class="n">tensorboard</span> <span class="o">--</span><span class="n">logdir</span> <span class="n">logs</span><span class="o">/</span><span class="n">fit</span>
</code></pre></div></div>

<p><img src="/lectures/images/2022-12-08-COMS4995_Deep_Learning_part1/image-20220127211824150.png" alt="image-20220127211824150" /></p>

<p>note that:</p>

<ul>
  <li>if you are using VSCode, you need to switch your cell output format to <code class="language-plaintext highlighter-rouge">text/html</code> so this thing renders correctly</li>
</ul>

<h4 id="early-stopping">Early Stopping</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">earlystopping_callback</span> <span class="o">=</span> <span class="n">keras</span><span class="p">.</span><span class="n">callbacks</span><span class="p">.</span><span class="n">EarlyStopping</span><span class="p">(</span>
    <span class="n">monitor</span><span class="o">=</span><span class="s">'val_loss'</span><span class="p">,</span> <span class="c1"># which field in `history` you are looking at
</span>    <span class="n">patience</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="c1"># if stays the same for 2 epochs, stop
</span>    <span class="n">verbose</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">mode</span><span class="o">=</span><span class="s">'auto'</span><span class="p">,</span> <span class="n">baseline</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">restore_best_weights</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</code></pre></div></div>

<p>Then using this callback</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">model</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="n">optimizer</span><span class="o">=</span><span class="s">'adam'</span><span class="p">,</span>
              <span class="n">loss</span><span class="o">=</span><span class="s">'sparse_categorical_crossentropy'</span><span class="p">,</span>
              <span class="n">metrics</span><span class="o">=</span><span class="p">[</span><span class="s">'acc'</span><span class="p">])</span>

<span class="n">history</span><span class="o">=</span><span class="n">model</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">x_train</span><span class="p">,</span> 
            <span class="n">y</span><span class="o">=</span><span class="n">y_train</span><span class="p">,</span>
            <span class="n">batch_size</span><span class="o">=</span><span class="mi">64</span><span class="p">,</span>
            <span class="n">epochs</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span> 
            <span class="n">validation_data</span><span class="o">=</span><span class="p">(</span><span class="n">x_test</span><span class="p">,</span> <span class="n">y_test</span><span class="p">),</span> 
            <span class="n">callbacks</span><span class="o">=</span><span class="p">[</span><span class="n">tensorboard_callback</span><span class="p">,</span> <span class="n">earlystopping_callback</span><span class="p">])</span>
</code></pre></div></div>

<h3 id="autokeras">AutoKeras</h3>

<p>An even <strong>higher level than <code class="language-plaintext highlighter-rouge">keras</code></strong></p>

<ul>
  <li>encapsulates even some basic preprocessing</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">tensorflow</span> <span class="k">as</span> <span class="n">tf</span>
<span class="kn">from</span> <span class="nn">tensorflow.keras.datasets</span> <span class="kn">import</span> <span class="n">mnist</span>

<span class="kn">import</span> <span class="nn">autokeras</span> <span class="k">as</span> <span class="n">ak</span>
</code></pre></div></div>

<p>then the data:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">x_train</span><span class="p">,</span> <span class="n">y_train</span><span class="p">),</span> <span class="p">(</span><span class="n">x_test</span><span class="p">,</span> <span class="n">y_test</span><span class="p">)</span> <span class="o">=</span> <span class="n">mnist</span><span class="p">.</span><span class="n">load_data</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="n">x_train</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>  
<span class="k">print</span><span class="p">(</span><span class="n">y_train</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span> 
</code></pre></div></div>

<p>finally, the model</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Initialize the image classifier.
# didn't mention what architecture or optimizer to use!
</span><span class="n">clf</span> <span class="o">=</span> <span class="n">ak</span><span class="p">.</span><span class="n">ImageClassifier</span><span class="p">(</span><span class="n">overwrite</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">max_trials</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span> <span class="c1"># max #models to try
</span>
<span class="c1"># Feed the image classifier with training data.
</span><span class="n">clf</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">x_train</span><span class="p">,</span> <span class="n">y_train</span><span class="p">,</span> <span class="n">epochs</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>


<span class="c1"># Predict with the best model.
</span><span class="n">predicted_y</span> <span class="o">=</span> <span class="n">clf</span><span class="p">.</span><span class="n">predict</span><span class="p">(</span><span class="n">x_test</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">predicted_y</span><span class="p">)</span>


<span class="c1"># Evaluate the best model with testing data.
</span><span class="k">print</span><span class="p">(</span><span class="n">clf</span><span class="p">.</span><span class="n">evaluate</span><span class="p">(</span><span class="n">x_test</span><span class="p">,</span> <span class="n">y_test</span><span class="p">))</span>
</code></pre></div></div>

<p><strong>Validating</strong></p>

<ul>
  <li>By default, AutoKeras use the last 20% of training data as validation data. As shown in the example below, you can use <code class="language-plaintext highlighter-rouge">validation_split </code>to specify the percentage.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">clf</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span>
    <span class="n">x_train</span><span class="p">,</span>
    <span class="n">y_train</span><span class="p">,</span>
    <span class="c1"># Split the training data and use the last 15% as validation data.
</span>    <span class="n">validation_split</span><span class="o">=</span><span class="mf">0.15</span><span class="p">,</span>
    <span class="n">epochs</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span>
<span class="p">)</span>

<span class="c1"># Predict with the best model.
</span><span class="n">predicted_y</span> <span class="o">=</span> <span class="n">clf</span><span class="p">.</span><span class="n">predict</span><span class="p">(</span><span class="n">x_test</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">predicted_y</span><span class="p">)</span>


<span class="c1"># Evaluate the best model with testing data.
</span><span class="k">print</span><span class="p">(</span><span class="n">clf</span><span class="p">.</span><span class="n">evaluate</span><span class="p">(</span><span class="n">x_test</span><span class="p">,</span> <span class="n">y_test</span><span class="p">))</span>
</code></pre></div></div>

<h2 id="cnn-with-tf">CNN with TF</h2>

<p>For dense neural network it actually works on MNIST</p>

<ul>
  <li>because the features that are encoded in the images are <strong>easy representations</strong></li>
</ul>

<p>Then if we check this on CIFAR10</p>

<ul>
  <li>simple NN doesn’t work anymore as the feature “extraction from previous layers” is not very representative</li>
</ul>

<p>Remember to use transfer learning for using those models</p>

<ul>
  <li>i.e. train on the last layer</li>
  <li>e.g. use VGG16 on tumor classification</li>
</ul>

<h2 id="gnn-withdglai">GNN with<code class="language-plaintext highlighter-rouge">dgl.ai</code></h2>

<p><code class="language-plaintext highlighter-rouge">dgl.ai</code> (deep graph library), a framework that allows us to implement, experiment, and run graph machine learning techniques. The tutorial will explore how nodes and edges are represented as well as features of edges and nodes</p>

<h2 id="pyro">Pyro</h2>

<p>A framework with pytorch as backend to do probablistic programming.</p>

<p>The idea is that you can do <strong>probability computations</strong> such as $P(x\vert z)$ by sampling $z$ from some prior distirbution of your choice.</p>

<h2 id="gan">GAN</h2>

<p>Basically read the following link https://www.tensorflow.org/tutorials/generative/dcgan, and the real exapmles below</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">discriminator</span><span class="p">(</span><span class="n">input_shape</span><span class="o">=</span><span class="p">(</span><span class="mi">28</span><span class="p">,</span><span class="mi">28</span><span class="p">,</span><span class="mi">1</span><span class="p">)):</span>
  <span class="s">'''INSERT YOUR CODE FOR THE MODEL DEFINITION BASED ON THE DESCRIPTION GIVEN ABOVE'''</span>
  <span class="n">model</span> <span class="o">=</span> <span class="n">Sequential</span><span class="p">()</span>
  <span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">InputLayer</span><span class="p">(</span><span class="n">input_shape</span><span class="o">=</span><span class="n">input_shape</span><span class="p">))</span>
  <span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">Conv2D</span><span class="p">(</span><span class="mi">64</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="n">strides</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)))</span>
  <span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">LeakyReLU</span><span class="p">(</span><span class="n">alpha</span><span class="o">=</span><span class="mf">0.2</span><span class="p">))</span>
  <span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">Dropout</span><span class="p">(</span><span class="mf">0.4</span><span class="p">))</span>
  <span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">Conv2D</span><span class="p">(</span><span class="mi">64</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="n">strides</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">)))</span>
  <span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">LeakyReLU</span><span class="p">(</span><span class="n">alpha</span><span class="o">=</span><span class="mf">0.2</span><span class="p">))</span>
  <span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">Dropout</span><span class="p">(</span><span class="mf">0.4</span><span class="p">))</span>
  <span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">Flatten</span><span class="p">())</span>
  <span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">Dense</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">"sigmoid"</span><span class="p">))</span>

  <span class="c1">#Model compilation
</span>  <span class="n">opt</span> <span class="o">=</span> <span class="n">Adam</span><span class="p">(</span><span class="n">lr</span><span class="o">=</span><span class="mf">0.0002</span><span class="p">,</span> <span class="n">beta_1</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span>
  <span class="n">model</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="n">loss</span><span class="o">=</span><span class="s">'binary_crossentropy'</span><span class="p">,</span> <span class="n">optimizer</span><span class="o">=</span><span class="n">opt</span><span class="p">,</span> <span class="n">metrics</span><span class="o">=</span><span class="p">[</span><span class="s">'accuracy'</span><span class="p">])</span>
  <span class="k">return</span> <span class="n">model</span>

<span class="k">def</span> <span class="nf">generator</span><span class="p">(</span><span class="n">latent_dim</span><span class="p">):</span>
	<span class="n">model</span> <span class="o">=</span> <span class="n">Sequential</span><span class="p">()</span>
	<span class="n">n_nodes</span> <span class="o">=</span> <span class="mi">128</span> <span class="o">*</span> <span class="mi">7</span> <span class="o">*</span> <span class="mi">7</span>
	<span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">Dense</span><span class="p">(</span><span class="n">n_nodes</span><span class="p">,</span> <span class="n">input_dim</span><span class="o">=</span><span class="n">latent_dim</span><span class="p">))</span>
	<span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">LeakyReLU</span><span class="p">(</span><span class="n">alpha</span><span class="o">=</span><span class="mf">0.2</span><span class="p">))</span>
	<span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">Reshape</span><span class="p">((</span><span class="mi">7</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">128</span><span class="p">)))</span>
	<span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">Conv2DTranspose</span><span class="p">(</span><span class="mi">128</span><span class="p">,</span> <span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">4</span><span class="p">),</span> <span class="n">strides</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span> <span class="n">padding</span><span class="o">=</span><span class="s">'same'</span><span class="p">))</span>
	<span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">LeakyReLU</span><span class="p">(</span><span class="n">alpha</span><span class="o">=</span><span class="mf">0.2</span><span class="p">))</span>
	<span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">Conv2DTranspose</span><span class="p">(</span><span class="mi">128</span><span class="p">,</span> <span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">4</span><span class="p">),</span> <span class="n">strides</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span> <span class="n">padding</span><span class="o">=</span><span class="s">'same'</span><span class="p">))</span>
	<span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">LeakyReLU</span><span class="p">(</span><span class="n">alpha</span><span class="o">=</span><span class="mf">0.2</span><span class="p">))</span>
	<span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">Conv2D</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">7</span><span class="p">),</span> <span class="n">activation</span><span class="o">=</span><span class="s">'sigmoid'</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="s">'same'</span><span class="p">))</span>
	<span class="k">return</span> <span class="n">model</span>

<span class="k">def</span> <span class="nf">generate_latent_points</span><span class="p">(</span><span class="n">latent_dim</span><span class="p">,</span> <span class="n">n_samples</span><span class="p">):</span>
	<span class="n">X</span> <span class="o">=</span> <span class="n">rand</span><span class="p">(</span><span class="n">latent_dim</span> <span class="o">*</span> <span class="n">n_samples</span><span class="p">)</span>
	<span class="n">X</span> <span class="o">=</span> <span class="n">X</span><span class="p">.</span><span class="n">reshape</span><span class="p">((</span><span class="n">n_samples</span><span class="p">,</span> <span class="n">latent_dim</span><span class="p">))</span>
	<span class="k">return</span> <span class="n">X</span>

<span class="c1"># use the generator to generate n fake examples with class labels
</span><span class="k">def</span> <span class="nf">generate_fake_samples</span><span class="p">(</span><span class="n">g_model</span><span class="p">,</span> <span class="n">latent_dim</span><span class="p">,</span> <span class="n">n_samples</span><span class="p">):</span>
	<span class="n">x_input</span> <span class="o">=</span> <span class="n">generate_latent_points</span><span class="p">(</span><span class="n">latent_dim</span><span class="p">,</span> <span class="n">n_samples</span><span class="p">)</span>
	<span class="c1">#Predicting outputs
</span>	<span class="n">X</span> <span class="o">=</span> <span class="n">g_model</span><span class="p">.</span><span class="n">predict</span><span class="p">(</span><span class="n">x_input</span><span class="p">)</span>
	<span class="n">y</span> <span class="o">=</span> <span class="n">zeros</span><span class="p">((</span><span class="n">n_samples</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>
	<span class="k">return</span> <span class="n">X</span><span class="p">,</span> <span class="n">y</span>

<span class="k">def</span> <span class="nf">generate_real_samples</span><span class="p">(</span><span class="n">dataset</span><span class="p">,</span> <span class="n">n_samples</span><span class="p">):</span>
  <span class="c1">#Choosing random instances
</span>	<span class="n">ix</span> <span class="o">=</span> <span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">dataset</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">n_samples</span><span class="p">)</span>
	<span class="c1">#Retrieving Images
</span>	<span class="n">X</span> <span class="o">=</span> <span class="n">dataset</span><span class="p">[</span><span class="n">ix</span><span class="p">]</span>
	<span class="c1">#Generating class labels
</span>	<span class="n">y</span> <span class="o">=</span> <span class="n">ones</span><span class="p">((</span><span class="n">n_samples</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>
	<span class="k">return</span> <span class="n">X</span><span class="p">,</span> <span class="n">y</span>

<span class="k">def</span> <span class="nf">define_gan</span><span class="p">(</span><span class="n">g_model</span><span class="p">,</span> <span class="n">d_model</span><span class="p">):</span>
	<span class="n">d_model</span><span class="p">.</span><span class="n">trainable</span> <span class="o">=</span> <span class="bp">False</span>
	<span class="n">model</span> <span class="o">=</span> <span class="n">Sequential</span><span class="p">()</span>
	<span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">g_model</span><span class="p">)</span>
	<span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">d_model</span><span class="p">)</span>
	<span class="n">opt</span> <span class="o">=</span> <span class="n">Adam</span><span class="p">(</span><span class="n">lr</span><span class="o">=</span><span class="mf">0.0002</span><span class="p">,</span> <span class="n">beta_1</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span>
	<span class="n">model</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="n">loss</span><span class="o">=</span><span class="s">'binary_crossentropy'</span><span class="p">,</span> <span class="n">optimizer</span><span class="o">=</span><span class="n">opt</span><span class="p">)</span>
	<span class="k">return</span> <span class="n">model</span>
</code></pre></div></div>

<p>Then training</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">train</span><span class="p">(</span><span class="n">g_model</span><span class="p">,</span> <span class="n">d_model</span><span class="p">,</span> <span class="n">gan_model</span><span class="p">,</span> <span class="n">dataset</span><span class="p">,</span> <span class="n">latent_dim</span><span class="p">,</span> <span class="n">n_epochs</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span> <span class="n">n_batch</span><span class="o">=</span><span class="mi">256</span><span class="p">):</span>
	<span class="n">bat_per_epo</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">dataset</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">/</span> <span class="n">n_batch</span><span class="p">)</span>
	<span class="n">half_batch</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">n_batch</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span>
	<span class="n">num_steps</span> <span class="o">=</span> <span class="n">n_epochs</span> <span class="o">*</span> <span class="n">bat_per_epo</span>
	<span class="n">pbar</span> <span class="o">=</span> <span class="n">tqdm</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="n">num_steps</span><span class="p">))</span>
	<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n_epochs</span><span class="p">):</span>
		<span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">bat_per_epo</span><span class="p">):</span>
			<span class="n">X_real</span><span class="p">,</span> <span class="n">y_real</span> <span class="o">=</span> <span class="n">generate_real_samples</span><span class="p">(</span><span class="n">dataset</span><span class="p">,</span> <span class="n">half_batch</span><span class="p">)</span>
			<span class="n">X_fake</span><span class="p">,</span> <span class="n">y_fake</span> <span class="o">=</span> <span class="n">generate_fake_samples</span><span class="p">(</span><span class="n">g_model</span><span class="p">,</span> <span class="n">latent_dim</span><span class="p">,</span> <span class="n">half_batch</span><span class="p">)</span>
			<span class="n">X</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="n">vstack</span><span class="p">((</span><span class="n">X_real</span><span class="p">,</span> <span class="n">X_fake</span><span class="p">)),</span> <span class="n">vstack</span><span class="p">((</span><span class="n">y_real</span><span class="p">,</span> <span class="n">y_fake</span><span class="p">))</span>
			<span class="n">d_loss</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">d_model</span><span class="p">.</span><span class="n">train_on_batch</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span> <span class="c1"># first train discriminator
</span>			<span class="n">X_gan</span> <span class="o">=</span> <span class="n">generate_latent_points</span><span class="p">(</span><span class="n">latent_dim</span><span class="p">,</span> <span class="n">n_batch</span><span class="p">)</span>
			<span class="n">y_gan</span> <span class="o">=</span> <span class="n">ones</span><span class="p">((</span><span class="n">n_batch</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>
			<span class="n">g_loss</span> <span class="o">=</span> <span class="n">gan_model</span><span class="p">.</span><span class="n">train_on_batch</span><span class="p">(</span><span class="n">X_gan</span><span class="p">,</span> <span class="n">y_gan</span><span class="p">)</span> <span class="c1"># fix discriminator and train generator
</span>			
			<span class="c1"># print('&gt;%d, %d/%d, d=%.3f, g=%.3f' % (i+1, j+1, bat_per_epo, d_loss, g_loss))
</span>			<span class="n">pbar</span><span class="p">.</span><span class="n">update</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
			<span class="n">pbar</span><span class="p">.</span><span class="n">set_description</span><span class="p">(</span><span class="sa">f</span><span class="s">"[Epoch </span><span class="si">{</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="si">}</span><span class="s">/</span><span class="si">{</span><span class="n">n_epochs</span><span class="si">}</span><span class="s">] Step </span><span class="si">{</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="si">}</span><span class="s">/</span><span class="si">{</span><span class="n">bat_per_epo</span><span class="si">}</span><span class="s">: d_loss=</span><span class="si">{</span><span class="n">d_loss</span><span class="si">:</span><span class="p">.</span><span class="mi">3</span><span class="n">f</span><span class="si">}</span><span class="s"> g_loss=</span><span class="si">{</span><span class="n">g_loss</span><span class="si">:</span><span class="p">.</span><span class="mi">3</span><span class="n">f</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>

<span class="n">latent_dim</span> <span class="o">=</span> <span class="mi">100</span>
<span class="n">d_model</span> <span class="o">=</span> <span class="n">discriminator</span><span class="p">()</span>
<span class="n">g_model</span> <span class="o">=</span> <span class="n">generator</span><span class="p">(</span><span class="n">latent_dim</span><span class="p">)</span>
<span class="n">gan_model</span> <span class="o">=</span> <span class="n">define_gan</span><span class="p">(</span><span class="n">g_model</span><span class="p">,</span> <span class="n">d_model</span><span class="p">)</span>
<span class="n">dataset</span> <span class="o">=</span> <span class="n">load_real_samples</span><span class="p">()</span>
<span class="n">train</span><span class="p">(</span><span class="n">g_model</span><span class="p">,</span> <span class="n">d_model</span><span class="p">,</span> <span class="n">gan_model</span><span class="p">,</span> <span class="n">dataset</span><span class="p">,</span> <span class="n">latent_dim</span><span class="p">)</span>
</code></pre></div></div>

<h1 id="competitions">Competitions</h1>

<blockquote>
  <p><strong>Object Detection in Haze Link</strong></p>

  <ul>
    <li>http://cvpr2022.ug2challenge.org/track1.html</li>
  </ul>
</blockquote>

<p>basically we need to do:</p>

<ol>
  <li>dehazing an image</li>
  <li>object detection in those images
    <ul>
      <li>predict the bounding box for a vehicles</li>
    </ul>
  </li>
</ol>

<p>Some tipcs:</p>

<ul>
  <li>data augmentation likely needed</li>
</ul>

<hr />

<p>Ideas for <strong>dehazing</strong></p>

<ul>
  <li><strong>Pix2Pix:</strong> Image-to-Image Translation
    <ul>
      <li>Given a training set of unfiltered and filtered image pairs $A : A’$ and a new unfiltered image $B$ the output is a filtered image $B’$ such that the analogy $A:A’::B : B’$ is <strong>maintained</strong></li>
      <li>An input image is mapped to a synthesized image with different properties. The loss function is a combination of the conditional GAN loss with an additional loss term which is a pixel-wise loss that encourages the generator to match the source image</li>
    </ul>
  </li>
  <li>https://arxiv.org/pdf/1912.07015.pdf</li>
  <li>https://link.springer.com/article/10.1007/s11042-021-11442-6</li>
</ul>

<hr />

<p>Ideas for <strong>Object BB Drawing</strong></p>

<ul>
  <li>ViT based</li>
</ul>

<h2 id="detr">DETR</h2>

<p>Object detection (drawing bounding boxes).</p>

<p>Useful resources:</p>

<ul>
  <li>https://www.kaggle.com/code/tanulsingh077/end-to-end-object-detection-with-transformers-detr/notebook</li>
  <li>https://github.com/jasonyux/cvpr_2022 (checkout <code class="language-plaintext highlighter-rouge">models</code> folder)</li>
</ul>

<p><strong>code</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">pathlib</span>
<span class="kn">import</span> <span class="nn">sys</span>
<span class="n">root</span> <span class="o">=</span> <span class="n">pathlib</span><span class="p">.</span><span class="n">Path</span><span class="p">(</span><span class="n">__file__</span><span class="p">).</span><span class="n">parent</span><span class="p">.</span><span class="n">parent</span><span class="p">.</span><span class="n">resolve</span><span class="p">()</span>
<span class="n">sys</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">root</span><span class="p">))</span>

<span class="kn">import</span> <span class="nn">pytorch_lightning</span> <span class="k">as</span> <span class="n">pl</span>
<span class="kn">import</span> <span class="nn">torch</span>
<span class="kn">import</span> <span class="nn">json</span>

<span class="kn">from</span> <span class="nn">transformers</span> <span class="kn">import</span> <span class="n">DetrFeatureExtractor</span>
<span class="kn">from</span> <span class="nn">torch.utils.data</span> <span class="kn">import</span> <span class="n">DataLoader</span>
<span class="kn">from</span> <span class="nn">transformers</span> <span class="kn">import</span> <span class="n">DetrConfig</span><span class="p">,</span> <span class="n">DetrForObjectDetection</span>
<span class="kn">from</span> <span class="nn">tqdm.auto</span> <span class="kn">import</span> <span class="n">tqdm</span>
<span class="kn">from</span> <span class="nn">utils.eval_util</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">from</span> <span class="nn">utils.utils</span> <span class="kn">import</span> <span class="n">save_model_stats</span>
<span class="kn">from</span> <span class="nn">transformers.models.detr.modeling_detr</span> <span class="kn">import</span> <span class="n">ACT2FN</span>
<span class="kn">from</span> <span class="nn">typing</span> <span class="kn">import</span> <span class="n">Optional</span><span class="p">,</span> <span class="n">Tuple</span>


<span class="n">device</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">device</span><span class="p">(</span><span class="s">"cuda"</span><span class="p">)</span>

<span class="n">PRETRAIN</span> <span class="o">=</span> <span class="s">"facebook/detr-resnet-50"</span>

<span class="k">class</span> <span class="nc">DetrAttention</span><span class="p">(</span><span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">Module</span><span class="p">):</span>
	<span class="s">"""
	Multi-headed attention from 'Attention Is All You Need' paper.

	Here, we add position embeddings to the queries and keys (as explained in the DETR paper).
	"""</span>
	<span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span>
		<span class="bp">self</span><span class="p">,</span>
		<span class="n">embed_dim</span><span class="p">:</span> <span class="nb">int</span><span class="p">,</span>
		<span class="n">num_heads</span><span class="p">:</span> <span class="nb">int</span><span class="p">,</span>
		<span class="n">dropout</span><span class="p">:</span> <span class="nb">float</span> <span class="o">=</span> <span class="mf">0.0</span><span class="p">,</span>
		<span class="n">is_decoder</span><span class="p">:</span> <span class="nb">bool</span> <span class="o">=</span> <span class="bp">False</span><span class="p">,</span>
		<span class="n">bias</span><span class="p">:</span> <span class="nb">bool</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span>
	<span class="p">):</span>
		<span class="nb">super</span><span class="p">().</span><span class="n">__init__</span><span class="p">()</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">embed_dim</span> <span class="o">=</span> <span class="n">embed_dim</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">num_heads</span> <span class="o">=</span> <span class="n">num_heads</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">dropout</span> <span class="o">=</span> <span class="n">dropout</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">head_dim</span> <span class="o">=</span> <span class="n">embed_dim</span> <span class="o">//</span> <span class="n">num_heads</span>
		<span class="k">assert</span> <span class="p">(</span>
			<span class="bp">self</span><span class="p">.</span><span class="n">head_dim</span> <span class="o">*</span> <span class="n">num_heads</span> <span class="o">==</span> <span class="bp">self</span><span class="p">.</span><span class="n">embed_dim</span>
		<span class="p">),</span> <span class="sa">f</span><span class="s">"embed_dim must be divisible by num_heads (got `embed_dim`: </span><span class="si">{</span><span class="bp">self</span><span class="p">.</span><span class="n">embed_dim</span><span class="si">}</span><span class="s"> and `num_heads`: </span><span class="si">{</span><span class="n">num_heads</span><span class="si">}</span><span class="s">)."</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">scaling</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">head_dim</span> <span class="o">**</span> <span class="o">-</span><span class="mf">0.5</span>

		<span class="bp">self</span><span class="p">.</span><span class="n">k_proj</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">Linear</span><span class="p">(</span><span class="n">embed_dim</span><span class="p">,</span> <span class="n">embed_dim</span><span class="p">,</span> <span class="n">bias</span><span class="o">=</span><span class="n">bias</span><span class="p">)</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">v_proj</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">Linear</span><span class="p">(</span><span class="n">embed_dim</span><span class="p">,</span> <span class="n">embed_dim</span><span class="p">,</span> <span class="n">bias</span><span class="o">=</span><span class="n">bias</span><span class="p">)</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">q_proj</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">Linear</span><span class="p">(</span><span class="n">embed_dim</span><span class="p">,</span> <span class="n">embed_dim</span><span class="p">,</span> <span class="n">bias</span><span class="o">=</span><span class="n">bias</span><span class="p">)</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">out_proj</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">Linear</span><span class="p">(</span><span class="n">embed_dim</span><span class="p">,</span> <span class="n">embed_dim</span><span class="p">,</span> <span class="n">bias</span><span class="o">=</span><span class="n">bias</span><span class="p">)</span>

	<span class="k">def</span> <span class="nf">_shape</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">tensor</span><span class="p">:</span> <span class="n">torch</span><span class="p">.</span><span class="n">Tensor</span><span class="p">,</span> <span class="n">seq_len</span><span class="p">:</span> <span class="nb">int</span><span class="p">,</span> <span class="n">bsz</span><span class="p">:</span> <span class="nb">int</span><span class="p">):</span>
		<span class="k">return</span> <span class="n">tensor</span><span class="p">.</span><span class="n">view</span><span class="p">(</span><span class="n">bsz</span><span class="p">,</span> <span class="n">seq_len</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">num_heads</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">head_dim</span><span class="p">).</span><span class="n">transpose</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">).</span><span class="n">contiguous</span><span class="p">()</span>

	<span class="k">def</span> <span class="nf">with_pos_embed</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">tensor</span><span class="p">:</span> <span class="n">torch</span><span class="p">.</span><span class="n">Tensor</span><span class="p">,</span> <span class="n">position_embeddings</span><span class="p">:</span> <span class="n">Optional</span><span class="p">[</span><span class="n">torch</span><span class="p">.</span><span class="n">Tensor</span><span class="p">]):</span>
		<span class="k">return</span> <span class="n">tensor</span> <span class="k">if</span> <span class="n">position_embeddings</span> <span class="ow">is</span> <span class="bp">None</span> <span class="k">else</span> <span class="n">tensor</span> <span class="o">+</span> <span class="n">position_embeddings</span>

	<span class="k">def</span> <span class="nf">forward</span><span class="p">(</span>
		<span class="bp">self</span><span class="p">,</span>
		<span class="n">hidden_states</span><span class="p">:</span> <span class="n">torch</span><span class="p">.</span><span class="n">Tensor</span><span class="p">,</span>
		<span class="n">attention_mask</span><span class="p">:</span> <span class="n">Optional</span><span class="p">[</span><span class="n">torch</span><span class="p">.</span><span class="n">Tensor</span><span class="p">]</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span>
		<span class="n">position_embeddings</span><span class="p">:</span> <span class="n">Optional</span><span class="p">[</span><span class="n">torch</span><span class="p">.</span><span class="n">Tensor</span><span class="p">]</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span>
		<span class="n">key_value_states</span><span class="p">:</span> <span class="n">Optional</span><span class="p">[</span><span class="n">torch</span><span class="p">.</span><span class="n">Tensor</span><span class="p">]</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span>
		<span class="n">key_value_position_embeddings</span><span class="p">:</span> <span class="n">Optional</span><span class="p">[</span><span class="n">torch</span><span class="p">.</span><span class="n">Tensor</span><span class="p">]</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span>
		<span class="n">output_attentions</span><span class="p">:</span> <span class="nb">bool</span> <span class="o">=</span> <span class="bp">False</span><span class="p">,</span>
	<span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Tuple</span><span class="p">[</span><span class="n">torch</span><span class="p">.</span><span class="n">Tensor</span><span class="p">,</span> <span class="n">Optional</span><span class="p">[</span><span class="n">torch</span><span class="p">.</span><span class="n">Tensor</span><span class="p">],</span> <span class="n">Optional</span><span class="p">[</span><span class="n">Tuple</span><span class="p">[</span><span class="n">torch</span><span class="p">.</span><span class="n">Tensor</span><span class="p">]]]:</span>
		<span class="s">"""Input shape: Batch x Time x Channel"""</span>

		<span class="c1"># if key_value_states are provided this layer is used as a cross-attention layer
</span>		<span class="c1"># for the decoder
</span>		<span class="n">is_cross_attention</span> <span class="o">=</span> <span class="n">key_value_states</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span>
		<span class="n">bsz</span><span class="p">,</span> <span class="n">tgt_len</span><span class="p">,</span> <span class="n">embed_dim</span> <span class="o">=</span> <span class="n">hidden_states</span><span class="p">.</span><span class="n">size</span><span class="p">()</span>

		<span class="c1"># add position embeddings to the hidden states before projecting to queries and keys
</span>		<span class="k">if</span> <span class="n">position_embeddings</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
			<span class="n">hidden_states_original</span> <span class="o">=</span> <span class="n">hidden_states</span>
			<span class="n">hidden_states</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">with_pos_embed</span><span class="p">(</span><span class="n">hidden_states</span><span class="p">,</span> <span class="n">position_embeddings</span><span class="p">)</span>

		<span class="c1"># add key-value position embeddings to the key value states
</span>		<span class="k">if</span> <span class="n">key_value_position_embeddings</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
			<span class="n">key_value_states_original</span> <span class="o">=</span> <span class="n">key_value_states</span>
			<span class="n">key_value_states</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">with_pos_embed</span><span class="p">(</span><span class="n">key_value_states</span><span class="p">,</span> <span class="n">key_value_position_embeddings</span><span class="p">)</span>

		<span class="c1"># get query proj
</span>		<span class="n">query_states</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">q_proj</span><span class="p">(</span><span class="n">hidden_states</span><span class="p">)</span> <span class="o">*</span> <span class="bp">self</span><span class="p">.</span><span class="n">scaling</span>
		<span class="c1"># get key, value proj
</span>		<span class="k">if</span> <span class="n">is_cross_attention</span><span class="p">:</span>
			<span class="c1"># cross_attentions
</span>			<span class="n">key_states</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">_shape</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">k_proj</span><span class="p">(</span><span class="n">key_value_states</span><span class="p">),</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">bsz</span><span class="p">)</span>
			<span class="n">value_states</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">_shape</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">v_proj</span><span class="p">(</span><span class="n">key_value_states_original</span><span class="p">),</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">bsz</span><span class="p">)</span>
		<span class="k">else</span><span class="p">:</span>
			<span class="c1"># self_attention
</span>			<span class="n">key_states</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">_shape</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">k_proj</span><span class="p">(</span><span class="n">hidden_states</span><span class="p">),</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">bsz</span><span class="p">)</span>
			<span class="n">value_states</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">_shape</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">v_proj</span><span class="p">(</span><span class="n">hidden_states_original</span><span class="p">),</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">bsz</span><span class="p">)</span>

		<span class="n">proj_shape</span> <span class="o">=</span> <span class="p">(</span><span class="n">bsz</span> <span class="o">*</span> <span class="bp">self</span><span class="p">.</span><span class="n">num_heads</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">head_dim</span><span class="p">)</span>
		<span class="n">query_states</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">_shape</span><span class="p">(</span><span class="n">query_states</span><span class="p">,</span> <span class="n">tgt_len</span><span class="p">,</span> <span class="n">bsz</span><span class="p">).</span><span class="n">view</span><span class="p">(</span><span class="o">*</span><span class="n">proj_shape</span><span class="p">)</span>
		<span class="n">key_states</span> <span class="o">=</span> <span class="n">key_states</span><span class="p">.</span><span class="n">view</span><span class="p">(</span><span class="o">*</span><span class="n">proj_shape</span><span class="p">)</span>
		<span class="n">value_states</span> <span class="o">=</span> <span class="n">value_states</span><span class="p">.</span><span class="n">view</span><span class="p">(</span><span class="o">*</span><span class="n">proj_shape</span><span class="p">)</span>

		<span class="n">src_len</span> <span class="o">=</span> <span class="n">key_states</span><span class="p">.</span><span class="n">size</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>

		<span class="n">attn_weights</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">bmm</span><span class="p">(</span><span class="n">query_states</span><span class="p">,</span> <span class="n">key_states</span><span class="p">.</span><span class="n">transpose</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>

		<span class="k">if</span> <span class="n">attn_weights</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">!=</span> <span class="p">(</span><span class="n">bsz</span> <span class="o">*</span> <span class="bp">self</span><span class="p">.</span><span class="n">num_heads</span><span class="p">,</span> <span class="n">tgt_len</span><span class="p">,</span> <span class="n">src_len</span><span class="p">):</span>
			<span class="k">raise</span> <span class="nb">ValueError</span><span class="p">(</span>
				<span class="sa">f</span><span class="s">"Attention weights should be of size </span><span class="si">{</span><span class="p">(</span><span class="n">bsz</span> <span class="o">*</span> <span class="bp">self</span><span class="p">.</span><span class="n">num_heads</span><span class="p">,</span> <span class="n">tgt_len</span><span class="p">,</span> <span class="n">src_len</span><span class="p">)</span><span class="si">}</span><span class="s">, but is </span><span class="si">{</span><span class="n">attn_weights</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="si">}</span><span class="s">"</span>
			<span class="p">)</span>

		<span class="k">if</span> <span class="n">attention_mask</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
			<span class="k">if</span> <span class="n">attention_mask</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">!=</span> <span class="p">(</span><span class="n">bsz</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">tgt_len</span><span class="p">,</span> <span class="n">src_len</span><span class="p">):</span>
				<span class="k">raise</span> <span class="nb">ValueError</span><span class="p">(</span>
					<span class="sa">f</span><span class="s">"Attention mask should be of size </span><span class="si">{</span><span class="p">(</span><span class="n">bsz</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">tgt_len</span><span class="p">,</span> <span class="n">src_len</span><span class="p">)</span><span class="si">}</span><span class="s">, but is </span><span class="si">{</span><span class="n">attention_mask</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="si">}</span><span class="s">"</span>
				<span class="p">)</span>
			<span class="n">attn_weights</span> <span class="o">=</span> <span class="n">attn_weights</span><span class="p">.</span><span class="n">view</span><span class="p">(</span><span class="n">bsz</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">num_heads</span><span class="p">,</span> <span class="n">tgt_len</span><span class="p">,</span> <span class="n">src_len</span><span class="p">)</span> <span class="o">+</span> <span class="n">attention_mask</span>
			<span class="n">attn_weights</span> <span class="o">=</span> <span class="n">attn_weights</span><span class="p">.</span><span class="n">view</span><span class="p">(</span><span class="n">bsz</span> <span class="o">*</span> <span class="bp">self</span><span class="p">.</span><span class="n">num_heads</span><span class="p">,</span> <span class="n">tgt_len</span><span class="p">,</span> <span class="n">src_len</span><span class="p">)</span>

		<span class="n">attn_weights</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">functional</span><span class="p">.</span><span class="n">softmax</span><span class="p">(</span><span class="n">attn_weights</span><span class="p">,</span> <span class="n">dim</span><span class="o">=-</span><span class="mi">1</span><span class="p">)</span>

		<span class="k">if</span> <span class="n">output_attentions</span><span class="p">:</span>
			<span class="c1"># this operation is a bit awkward, but it's required to
</span>			<span class="c1"># make sure that attn_weights keeps its gradient.
</span>			<span class="c1"># In order to do so, attn_weights have to reshaped
</span>			<span class="c1"># twice and have to be reused in the following
</span>			<span class="n">attn_weights_reshaped</span> <span class="o">=</span> <span class="n">attn_weights</span><span class="p">.</span><span class="n">view</span><span class="p">(</span><span class="n">bsz</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">num_heads</span><span class="p">,</span> <span class="n">tgt_len</span><span class="p">,</span> <span class="n">src_len</span><span class="p">)</span>
			<span class="n">attn_weights</span> <span class="o">=</span> <span class="n">attn_weights_reshaped</span><span class="p">.</span><span class="n">view</span><span class="p">(</span><span class="n">bsz</span> <span class="o">*</span> <span class="bp">self</span><span class="p">.</span><span class="n">num_heads</span><span class="p">,</span> <span class="n">tgt_len</span><span class="p">,</span> <span class="n">src_len</span><span class="p">)</span>
		<span class="k">else</span><span class="p">:</span>
			<span class="n">attn_weights_reshaped</span> <span class="o">=</span> <span class="bp">None</span>

		<span class="n">attn_probs</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">functional</span><span class="p">.</span><span class="n">dropout</span><span class="p">(</span><span class="n">attn_weights</span><span class="p">,</span> <span class="n">p</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">dropout</span><span class="p">,</span> <span class="n">training</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">training</span><span class="p">)</span>

		<span class="n">attn_output</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">bmm</span><span class="p">(</span><span class="n">attn_probs</span><span class="p">,</span> <span class="n">value_states</span><span class="p">)</span>

		<span class="k">if</span> <span class="n">attn_output</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">!=</span> <span class="p">(</span><span class="n">bsz</span> <span class="o">*</span> <span class="bp">self</span><span class="p">.</span><span class="n">num_heads</span><span class="p">,</span> <span class="n">tgt_len</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">head_dim</span><span class="p">):</span>
			<span class="k">raise</span> <span class="nb">ValueError</span><span class="p">(</span>
				<span class="sa">f</span><span class="s">"`attn_output` should be of size </span><span class="si">{</span><span class="p">(</span><span class="n">bsz</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">num_heads</span><span class="p">,</span> <span class="n">tgt_len</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">head_dim</span><span class="p">)</span><span class="si">}</span><span class="s">, but is </span><span class="si">{</span><span class="n">attn_output</span><span class="p">.</span><span class="n">size</span><span class="p">()</span><span class="si">}</span><span class="s">"</span>
			<span class="p">)</span>

		<span class="n">attn_output</span> <span class="o">=</span> <span class="n">attn_output</span><span class="p">.</span><span class="n">view</span><span class="p">(</span><span class="n">bsz</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">num_heads</span><span class="p">,</span> <span class="n">tgt_len</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">head_dim</span><span class="p">)</span>
		<span class="n">attn_output</span> <span class="o">=</span> <span class="n">attn_output</span><span class="p">.</span><span class="n">transpose</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
		<span class="n">attn_output</span> <span class="o">=</span> <span class="n">attn_output</span><span class="p">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">bsz</span><span class="p">,</span> <span class="n">tgt_len</span><span class="p">,</span> <span class="n">embed_dim</span><span class="p">)</span>

		<span class="n">attn_output</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">out_proj</span><span class="p">(</span><span class="n">attn_output</span><span class="p">)</span>

		<span class="k">return</span> <span class="n">attn_output</span><span class="p">,</span> <span class="n">attn_weights_reshaped</span>

<span class="k">class</span> <span class="nc">DetrEncoderLayer</span><span class="p">(</span><span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">Module</span><span class="p">):</span>
	<span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">config</span><span class="p">:</span> <span class="n">DetrConfig</span><span class="p">):</span>
		<span class="nb">super</span><span class="p">().</span><span class="n">__init__</span><span class="p">()</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">embed_dim</span> <span class="o">=</span> <span class="n">config</span><span class="p">.</span><span class="n">d_model</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">self_attn</span> <span class="o">=</span> <span class="n">DetrAttention</span><span class="p">(</span>
			<span class="n">embed_dim</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">embed_dim</span><span class="p">,</span>
			<span class="n">num_heads</span><span class="o">=</span><span class="n">config</span><span class="p">.</span><span class="n">encoder_attention_heads</span><span class="p">,</span>
			<span class="n">dropout</span><span class="o">=</span><span class="n">config</span><span class="p">.</span><span class="n">attention_dropout</span><span class="p">,</span>
		<span class="p">)</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">self_attn_layer_norm</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">LayerNorm</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">embed_dim</span><span class="p">)</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">dropout</span> <span class="o">=</span> <span class="n">config</span><span class="p">.</span><span class="n">dropout</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">activation_fn</span> <span class="o">=</span> <span class="n">ACT2FN</span><span class="p">[</span><span class="n">config</span><span class="p">.</span><span class="n">activation_function</span><span class="p">]</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">activation_dropout</span> <span class="o">=</span> <span class="n">config</span><span class="p">.</span><span class="n">activation_dropout</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">fc1</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">Linear</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">embed_dim</span><span class="p">,</span> <span class="n">config</span><span class="p">.</span><span class="n">encoder_ffn_dim</span><span class="p">)</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">fc2</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">Linear</span><span class="p">(</span><span class="n">config</span><span class="p">.</span><span class="n">encoder_ffn_dim</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">embed_dim</span><span class="p">)</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">final_layer_norm</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">LayerNorm</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">embed_dim</span><span class="p">)</span>

	<span class="k">def</span> <span class="nf">forward</span><span class="p">(</span>
		<span class="bp">self</span><span class="p">,</span>
		<span class="n">hidden_states</span><span class="p">:</span> <span class="n">torch</span><span class="p">.</span><span class="n">Tensor</span><span class="p">,</span>
		<span class="n">attention_mask</span><span class="p">:</span> <span class="n">torch</span><span class="p">.</span><span class="n">Tensor</span><span class="p">,</span>
		<span class="n">position_embeddings</span><span class="p">:</span> <span class="n">torch</span><span class="p">.</span><span class="n">Tensor</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span>
		<span class="n">output_attentions</span><span class="p">:</span> <span class="nb">bool</span> <span class="o">=</span> <span class="bp">False</span><span class="p">,</span>
	<span class="p">):</span>
		<span class="s">"""
		Args:
			hidden_states (`torch.FloatTensor`): input to the layer of shape `(seq_len, batch, embed_dim)`
			attention_mask (`torch.FloatTensor`): attention mask of size
				`(batch, 1, tgt_len, src_len)` where padding elements are indicated by very large negative values.
			position_embeddings (`torch.FloatTensor`, *optional*): position embeddings, to be added to hidden_states.
			output_attentions (`bool`, *optional*):
				Whether or not to return the attentions tensors of all attention layers. See `attentions` under
				returned tensors for more detail.
		"""</span>
		<span class="n">residual</span> <span class="o">=</span> <span class="n">hidden_states</span>
		<span class="n">hidden_states</span><span class="p">,</span> <span class="n">attn_weights</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">self_attn</span><span class="p">(</span>
			<span class="n">hidden_states</span><span class="o">=</span><span class="n">hidden_states</span><span class="p">,</span>
			<span class="n">attention_mask</span><span class="o">=</span><span class="n">attention_mask</span><span class="p">,</span>
			<span class="n">position_embeddings</span><span class="o">=</span><span class="n">position_embeddings</span><span class="p">,</span>
			<span class="n">output_attentions</span><span class="o">=</span><span class="n">output_attentions</span><span class="p">,</span>
		<span class="p">)</span>

		<span class="n">hidden_states</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">functional</span><span class="p">.</span><span class="n">dropout</span><span class="p">(</span><span class="n">hidden_states</span><span class="p">,</span> <span class="n">p</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">dropout</span><span class="p">,</span> <span class="n">training</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">training</span><span class="p">)</span>
		<span class="n">hidden_states</span> <span class="o">=</span> <span class="n">residual</span> <span class="o">+</span> <span class="n">hidden_states</span>
		<span class="n">hidden_states</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">self_attn_layer_norm</span><span class="p">(</span><span class="n">hidden_states</span><span class="p">)</span>

		<span class="n">residual</span> <span class="o">=</span> <span class="n">hidden_states</span>
		<span class="n">hidden_states</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">activation_fn</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">fc1</span><span class="p">(</span><span class="n">hidden_states</span><span class="p">))</span>
		<span class="n">hidden_states</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">functional</span><span class="p">.</span><span class="n">dropout</span><span class="p">(</span><span class="n">hidden_states</span><span class="p">,</span> <span class="n">p</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">activation_dropout</span><span class="p">,</span> <span class="n">training</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">training</span><span class="p">)</span>

		<span class="n">hidden_states</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">fc2</span><span class="p">(</span><span class="n">hidden_states</span><span class="p">)</span>
		<span class="n">hidden_states</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">functional</span><span class="p">.</span><span class="n">dropout</span><span class="p">(</span><span class="n">hidden_states</span><span class="p">,</span> <span class="n">p</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">dropout</span><span class="p">,</span> <span class="n">training</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">training</span><span class="p">)</span>

		<span class="n">hidden_states</span> <span class="o">=</span> <span class="n">residual</span> <span class="o">+</span> <span class="n">hidden_states</span>
		<span class="n">hidden_states</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">final_layer_norm</span><span class="p">(</span><span class="n">hidden_states</span><span class="p">)</span>

		<span class="k">if</span> <span class="bp">self</span><span class="p">.</span><span class="n">training</span><span class="p">:</span>
			<span class="k">if</span> <span class="n">torch</span><span class="p">.</span><span class="n">isinf</span><span class="p">(</span><span class="n">hidden_states</span><span class="p">).</span><span class="nb">any</span><span class="p">()</span> <span class="ow">or</span> <span class="n">torch</span><span class="p">.</span><span class="n">isnan</span><span class="p">(</span><span class="n">hidden_states</span><span class="p">).</span><span class="nb">any</span><span class="p">():</span>
				<span class="n">clamp_value</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">finfo</span><span class="p">(</span><span class="n">hidden_states</span><span class="p">.</span><span class="n">dtype</span><span class="p">).</span><span class="nb">max</span> <span class="o">-</span> <span class="mi">1000</span>
				<span class="n">hidden_states</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">clamp</span><span class="p">(</span><span class="n">hidden_states</span><span class="p">,</span> <span class="nb">min</span><span class="o">=-</span><span class="n">clamp_value</span><span class="p">,</span> <span class="nb">max</span><span class="o">=</span><span class="n">clamp_value</span><span class="p">)</span>

		<span class="n">outputs</span> <span class="o">=</span> <span class="p">(</span><span class="n">hidden_states</span><span class="p">,)</span>

		<span class="k">if</span> <span class="n">output_attentions</span><span class="p">:</span>
			<span class="n">outputs</span> <span class="o">+=</span> <span class="p">(</span><span class="n">attn_weights</span><span class="p">,)</span>

		<span class="k">return</span> <span class="n">outputs</span>


<span class="k">class</span> <span class="nc">DetrDecoderLayer</span><span class="p">(</span><span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">Module</span><span class="p">):</span>
	<span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">config</span><span class="p">:</span> <span class="n">DetrConfig</span><span class="p">):</span>
		<span class="nb">super</span><span class="p">().</span><span class="n">__init__</span><span class="p">()</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">embed_dim</span> <span class="o">=</span> <span class="n">config</span><span class="p">.</span><span class="n">d_model</span>

		<span class="bp">self</span><span class="p">.</span><span class="n">self_attn</span> <span class="o">=</span> <span class="n">DetrAttention</span><span class="p">(</span>
			<span class="n">embed_dim</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">embed_dim</span><span class="p">,</span>
			<span class="n">num_heads</span><span class="o">=</span><span class="n">config</span><span class="p">.</span><span class="n">decoder_attention_heads</span><span class="p">,</span>
			<span class="n">dropout</span><span class="o">=</span><span class="n">config</span><span class="p">.</span><span class="n">attention_dropout</span><span class="p">,</span>
			<span class="n">is_decoder</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
		<span class="p">)</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">dropout</span> <span class="o">=</span> <span class="n">config</span><span class="p">.</span><span class="n">dropout</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">activation_fn</span> <span class="o">=</span> <span class="n">ACT2FN</span><span class="p">[</span><span class="n">config</span><span class="p">.</span><span class="n">activation_function</span><span class="p">]</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">activation_dropout</span> <span class="o">=</span> <span class="n">config</span><span class="p">.</span><span class="n">activation_dropout</span>

		<span class="bp">self</span><span class="p">.</span><span class="n">self_attn_layer_norm</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">LayerNorm</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">embed_dim</span><span class="p">)</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">encoder_attn</span> <span class="o">=</span> <span class="n">DetrAttention</span><span class="p">(</span>
			<span class="bp">self</span><span class="p">.</span><span class="n">embed_dim</span><span class="p">,</span>
			<span class="n">config</span><span class="p">.</span><span class="n">decoder_attention_heads</span><span class="p">,</span>
			<span class="n">dropout</span><span class="o">=</span><span class="n">config</span><span class="p">.</span><span class="n">attention_dropout</span><span class="p">,</span>
			<span class="n">is_decoder</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
		<span class="p">)</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">encoder_attn_layer_norm</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">LayerNorm</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">embed_dim</span><span class="p">)</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">fc1</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">Linear</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">embed_dim</span><span class="p">,</span> <span class="n">config</span><span class="p">.</span><span class="n">decoder_ffn_dim</span><span class="p">)</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">fc2</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">Linear</span><span class="p">(</span><span class="n">config</span><span class="p">.</span><span class="n">decoder_ffn_dim</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">embed_dim</span><span class="p">)</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">final_layer_norm</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">LayerNorm</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">embed_dim</span><span class="p">)</span>

	<span class="k">def</span> <span class="nf">forward</span><span class="p">(</span>
		<span class="bp">self</span><span class="p">,</span>
		<span class="n">hidden_states</span><span class="p">:</span> <span class="n">torch</span><span class="p">.</span><span class="n">Tensor</span><span class="p">,</span>
		<span class="n">attention_mask</span><span class="p">:</span> <span class="n">Optional</span><span class="p">[</span><span class="n">torch</span><span class="p">.</span><span class="n">Tensor</span><span class="p">]</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span>
		<span class="n">position_embeddings</span><span class="p">:</span> <span class="n">Optional</span><span class="p">[</span><span class="n">torch</span><span class="p">.</span><span class="n">Tensor</span><span class="p">]</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span>
		<span class="n">query_position_embeddings</span><span class="p">:</span> <span class="n">Optional</span><span class="p">[</span><span class="n">torch</span><span class="p">.</span><span class="n">Tensor</span><span class="p">]</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span>
		<span class="n">encoder_hidden_states</span><span class="p">:</span> <span class="n">Optional</span><span class="p">[</span><span class="n">torch</span><span class="p">.</span><span class="n">Tensor</span><span class="p">]</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span>
		<span class="n">encoder_attention_mask</span><span class="p">:</span> <span class="n">Optional</span><span class="p">[</span><span class="n">torch</span><span class="p">.</span><span class="n">Tensor</span><span class="p">]</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span>
		<span class="n">output_attentions</span><span class="p">:</span> <span class="n">Optional</span><span class="p">[</span><span class="nb">bool</span><span class="p">]</span> <span class="o">=</span> <span class="bp">False</span><span class="p">,</span>
	<span class="p">):</span>
		<span class="s">"""
		Args:
			hidden_states (`torch.FloatTensor`): input to the layer of shape `(seq_len, batch, embed_dim)`
			attention_mask (`torch.FloatTensor`): attention mask of size
				`(batch, 1, tgt_len, src_len)` where padding elements are indicated by very large negative values.
			position_embeddings (`torch.FloatTensor`, *optional*):
				position embeddings that are added to the queries and keys
			in the cross-attention layer.
			query_position_embeddings (`torch.FloatTensor`, *optional*):
				position embeddings that are added to the queries and keys
			in the self-attention layer.
			encoder_hidden_states (`torch.FloatTensor`):
				cross attention input to the layer of shape `(seq_len, batch, embed_dim)`
			encoder_attention_mask (`torch.FloatTensor`): encoder attention mask of size
				`(batch, 1, tgt_len, src_len)` where padding elements are indicated by very large negative values.
			output_attentions (`bool`, *optional*):
				Whether or not to return the attentions tensors of all attention layers. See `attentions` under
				returned tensors for more detail.
		"""</span>
		<span class="n">residual</span> <span class="o">=</span> <span class="n">hidden_states</span>

		<span class="c1"># Self Attention
</span>		<span class="n">hidden_states</span><span class="p">,</span> <span class="n">self_attn_weights</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">self_attn</span><span class="p">(</span>
			<span class="n">hidden_states</span><span class="o">=</span><span class="n">hidden_states</span><span class="p">,</span>
			<span class="n">position_embeddings</span><span class="o">=</span><span class="n">query_position_embeddings</span><span class="p">,</span>
			<span class="n">attention_mask</span><span class="o">=</span><span class="n">attention_mask</span><span class="p">,</span>
			<span class="n">output_attentions</span><span class="o">=</span><span class="n">output_attentions</span><span class="p">,</span>
		<span class="p">)</span>

		<span class="n">hidden_states</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">functional</span><span class="p">.</span><span class="n">dropout</span><span class="p">(</span><span class="n">hidden_states</span><span class="p">,</span> <span class="n">p</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">dropout</span><span class="p">,</span> <span class="n">training</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">training</span><span class="p">)</span>
		<span class="n">hidden_states</span> <span class="o">=</span> <span class="n">residual</span> <span class="o">+</span> <span class="n">hidden_states</span>
		<span class="n">hidden_states</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">self_attn_layer_norm</span><span class="p">(</span><span class="n">hidden_states</span><span class="p">)</span>

		<span class="c1"># Cross-Attention Block
</span>		<span class="n">cross_attn_weights</span> <span class="o">=</span> <span class="bp">None</span>
		<span class="k">if</span> <span class="n">encoder_hidden_states</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
			<span class="n">residual</span> <span class="o">=</span> <span class="n">hidden_states</span>

			<span class="n">hidden_states</span><span class="p">,</span> <span class="n">cross_attn_weights</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">encoder_attn</span><span class="p">(</span>
				<span class="n">hidden_states</span><span class="o">=</span><span class="n">hidden_states</span><span class="p">,</span>
				<span class="n">position_embeddings</span><span class="o">=</span><span class="n">query_position_embeddings</span><span class="p">,</span>
				<span class="n">key_value_states</span><span class="o">=</span><span class="n">encoder_hidden_states</span><span class="p">,</span>
				<span class="n">attention_mask</span><span class="o">=</span><span class="n">encoder_attention_mask</span><span class="p">,</span>
				<span class="n">key_value_position_embeddings</span><span class="o">=</span><span class="n">position_embeddings</span><span class="p">,</span>
				<span class="n">output_attentions</span><span class="o">=</span><span class="n">output_attentions</span><span class="p">,</span>
			<span class="p">)</span>

			<span class="n">hidden_states</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">functional</span><span class="p">.</span><span class="n">dropout</span><span class="p">(</span><span class="n">hidden_states</span><span class="p">,</span> <span class="n">p</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">dropout</span><span class="p">,</span> <span class="n">training</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">training</span><span class="p">)</span>
			<span class="n">hidden_states</span> <span class="o">=</span> <span class="n">residual</span> <span class="o">+</span> <span class="n">hidden_states</span>
			<span class="n">hidden_states</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">encoder_attn_layer_norm</span><span class="p">(</span><span class="n">hidden_states</span><span class="p">)</span>

		<span class="c1"># Fully Connected
</span>		<span class="n">residual</span> <span class="o">=</span> <span class="n">hidden_states</span>
		<span class="n">hidden_states</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">activation_fn</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">fc1</span><span class="p">(</span><span class="n">hidden_states</span><span class="p">))</span>
		<span class="n">hidden_states</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">functional</span><span class="p">.</span><span class="n">dropout</span><span class="p">(</span><span class="n">hidden_states</span><span class="p">,</span> <span class="n">p</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">activation_dropout</span><span class="p">,</span> <span class="n">training</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">training</span><span class="p">)</span>
		<span class="n">hidden_states</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">fc2</span><span class="p">(</span><span class="n">hidden_states</span><span class="p">)</span>
		<span class="n">hidden_states</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">functional</span><span class="p">.</span><span class="n">dropout</span><span class="p">(</span><span class="n">hidden_states</span><span class="p">,</span> <span class="n">p</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">dropout</span><span class="p">,</span> <span class="n">training</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">training</span><span class="p">)</span>
		<span class="n">hidden_states</span> <span class="o">=</span> <span class="n">residual</span> <span class="o">+</span> <span class="n">hidden_states</span>
		<span class="n">hidden_states</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">final_layer_norm</span><span class="p">(</span><span class="n">hidden_states</span><span class="p">)</span>

		<span class="n">outputs</span> <span class="o">=</span> <span class="p">(</span><span class="n">hidden_states</span><span class="p">,)</span>

		<span class="k">if</span> <span class="n">output_attentions</span><span class="p">:</span>
			<span class="n">outputs</span> <span class="o">+=</span> <span class="p">(</span><span class="n">self_attn_weights</span><span class="p">,</span> <span class="n">cross_attn_weights</span><span class="p">)</span>

		<span class="k">return</span> <span class="n">outputs</span>

<span class="k">class</span> <span class="nc">FullDetr</span><span class="p">(</span><span class="n">pl</span><span class="p">.</span><span class="n">LightningModule</span><span class="p">):</span>
	<span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">lr</span><span class="p">,</span> <span class="n">lr_backbone</span><span class="p">,</span> <span class="n">weight_decay</span><span class="p">):</span>
		<span class="nb">super</span><span class="p">().</span><span class="n">__init__</span><span class="p">()</span>
		<span class="c1"># replace COCO classification head with custom head
</span>		<span class="n">pretrained_model</span> <span class="o">=</span> <span class="n">DetrForObjectDetection</span><span class="p">.</span><span class="n">from_pretrained</span><span class="p">(</span>
			<span class="n">PRETRAIN</span><span class="p">,</span> <span class="n">num_labels</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">ignore_mismatched_sizes</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
			<span class="n">attention_dropout</span><span class="o">=</span><span class="mf">0.1</span><span class="p">,</span> <span class="n">dilation</span><span class="o">=</span><span class="bp">True</span>
		<span class="p">)</span>

		<span class="c1"># some customizations
</span>		<span class="n">pretrained_model</span><span class="p">.</span><span class="n">model</span><span class="p">.</span><span class="n">query_position_embeddings</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">nn</span><span class="p">.</span><span class="n">Embedding</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">256</span><span class="p">)</span>
		<span class="n">config</span> <span class="o">=</span> <span class="n">DetrConfig</span><span class="p">(</span>
			<span class="n">dropout</span><span class="o">=</span><span class="mf">0.1</span><span class="p">,</span>
			<span class="n">activation_dropout</span><span class="o">=</span><span class="mf">0.1</span>
		<span class="p">)</span>
		<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">pretrained_model</span><span class="p">.</span><span class="n">model</span><span class="p">.</span><span class="n">encoder</span><span class="p">.</span><span class="n">layers</span><span class="p">)):</span> <span class="c1"># there are 6 encoders
</span>			<span class="n">pretrained_stat</span> <span class="o">=</span> <span class="n">pretrained_model</span><span class="p">.</span><span class="n">model</span><span class="p">.</span><span class="n">encoder</span><span class="p">.</span><span class="n">layers</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">state_dict</span><span class="p">()</span>
			<span class="n">new_layer</span> <span class="o">=</span> <span class="n">DetrEncoderLayer</span><span class="p">(</span><span class="n">config</span><span class="p">)</span>
			<span class="n">new_layer</span><span class="p">.</span><span class="n">load_state_dict</span><span class="p">(</span><span class="n">pretrained_stat</span><span class="p">)</span>
			<span class="n">pretrained_model</span><span class="p">.</span><span class="n">model</span><span class="p">.</span><span class="n">encoder</span><span class="p">.</span><span class="n">layers</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">new_layer</span>
		<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">pretrained_model</span><span class="p">.</span><span class="n">model</span><span class="p">.</span><span class="n">decoder</span><span class="p">.</span><span class="n">layers</span><span class="p">)):</span>
			<span class="n">pretrained_stat</span> <span class="o">=</span> <span class="n">pretrained_model</span><span class="p">.</span><span class="n">model</span><span class="p">.</span><span class="n">decoder</span><span class="p">.</span><span class="n">layers</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">state_dict</span><span class="p">()</span>
			<span class="n">new_layer</span> <span class="o">=</span> <span class="n">DetrDecoderLayer</span><span class="p">(</span><span class="n">config</span><span class="p">)</span>
			<span class="n">new_layer</span><span class="p">.</span><span class="n">load_state_dict</span><span class="p">(</span><span class="n">pretrained_stat</span><span class="p">)</span>
			<span class="n">pretrained_model</span><span class="p">.</span><span class="n">model</span><span class="p">.</span><span class="n">decoder</span><span class="p">.</span><span class="n">layers</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">new_layer</span>
		
		<span class="bp">self</span><span class="p">.</span><span class="n">model</span> <span class="o">=</span> <span class="n">pretrained_model</span>

		<span class="bp">self</span><span class="p">.</span><span class="n">feature_extractor</span> <span class="o">=</span> <span class="n">DetrFeatureExtractor</span><span class="p">.</span><span class="n">from_pretrained</span><span class="p">(</span><span class="n">PRETRAIN</span><span class="p">)</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">model</span><span class="p">.</span><span class="n">to</span><span class="p">(</span><span class="n">device</span><span class="p">)</span>

		<span class="c1"># see https://github.com/PyTorchLightning/pytorch-lightning/pull/1896
</span>		<span class="bp">self</span><span class="p">.</span><span class="n">lr</span> <span class="o">=</span> <span class="n">lr</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">lr_backbone</span> <span class="o">=</span> <span class="n">lr_backbone</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">weight_decay</span> <span class="o">=</span> <span class="n">weight_decay</span>

	<span class="k">def</span> <span class="nf">forward</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">batch</span><span class="p">):</span>
		<span class="n">img</span><span class="p">,</span> <span class="n">target</span> <span class="o">=</span> <span class="n">batch</span><span class="p">[</span><span class="s">'imgs'</span><span class="p">],</span> <span class="n">batch</span><span class="p">[</span><span class="s">'labels'</span><span class="p">]</span>
		<span class="n">encoding</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">feature_extractor</span><span class="p">(</span><span class="n">images</span><span class="o">=</span><span class="n">img</span><span class="p">,</span> <span class="n">annotations</span><span class="o">=</span><span class="n">target</span><span class="p">,</span> <span class="n">return_tensors</span><span class="o">=</span><span class="s">"pt"</span><span class="p">)</span>
		<span class="n">pixel_values</span> <span class="o">=</span> <span class="n">encoding</span><span class="p">[</span><span class="s">'pixel_values'</span><span class="p">].</span><span class="n">squeeze</span><span class="p">()</span>
		<span class="n">labels</span> <span class="o">=</span> <span class="n">encoding</span><span class="p">[</span><span class="s">'labels'</span><span class="p">]</span>
		<span class="n">labels</span> <span class="o">=</span> <span class="p">[{</span><span class="n">k</span><span class="p">:</span> <span class="n">v</span><span class="p">.</span><span class="n">to</span><span class="p">(</span><span class="n">device</span><span class="p">)</span> <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">t</span><span class="p">.</span><span class="n">items</span><span class="p">()}</span> <span class="k">for</span> <span class="n">t</span> <span class="ow">in</span> <span class="n">labels</span><span class="p">]</span>

		<span class="n">encoding</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">feature_extractor</span><span class="p">.</span><span class="n">pad_and_create_pixel_mask</span><span class="p">(</span><span class="n">pixel_values</span><span class="p">,</span> <span class="n">return_tensors</span><span class="o">=</span><span class="s">"pt"</span><span class="p">)</span>
		<span class="n">enc_pixel_values</span> <span class="o">=</span> <span class="n">encoding</span><span class="p">[</span><span class="s">'pixel_values'</span><span class="p">].</span><span class="n">to</span><span class="p">(</span><span class="n">device</span><span class="p">)</span>
		<span class="n">pixel_mask</span> <span class="o">=</span> <span class="n">encoding</span><span class="p">[</span><span class="s">'pixel_mask'</span><span class="p">].</span><span class="n">to</span><span class="p">(</span><span class="n">device</span><span class="p">)</span>
		<span class="n">outputs</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">model</span><span class="p">(</span><span class="n">pixel_values</span><span class="o">=</span><span class="n">enc_pixel_values</span><span class="p">,</span> <span class="n">pixel_mask</span><span class="o">=</span><span class="n">pixel_mask</span><span class="p">)</span>
		<span class="k">return</span> <span class="n">outputs</span><span class="p">,</span> <span class="n">labels</span>

	<span class="k">def</span> <span class="nf">common_step</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">batch</span><span class="p">,</span> <span class="n">batch_idx</span><span class="p">):</span>
		<span class="n">img</span><span class="p">,</span> <span class="n">target</span> <span class="o">=</span> <span class="n">batch</span><span class="p">[</span><span class="s">'imgs'</span><span class="p">],</span> <span class="n">batch</span><span class="p">[</span><span class="s">'labels'</span><span class="p">]</span>
		<span class="n">encoding</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">feature_extractor</span><span class="p">(</span><span class="n">images</span><span class="o">=</span><span class="n">img</span><span class="p">,</span> <span class="n">annotations</span><span class="o">=</span><span class="n">target</span><span class="p">,</span> <span class="n">return_tensors</span><span class="o">=</span><span class="s">"pt"</span><span class="p">)</span>
		<span class="n">pixel_values</span> <span class="o">=</span> <span class="n">encoding</span><span class="p">[</span><span class="s">'pixel_values'</span><span class="p">].</span><span class="n">squeeze</span><span class="p">()</span>
		<span class="n">labels</span> <span class="o">=</span> <span class="n">encoding</span><span class="p">[</span><span class="s">'labels'</span><span class="p">]</span>

		<span class="n">encoding</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">feature_extractor</span><span class="p">.</span><span class="n">pad_and_create_pixel_mask</span><span class="p">(</span><span class="n">pixel_values</span><span class="p">,</span> <span class="n">return_tensors</span><span class="o">=</span><span class="s">"pt"</span><span class="p">)</span>
		<span class="n">enc_pixel_values</span> <span class="o">=</span> <span class="n">encoding</span><span class="p">[</span><span class="s">'pixel_values'</span><span class="p">].</span><span class="n">to</span><span class="p">(</span><span class="n">device</span><span class="p">)</span>
		<span class="n">pixel_mask</span> <span class="o">=</span> <span class="n">encoding</span><span class="p">[</span><span class="s">'pixel_mask'</span><span class="p">].</span><span class="n">to</span><span class="p">(</span><span class="n">device</span><span class="p">)</span>

		<span class="n">labels</span> <span class="o">=</span> <span class="p">[{</span><span class="n">k</span><span class="p">:</span> <span class="n">v</span><span class="p">.</span><span class="n">to</span><span class="p">(</span><span class="n">device</span><span class="p">)</span> <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">t</span><span class="p">.</span><span class="n">items</span><span class="p">()}</span> <span class="k">for</span> <span class="n">t</span> <span class="ow">in</span> <span class="n">labels</span><span class="p">]</span>
		
		<span class="n">outputs</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">model</span><span class="p">(</span><span class="n">pixel_values</span><span class="o">=</span><span class="n">enc_pixel_values</span><span class="p">,</span>
							 <span class="n">pixel_mask</span><span class="o">=</span><span class="n">pixel_mask</span><span class="p">,</span> <span class="n">labels</span><span class="o">=</span><span class="n">labels</span><span class="p">)</span>
		
		<span class="n">loss</span> <span class="o">=</span> <span class="n">outputs</span><span class="p">.</span><span class="n">loss</span>
		<span class="n">loss_dict</span> <span class="o">=</span> <span class="n">outputs</span><span class="p">.</span><span class="n">loss_dict</span>

		<span class="k">return</span> <span class="n">loss</span><span class="p">,</span> <span class="n">loss_dict</span>

	<span class="k">def</span> <span class="nf">training_step</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">batch</span><span class="p">,</span> <span class="n">batch_idx</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
		<span class="n">loss</span><span class="p">,</span> <span class="n">loss_dict</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">common_step</span><span class="p">(</span><span class="n">batch</span><span class="p">,</span> <span class="n">batch_idx</span><span class="p">)</span>
		<span class="c1"># logs metrics for each training_step,
</span>		<span class="c1"># and the average across the epoch
</span>		<span class="bp">self</span><span class="p">.</span><span class="n">log</span><span class="p">(</span><span class="s">"training_loss"</span><span class="p">,</span> <span class="n">loss</span><span class="p">)</span>
		<span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">loss_dict</span><span class="p">.</span><span class="n">items</span><span class="p">():</span>
			<span class="bp">self</span><span class="p">.</span><span class="n">log</span><span class="p">(</span><span class="s">"train_"</span> <span class="o">+</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span><span class="p">.</span><span class="n">item</span><span class="p">())</span>

		<span class="k">return</span> <span class="n">loss</span>

	<span class="k">def</span> <span class="nf">validation_step</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">batch</span><span class="p">,</span> <span class="n">batch_idx</span><span class="p">):</span>
		<span class="n">loss</span><span class="p">,</span> <span class="n">loss_dict</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">common_step</span><span class="p">(</span><span class="n">batch</span><span class="p">,</span> <span class="n">batch_idx</span><span class="p">)</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">log</span><span class="p">(</span><span class="s">"validation_loss"</span><span class="p">,</span> <span class="n">loss</span><span class="p">)</span>
		<span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">loss_dict</span><span class="p">.</span><span class="n">items</span><span class="p">():</span>
			<span class="bp">self</span><span class="p">.</span><span class="n">log</span><span class="p">(</span><span class="s">"validation_"</span> <span class="o">+</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span><span class="p">.</span><span class="n">item</span><span class="p">())</span>

		<span class="k">return</span> <span class="n">loss</span>

	<span class="k">def</span> <span class="nf">configure_optimizers</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
		<span class="n">param_dicts</span> <span class="o">=</span> <span class="p">[</span>
			<span class="p">{</span><span class="s">"params"</span><span class="p">:</span> <span class="p">[</span><span class="n">p</span> <span class="k">for</span> <span class="n">n</span><span class="p">,</span> <span class="n">p</span> <span class="ow">in</span> <span class="bp">self</span><span class="p">.</span><span class="n">named_parameters</span><span class="p">(</span>
			<span class="p">)</span> <span class="k">if</span> <span class="s">"backbone"</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">n</span> <span class="ow">and</span> <span class="n">p</span><span class="p">.</span><span class="n">requires_grad</span><span class="p">]},</span>
			<span class="p">{</span>
				<span class="s">"params"</span><span class="p">:</span> <span class="p">[</span><span class="n">p</span> <span class="k">for</span> <span class="n">n</span><span class="p">,</span> <span class="n">p</span> <span class="ow">in</span> <span class="bp">self</span><span class="p">.</span><span class="n">named_parameters</span><span class="p">()</span> <span class="k">if</span> <span class="s">"backbone"</span> <span class="ow">in</span> <span class="n">n</span> <span class="ow">and</span> <span class="n">p</span><span class="p">.</span><span class="n">requires_grad</span><span class="p">],</span>
				<span class="s">"lr"</span><span class="p">:</span> <span class="bp">self</span><span class="p">.</span><span class="n">lr_backbone</span><span class="p">,</span>
			<span class="p">},</span>
		<span class="p">]</span>
		<span class="n">optimizer</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">optim</span><span class="p">.</span><span class="n">AdamW</span><span class="p">(</span><span class="n">param_dicts</span><span class="p">,</span> <span class="n">lr</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">lr</span><span class="p">,</span>
									  <span class="n">weight_decay</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">weight_decay</span><span class="p">)</span>

		<span class="k">return</span> <span class="n">optimizer</span>

<span class="k">def</span> <span class="nf">collate_fn</span><span class="p">(</span><span class="n">batch</span><span class="p">):</span>
	<span class="n">imgs</span> <span class="o">=</span> <span class="p">[</span><span class="n">item</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">batch</span><span class="p">]</span>
	<span class="n">labels</span> <span class="o">=</span> <span class="p">[</span><span class="n">item</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">batch</span><span class="p">]</span>
	<span class="n">batch</span> <span class="o">=</span> <span class="p">{}</span>
	<span class="n">batch</span><span class="p">[</span><span class="s">'imgs'</span><span class="p">]</span> <span class="o">=</span> <span class="n">imgs</span>
	<span class="n">batch</span><span class="p">[</span><span class="s">'labels'</span><span class="p">]</span> <span class="o">=</span> <span class="n">labels</span>
	<span class="k">return</span> <span class="n">batch</span>


<span class="k">class</span> <span class="nc">FullCocoDetection</span><span class="p">(</span><span class="n">torchvision</span><span class="p">.</span><span class="n">datasets</span><span class="p">.</span><span class="n">CocoDetection</span><span class="p">):</span>
	<span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">img_folder</span><span class="p">):</span>
		<span class="n">ann_file</span> <span class="o">=</span> <span class="bp">None</span>
		<span class="k">for</span> <span class="nb">file</span> <span class="ow">in</span> <span class="n">os</span><span class="p">.</span><span class="n">listdir</span><span class="p">(</span><span class="n">img_folder</span><span class="p">):</span>
			<span class="k">if</span> <span class="nb">file</span><span class="p">.</span><span class="n">endswith</span><span class="p">(</span><span class="s">".json"</span><span class="p">):</span>
				<span class="n">ann_file</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">img_folder</span><span class="p">,</span> <span class="nb">file</span><span class="p">)</span>
		<span class="nb">super</span><span class="p">(</span><span class="n">FullCocoDetection</span><span class="p">,</span> <span class="bp">self</span><span class="p">).</span><span class="n">__init__</span><span class="p">(</span><span class="n">img_folder</span><span class="p">,</span> <span class="n">ann_file</span><span class="p">)</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">ann_file</span> <span class="o">=</span> <span class="n">ann_file</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">ids_to_fn</span> <span class="o">=</span> <span class="bp">None</span>

	<span class="k">def</span> <span class="nf">__getitem__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">idx</span><span class="p">):</span>
		<span class="c1"># read in PIL image and target in COCO format
</span>		<span class="n">img</span><span class="p">,</span> <span class="n">target</span> <span class="o">=</span> <span class="nb">super</span><span class="p">(</span><span class="n">FullCocoDetection</span><span class="p">,</span> <span class="bp">self</span><span class="p">).</span><span class="n">__getitem__</span><span class="p">(</span><span class="n">idx</span><span class="p">)</span>
		
		<span class="n">image_id</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">ids</span><span class="p">[</span><span class="n">idx</span><span class="p">]</span>
		<span class="n">target</span> <span class="o">=</span> <span class="p">{</span><span class="s">'image_id'</span><span class="p">:</span> <span class="n">image_id</span><span class="p">,</span> <span class="s">'annotations'</span><span class="p">:</span> <span class="n">target</span><span class="p">}</span>
		<span class="k">return</span> <span class="n">img</span><span class="p">,</span> <span class="n">target</span>

	<span class="k">def</span> <span class="nf">id_to_filename</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="nb">id</span><span class="p">):</span>
		<span class="k">if</span> <span class="bp">self</span><span class="p">.</span><span class="n">ids_to_fn</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
			<span class="bp">self</span><span class="p">.</span><span class="n">ids_to_fn</span> <span class="o">=</span> <span class="p">{}</span>
			<span class="n">data</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="n">load</span><span class="p">(</span><span class="nb">open</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">ann_file</span><span class="p">,</span> <span class="s">"r"</span><span class="p">))</span>
			<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">data</span><span class="p">[</span><span class="s">'images'</span><span class="p">]:</span>
				<span class="bp">self</span><span class="p">.</span><span class="n">ids_to_fn</span><span class="p">[</span><span class="n">x</span><span class="p">[</span><span class="s">'id'</span><span class="p">]]</span> <span class="o">=</span> <span class="n">x</span><span class="p">[</span><span class="s">'file_name'</span><span class="p">]</span>
		<span class="k">return</span>  <span class="bp">self</span><span class="p">.</span><span class="n">ids_to_fn</span><span class="p">[</span><span class="nb">id</span><span class="p">]</span>


<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
	<span class="n">root</span> <span class="o">=</span> <span class="s">"datasets"</span>
	<span class="n">model_name</span> <span class="o">=</span> <span class="s">"haze_full_detr_50"</span>

	<span class="n">info</span> <span class="o">=</span> <span class="p">{</span>
		<span class="s">"train_dset"</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="s">'full_train_haze_dset'</span><span class="p">)),</span>
		<span class="s">"test_dset"</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="s">'dry_test_dset'</span><span class="p">)),</span>
		<span class="s">"train_batch_size"</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
		<span class="s">"test_batch_size"</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
		<span class="s">"model_lr"</span><span class="p">:</span> <span class="mf">3e-5</span><span class="p">,</span>
		<span class="s">"model_lr_backbone"</span><span class="p">:</span> <span class="mf">1e-5</span><span class="p">,</span>
		<span class="s">"model_weight_decay"</span><span class="p">:</span> <span class="mf">1e-2</span><span class="p">,</span>
		<span class="s">"num_epochs"</span><span class="p">:</span> <span class="mi">50</span>
	<span class="p">}</span>
	<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"""
	Training with 
		</span><span class="si">{</span><span class="n">json</span><span class="p">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">info</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span><span class="si">}</span><span class="s">
	"""</span><span class="p">)</span>

	<span class="c1">##### prepare data
</span>	<span class="n">train_images</span> <span class="o">=</span> <span class="n">info</span><span class="p">[</span><span class="s">'train_dset'</span><span class="p">]</span>
	<span class="n">test_images</span> <span class="o">=</span> <span class="n">info</span><span class="p">[</span><span class="s">'test_dset'</span><span class="p">]</span>

	<span class="n">train_dataset</span> <span class="o">=</span> <span class="n">FullCocoDetection</span><span class="p">(</span><span class="n">img_folder</span><span class="o">=</span><span class="n">train_images</span><span class="p">)</span>
	<span class="n">test_dataset</span> <span class="o">=</span> <span class="n">FullCocoDetection</span><span class="p">(</span><span class="n">img_folder</span><span class="o">=</span><span class="n">test_images</span><span class="p">)</span>

	<span class="k">print</span><span class="p">(</span><span class="s">"Number of training examples:"</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">train_dataset</span><span class="p">))</span>
	<span class="k">print</span><span class="p">(</span><span class="s">"Number of validation examples:"</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">test_dataset</span><span class="p">))</span>

	<span class="n">train_dataloader</span> <span class="o">=</span> <span class="n">DataLoader</span><span class="p">(</span>
		<span class="n">train_dataset</span><span class="p">,</span> 
		<span class="n">collate_fn</span><span class="o">=</span><span class="n">collate_fn</span><span class="p">,</span> 
		<span class="n">batch_size</span><span class="o">=</span><span class="n">info</span><span class="p">[</span><span class="s">"train_batch_size"</span><span class="p">],</span> 
		<span class="n">shuffle</span><span class="o">=</span><span class="bp">True</span>
	<span class="p">)</span>
	<span class="n">test_dataloader</span> <span class="o">=</span> <span class="n">DataLoader</span><span class="p">(</span>
		<span class="n">test_dataset</span><span class="p">,</span> 
		<span class="n">collate_fn</span><span class="o">=</span><span class="n">collate_fn</span><span class="p">,</span> 
		<span class="n">batch_size</span><span class="o">=</span><span class="n">info</span><span class="p">[</span><span class="s">"test_batch_size"</span><span class="p">]</span>
	<span class="p">)</span>

	<span class="c1">##### model
</span>	<span class="n">model</span> <span class="o">=</span> <span class="n">FullDetr</span><span class="p">(</span>
		<span class="n">lr</span><span class="o">=</span><span class="n">info</span><span class="p">[</span><span class="s">"model_lr"</span><span class="p">],</span> 
		<span class="n">lr_backbone</span><span class="o">=</span><span class="n">info</span><span class="p">[</span><span class="s">"model_lr_backbone"</span><span class="p">],</span> 
		<span class="n">weight_decay</span><span class="o">=</span><span class="n">info</span><span class="p">[</span><span class="s">"model_weight_decay"</span><span class="p">]</span>
	<span class="p">)</span>
	<span class="n">model</span><span class="p">.</span><span class="n">to</span><span class="p">(</span><span class="n">device</span><span class="p">)</span>

	<span class="c1">##### train
</span>	<span class="n">num_epochs</span> <span class="o">=</span> <span class="n">info</span><span class="p">[</span><span class="s">"num_epochs"</span><span class="p">]</span>
	<span class="n">num_training_steps</span> <span class="o">=</span> <span class="n">num_epochs</span> <span class="o">*</span> <span class="nb">len</span><span class="p">(</span><span class="n">train_dataloader</span><span class="p">)</span>

	<span class="n">progress_bar</span> <span class="o">=</span> <span class="n">tqdm</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="n">num_training_steps</span><span class="p">))</span>

	<span class="n">optimizer</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">configure_optimizers</span><span class="p">()</span>

	<span class="n">history</span> <span class="o">=</span> <span class="p">{</span>
		<span class="s">"train_map"</span><span class="p">:[],</span>
		<span class="s">"val_map"</span><span class="p">:[]</span>
	<span class="p">}</span>
	<span class="n">train_base_ds</span> <span class="o">=</span> <span class="n">get_coco_api_from_dataset</span><span class="p">(</span><span class="n">train_dataset</span><span class="p">)</span>
	<span class="n">test_base_ds</span> <span class="o">=</span> <span class="n">get_coco_api_from_dataset</span><span class="p">(</span><span class="n">test_dataset</span><span class="p">)</span>

	<span class="c1"># accelerator = Accelerator()
</span>
	<span class="n">best_vmap</span> <span class="o">=</span> <span class="mf">0.</span>
	<span class="k">for</span> <span class="n">epoch</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">num_epochs</span><span class="p">):</span>
		<span class="n">model</span><span class="p">.</span><span class="n">train</span><span class="p">()</span>
		<span class="k">for</span> <span class="n">batch</span> <span class="ow">in</span> <span class="n">train_dataloader</span><span class="p">:</span>
			<span class="n">loss</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">training_step</span><span class="p">(</span><span class="n">batch</span><span class="p">)</span>
			<span class="n">loss</span><span class="p">.</span><span class="n">backward</span><span class="p">()</span>
			<span class="c1"># accelerator.backward(loss)
</span>
			<span class="n">optimizer</span><span class="p">.</span><span class="n">step</span><span class="p">()</span>
			<span class="n">optimizer</span><span class="p">.</span><span class="n">zero_grad</span><span class="p">()</span>
			<span class="n">progress_bar</span><span class="p">.</span><span class="n">update</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
		
		<span class="n">model</span><span class="p">.</span><span class="nb">eval</span><span class="p">()</span>
		<span class="n">feature_extractor</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">feature_extractor</span>
		<span class="n">tmap</span> <span class="o">=</span> <span class="n">calculate_full_map</span><span class="p">(</span><span class="n">feature_extractor</span><span class="p">,</span> <span class="n">model</span><span class="p">,</span> <span class="n">train_base_ds</span><span class="p">,</span> <span class="n">train_dataloader</span><span class="p">)[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span>
		<span class="n">vmap</span> <span class="o">=</span> <span class="n">calculate_full_map</span><span class="p">(</span><span class="n">feature_extractor</span><span class="p">,</span> <span class="n">model</span><span class="p">,</span> <span class="n">test_base_ds</span><span class="p">,</span> <span class="n">test_dataloader</span><span class="p">)[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span>
		<span class="n">history</span><span class="p">[</span><span class="s">"train_map"</span><span class="p">].</span><span class="n">append</span><span class="p">(</span><span class="n">tmap</span><span class="p">)</span>
		<span class="n">history</span><span class="p">[</span><span class="s">"val_map"</span><span class="p">].</span><span class="n">append</span><span class="p">(</span><span class="n">vmap</span><span class="p">)</span>
		<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"train map=</span><span class="si">{</span><span class="n">tmap</span><span class="si">}</span><span class="s">, val map=</span><span class="si">{</span><span class="n">vmap</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>

		<span class="k">if</span> <span class="n">vmap</span> <span class="o">&gt;</span> <span class="n">best_vmap</span><span class="p">:</span>
			<span class="n">torch</span><span class="p">.</span><span class="n">save</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="sa">f</span><span class="s">"models/</span><span class="si">{</span><span class="n">model_name</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
			<span class="n">best_vmap</span> <span class="o">=</span> <span class="n">vmap</span>

	<span class="n">info</span><span class="p">[</span><span class="s">'model_saved_checkpoint'</span><span class="p">]</span> <span class="o">=</span> <span class="n">best_vmap</span>
	<span class="n">save_model_stats</span><span class="p">(</span><span class="n">model_name</span><span class="p">,</span> <span class="n">history</span><span class="p">,</span> <span class="n">info</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="data-augmentations">Data Augmentations</h2>

<p>Using <code class="language-plaintext highlighter-rouge">albumentations</code></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">albumentations</span> <span class="k">as</span> <span class="n">A</span>
<span class="kn">import</span> <span class="nn">cv2</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">transform</span> <span class="o">=</span> <span class="n">A</span><span class="p">.</span><span class="n">Compose</span><span class="p">([</span>
		<span class="n">A</span><span class="p">.</span><span class="n">HorizontalFlip</span><span class="p">(</span><span class="n">p</span><span class="o">=</span><span class="mf">0.5</span><span class="p">),</span>
		<span class="n">A</span><span class="p">.</span><span class="n">VerticalFlip</span><span class="p">(</span><span class="n">p</span><span class="o">=</span><span class="mf">0.5</span><span class="p">),</span>
		<span class="n">A</span><span class="p">.</span><span class="n">Affine</span><span class="p">(</span><span class="n">scale</span><span class="o">=</span><span class="mf">1.0</span><span class="p">,</span> <span class="n">rotate</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="mi">180</span><span class="p">,</span> <span class="mi">180</span><span class="p">),</span> <span class="n">p</span><span class="o">=</span><span class="mf">0.9</span><span class="p">)</span>
	<span class="p">],</span> 
	<span class="n">bbox_params</span><span class="o">=</span><span class="n">A</span><span class="p">.</span><span class="n">BboxParams</span><span class="p">(</span><span class="nb">format</span><span class="o">=</span><span class="s">'coco'</span><span class="p">,</span> <span class="n">min_visibility</span><span class="o">=</span><span class="mf">0.1</span><span class="p">)</span>
<span class="p">)</span>


<span class="n">sample_data</span> <span class="o">=</span> <span class="n">train_dataset</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="c1"># numpy array of an image
</span><span class="n">bboxes</span> <span class="o">=</span> <span class="p">[]</span> <span class="c1"># bounding boxes
</span><span class="k">for</span> <span class="n">label</span> <span class="ow">in</span> <span class="n">sample_data</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="s">'annotations'</span><span class="p">]:</span>
	<span class="n">bboxes</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">label</span><span class="p">[</span><span class="s">'bbox'</span><span class="p">]</span><span class="o">+</span><span class="p">[</span><span class="s">'car'</span><span class="p">])</span>

<span class="n">transformed</span> <span class="o">=</span> <span class="n">transform</span><span class="p">(</span><span class="n">image</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">(</span><span class="n">sample_data</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span> <span class="n">bboxes</span><span class="o">=</span><span class="n">bboxes</span><span class="p">)</span>
<span class="n">transformed_image</span> <span class="o">=</span> <span class="n">transformed</span><span class="p">[</span><span class="s">'image'</span><span class="p">]</span>
<span class="n">transformed_bboxes</span> <span class="o">=</span> <span class="n">transformed</span><span class="p">[</span><span class="s">'bboxes'</span><span class="p">]</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="2022@Columbia" /><summary type="html"><![CDATA[Logistics and Introduction]]></summary></entry><entry><title type="html">COMS6998 Dialog Systems</title><link href="/lectures/2022@columbia/COMS6998_Dialog_Systems.html/" rel="alternate" type="text/html" title="COMS6998 Dialog Systems" /><published>2022-10-19T00:00:00-04:00</published><updated>2022-10-19T00:00:00-04:00</updated><id>/lectures/2022@columbia/COMS6998_Dialog_Systems</id><content type="html" xml:base="/lectures/2022@columbia/COMS6998_Dialog_Systems.html/"><![CDATA[<p>6998: Conversational AI</p>

<h1 id="logistics-and-related-topics">Logistics and Related Topics</h1>

<ul>
  <li>paper sign up: https://docs.google.com/spreadsheets/d/1qUP7ngFG996foQN017L0gHDrorpZcPYAOcwgFFmeV_k/edit#gid=0</li>
  <li>instead of Piazza, we are using Slack (for a smaller group but more interactions)</li>
</ul>

<p>Grading</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Grading</th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Paper Presentation (35min, record and place ppt link in the google shee, this time also includes discussion)</td>
      <td>15%</td>
    </tr>
    <tr>
      <td style="text-align: left">Reading Summary (weekly, 2 papers)</td>
      <td>15%</td>
    </tr>
    <tr>
      <td style="text-align: left">Proposal</td>
      <td>10%</td>
    </tr>
    <tr>
      <td style="text-align: left">Mid-Term Project Report</td>
      <td>15%</td>
    </tr>
    <tr>
      <td style="text-align: left">Final Report</td>
      <td>30%</td>
    </tr>
    <tr>
      <td style="text-align: left">Class Attendance (ask questions in class)</td>
      <td>15%</td>
    </tr>
  </tbody>
</table>

<p>The main conference for NLP would be ACL, and dialog has been a very popular field:</p>

<p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220907163617003.png" alt="image-20220907163617003" style="zoom:50%;" /></p>

<p>Task-oriented conversational agents can help complete task that are <strong>more efficient, standardized, and cheaper</strong> way.</p>

<h2 id="dialog-system-basics">Dialog System Basics</h2>

<p>Usually have two different goals and hence two metrics</p>

<p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220907164320144.png" alt="image-20220907164320144" style="zoom:33%;" /></p>

<ul>
  <li>task-oriented chatbot: relative simple to evaluate
    <ul>
      <li>e.g. flight booking</li>
    </ul>
  </li>
  <li>social chatbot: engage the user to stay in the conversation.</li>
</ul>

<p>Usually, we consider dialog framework (==abstractions==) for task oriented chatbots:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Module</th>
      <th>Task</th>
      <th>Example I/O</th>
      <th style="text-align: left">Solution/Architecture</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220907164901763.png" alt="image-20220907164901763" /></td>
      <td>What is the user intent? For instance</td>
      <td><strong>Problem</strong>: user utterance $\to$ a distributed semantic representation<br /><strong>Sub-Tasks</strong>: intent detection, slot filling<br />e.g. I need something that is in east part of the town $\to$ <code class="language-plaintext highlighter-rouge">Inform: location=east</code></td>
      <td style="text-align: left">classification+sequence labeling (BIO tags) or sequence generation (e.g. directly use T5 to generate the desired output)</td>
    </tr>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220907165352093.png" alt="image-20220907165352093" /></td>
      <td>Important information you need to remember over time to complete the task (i.e. <strong>what is happening and what the user still needs</strong>) (e.g. tracking NLU output over time).<br />This is actually very important because if you get this right, then you just need to do some API calls and done.</td>
      <td>Input:<br />User: I am looking for a moderate price ranged Italian restaurant.<br />Sys: De luca cucina and bar is a modern European restaurant in the center.<br />User: I need something that’s in the east part of town<br /><strong>Output</strong>: <code class="language-plaintext highlighter-rouge">inform: price=moderate, location=east</code></td>
      <td style="text-align: left">Sequence classification (e.g. given <code class="language-plaintext highlighter-rouge">price</code>, is it <code class="language-plaintext highlighter-rouge">low</code>, <code class="language-plaintext highlighter-rouge">moderate</code>, or <code class="language-plaintext highlighter-rouge">high</code>) or sequence generation</td>
    </tr>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220907165404636.png" alt="image-20220907165404636" /></td>
      <td>Dialog Policy Planning: plan what the system <em>should</em> say.<br />(e.g. use of offline RL)</td>
      <td><strong>Problem</strong>: dialog state $\to$ system action mean representation(intent + slot)/template<br /><br />e.g. <code class="language-plaintext highlighter-rouge">inform: price=moderate, location=east</code> $\to$ <code class="language-plaintext highlighter-rouge">provide: restaurant_name, price, address</code></td>
      <td style="text-align: left">supervised learning or reinforcement learning</td>
    </tr>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220907165419278.png" alt="image-20220907165419278" /></td>
      <td>How to say it</td>
      <td>e.g. <code class="language-plaintext highlighter-rouge">provide: restaurant_name, price, address</code> $\to$ Curry prince is moderately priced and located at 452 newmarket road.</td>
      <td style="text-align: left">Seq-2-Seq generation</td>
    </tr>
  </tbody>
</table>

<p>why has this been a popular framework?</p>

<ul>
  <li>since this is a modular framework, it is easier to debug/find error and/or employ constraints</li>
  <li>however, it would become difficult to update the entire system since we need all components to be coherent</li>
</ul>

<p>Of course, then you have this simple brute force approach</p>

<p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220907170317204.png" alt="image-20220907170317204" style="zoom:33%;" /></p>

<p>but then the problem is:</p>

<ul>
  <li>hard to perform error analysis: did the model failed to understand? fail to plan? fail to generate?</li>
  <li>difficult to control the output as desired</li>
</ul>

<blockquote>
  <p><strong>Some challenges</strong>:</p>

  <ul>
    <li>
      <p>Dialog history and/or context tracking is still sub-optimal</p>
    </li>
    <li>No data! No labelled data, and conversational data are mostly from company</li>
    <li>Big domain shifts between different dialog domains</li>
    <li>Difficult to evaluate how good your dialog system is (without human)</li>
  </ul>
</blockquote>

<h1 id="notes-on-presentations">Notes on Presentations</h1>

<ul>
  <li>explain table: what is measured/the metric</li>
  <li>anything wierd about table</li>
  <li>outline, why am I talking about this</li>
</ul>

<h1 id="dialog-datasets">Dialog Datasets</h1>

<p>Contains readings for different dialog datasets. Some common things you need to know is:</p>

<ul>
  <li><strong>Wizard-of-Oz</strong> (a style of collecting dialog data): connects two crowd workers playing the roles of the user and the system. The user is provided a goal to satisfy, and the system accesses a database of entities (basically to resolve the user’s requests), which it queries as per the user’s preferences.</li>
  <li><strong>Machine-machine Interaction</strong> (a style of collecting dialog data): the user and system roles are simulated to generate a complete
conversation flow (e.g. generate what DA to do at each turn), which can then be converted to natural language using crowd workers.</li>
</ul>

<h2 id="multiwoz---a-large-scale-multi-domain-wizard-of-oz-dataset-for-task-oriented-dialogue-modelling">MultiWOZ - A Large-Scale Multi-Domain Wizard-of-Oz Dataset for Task-Oriented Dialogue Modelling</h2>

<blockquote>
  <p><strong>Aim</strong>: Provide more data and ==across more than one domains even within a conversation==. Therefore, they collected a fully labelled (current <em>domain</em>, <em>dialog intent</em>, <em>slot</em>, and its <em>value</em>) human-human written conversations over multiple domains. This can then be used for belief tracking (i.e. what the system believe the user’s intent is), dialog act and response generation.</p>

  <ul>
    <li>cover between 1 and 5 domains per dialogue thus greatly varying in length and complexity. This broad range of domains allows to create scenarios where domains are naturally connected.</li>
    <li>For example, a tourist needs to <em>find a hotel</em>, to get the list of <em>attractions</em> and to <em>book a taxi</em> to travel between both places.</li>
  </ul>
</blockquote>

<p><strong>Dataset Setup</strong>:</p>

<ul>
  <li>
    <p>Each dialogue is annotated with a sequence of <strong>dialogue states</strong> (i.e. what the user is asking for, by tracking which intent/slot-value the user is trying to fulfill) and corresponding <strong>system dialogue acts</strong> (i.e. the DA of the system repones)</p>
  </li>
  <li>
    <p>A domain is defined by an ontology (i.e. set of concepts that are related), which is a collection of slots and values that the system has (know how to deal with):</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220911010133911.png" alt="image-20220911010133911" style="zoom: 67%;" /></p>

    <p>and in general, a dialogue act consists of the intent/act type (such as <code class="language-plaintext highlighter-rouge">request </code>or <code class="language-plaintext highlighter-rouge">inform</code>) and slot-value pairs. For example, the act <code class="language-plaintext highlighter-rouge">inform(domain=hotel,price=expensive)</code> has the intent <code class="language-plaintext highlighter-rouge">inform</code>, where the user is informing the system to constrain the search to expensive hotels.</p>
  </li>
</ul>

<p><strong>Dataset Collection Setup</strong>:</p>

<ol>
  <li>
    <p>sample domains to generate some dialog scenario</p>
  </li>
  <li>
    <p>prompt a user with a <strong>task template</strong> (generated by machine but mapped to natural language using a template)</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220911010401705.png" alt="image-20220911010401705" style="zoom:67%;" /></p>

    <p>which is presented gradually to the user, and the user needs to ==fulfill those tasks by talking to the system==.</p>
  </li>
  <li>
    <p>the system (wizard) is given some API/backend to query whatever he/she needs, and tries to answer the question. Note that the ==belief state can be tracked implicitly== here since we can just check what the system is querying the database to know what he/she thinks the user needs.</p>

    <ul>
      <li>note that in the end, it is annotated again by the MT because there could be errors when performing the database queries (e.g. incomplete)</li>
    </ul>
  </li>
  <li>
    <p>perform annotation on dialog act (e.g. <code class="language-plaintext highlighter-rouge">inform(domain=hotel,price=expensive)</code>) by using Amazon Mechanical Turk (by eliminating some poor workers). An example of what they are given is shown here</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220911011238227.png" alt="image-20220911011238227" style="zoom: 50%;" /></p>
  </li>
  <li>
    <p>This results in the following data statistics:</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220911011549988.png" alt="image-20220911011549988" style="zoom: 67%;" /></p>

    <p>on the left we see that multi-domain dialogs tends to be longer, and on the right we see that system reponses tend to be longer. And finally, very self-explanatory:</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220911011454740.png" alt="image-20220911011454740" style="zoom: 67%;" /></p>
  </li>
</ol>

<p><strong>Dataset Benchmarks</strong>: here they consider using this dataset to do three things:</p>

<ul>
  <li>
    <p><strong>dialog state tracking</strong> (identify the correct slot-value pair): since other datasets only have a single domain, only the <code class="language-plaintext highlighter-rouge">restaurant</code> domain in this dataset is used:</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220911012028270.png" alt="image-20220911012028270" style="zoom:67%;" /></p>

    <p>Here, the model is a SOTA from another <a href="https://arxiv.org/abs/1807.06517">paper</a> which basically considers learning slot-value pairs and domains separately during training, hence enabling model to <strong>learn cross-domain slot-value pairs</strong>:</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220911012133082.png" alt="image-20220911012133082" style="zoom:67%;" /></p>

    <p>the result is that overall accuracy is lower, hence this dataset is harder.</p>
  </li>
  <li>
    <p><strong>dialog-context-to-text generation</strong> (more end-2-end than next one) given the oracle belief state (tracked when system is doing query). We generate the response by doing:</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220911012630020.png" alt="image-20220911012630020" style="zoom: 67%;" /></p>

    <p>which basically sets the hidden state $h$ for the decoder to be information about what user said (belief state), while attending to the user’s actual utterances. Since this is generation, metrics such as BLEU for fluency would apply:</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220911012807592.png" alt="image-20220911012807592" style="zoom: 50%;" /></p>

    <p>where <em>Success</em> measures whether if the system has fulfilled the user’s request, and <em>Inform</em> measure whether the system has provided an appropriate entity.</p>
  </li>
  <li>
    <p><strong>dialog-act-to-text generation</strong>: since we have all the annotated dialog-act as well, we can test systems on their ability to generate utterances from meaning representations (e.g. dialog act to do next). Details skipped here.</p>
  </li>
</ul>

<h2 id="towards-scalable-multi-domain-conversational-agents-the-schema-guided-dialogue-dataset">Towards Scalable Multi-Domain Conversational Agents: The Schema-Guided Dialogue Dataset</h2>

<blockquote>
  <p><strong>Aim</strong>: In reality, there might be a dynamic set of intents and slots for a task, i.e. their possible values not known in advance. Therefore, they propose a <strong>dataset for zero-shot settings</strong> and also propose a ==schema-guided paradigm== to train models making <strong>predictions over a dynamic set of intent/slots you can have in the input schema</strong>.</p>

  <ul>
    <li>essentially this dataset is collected by 1) generate outlines via M-M interaction, and then 2) convert to human language by AMT paraphrasing them</li>
  </ul>
</blockquote>

<p><strong>Dataset Setup</strong>:</p>

<p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220911014016544.png" alt="image-20220911014016544" style="zoom: 50%;" /></p>

<ul>
  <li>a <strong>schema</strong> (see above) is a combination of intent and slots with some additional constraints (such as some intent requires at least certain slots to be there)</li>
  <li>there are also ==non-categorical== slots</li>
</ul>

<p><strong>Dataset Collection</strong>:</p>

<p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220911014417690.png" alt="image-20220911014417690" style="zoom: 67%;" /></p>

<ol>
  <li>first they use dialog simulators to interact with services to generate dialog outlines, basically a). This is achieved by first seeding the user agent with a scenario (among the 200 they identified), and then generate the dialog act to do for the next turn.</li>
  <li>then the system agent generates in a similar fashion.</li>
  <li>the rest is basically shown in the above flowchart.</li>
  <li>the MT is asked to <strong>exactly repeat the slot values</strong> in their paraphrases. This has the advantage of easily string matching to find the ==slot span annotation automatically==. Also, it ==preserves all the annotation in a)==, hence there is no more need for human annotators.
    <ul>
      <li>perhasp a disadvantage: reduced noise in human conversation as every/most sentences would be goal oriented? Are the intent natural on a human-basis?</li>
    </ul>
  </li>
</ol>

<p><strong>Dataset Benchmark</strong>: since one aim of this is to do ==zero-shot dialog state tracking==, they also made a model to do that</p>

<ul>
  <li>their model is basically done by:
    <ol>
      <li>obtain a <strong>schema embedding</strong> by converting the current information into an embedding (e.g. by BERT). which embeds all the intents, slots, and slot-values.</li>
      <li>obtain an <strong>utterance embedding</strong> of the user and the previous dialog history</li>
      <li>combine the above using the so called “projection” operation, which you can then use to do
        <ul>
          <li><strong>active intent</strong> prediction: what is the current intent?
            <ul>
              <li>only a single intent per utterance?</li>
            </ul>
          </li>
          <li><strong>requested slots</strong> by the users (a classification task)</li>
          <li><strong>user goal</strong> prediction: what is the slot-value currently (up until now) request by the user
            <ol>
              <li>have a classifier to predict for each slot if things have changed</li>
              <li>if yes, predict what is the new value</li>
            </ol>
          </li>
        </ul>
      </li>
    </ol>
  </li>
  <li>
    <p>then, from the above we can consider evaluation tasks such as:</p>

    <ul>
      <li><strong>Active Intent Accuracy</strong>: how much active intent of the user I got right</li>
      <li><strong>Request Slot F1</strong>: macro-averaged F1 score for requested slots</li>
      <li><strong>Average Goal Accuracy</strong>: for each turn, the accuracy of the predicted value of each slot (fuzzy machine score used for continous values)</li>
      <li>==Joint Goal Accurarcy==: usually more useful/stricter than the above</li>
    </ul>

    <p>some important results are shown here</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220911020544880.png" alt="image-20220911020544880" style="zoom: 50%;" /></p>

    <p>where we notice that major factors affecting the performance across domains is:</p>

    <ol>
      <li>the presence of the service in the training data (seen services), so degrade for domains with more unseen services</li>
      <li>Among seen services, ‘<code class="language-plaintext highlighter-rouge">RideSharing</code>’ domain also exhibits poor performance, since it possesses the largest number of the possible slot values across the dataset</li>
      <li>for categorical slots, with similar slot values (e.g. “<code class="language-plaintext highlighter-rouge">Psychologist</code>” and “<code class="language-plaintext highlighter-rouge">Psychiatrist</code>”), there is a very weak signal for the model to distinguish between the different classes, resulting in inferior performance</li>
    </ol>
  </li>
</ul>

<h2 id="can-you-put-it-all-together-evaluating-conversational-agents-ability-to-blend-skills">Can You Put it All Together: Evaluating Conversational Agents’ Ability to Blend Skills</h2>

<blockquote>
  <p><strong>Aim</strong>: Recent research has made solid strides towards gauging and improving performance of open domain conversational agents along specific skill. But a good open-domain conversational agent should be able to seamlessly <strong>blend multiple skills</strong> (knowledge, personal background, empathy) all into one cohesive conversational flow. Therefore, in this work they:</p>

  <ul>
    <li>investigate several ways to combine models trained towards isolated capabilities, ranging from simple model aggregation schemes that require minimal additional training, to various forms of multi-task training</li>
    <li>propose a new dataset, <code class="language-plaintext highlighter-rouge">BlendedSkillTalk</code>, which blends multiple skills into a single conversation (one skill per turn, but different across turns), to analyze how these capabilities would mesh together in a natural conversation</li>
  </ul>
</blockquote>

<p><strong>Dataset Setup</strong></p>

<p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220911102517255.png" alt="image-20220911102517255" style="zoom: 67%;" /></p>

<ul>
  <li>
    <p><code class="language-plaintext highlighter-rouge">BendedSkillTalk</code>, a small crowdsourced dataset of about 5k conversations in English where workers are instructed to try and be knowledgeable (<code class="language-plaintext highlighter-rouge">Wizard of Wikipedia</code>), empathetic (<code class="language-plaintext highlighter-rouge">EmpatheticDialogs</code>), or give personal details (<code class="language-plaintext highlighter-rouge">ConvAI2</code>) about their given persona, whenever appropriate.</p>

    <ul>
      <li>
        <p>ConvAI2 example:</p>

        <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220914173659527.png" alt="image-20220914173659527" style="zoom: 50%;" /></p>

        <p>then the user is asked to converse on telling each other about their personalities</p>
      </li>
      <li>
        <p>WoW example:</p>

        <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220914173747579.png" alt="image-20220914173747579" style="zoom:33%;" /></p>

        <p>where the topic is used as an initial context</p>
      </li>
      <li>
        <p>ED example:</p>

        <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220914173900784.png" alt="image-20220914173900784" style="zoom:33%;" /></p>
      </li>
    </ul>
  </li>
  <li>
    <p>labels are the skill per turn, namely which skill they used.</p>
  </li>
</ul>

<p><strong>Dataset Collection</strong></p>

<ul>
  <li>To ensure MT workers not stick with one specific skill or being too generic, they prompt one user (<strong>guided user</strong>, denoted by <code class="language-plaintext highlighter-rouge">G</code>) with responses from models that have been trained towards a specific skill as inspiration (one each from each skill)</li>
  <li>Each starting conversation history is seeded randomly from the <code class="language-plaintext highlighter-rouge">ConvAI2</code>, <code class="language-plaintext highlighter-rouge">WoW</code>, <code class="language-plaintext highlighter-rouge">ED</code> dataset
    <ul>
      <li>if from <code class="language-plaintext highlighter-rouge">WoW</code>, a topic is also given. If from <code class="language-plaintext highlighter-rouge">ED</code>, the situation description is given</li>
    </ul>
  </li>
  <li>In fact, for labelling we have 4 labels because <code class="language-plaintext highlighter-rouge">ED</code> utterances has “Speaker” and “Listener” taking different actions:
    <ul>
      <li>Knowledge, Empathy, Personal situations, Personal background</li>
    </ul>
  </li>
</ul>

<p><strong>Dataset Benchmarks</strong>: since it is combining skills from three datasets essentially, we can have:</p>

<ul>
  <li>
    <p>a base architecture of poly-encoder which is a retrieval model: select from a set of candidates (the correct label combined with others are chosen from the training set). This is pretrained on the pushshift.io Reddit dataset</p>

    <ul>
      <li>
        <p>since it is asked to rank among candidates, metric such as <code class="language-plaintext highlighter-rouge">hit@k</code> applies. This metric works as follows. Consider two correct labels:</p>

        <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Jack   born_in   Italy
Jack   friend_with   Thomas
</code></pre></div>        </div>

        <p>and a bunch of synthetic negatives are generated, where the model is ranking them:</p>

        <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>s        p         o            score   rank
Jack   born_in   Ireland        0.789      1
Jack   born_in   Italy          0.753      2  *
Jack   born_in   Germany        0.695      3
Jack   born_in   China          0.456      4
Jack   born_in   Thomas         0.234      5
    
s        p         o            score   rank
Jack   friend_with   Thomas     0.901      1  *
Jack   friend_with   China      0.345      2
Jack   friend_with   Italy      0.293      3
Jack   friend_with   Ireland    0.201      4
Jack   friend_with   Germany    0.156      5
</code></pre></div>        </div>

        <p>notice that if we are doing <code class="language-plaintext highlighter-rouge">hit@1</code>, then only $1/2$ times the model did correctly, but if we do <code class="language-plaintext highlighter-rouge">hit@3</code>, then the it is $2/2$.</p>
      </li>
    </ul>
  </li>
  <li>
    <p><strong>Finetune on BST</strong>: finetune the pretrained dataset directly on <code class="language-plaintext highlighter-rouge">BlendedSkillTalk </code> Dataset</p>
  </li>
  <li>
    <p><strong>Multi-task Single-Skills</strong>: finetune the model to multi-task on <code class="language-plaintext highlighter-rouge">ConvAI2</code>, <code class="language-plaintext highlighter-rouge">WoW</code>, and <code class="language-plaintext highlighter-rouge">ED</code></p>

    <ul>
      <li>however, note that there could be some stylistic difference between <code class="language-plaintext highlighter-rouge">ConvAI2</code> dialogs and <code class="language-plaintext highlighter-rouge">WoW</code> dialogs. For instance, the prior include a persona context, and the latter include a topic</li>
      <li>therefore, to avoid model exploiting those, all samples are modified to ==always include a persona and a topic== (where there is already an alignment of <code class="language-plaintext highlighter-rouge">WoW</code> topics to <code class="language-plaintext highlighter-rouge">ConvAI2</code>)</li>
    </ul>
  </li>
  <li>
    <p><strong>Multi-task Single-Skills + BST</strong>: after the multi-task training, finetune again on the BST dataset</p>
  </li>
  <li>
    <p><strong>Multi-task Two-Stage</strong>: since many single-skilled models have already been trained, we can just use a top level BERT classifier to assign which model gets to score candidates.</p>
  </li>
  <li>
    <p>Then, along with just models trained on their own dataset, we can have 7 models to evaluate:</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220911104543720.png" alt="image-20220911104543720" style="zoom:80%;" /></p>

    <p>where we observe that:</p>

    <ul>
      <li>
        <p>BST shows balanced performance but failed to match the performance of the single-skill models on their original dset, as well as losing to MT Single-Skills.</p>
      </li>
      <li>
        <p>MT Single-Skills does not do exactly well as single-skill model when evaluated on their own benchmark (for <code class="language-plaintext highlighter-rouge">ConvAI2</code> and <code class="language-plaintext highlighter-rouge">ED</code>). But perhaps this is unfair since those Single-Skill models only have to choose from candidates from their own domain. Hence, the author considers mixing candidate for them to also include samples from other dataset, which gives rise to the <em>Mixed-candidates evaluation</em>.</p>

        <p>Here, MT Single-Skills is doing better, suggesting that multi-task training results in ==increased resilience to having to deal with more varied distractor candidates==</p>
      </li>
    </ul>
  </li>
  <li>
    <p>finally, there is of course the human evaluation:</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220911105544154.png" alt="image-20220911105544154" style="zoom: 67%;" /></p>
  </li>
</ul>

<h1 id="dialog-understanding">Dialog Understanding</h1>

<p>Many models are basically performing the task of:</p>

<ul>
  <li><strong>input</strong> dialog history up to current turn</li>
  <li><strong>output</strong>: “what does the user want from us” in terms of classifying <strong>intent, slot, slot-value</strong>
    <ul>
      <li>then by filling in the values, <em>e.g. book a plane from Paris to London</em>, the system can perform API based queries <code class="language-plaintext highlighter-rouge">source=London, dest=Paris</code></li>
    </ul>
  </li>
</ul>

<h2 id="attention-based-recurrent-neural-network-models-for-joint-intent-detection-and-slot-filling">Attention-Based Recurrent Neural Network Models for Joint Intent Detection and Slot Filling</h2>

<blockquote>
  <p><strong>Aim</strong>: we want to explore how the ==alignment information in slot filling== can be best utilized in the encoder-decoder models, and on the other hand, whether the alignment-based RNN slot filling models can be further improved with the attention mechanism that introduced from the encoder-decoder architecture . To this end, we propose an <strong>attention-based neural network model for joint intent detection and slot filling</strong>.</p>

  <p>The main idea is:</p>

  <ul>
    <li>encode input sequence into a dense vector</li>
    <li>then use this vector to decode/generate corresponding output sequence. Here LSTM is used so alignment is natural (see example below)</li>
  </ul>
</blockquote>

<p><strong>Setup</strong></p>

<p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220916193314825.png" alt="image-20220916193314825" /></p>

<ul>
  <li>the input essentially is the sentence, and slot detection and slot-filling is <strong>done simultaneously from the flat structure</strong>
    <ul>
      <li>==potential problem== cannot track implicit information, e.g. slot value not there, or hierarchical information (i.e. tagging v.s. parsing)</li>
    </ul>
  </li>
  <li>let the input sentence be $x=(x_1,…,x_T)$, and output be $y=(y_1,…,y_T)$ and intent in addition.</li>
</ul>

<p><strong>Architecture</strong></p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">no aligned inputs</th>
      <th style="text-align: center">aligned inputs</th>
      <th style="text-align: center">aligned inputs and attention</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220916193557680.png" alt="image-20220916193557680" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220916193613690.png" alt="image-20220916193613690" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220916193622327.png" alt="image-20220916193622327" /></td>
    </tr>
  </tbody>
</table>

<ul>
  <li>
    <p>essentially you have an RNN for encoder, and an RNN for decoder with inputs using the hidden states from $x$ for alignment</p>

    <ul>
      <li><strong>encoder</strong>: bidirectional LSTM, so we get $[fh_1,…,fh_T]$ and $[bh_1,…,bh_T]$ being the forward/backward hidden states. Then $h_i = [fh_i, bh_i]$ is the total hidden state for each input $x_i$</li>
      <li><strong>decoder</strong>: unidirectional LSTM</li>
    </ul>
  </li>
  <li>
    <p>to model attention vector, we want to measure how each <strong>hidden state $s_j$ in the decoder</strong> relates to the <strong>aligned word’s hidden state $h_k$</strong>:</p>

\[e_{i,k} = g(s_{i-1},h_k)\]

    <p>then essentially $e$ is transformed into weights</p>

\[c_i = \sum_{j=1}^T \alpha_{i,j}h_j,\qquad \alpha_{i,j} = \mathrm{Softmax}(e_{i,j})\]

    <p>essentially $c_i$ provides additional information to answer: which of the aligned word’s hidden state $h_j$ relate to the current state I want to decode $s_{i-1}$. They also provided a visualization of this attention</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220916194611133.png" alt="image-20220916194611133" style="zoom:80%;" /></p>

    <p>where we are decoding the last tag, and we are attending to words such as <code class="language-plaintext highlighter-rouge">cleveland</code>.</p>

    <ul>
      <li>they mentioned that the motivation to bring in an additional context $c$ is because <strong>distant information just from $s_j$ tends to be diluted a lot and lost</strong>.</li>
    </ul>
  </li>
  <li>
    <p>therefore, their ultimate model involves giving the decoder both the aligned hidden state $h_i$ and the attended context $c_i$</p>
  </li>
  <li>
    <p>==TODO== two objectives and one network</p>
  </li>
  <li>
    <p>to further <strong>utilize the decoded tags</strong>, they can also do it <strong>auto-regressively</strong> by feeding the decoded tag into the forward direction of the RNN</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220916195139765.png" alt="image-20220916195139765" style="zoom:67%;" /></p>
  </li>
</ul>

<p><strong>Results</strong></p>

<ul>
  <li>
    <p>They are using ATIS-3 and DEC94 dataset, which has joint intent detection and slot filling task</p>
  </li>
  <li>
    <p>then essentially they were doing an ablation study of a) effect of alignment b) effect of attention:</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220916195457119.png" alt="image-20220916195457119" style="zoom:67%;" /></p>

    <p>so it is found that <strong>alignment and attention does give improvement</strong>, yet the latter gave only small improvement. They also investigate further and found that the attention was giving mostly uniform weights except for a few cases (hence the small boosts)</p>
  </li>
</ul>

<h2 id="conversational-semantic-parsing-for-dialog-state-tracking">Conversational Semantic Parsing for Dialog State Tracking</h2>

<blockquote>
  <p><strong>Aim</strong>: By formulating DST (dialog state tracking) as a semantic parsing task over ==hierarchical representations==, we can incorporate semantic compositionality, cross domain knowledge sharing and co-reference.</p>

  <ul>
    <li>essentially outputting a tree instead of slot-filling</li>
    <li>additionally, they collected their own dataset <code class="language-plaintext highlighter-rouge">TreeDST </code>annotated with tree-structured dialog states and system acts</li>
    <li>they combine essentially the idea of <strong>semantic parsing (e.g. drawing tree from production rules)</strong> to do DS tracking
      <ul>
        <li>in their approach, the tree drawing is done by predicting a node and its parent</li>
      </ul>
    </li>
  </ul>
</blockquote>

<p><strong>Setup</strong>:</p>

<p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220916202809150.png" alt="image-20220916202809150" style="zoom:67%;" /></p>

<ul>
  <li>
    <p>As in DST, the task is to ==track a user’s goal== as it accumulates over the course of a conversation. To capture a hierarchical representation of domain, verbs, and operators and slots:</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Tree Representation</th>
          <th style="text-align: center">Condensed, Dotted Representation</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220916202659271.png" alt="image-20220916202659271" style="zoom:50%;" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220916202702538.png" alt="image-20220916202702538" style="zoom:50%;" /></td>
        </tr>
      </tbody>
    </table>

    <p>this is done for both user and system, and this dotted form is also referred to as a <strong>meaning representation</strong>. Advantages of this include:</p>

    <ul>
      <li>tracking ==nested intents== and representing compositions in a single graph</li>
      <li>naturally supports ==cross domain slot sharing== and cross-turn co-reference through incorporating the shared slots or the references as sub-graphs in the representation</li>
    </ul>
  </li>
  <li>
    <p>At each turn we have</p>

    <ul>
      <li>$x_t^u$ being user utterance, $y_t^u$ being user dialog-state</li>
      <li>$x_t^s$ being system utterance, $y_t^s$ is system dialog act</li>
      <li>both $y_t^s,y_t^u$ adopt the same structure semantic formalism</li>
    </ul>
  </li>
</ul>

<p><strong>Dataset</strong>:</p>

<ul>
  <li>
    <p>collection is similar to the <a href="#Towards Scalable Multi-Domain Conversational Agents: The Schema-Guided Dialogue Dataset">SGD</a> paper, where they:</p>

    <ol>
      <li>generate agendas/conversation flows by using machines</li>
      <li>convert them via templates to language</li>
      <li>ask MT to paraphrase to natural language</li>
    </ol>
  </li>
  <li>
    <p>specifically, the agenda generation for both user and system is done by:</p>

    <ul>
      <li>
        <p>a module <strong>generating the initial user goal</strong> $P(y_o^u)$. This can be done by sampling a ==production rule==</p>

        <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220916204534378.png" alt="image-20220916204534378" style="zoom: 67%;" /></p>
      </li>
      <li>
        <p>a module <strong>generating system act</strong> $P(y_t^s\vert y_t^u)$. This is done by looking at the user’s act tree $y_t^u$, look up the production rules to figure out <strong>how to finish the tree</strong>, and take that as the system act</p>

        <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220916205038811.png" alt="image-20220916205038811" style="zoom:67%;" /></p>
      </li>
      <li>
        <p>a module for <strong>user state update</strong>/DS based on dialog history $P(y_t^u\vert y_{&lt;t}^s,y_{&lt;t}^u)$. There are two details in this task:</p>

        <ul>
          <li>
            <p>model “introduces a new goal, continues with the previous goal, or resumes an earlier unfinished goal”. Therefore, a <strong>stack is used</strong> and updated. Therefore the top of the stack always represents the most recent unfished task $y_{t-1}^{top,u}$ and the corresponding system act $y_{t-1}^{top,s}$</p>
          </li>
          <li>
            <p>the next dialog state $y_t^u$ is generated based on the <strong>top elements of the stack as the dialog history</strong></p>

            <ul>
              <li>==precaustion:== implies an additional structure to dialog, hence unfair advantage as their model also stores a stack? (see their modelling choice of dialog history, which takes the top of the stack as well)</li>
            </ul>

            <p>since this is now generated from two trees (there are two at the top of the stack)</p>

            <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220916205633058.png" alt="image-20220916205633058" style="zoom:67%;" /></p>

            <p>where the next user state will be combining the two</p>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>finally, a quality control is also done by asking:</p>

    <ul>
      <li>before the paraphrasing, filter out non-realistic interactions</li>
      <li>after the paraphrasing, ask if the human-generated utterance preserves the meaning of the templated utterance</li>
    </ul>
  </li>
</ul>

<p><strong>Architecture</strong>:</p>

<ul>
  <li>
    <p>our task is to:</p>

    <ul>
      <li>infer ==$y_t^u$== since $y_t^s$  is observed/what the system just did</li>
      <li>to also track ==goal switching and resumption==, a <strong>stack is used to store dialog states</strong></li>
    </ul>
  </li>
  <li>
    <p>to output tree structure, we essentially just need to decode:</p>

    <ul>
      <li>a new node</li>
      <li>the new node’s parent in the existing tree</li>
    </ul>
  </li>
  <li>
    <p>additionally, they chose to ==maneuver their own features==:</p>

    <ul>
      <li>
        <p><strong>dialog history</strong> is computed as a fixed-size history representation derived from the previous conversation flow $(Y_{&lt;t})$, specifically the top of the stat $y_{t-1}^{top,u}$ along with:</p>

\[Y_{t-1}^u = \text{merge}(y_{t-1}^u, y_{t-1}^{top,u})\]
      </li>
      <li>
        <p><strong>encoding the features</strong>:</p>

        <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220916210719872.png" alt="image-20220916210719872" style="zoom:80%;" /></p>

        <p>where essentially we have three features and hence three encoders:</p>

        <ul>
          <li>encoder (bidirectional LSTM) for user utterance $x_t^u$</li>
          <li>encoder (bidirectional LSTM) for system act $y_{t-1}^s$</li>
          <li>encoder (bidirectional LSTM) for dialog state $Y_{t-1}^u$ described above</li>
        </ul>

        <p>where to encode the trees, they are <strong>first linearized into strings by DFS</strong></p>
      </li>
      <li>
        <p><strong>decoding</strong>: they experimented with two versions:</p>

        <ul>
          <li>
            <p>==just decode a flattened string==, as in Figure 1. The final aim is to simply ==compute the probability of next token== by accessing its probability of generation and copy</p>

            <p>Specifically, the decoder takes</p>

\[g_i = \mathrm{LSTM}(g_{i-1},y_{t,i-1}^u)\]

            <p>which is basically <strong>auto-regressive</strong>, and the <strong>attention</strong> is used together with $g_i$ to compute probability of next token</p>

            <ul>
              <li>
                <p>attention: <strong>attend current state to history</strong></p>

\[a_{i,j} = attn(g_i,H)\]

                <p>where history would be either of the three from the three encoders. Then this is used for weights to produce:</p>

\[\bar{h}_i = \sum_{j=1}^n w_{i,j} h_i,\quad w_{i,j} = \mathrm{Softmax}(a_{i,j})\]
              </li>
              <li>
                <p>finally, the token distribution is computed by <strong>concatenating $\bar{h}_i^x, \bar{h}_i^s, \bar{h}_i^u$</strong> from the encoders and $g_i$ <strong>to give $f_i$</strong></p>

                <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220916211928284.png" alt="image-20220916211928284" style="zoom:67%;" /></p>
              </li>
            </ul>

            <p>finally, since this is decoding a flat string, the loss is simply CCE of the correct $y_{y,i}^u$</p>
          </li>
          <li>
            <p>==decode a tree by generating nodes and select their parent relationships from the existing tree==: you basically take the hidden state/embedding of the previous node $n_{t,i-1}^u$ and its parent relation $r_{t,i-1}^u$ to be input features as well for decoding:</p>

\[g_i = \mathrm{LSTM}(g_{i-1},n_{t,i-1}^u , r_{t,i-1}^u)\]

            <p>the we perform two predictions using two layers using $g_i$</p>

            <ul>
              <li>
                <p>predict next node probability using equation 4</p>
              </li>
              <li>
                <p>select parent of the node by attending $g_i$ to <strong>previously generated nodes</strong> and choosing the most relevant</p>
              </li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><strong>Results</strong></p>

<ul>
  <li>
    <p>experiment on DST dataset, where for models not with hierarchical MR in mind, all training and testing here are flattened:</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220916212530129.png" alt="image-20220916212530129" style="zoom:67%;" /></p>

    <ul>
      <li>==TODO== doesn’t this also mean that flattened based is naturally less accurate than tree based (TED-Flat v.s. TED-Vanilla) given that the <strong>task is tree based</strong>?</li>
    </ul>
  </li>
  <li>
    <p>evidence of compounding error if prediction is done auto-regressively:</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220916212637904.png" alt="image-20220916212637904" style="zoom:80%;" /></p>

    <p>where the oracle means substituting the gold previous state for encoding</p>
  </li>
</ul>

<h1 id="task-oriented-dialog">Task-Oriented Dialog</h1>

<p>Essentially models that can complete task by providing/informing the right entities and complete the task successfully. A popular dataset that has been used for finetuning + testing is the <strong>MultiWoZ</strong> dataset, which contains an <strong>automatic evaluation script</strong> as well.</p>

<h2 id="galaxy-a-generative-pre-trained-model-for-task-oriented-dialog">GALAXY: A Generative Pre-trained Model for Task-Oriented Dialog</h2>

<p>In this paper, we propose GALAXY, a novel pre-trained dialog model that explicitly learns dialog policy from limited labeled dialogs and large-scale unlabeled dialog corpora via semi-supervised learning.</p>

<blockquote>
  <p>Specifically, we introduce a ==dialog act prediction task for policy optimization== during pre-training and employ a consistency  regularization term to refine the learned representation with the help of unlabeled dialogs</p>
</blockquote>

<p><strong>Background</strong>:</p>

<ul>
  <li>there are intrinsic differences between the distribution of human conversations and plain texts. Directly fine-tuning plain-text-trained PLMs on downstream dialog tasks <strong>hinders the model</strong> from effectively capturing conversational linguistic knowledge. Therefore, current attempts to tackle this issue try to <strong>build Pre-trained Conversation Models (PCMs) by directly optimizing vanilla language model</strong> objectives on dialog corpora</li>
  <li>Therefore, we hypothesize that explicitly incorporating the DA annotations into the pre-training process can also <strong>facilitate learning better representations for policy optimization to improve the overall end-to-end performance</strong></li>
  <li>Although DAs are general tags to describe speakers’ communicative behaviors (Bunt 2009), current DA annotations in task-oriented dialog are still limited and <strong>lack of unified taxonomy</strong> because each dataset is small and scattered.</li>
</ul>

<p><strong>Dataset</strong>:</p>

<ul>
  <li>
    <p>To begin with, we build a unified DA taxonomy for TOD (task-oriented-dialog) and examine eight existing datasets to develop a new labeled dataset named <code class="language-plaintext highlighter-rouge">UniDA </code>with a total of 975K utterances. We also collect and process a large-scale unlabeled dialog corpus called <code class="language-plaintext highlighter-rouge">UnDial </code> with 35M utterances</p>
  </li>
  <li>
    <p>We propose a more <strong>comprehensive unified DA taxonomy</strong> for task-oriented dialog, which consists of 20 frequently-used DAs</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220705152203066.png" alt="image-20220705152203066" style="zoom:67%;" /></p>
  </li>
</ul>

<p><strong>Model</strong>:</p>

<ul>
  <li>
    <p>We choose ==UniLM== (Dong et al. 2019) as our ==backbone== model, which contains a bi-directional encoder for understanding and a unidirectional decoder for generation.</p>
  </li>
  <li>
    <p>We adopt a similar scheme of input representation in Bao et al. (2020), where the ==input embeddings consist of four elements: tokens, roles, turns, and positions==.</p>

    <ul>
      <li>Role embeddings are like segmentation embeddings in BERT and are used to differentiate which role the current token belongs to, either user or system</li>
      <li>Turn embeddings are assigned to each token according to its turn number.</li>
      <li>Position embeddings are assigned to each token according to its relative position</li>
    </ul>
  </li>
  <li>
    <p>Four objectives are employed in our dialog pre-training process: response selection, response generation, ==DA prediction== and consistency regularization.</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220705152829713.png" alt="image-20220705152829713" /></p>

    <p>where the important components include:</p>

    <ul>
      <li>
        <p><strong>Response Selection</strong>. For a context response pair $(c; r)$ from the corpus, the positive example (with label $l = 1$) is obtained by concatenating $c$ with its corresponding response $r$, and the negative example (with label $l = 0$) is constructed by concatenating $c$ with a response $r^-$ that is randomly selected from the corpus. Then simply for each pair:</p>

\[L_{RS} = -\log p(l=1|c,r)-\log p(l=0|c,r^-)\]

        <p>where the predicted probability is fine-tuned by adding a linear head to the transformer and then a sigmoid on the <code class="language-plaintext highlighter-rouge">[CLS]</code> token:</p>

\[p(l=1|c,r) = \mathrm{sigmoid}(\phi_a(h_{cls}))\]

        <p>note that $\phi_a$ is a fully-connected NN with output size of 1.</p>
      </li>
      <li>
        <p><strong>Response Generation</strong>. The response generation task aims to predict the dialog response r auto-regressively based on the dialog context $c$. Here we use the standard NLL loss per token in each generated sequence:</p>

\[L_{RG} = - \sum_{t=1}^T \log p(r_t|c,r_{&lt;t})\]

        <p>for $r_t$ is the $t$-th word in $r$, and $r_{&lt;t}={r_1,…,r_{t-1}}$. So basically this is the greedy prediction.</p>
      </li>
      <li>
        <p><strong>DA Prediction</strong>: For a context response pair $(c; r)$ sampled from <code class="language-plaintext highlighter-rouge">UniDA</code>, the DA prediction task aims to predict the DA label $a$ of the response $r$ based ==merely on the context $c$==. However, since there are responses in <code class="language-plaintext highlighter-rouge">UniDA </code> associated with multiple DA, we model it as a Bernoulli Distribution such that $a\equiv (a_1,a_2,…,a_N)$ for $N$ being the number of dialog acts, and $p(a\vert c)=\prod_i^N p(a_i\vert c)$. Therefore, taking the dialog context $c$ as input, we add a multi-dimensional binary classifiers on $h_{cls}$ to predict each act $a_i$:</p>

\[L_{DA}=-\sum_{i=1}^N \{y_i \log p(a_i|c)+(1-y_i)\log(1-p(a_i|c)\}\]

        <p>and our prediction is a single $N$ dimensional vector</p>

\[p(a|c) = \mathrm{sigmoid}(\phi_b(h_{cls})) \in \mathbb{R}^N\]
      </li>
      <li>
        <p><strong>Consistency Regularization</strong>: because there is no DA label for <code class="language-plaintext highlighter-rouge">UniDial</code>, we do some kind of self-supervision on inferring the DA labels based on a given dialog context $c$. Specifically, we use the same network $\phi_b$ to predict the dialog act twice after a dropout layer:</p>

\[q(a|c)=\mathrm{softmax}(\phi_b(h_{cls})) \in \mathbb{R}^N\]

        <p>which basically predicts DA distribution of a given sequence. Then as we feed the sequence through the same dropout layer we have different hidden features, we can consider to match the two distributions:</p>

\[L_{KL} = \frac{1}{2}\left( D_{KL}(q_1||q_2)+  D_{KL}(q_2||q_1)\right)\]

        <p>essentially making sure that the learnt features are useful for DA prediction.</p>
      </li>
    </ul>
  </li>
  <li>
    <p>Hence, the pretraining objective is by mixing:</p>

    <ul>
      <li>
        <p><code class="language-plaintext highlighter-rouge">UniDA</code> samples which includes DA annotation, hence</p>

\[L = L_{RS} + L_{RG} + L_{DA} + L_{KL}\]
      </li>
      <li>
        <p><code class="language-plaintext highlighter-rouge">UniDial</code> samples which does not have DA annotation and some are very ==noisy==. Hence we consider a ==gating mechanism of weighting the $L_{KL}$== by looking at the entropy of the DA prediction $q(a\vert c)$:</p>

\[E = \sum_{i}^N q(a_i|c)\log(q(a_i|c))\]

        <p>and we want to weight more on samples with low entropy:</p>

\[g=\min \left\{ \max\left\{0, \frac{E_{\max} - (E-\log E)}{E_\max} \right\},1 \right\}\]

        <p>Therefore our loss for those data is:</p>

\[L = L_{RS}+L_{RG}+g L_{KL}\]
      </li>
    </ul>
  </li>
  <li>
    <p>Finally, once we trained our model with mixing <code class="language-plaintext highlighter-rouge">UniDA</code> and <code class="language-plaintext highlighter-rouge">UniDial</code>, it is a ==pretrained model and we can fine-tune it with our desired DA dataset== :</p>

\[L_{\text{fine-tune}} = L_{RS} + L_{RG} + \alpha L_{DA}\]

    <p>for $\alpha=1$ if the dataset has annotated DA, and $\alpha=0$ otherwise. Notice that a response selection objective is still here even if we in the end only need generation capability. This is because we want to alleviate the model discrepancy between pretraining and finetuning.</p>
  </li>
</ul>

<h2 id="godel-large-scale-pre-training-for-goal-directed-dialog">GODEL: Large-Scale Pre-Training for Goal-Directed Dialog</h2>

<blockquote>
  <p><strong>Aim</strong>: GODEL leverages a <strong>new phase of grounded pre-training</strong> designed to better support adapting GODEL to a wide range of downstream dialog tasks that <strong>require information external</strong> to the current conversation (e.g., a database or document) (i.e. the environment $E$ in the model) to produce good responses. While GODEL out-performs previous models such as DialoGPT, they also introduce a novel evaluation methodology: the introduction of a notion of <strong>utility</strong> that assesses the usefulness of responses (<strong>extrinsic</strong> evaluation) in addition to their communicative features (<strong>intrinsic</strong> evaluation, e.g. BLEU). We show that extrinsic evaluation offers improved inter-annotator agreement and correlation with automated metrics.</p>
</blockquote>

<p><strong>Setup</strong></p>

<ul>
  <li>
    <p>First, it is pre-trained in <strong>three phases</strong>, successively folding in data from web text, publicly available dialog (e.g., Reddit), and a collection of existing corpora that support grounded dialog tasks (conditioned on information external to current conversation).</p>
  </li>
  <li>
    <p>we must also acknowledge that machine-human conversation typically serves a purpose and aims to fulfill one or more goals on the part of the user. In other words, the model must offer utility to the user. It is this <strong>extrinsic</strong> dimension of functional <strong>utility</strong>, we suggest, that constitutes the proper focus of automated evaluation in general-domain models.</p>

    <p>Therefore, a evaluation metric called ==Utility== is proposed, so that cross-dataset comparison can be made instead of the adhoc metrics for a dataset (e.g. Success-rate and Inform-rate).</p>

    <ul>
      <li>currently the <strong>utility</strong> can only be human-evaluated</li>
    </ul>
  </li>
  <li>
    <p>after large scale pretraining, the model is ==tested== on <strong>Multi-WOZ</strong>, <strong>CoQA</strong>, <strong>Wizard of Wikipedia</strong>, and <strong>Wizard of the Internet</strong></p>
  </li>
</ul>

<p><strong>Pretraining</strong></p>

<ul>
  <li>
    <p>GODEL is pre-trained in three phases:</p>

    <ol>
      <li>Linguistic pre-training on <strong>public web documents</strong> to provide a basic capability for text generation.</li>
      <li>Dialog pre-training on public <strong>dialog data</strong> to improve the models’ handling of general conversational behavior.</li>
      <li><strong>Grounded dialog pre-training</strong> to enable grounded response generation</li>
    </ol>

    <p>and since we can have grounded dialog, the input can have $S,E$ for $S$ being the dialog context history, and the additional information needed (e.g. price of a hotel) is the environment $E$</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220922214111334.png" alt="image-20220922214111334" style="zoom:67%;" /></p>

    <p>then, the loss for all pretraining task is the cross entropy for decoding each word:</p>

\[p(T|S,E) = \prod_{n=1}^N p(t_n | t_1, ..., t_{n-1}, S,E)\]

    <p>so $T = {t_1,…,t_n}$ is the target sentence. Note that in tasks that does not require extra information, $E$ is left as empty.</p>
  </li>
  <li>the <strong>public dialog dataset</strong> comes from the Reddit comment chains used for DialoGPT</li>
  <li>the <strong>grounded dialog dataset</strong> contains a collection of: DSTC7 Task 2 corps, MS MARCO, UnifiedQA, SGD</li>
</ul>

<p><strong>Model</strong></p>

<ul>
  <li>backbone based on T5,  T5-Large, and GPT-J is used</li>
  <li>the models are trained for at most 10 epochs, and we select the best versions on the validation set</li>
</ul>

<p><strong>Experiments</strong></p>

<ul>
  <li>
    <p>we would like to test the <strong>few-shot finetuning</strong> ability of the mode, as well as full finetuning, because in general labeled task-oriented data is small in size</p>
  </li>
  <li>
    <p>dataset used for testing therefore include the ==untouched==: MultiWOZ, Wizard of Wikipedia, Wizard of Internet, and CoQA</p>

    <ul>
      <li>specifically, for few-shot we consider tuning 50 dialogs for each task for finetuning</li>
      <li><strong>automatic evaluation metrics are often setup already</strong> for those datasets, especially for MultiWOZ</li>
    </ul>
  </li>
  <li>
    <p>results for few-shot finetuning and full finetuning</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Few-shot Fine-tuning</th>
          <th style="text-align: center">Full Fine-tuning</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220922215023283.png" alt="image-20220922215023283" style="zoom:50%;" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220922215110548.png" alt="image-20220922215110548" style="zoom:50%;" /></td>
        </tr>
      </tbody>
    </table>
  </li>
</ul>

<h1 id="social-chatbot">Social Chatbot</h1>

<p>If the aim is to <strong>extend conversations</strong> by engaging user in anyway, what can we do?</p>

<h2 id="alquist-40-towards-social-intelligence-using-generative-models-and">Alquist 4.0 Towards Social Intelligence Using Generative Models and</h2>

<blockquote>
  <p><strong>Aim</strong>: The system Alquist has a goal to conduct a <strong>coherent and engaging conversation</strong>, which essentially uses a ==hybrid of hand-designed responses== and ==generative models==</p>

  <ul>
    <li>usually it is the hand designed responses tree that is functioning</li>
    <li>when OOD is detected from the tree (using intent classifier), response generative model is used.
      <ul>
        <li>note that <strong>a lot of control is needed</strong> for the generative model to merge nicely with the hand-written responses</li>
      </ul>
    </li>
  </ul>
</blockquote>

<p><strong>Setup</strong></p>

<ul>
  <li>
    <p>in order to entertain the conversational partner, one has to learn what entertains the partner first and then utilize the knowledge in the following conversation</p>

    <ul>
      <li><em>exploration</em> part, in which Alquist learns the preferences of the user, the main research and development emphasis was put on <strong>Skimmer</strong>, <strong>User Profile building</strong>, and <strong>Entity and Knowledge Utilization</strong></li>
      <li><em>exploitation</em> part, in which Alquist utilizes the knowledge about the user, the main emphasis was put on the research and development of the <strong>Dialogue Manager</strong>, <strong>Trivia Selection</strong>, <strong>Intent and Out-of-Domain classification</strong></li>
    </ul>
  </li>
  <li>
    <p>the basic flow looks like this:</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220930210844601.png" alt="image-20220930210844601" style="zoom:80%;" /></p>

    <p>and on a high level, we have on the left:</p>

    <ol>
      <li>First, the <strong>Skimmer</strong> analyses the user input for the mentioned pieces of information. The pieces of information are stored in the <strong>User Profile</strong>.</li>
      <li>Based on the values stored in the user profile, the <strong>Dialogue Management</strong> selects the next dialogue to start, or selects and presents some trivia related to the actual topic of a conversation.
        <ul>
          <li>The dialogue is directed according to the <strong>Intent classification</strong> of the user input.</li>
          <li>and if needed, knowledge base is queried for updated information</li>
        </ul>
      </li>
      <li>And finally, if the <strong>Out-of-domain classification</strong> recognizes an unexpected user input whenever there is, the Neural Response Generator produces a coherent response based on the context of the conversation. Otherwise, it is the scripted dialog.</li>
    </ol>
  </li>
</ul>

<p><strong>Main Components</strong></p>

<ul>
  <li>
    <p><strong>Skimmer</strong>: extract user information from sentences using regular expressions, and then stored the attribute-value into <strong>User Profile</strong></p>
  </li>
  <li>
    <p><strong>User Profile</strong>: essentially stores information about the user talking to Alexa:</p>

    <ul>
      <li>long-term profile: global information the bot needs when the same user converses again later</li>
      <li>short-term profile: stores information discussed during the current session/dialog</li>
    </ul>

    <p>so that short-term profile is reset at the beginning of each session</p>
  </li>
  <li>
    <p><strong>Entity and Knowledge Utilization</strong>: include ==factual information== about the entity that the user is interested in. This means you need to do:</p>

    <ul>
      <li><em>entity recognition</em>: a sequence tagging task performed by Bi-LSTM</li>
      <li><em>entity linking and knowledge base</em>: utilize external public domain-specific dataset to obtain <strong>information about the recognized entity</strong></li>
    </ul>
  </li>
  <li>
    <p><strong>Dialog Management</strong>: there are ==several small scripted dialogs (of intents)==, which are of high quality and will be of focus of this system. Then, since there are several dialogs, a <strong>dialog selector</strong> is used when a small dialog finished and needs to find a continuation dialog:</p>

    <ol>
      <li>the <strong>dialog selector</strong> collects information about the previous context, such as user profile, topics discussed (from tags), and some additional constraints if the new dialog can start (prerequisites)</li>
      <li>if there is no trivia presented for the presently discussed topic, <strong>choose a trivia</strong></li>
      <li>if there are some scripted dialogs that fulfill the constraints, consider them</li>
      <li>if there is none, use the <strong>neural response generator</strong></li>
    </ol>
  </li>
  <li>
    <p><strong>Trivia Selection</strong>: trivia scraped from reddit, and a model for outputting an embedding for <strong>scoring cosine similarity</strong> of a trivia and the current context is used</p>

    <ul>
      <li>during scraping, vector embeddings are also stored with texts</li>
      <li>during runtime, a candidate trivia list is retrieved using <strong>full-text search</strong></li>
      <li>context of $n=2$ most recent utterance-response pairs is encoded</li>
      <li>cosine similarity computed and most relevant trivia is selected</li>
    </ul>

    <p>experimentally, the choice of model is determined empirically:</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220930212606488.png" alt="image-20220930212606488" style="zoom:67%;" /></p>
  </li>
  <li>
    <p><strong>Intent and OOD Classification</strong>: since each user utterance is seen as intents, the scripted dialog cannot continue if an intent is OOD from the script:</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220930212722131.png" alt="image-20220930212722131" style="zoom:80%;" /></p>

    <p>where there are two intents in question:</p>

    <ul>
      <li>global intent: used/can occur at anywhere</li>
      <li>local intent: should be in the tree</li>
    </ul>

    <p>again, a combination of a) cosine similarity using a model b) filtering out intents if cosine similarity is not high enough c) if non is left, the intent is OOD.</p>

    <p>Which model to use is again chosen empirically, but notice that since such a task is not common in other dsets, they had to artificially create one using existing dset by leaving some intents out, and also hand-annotated a new one</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220930213028860.png" alt="image-20220930213028860" style="zoom:80%;" /></p>

    <p>notice that now performance speed also matters</p>
  </li>
  <li>
    <p><strong>Neural Response Generator</strong>: used in two tasks: a) if <strong>OOD</strong>, use this model to generate b) generates a follow up question when a <strong>trivia is selected</strong> in the dialog manager. Notice that the aim of this is to ==compensate== the incomplete scripted dialog in some cases, but the major focus should be on the success/controllability of the scripted dialog:</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220930213317181.png" alt="image-20220930213317181" style="zoom:80%;" /></p>

    <p>where notice that the hand-designed dialog is restored at the end. To have this controllability, the model:</p>

    <ul>
      <li><strong>either generates a question or a statement</strong> (otherwise content generated is quite random)</li>
      <li>so that statements followed by a question would be engaging</li>
      <li>and statement itself can be used to bridge the gap between generated and hand-designed content</li>
    </ul>

    <p>To achieve this, essentially:</p>

    <ul>
      <li>DialoGPT model is used, where the special token <code class="language-plaintext highlighter-rouge">QUESTION</code> and <code class="language-plaintext highlighter-rouge">STATEMENT</code> is appended/prompted along with the context</li>
      <li>when DialoGPT generated a few candidate questions/statements, a DialoRPT is used to <strong>rank the generated content</strong></li>
      <li>tested on several datasets, by:
        <ul>
          <li>using NLTK tokenizer and CoreNLP to annotate each sentence as a statement or a question</li>
          <li>then can convert many existing dialog dataset into such a format for generation</li>
        </ul>
      </li>
    </ul>

    <p>results:</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20220930213854750.png" alt="image-20220930213854750" style="zoom:80%;" /></p>

    <p>where for evaluation both automatic metric and human evaluation is used:</p>

    <ul>
      <li>automatic metric is straightforward as the labels are known</li>
      <li>human evaluation is done on if the generated content is <strong>relevant and factually true</strong>, i.e. it is <code class="language-plaintext highlighter-rouge">OK</code></li>
      <li>this is done similarly for checking the follow-up question generation after a trivia/fun facts, hence the two columns under <code class="language-plaintext highlighter-rouge">OK</code></li>
    </ul>
  </li>
</ul>

<h2 id="jason-wetson-guest-lecture">Jason Wetson Guest Lecture</h2>

<ul>
  <li>
    <p>Long term research goal</p>
  </li>
  <li>
    <p>ParlAI - collection of datasets, architectures, and integeration with Amazon MT</p>
  </li>
  <li>
    <p>find things that don’t work, but make <strong>your fix general</strong></p>
  </li>
  <li>
    <p>what is missing in current LM such as GPT-2/3:</p>

    <ul>
      <li>knowledge and hallucination in GPT-3</li>
      <li>hook on a retrieval system to incorporate knowledge and hence hallucinate less</li>
    </ul>
  </li>
  <li>
    <p>making an open domain dialog agent</p>

    <ul>
      <li>wanted to have various skills such as Peronality, Emphathy, etc.</li>
      <li>Hence collected trainning data on those skills</li>
      <li>trained Blenderbot
        <ul>
          <li>Blenderbot 1: just stacking transformers</li>
          <li>Blenderbot 2: lemon pick examples, and fix them. For exmaple, <strong>very forgetful</strong>, and a lot of <strong>factual errors</strong>
            <ul>
              <li>to solve factual errors, added internet search being part of the bot (generate an internet search query)</li>
              <li>to solve the memory problem, had an addiitonal long term memory module to retrieve information</li>
              <li>can even be used to recommend pizza places</li>
            </ul>
          </li>
          <li>Blenderbot 3: a bigger transformer, but collect more data to fix prior errors (e.g. still 3% hallucinations)
            <ul>
              <li>takes feedback live from people to learn during interactions, so <strong>data from adversarial testers could be used</strong>!</li>
              <li>an big architecture, deciding if to do internet search, geneatre response, access memory, etc.</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>how do we use those feedbacks from humans?</p>

    <ul>
      <li>
        <p>==Director==: for each token, add a classification head on thumb-up or down. Therefore, when you generate, you can combine the two scores</p>

        <ul>
          <li>
            <p>https://arxiv.org/pdf/2206.07694.pdf</p>
          </li>
          <li>
            <p>when you thumbs down, label entire sentence as negative. Will that smudge down good words, hence the how do you evaluate that classifier. This is what it does, but it still works.</p>
          </li>
        </ul>
      </li>
      <li>
        <p>however, in some cases that labelling can be more sensitive: e.g. if you have a gold correction sentence corresponding to a sentence, then you can align and <em>extract the part of the sentence</em> that is wrong.</p>
      </li>
    </ul>
  </li>
</ul>

<p><strong>Still Problems on Chatbots</strong></p>

<ul>
  <li>why is repetition ==neuron degenration==, liable to repeat</li>
</ul>

<p><strong>Future of Chatbots</strong>:</p>

<ul>
  <li>how controllable is it to be applied in real life? Jason: probably not medical. But for entertainment, for gaming, recommendations pretty confident.</li>
  <li>Future of incoporating multimodal input into conversations? Jason: if text can be toxic, images can be even more toxic</li>
</ul>

<h1 id="knowledge-enriched-dialog-systems">Knowledge Enriched Dialog Systems</h1>

<p>Dialog system but aims to use/find external information to make responses more factual</p>

<h2 id="increasing-faithfulness-in-knowledge-grounded-dialogue-with-controllable-features">Increasing Faithfulness in Knowledge-Grounded Dialogue with Controllable Features</h2>

<blockquote>
  <p><strong>Aim</strong>: Make a dialog system that is <strong>controlled to stay faithful</strong> to the evidence. They approach this by:</p>

  <ul>
    <li>adding control tokens prepended to the input sequence</li>
    <li>train dataset using additional information on the <em>objectiveness</em>, <em>lexical precision</em>, and <em>entailment</em> (it generated response follows from the given evidence)</li>
  </ul>
</blockquote>

<p><strong>Setup</strong></p>

<ul>
  <li>
    <p>the general idea is to use a piece of evidence (provided beforehand) added to the conversation history as input</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20221008141417379.png" alt="image-20221008141417379" style="zoom:80%;" /></p>
  </li>
  <li>
    <p>to train this type of model, dataset with only informative utterances are needed, but that kind does not exist. Since the only available ones (e.g. Wizard of Wikipedia) are generated by humans, they <strong>mix chi-chat utterances/subjectivity</strong> to <strong>objective informative facts</strong> in their responses</p>

    <ul>
      <li>
        <p>to deal with it, you either remove all subjective ones (e.g. has personal pronouns), but that leaves too little training data left</p>

        <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20221008141727577.png" alt="image-20221008141727577" style="zoom:80%;" /></p>
      </li>
      <li>
        <p>or, as used in this paper, they score existing samples based on <em>objective voice</em>, <em>lexical precision</em> (sticking to fact), and <em>entailment</em> to provide additional ==signal during training and hence control during inference==</p>

        <ul>
          <li>ablation study shows that those control does change performance</li>
          <li>those control tokens are discussed next</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>for training, <strong>Wizard of Wikipedia</strong> is used because there is a <strong>gold-labelled evidence</strong> provided in the dataset</p>
  </li>
</ul>

<p><strong>Model</strong></p>

<ul>
  <li>
    <p>tested on GPT2 and T5, hence overall pipeline looks like:</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20221008142202615.png" alt="image-20221008142202615" style="zoom: 67%;" /></p>
  </li>
  <li>
    <p>they used two approaches in total to add control</p>

    <ul>
      <li>added the <strong>special control code</strong> during training:
        <ul>
          <li><em>objective voice</em>: estimated as a binary variable whether if first person pronoun is included</li>
          <li><em>lexical precision</em>: want most of the words in the response to be contained somewhere in the evidence (drawback is semantic similarity missing). This is then mapped to <code class="language-plaintext highlighter-rouge">&lt;high-prec&gt;</code>, <code class="language-plaintext highlighter-rouge">&lt;med-prec&gt;</code>, and <code class="language-plaintext highlighter-rouge">&lt;low-prec&gt;</code></li>
          <li><em>entailment</em>: a binary variable to encourage response semantically entailed by the evidence. During training those are scored by a SOTA natural language inference model to estimate its entailment. Always <code class="language-plaintext highlighter-rouge">&lt;entailed&gt;</code> during inference</li>
        </ul>
      </li>
      <li><strong>resampling</strong>: sample for $d$ times until a satisfactory response is found</li>
    </ul>
  </li>
  <li>
    <p>after training, performance is evaluated by</p>

    <ul>
      <li>
        <p><strong>automatic metric scoring</strong> the responses on <em>objective voice</em>, <em>lexical precision</em>, <em>entailment</em>, and <em>BLEU</em> score compared to the original gold response</p>

        <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20221008143707179.png" alt="image-20221008143707179" style="zoom:67%;" /></p>

        <p>where ablation study is also here. However, since those metrics are all self-designed, human eval is needed.</p>
      </li>
      <li>
        <p><strong>human evaluation:</strong> subsample examples from generated response from the previous experiment and ask MT to score:</p>

        <table>
          <thead>
            <tr>
              <th style="text-align: center">Table 4</th>
              <th style="text-align: center">Table 5</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td style="text-align: center"><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20221008143835131.png" alt="image-20221008143835131" /></td>
              <td style="text-align: center"><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20221008143850486.png" alt="image-20221008143850486" /></td>
            </tr>
          </tbody>
        </table>

        <p>where it seems that there is <strong>better faithfulness (to evidence) and objectivity</strong></p>

        <ul>
          <li>
            <p>those scores are also found to be highly correlated to the automatic eval scores</p>
          </li>
          <li>
            <p>notice that the gold-evidence is itself relevant to the conversation. So if I just copy-paste, or just summarize the evidence, won’t that give me near perfect score on all three dimensions + probably also highly relevant and high fluency (since the evidence is a fluent text)? Trade off between abstractive and extractive summarization</p>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="language-models-that-seek-for-knowledge-modular-search--generation-for-dialogue-and-prompt-completion">Language Models that Seek for Knowledge: Modular Search &amp; Generation for Dialogue and Prompt Completion</h2>

<blockquote>
  <p><strong>Aim</strong>: An e2e model that includes capability of <strong>Search-Engine, Knowledge Extraction, and Response Generation</strong> all into one single model, while treating them as separate modular functionality. The final aim is again to be an open-domain knowledge grounded conversational agent.</p>

  <ul>
    <li>achieved by using appending ==special tokens in the encoder== (or decoder) to indicate which module is being invoked</li>
    <li>done study on treating each module as a separate model as well, but only found marginal improvement while model size becomes 3x big</li>
  </ul>
</blockquote>

<p><strong>Setup</strong>: the overall pipeline would look like:</p>

<ol>
  <li>
    <p>==search module==: input dialog context, <strong>generate a relevant search query</strong> for internet search engine (Bing)</p>
  </li>
  <li>
    <p>==knowledge module==: input the dialog context + returned documents (intersecting with Common Crawl and take top 5) and <strong>generate their most relevant portion</strong> to the context (i.e. extracting the useful portion)</p>

    <ul>
      <li>
        <p>for GPT based backbone, just append</p>
      </li>
      <li>
        <p>for T5 based backbone, do a <em>fusion-in-decoder</em> which is essentially processing Question + Each Passage in parallel by an encoder, then concatenate the hidden encoder states, and feed into decoder (the model thus performs evidence fusion in the decoder only, and we refer to it as Fusion-in-Decoder)</p>

        <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20221008145447935.png" alt="image-20221008145447935" style="zoom:80%;" /></p>

        <p>note that this style was also used a lot in Multi-Modal (visual-semantic grounding) work</p>
      </li>
    </ul>
  </li>
  <li>
    <p>==response module==: input context and the extracted knowledge, and <strong>generate a response</strong>.</p>
  </li>
</ol>

<p><strong>Models</strong>:</p>

<ul>
  <li>in addition to GPT and T5, they additionally trained an encoder-decoder model from scratch, and called it <strong>SeeKeR</strong></li>
  <li>specifically, it is pretrained on Reddit as well as LM tasks used in RoBERTa and CC100en</li>
</ul>

<p><strong>Training</strong>: two trainable tasks are proposed:</p>

<ul>
  <li>
    <p>Tasks for dialog</p>

    <ul>
      <li><strong>search module task</strong>: using Wizard of Internet which has relevant search queries as labels, train supervised</li>
      <li><strong>knowledge module tasks</strong>: need to extract knowledge from documents. Therefore, knowledge grounded dialog datasets with gold knowledge annotations are used, as well as QA datasets.</li>
      <li><strong>response module tasks</strong>: can reuse much dataset in the knowledge task by using context + gold knowledge response (and their special tokens) to generate the gold label response</li>
    </ul>
  </li>
  <li>
    <p>Tasks for LM: improve language ability for each component, hence they are based on Common Crawl and is large in size. Also, this will be <em>directly training for the prompt completion task</em>, which is essentially LM</p>

    <ul>
      <li><strong>search module tasks</strong>: predict document titles from document</li>
      <li><strong>knowledge module task</strong>: constructed a dataset where document contain the retrieved sentence in addition to the document, and the task is to get the retrieved sentence (i.e. extract only the portion that is relevant to the question)</li>
      <li><strong>response module task</strong>: input context plus the knowledge sentence and target is next sentence, using the same dset as above</li>
    </ul>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20221008150843877.png" alt="image-20221008150843877" /></p>
  </li>
</ul>

<p><strong>Evaluation</strong></p>

<ul>
  <li>
    <p>compare against models such as BlenderBot 1,2, etc</p>
  </li>
  <li>
    <p><strong>Automatic Evaluation</strong>: can be done using Knowledge F1 (overlap of the dialog response with annotated gold knowledge)</p>

    <ul>
      <li>seems that only with gold knowledge response the model is working</li>
      <li>==TODO== knowledge F1 ignores the semantic, and a lot of discrepancy with the human evaluation?</li>
    </ul>
  </li>
  <li>
    <p><strong>Human Evaluation</strong>: since this is e2e, it can converse with MT. Then for each turn in a conversation, they are asked to score several attributes from how knowledgeable it is to its engagingness.</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">Automatic</th>
          <th style="text-align: center">Human</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20221008151133688.png" alt="image-20221008151133688" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20221008151125898.png" alt="image-20221008151125898" /></td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <p><strong>Ablation Study</strong>:</p>

    <ul>
      <li>
        <p>done on the pretraining objectives with those additional dialog datasets</p>
      </li>
      <li>
        <p>testing if the additional LM task is helpful or not</p>

        <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20221008151408879.png" alt="image-20221008151408879" /></p>

        <p>==TODO== it seems that with LM it is better, so are the modules compared the one with LM or the “standard SeeKeR”?</p>
      </li>
      <li>
        <p>tested if separating each task to a different module would help. It does marginally but 3x the size</p>
      </li>
    </ul>
  </li>
  <li>
    <p><strong>Prompt Completion</strong>: in addition to conversing, it can perform prompt (part of a factual statement) and complete it with factual information</p>

    <ul>
      <li>used topical prompts, ranges from Prime Minister of Haiti to the Rio Carnival</li>
      <li>prompts look like <code class="language-plaintext highlighter-rouge">In recent developments we have learned the following about &lt;TOPIC&gt;</code> and then ask the model to continue</li>
      <li>evaluation is done by human as well</li>
    </ul>
  </li>
  <li>
    <p><strong>Effect of Multi-Task Training</strong></p>

    <ul>
      <li>Prompt Completion: a fully multi-tasked SeeKeR model performs very well, superior to all our GPT2-based SeeKeR models on every metric</li>
      <li>Open-Domain Dialog: The model performs comparably, if not better, in all automated metrics on the task. In human evaluations, results suffer compared to the dialogue fine-tuned only model, with most metrics being lower</li>
    </ul>
  </li>
</ul>

<h1 id="mixed-social-and-task-oriented-dialogue-systems">Mixed Social and Task-Oriented Dialogue Systems</h1>

<p>There is a goal, such as donation, but to be <strong>effective social strategies are required</strong> (e.g. to persuade, might need personal stories)</p>

<h2 id="inspired-toward-sociable-recommendation-dialog-systems">INSPIRED: Toward Sociable Recommendation Dialog Systems</h2>

<blockquote>
  <p><strong>Aim</strong>: Lack of dataset annotated with sociable strategies, but want to validate <strong>whether sociable recommendation strategies are effective</strong> for making a successful recommendation (which is task-oriented)</p>

  <ul>
    <li>design an annotation scheme related to recommendation strategies based on social science theories</li>
    <li>analyze and show that strategies such as sharing personal opinions or communicating with encouragement more frequently lead to successful recommendations</li>
  </ul>
</blockquote>

<p><strong>Dataset</strong>: the <code class="language-plaintext highlighter-rouge">Inspired</code> dataset</p>

<ul>
  <li>since we are doing recommendation, they <strong>curate a database with movies</strong> and make sure they include movie trailers and metadata information</li>
  <li>then a dataset is constructed by MT to
    <ul>
      <li>as a <strong>recommender</strong>: gather preference information and make recommendation</li>
      <li>as a <strong>seeker</strong>: looks of recommendation, and gets to watch the trailer at the end (used as an indicator of task success)</li>
    </ul>
  </li>
  <li>additional collection details
    <ul>
      <li>first fill out personality traits</li>
      <li>perform the conversation</li>
      <li>perform a post-task survey of demographic questions</li>
      <li>Seeker asked to rate the recommendation and get a chance to skip or watch the trailer</li>
    </ul>
  </li>
  <li><strong>strategy annotation</strong>
    <ul>
      <li>divide the recommendation strategy into two categories
        <ul>
          <li><strong>sociable strategies:</strong> eight strategies related to recommendation task to build rapport with seeker
            <ul>
              <li>e.g. personal opinion, personal experience, similarity, encouragement, etc.</li>
              <li>==what they want to test==, if this is effective in task-oriented setting</li>
            </ul>
          </li>
          <li><strong>preference elicitation</strong>: to know the seeker’s taste directly
            <ul>
              <li>e.g. experience inquiry, opinion inquiry</li>
            </ul>
          </li>
          <li>(non-strategy: other utterances such as greeting)</li>
        </ul>
      </li>
      <li>first ask expert to label, then use those to evaluate MT’s labels and get <strong>consistent ones based on Kappa agreement</strong></li>
    </ul>
  </li>
  <li><strong>recommendation success annotation</strong>: success if defined if seekers finished watching a substantial portion (50%) of the recommended movie trailer and rate the trailer with a high score</li>
</ul>

<p><strong>Results</strong></p>

<ul>
  <li>
    <p>found that ==social strategies does correlate to the probability of successful recommendation==</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20221014201122513.png" alt="image-20221014201122513" style="zoom:67%;" /></p>
  </li>
  <li>
    <p>examine if the <strong>quality of the movie matters more than recommendation</strong></p>

    <ul>
      <li>==TODO==: “<em>adding movie attributes</em> such as genre, recent release data have an impact on successful recommendation” how is this related to the question? I imagine something like measuring the correlation between quality of the movie v.s. successful recommendation and failed ones.</li>
      <li>found that 96% of recommended movies are covered by the top five genres</li>
    </ul>
  </li>
</ul>

<p><strong>Modeling</strong>: recommendation dialog system</p>

<ul>
  <li>
    <p>evaluate and show that using the strategies in this <code class="language-plaintext highlighter-rouge">Inspired </code> dataset can create a <strong>better recommendation system</strong></p>
  </li>
  <li>
    <p><strong>baseline</strong> dialog model uses two separate pretrained language models to learn the recommender and the seeker <strong>separately</strong></p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20221014201740089.png" alt="image-20221014201740089" /></p>

    <p>additionally, key terms such as movie names and actor names are delexicalized to terms such as  <code class="language-plaintext highlighter-rouge">[Movie_Title_0]</code> for later replacement</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20221014201838409.png" alt="image-20221014201838409" /></p>
  </li>
  <li>
    <p><strong>strategy-incorporated model</strong>: generate both the sentences but also strategies</p>

    <ul>
      <li>The model first generates five candidate sentences. Then, it randomly selects a generated candidate that either contains “encouragement” strategy or has the greatest sentence length</li>
      <li>so the model is <em>only</em> either doing encouragement or any other DA but has is the longest = i.e. <strong>prioritize encouragement, then longest</strong></li>
    </ul>
  </li>
  <li>
    <p>use human evaluation to see which system is better (or can’t tell which one is better) in terms of fluency, naturalness, persuasion …</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20221014202221999.png" alt="image-20221014202221999" /></p>

    <p>==TODO== why, if you only prioritize encouragement, you can better fluency, consistency, naturalness? How much is this due to selecting long sentences?</p>
  </li>
</ul>

<h2 id="effects-of-persuasive-dialogs-testing-bot-identities-and-inquiry-strategies">Effects of Persuasive Dialogs: Testing Bot Identities and Inquiry Strategies</h2>

<blockquote>
  <p><strong>Aim</strong>: investigate how <strong>identities</strong> (if you know the bot is actually a bot) and <strong>inquiry strategies</strong> (ask personal related questions v.s. task related questions) influence the conversation’s effectiveness. Specifically, it is measured by the performance on <code class="language-plaintext highlighter-rouge">Persuasion4Good</code> dataset.</p>
</blockquote>

<p><strong>Hypothesis</strong></p>

<ol>
  <li>Hypothesis 1: Both identities (whether if you think it is chatbot or human) yield <strong>equivalent persuasive and interpersonal outcomes</strong>.</li>
  <li>Hypothesis 2: <strong>Personal inquires will yield greater persuasive</strong> and interpersonal outcomes than non-personal inquiries.</li>
  <li>Hypothesis 3: There is an interaction effect between <strong>chatbot identity and persuasive inquiry type</strong> on persuasive and interpersonal outcomes.
    <ul>
      <li>We speculate that if the chatbot tries to interact in a personal and human-like way (e.g., by asking personal questions), people may feel uncomfortable, which can subsequently degrade the interpersonal perceptions of the partner as well as their persuasiveness</li>
      <li>e.g. if chatbot perceived as human + doing personal inquiry makes it more persuasive</li>
    </ul>
  </li>
</ol>

<p><strong>Setup</strong></p>

<ul>
  <li>use <code class="language-plaintext highlighter-rouge">Persuasion4Good</code> dataset</li>
  <li>categorized the 10 persuasion strategies into two groups
    <ul>
      <li><strong>persuasive appeals:</strong> do persuasion such as <em>emotional appeal</em></li>
      <li><strong>persuasive inquires:</strong> ask questions to facilitate persuasion. This is further split into
        <ul>
          <li>Non-personal Inquiry refers to relevant questions without asking personal information. It include two sub-categories: 1) source-related inquiry that asks if the persuadee is aware of the organization, and 2) task-related inquiry that asks the persuadee’s opinion and experience related to the donation task.</li>
          <li>Personal Inquiry asks about persuadee’s personal information relevant to donation for charity but not directly on the task, such as “Do you have kids?”</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><strong>Dialog System</strong></p>

<ul>
  <li>
    <p>use <strong>agenda-based dialog system</strong>, meaning that the flow/intent of what to say is more or less predefined</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20221014203710682.png" alt="image-20221014203710682" style="zoom:80%;" /></p>
  </li>
  <li>
    <p>the overall model thus contains three main components</p>

    <ul>
      <li><strong>NLU</strong>: input user utterance and output user dialog act
        <ul>
          <li>a hard task and hence enhanced the input with sentiment score, context information output from CNN and pretrained character embedding, got around 62%</li>
          <li>==TODO== uses a regular expression and pre-defined rules to reach 84.1%. What happened here?</li>
        </ul>
      </li>
      <li><strong>Dialogue Manager</strong>: outputs the next system dialog act, but follows the agenda shown above
        <ul>
          <li>the first green block is the control experiment: want to measure if having each of the four strategy would affect overall persuasion = ==if personal inquires yield more persuasiveness==</li>
          <li>then, the system proceeds to persuasive appeal, where a <strong>fixed strategy order</strong>  is used</li>
          <li>finally, ==when user dialog act is <code class="language-plaintext highlighter-rouge">agree-donation</code>== (predicted by NLU), enter <code class="language-plaintext highlighter-rouge">Agree Donation</code> stage and always present the three task in the order: ask donation amount, propose more donation, …</li>
          <li>in addition, a factual QA component is there in case if user asked fact related questions related to the charity</li>
        </ul>
      </li>
      <li><strong>Natural Language Generation</strong>: there are three ways to generating: a) template base, b) retrieval-based from the training dataset and c) generation
        <ul>
          <li>==template-based for Persuasive Inquiry:== we want to study the effects of different persuasive inquiries <strong>instead of the impact of the surface-form</strong>; therefore, the surface-forms of the persuasive inquiries should be a controlled variable that stays the same across experiments.</li>
          <li><strong>retrieval-based persuasive appeal</strong>: want to also be templated based but now you have a large context, hence that doesn’t work anymore</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><strong>Evaluation</strong></p>

<ul>
  <li>designed 2x4 cases
    <ul>
      <li>2 cases of having bot being labelled as <code class="language-plaintext highlighter-rouge">Jessie</code> or <code class="language-plaintext highlighter-rouge">Jessie (bot)</code></li>
      <li>4 cases of each of the persuasive inquiry strategy: personal + non-personal inquiry vs. personal inquiry vs. nonpersonal inquiry vs. no inquiries</li>
    </ul>
  </li>
  <li>
    <p>first found not much difference in which strategy used overall</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20221014204957608.png" alt="image-20221014204957608" /></p>

    <p>but then they found that participants are <strong>perceiving bots are humans or vice versa despite the given label</strong></p>
  </li>
  <li>
    <p>found that if bots are ==perceived as human==, then the above it matters</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20221014205113538.png" alt="image-20221014205113538" /></p>

    <p>this shows that being a human is more persuasive hence:</p>

    <ul>
      <li>==nullifies Hypothesis 1==, which claims being perceived as human or machine does not matter</li>
      <li>==supports Hypothesis 2==, that using personal inquires help</li>
    </ul>
  </li>
  <li>
    <p>finally, we can check cases when the person believed in the given labelled identity</p>

    <p><img src="/lectures/images/2022-10-19-COMS6998_Dialog_Systems/image-20221014205642372.png" alt="image-20221014205642372" /></p>

    <p>where this means that if bot’s identity does not matter, then in each pair of blue and green bar it should be same height:</p>

    <ul>
      <li>when participants talked to “Jessie (bot)” but perceiving it as a human, they were also more likely to donate than those in the same condition but perceiving it as a bot. In contrast, when participants talked to “Jessie” but suspected it was a bot, they were ==least likely to make a donation, which supported the UVM in Hypothesis 3==</li>
      <li>also, result showed that “Jessie (bot)” would decrease the donation probability ($\beta$=−0.52,  $p$&lt;0.05). So the <strong>bot’s identity matters in the persuasion outcome, which again disproves Hypothesis 1</strong></li>
    </ul>
  </li>
</ul>]]></content><author><name></name></author><category term="2022@Columbia" /><summary type="html"><![CDATA[6998: Conversational AI]]></summary></entry><entry><title type="html">STFCS234 Reinforcement Learning</title><link href="/lectures/2022@columbia/STFCS234_Reinforcement_Learning.html/" rel="alternate" type="text/html" title="STFCS234 Reinforcement Learning" /><published>2022-09-30T00:00:00-04:00</published><updated>2022-09-30T00:00:00-04:00</updated><id>/lectures/2022@columbia/STFCS234_Reinforcement_Learning</id><content type="html" xml:base="/lectures/2022@columbia/STFCS234_Reinforcement_Learning.html/"><![CDATA[<p>Stanford Reinforcement Learning:</p>

<ul>
  <li>course video: https://www.youtube.com/watch?v=FgzM3zpZ55o&amp;list=PLoROMvodv4rOSOPzutgyCTapiGlY2Nd8u&amp;index=1</li>
  <li>assignments: https://github.com/Huixxi/CS234-Reinforcement-Learning-Winter-2019</li>
  <li>slides: https://web.stanford.edu/class/cs234/CS234Win2019/schedule.html</li>
</ul>

<h1 id="introductions">Introductions</h1>

<p>Reinforcement Learning involves</p>

<ul>
  <li><strong>Optimization:</strong> find an optimal way to make decisions</li>
  <li><strong>Delayed consequences:</strong> Decisions now can impact things much later
    <ul>
      <li>When planning: decisions involve reasoning about not just immediate benefit of a decision but also its longer term ramifications</li>
      <li>When learning: temporal credit assignment is hard (what caused later high or low rewards?)</li>
    </ul>
  </li>
  <li><strong>Exploration:</strong> Learning about the world by making decisions and trying
    <ul>
      <li>censored data: Only get a reward (label) for decision made. i.e. only have one reality</li>
      <li>in a sense that we need to collect our own training data</li>
    </ul>
  </li>
  <li><strong>Generalization</strong>
    <ul>
      <li>learn a policy which can do interpolation/extrapolation, i.e. handle cases when not met in training data</li>
    </ul>
  </li>
</ul>

<p>Examples:</p>

<table>
  <thead>
    <tr>
      <th> </th>
      <th style="text-align: center">Example/Comment</th>
      <th style="text-align: center">Strategies Involved</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Go as RL</td>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220516211946230.png" alt="image-20220516211946230" style="zoom:50%;" /></td>
      <td style="text-align: center">Optimization<br />Delayed Consequences<br />Generalization</td>
    </tr>
    <tr>
      <td>Supervised ML ad RL</td>
      <td style="text-align: center"> </td>
      <td style="text-align: center">Optimization<br />Generalization</td>
    </tr>
    <tr>
      <td>Imitation Learning as RL</td>
      <td style="text-align: center">Learns from experience…of others; <br />Assumes input demos of good policies<br />Reduces RL to supervised learning</td>
      <td style="text-align: center">Optimization<br />Delayed Consequences<br />Generalization</td>
    </tr>
  </tbody>
</table>

<h1 id="intro-to-sequential-decision-making">Intro to Sequential Decision Making</h1>

<p>The problem basically looks like</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220516213345977.png" alt="image-20220516213345977" style="zoom: 67%;" /></p>

<ul>
  <li>
    <p><strong>Goal</strong>: Select actions to maximize total ==expected== future ==reward==</p>
  </li>
  <li>
    <p>May require balancing immediate &amp; long term rewards</p>
  </li>
</ul>

<p>Note that it is critical to pick a good reward function. Consider the following RL system:</p>

<ul>
  <li>Agent: AI Teacher</li>
  <li>Action: pick a addition or subtraction problem for student to do</li>
  <li>World: some student doing the problem</li>
  <li>Observation: whether if student did it correctly or not</li>
  <li>Reward: +1 if correct, -1 if not</li>
</ul>

<p>What would happen in this case? The agent could learn to <strong>give easy problems</strong>.</p>

<hr />

<p>A more formal formulation of the task looks like</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220516214443813.png" alt="image-20220516214443813" style="zoom:67%;" /></p>

<p>where we have:</p>

<ul>
  <li>at each time $t$
    <ul>
      <li>agent takes some <strong>action</strong> $a_t$</li>
      <li>world updates given action $a_t$, emits <strong>observation</strong> $o_t$ and <strong>reward</strong> $r_t$</li>
      <li>agent receives observation $o_t$ and reward $r_t$</li>
    </ul>
  </li>
  <li>therefore, we essentially have a <strong>history</strong> $h_t=(a_1,o_1,r_1,…,a_t,o_t,r_t)$</li>
  <li><strong>State</strong> is information assumed to determine what happens next
    <ul>
      <li>usually the agent uses (some function of) the history to determine what happens next, so $s_t = f(h_t)$</li>
      <li>This is true state of the world is hidden from agent</li>
    </ul>
  </li>
</ul>

<h2 id="markov-assumption-and-mdp">Markov Assumption and MDP</h2>

<p>Why is Markov assumption so popular? It turns out that such an assumption can <strong>always be satisfied</strong> if we set state as history:</p>

\[p(s_{t+1}|s_t, a_t) = p(s_{t+1}|h_t,a_t)\]

<p>where RHS is like the true model, and LHS is what we are modelling.</p>

<p>However, in practice we often assume the <strong>most recent observation</strong> being sufficient to model the state</p>

\[p(s_{t+1}|s_t, a_t) = p(s_{t+1}|o_t,a_t)\]

<p>So that:</p>

<ul>
  <li>
    <p>If we consider most recent observation as your state, so $s_t = o_t$, then <strong>the agent is modelling the world as MDP</strong></p>
  </li>
  <li>
    <p>If agent state is not the same as the world state (e.g. Use history $s_t = h_t$ , or beliefs of world state, or RNN), then it is a <strong>Partially Observable MDP</strong>, or POMDP</p>
    <ul>
      <li>e.g. playing a poker game, where agent only sees its own card</li>
    </ul>
  </li>
</ul>

<p>Or other state representation (e.g. past 4 states). This choice affects <strong>how big our state space is</strong>, which has big implications for:</p>

<ul>
  <li>Computational complexity</li>
  <li>Data required</li>
  <li>Resulting performance</li>
</ul>

<hr />

<p>An example of this would be:</p>

<ul>
  <li>a state include all history, e.g. our entire life trajectory = have only a single data sample</li>
  <li>a state include only most recent life experience = a lot of data samples</li>
</ul>

<h2 id="types-of-sequential-decision-process">Types of Sequential Decision Process</h2>

<p>In reality, we may face different types of problems, each with different properties:</p>

<ul>
  <li><strong>Bandits</strong>: actions have no influence on next observations
    <ul>
      <li>e.g. whether if I clicked on the advertisement does not affect who the next customer (coming to the website) is</li>
    </ul>
  </li>
  <li><strong>MDP and POMDP</strong>: Actions influence future observations</li>
  <li><strong>Deterministic World</strong>: given the same state and action, we will have the same/only one possible observation and reward
    <ul>
      <li>Common assumption in robotics and controls</li>
    </ul>
  </li>
  <li><strong>Stochastic</strong>:  given the same state and action, we can have multiple possible observation and reward
    <ul>
      <li>Common assumption for customers, patients, hard to model domains</li>
      <li>can think of the case that we don’t have good enough model for deterministic coin flipping, hence we model it as stochastic</li>
    </ul>
  </li>
</ul>

<h2 id="example-of-mdp">Example of MDP</h2>

<p>Consider the case of having a Mars Rover exploring, which has seven possible states/locations to explore. We start at state $s_4$</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220516222302501.png" alt="image-20220516222302501" style="zoom:50%;" /></p>

<p>so we have</p>

<ul>
  <li><strong>States</strong>: Location of rover $(s_1, …,s_7)$</li>
  <li><strong>Actions</strong>: Left or Right</li>
  <li><strong>Rewards</strong>: $+1$ in state $s_1$,  $10$ in state $s_7$,  $0$ in all other states</li>
</ul>

<p>We want to find a program that tells the rover what to do next. In general RL problems can be modeled in three ways</p>

<ul>
  <li>
    <p><strong>Model</strong>: Representation of how the ==world== changes in response to agent’s action</p>

    <ul>
      <li>
        <p>in this case we need to model transition</p>

\[p(s_{t+1}=s' | s_t = s,a_t=a)\]

        <p>for any action state combination</p>
      </li>
      <li>
        <p>and the reward</p>

\[r(s_t=s,a_t=a) \equiv \mathbb{E}[r_t|s_t =s,a_t=a]\]

        <p>for any action state combination</p>
      </li>
    </ul>
  </li>
  <li>
    <p><strong>Policy</strong>: function mapping agent’s states to action (i.e. what to do next given current state)</p>

    <ul>
      <li>
        <p>hence we model, if deterministic</p>

\[\pi(s)=a\]

        <p>spits out an action given a state</p>
      </li>
      <li>
        <p>if stochastic</p>

\[\pi(a|s) = P(a_t=a|s_t=s)\]

        <p>being a probability distribution given a state.</p>
      </li>
    </ul>
  </li>
  <li>
    <p><strong>Value function</strong>: ==Future rewards== from being in a state and/or action when following a particular policy</p>

    <ul>
      <li>
        <p>we consider the ==expected== discounted sum of future rewards <strong>under/given a particular policy $\pi$</strong></p>

\[V_\pi(s_t=s) = \mathbb{E}_\pi [r_t + \gamma r_{t+1} + \gamma^2 r_{t+2}+...|s_t=s]\]

        <p>for $\gamma \in [0,1)$ specifying how much we care about the future reward compared to current reward.</p>
      </li>
    </ul>
  </li>
</ul>

<h2 id="types-of-rl-agents">Types of RL Agents</h2>

<p>Therefore, from the above discussion, we essentially have two types of RL algorithms:</p>

<ul>
  <li><strong>Model-based</strong>
    <ul>
      <li>explicitly having a model of the world (e.g. models the transition function, reward)</li>
      <li>may or may not have an explicit policy and/or value function (e.g. if needed compute from the model)</li>
      <li>no longer needs interaction/additonal experience</li>
    </ul>
  </li>
  <li><strong>Model-free</strong>
    <ul>
      <li>explicitly have a value function and/or policy function</li>
      <li>no model of the world</li>
    </ul>
  </li>
</ul>

<p>A more complete diagram would be</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220516224048782.png" alt="image-20220516224048782" style="zoom: 67%;" /></p>

<h2 id="key-challenges-in-making-decisions">Key Challenges in Making Decisions</h2>

<ul>
  <li><strong>Planning</strong> (Agent’s internal computation)
    <ul>
      <li>Given model of how the world works
        <ul>
          <li>i.e. you already know the transition and rewards</li>
        </ul>
      </li>
      <li>need an algorithm to compute how to act in order to maximize expected reward
        <ul>
          <li>With no interaction with real environment</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>Reinforcement learning</strong> (we don’t even have the model)
    <ul>
      <li>Agent doesn’t know how world works</li>
      <li>Interacts with world to implicitly/explicitly learn how world works</li>
      <li>Agent improves policy (may involve planning)</li>
    </ul>
  </li>
</ul>

<p>so we see that RL deals with more problems: we also need to decide what action to do for a) getting the necessary information of the world, and b) achieve high future rewards</p>

<hr />

<p><em>For instance</em></p>

<ul>
  <li>Planning: Chess game
    <ul>
      <li>we already know all the possible moves, and rewards (who wins/losses)</li>
      <li>we need an algorithm to tell us what to do next based on this model
        <ul>
          <li>doing a tree search, etc.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Reinforcement Learning: Chess game with no rule book, i.e. don’t know the rule of chess
    <ul>
      <li>first we need to directly learn by taking actions and see what happens</li>
      <li>Try to find a good policy over time</li>
    </ul>
  </li>
</ul>

<h2 id="important-components-in-rl">Important Components in RL</h2>

<p>Agent <strong>only experiences</strong> what happens for the actions it tries. How should an RL agent balance its actions?</p>

<ul>
  <li><strong>Exploration</strong>: trying new things that might enable the agent to make better decisions in the future</li>
  <li><strong>Exploitation</strong>: choosing actions that are expected to yield good reward given past experience</li>
</ul>

<p>Often there may be an exploration-exploitation tradeoff, as you might not the correct model of the world (since you only have finite experience). May have to sacrifice reward in order to explore &amp; learn about potentially better policy</p>

<hr />

<p>Another two very important component you often see in RL is:</p>

<ul>
  <li>
    <p><strong>Evaluation</strong>: given some policy, we want to evaluate how good the policy is</p>
  </li>
  <li>
    <p><strong>Control</strong>: find the good policy</p>
    <ul>
      <li>e.g. do policy evaluation, and improve (iff the policy is stochastic)</li>
      <li>so does more than evaluation</li>
    </ul>
  </li>
</ul>

<h1 id="mdps-and-mrps">MDPs and MRPs</h1>

<p>Here we discuss how do we decide to take actions when <strong>given a world model</strong>. So here we will first discuss the problem of <strong>planning</strong>, instead of reinforcement learning (discussed later).</p>

<p>Specifically, we will cover</p>

<ul>
  <li>Markov Decision Processes (MDP)</li>
  <li>Markov Reward Processes (MRP)</li>
  <li>Evaluation and Control in MDPs</li>
</ul>

<p>Therefore, we basically consider</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220517132606977.png" alt="image-20220517132606977" style="zoom: 50%;" /></p>

<p>so mathematically we consider</p>

\[p(s_{t+1}|s_t, a_t) = p(s_{t+1}|o_t, a_t)\]

<h2 id="markov-processchain">Markov Process/Chain</h2>

<p>Before we discuss MDP, we first consider what is MP.</p>

<blockquote>
  <p><strong>Markov Process</strong></p>

  <p>A Markov process has:</p>

  <ul>
    <li>
      <p>a set of finite states $s \in S$</p>
    </li>
    <li>
      <p>a dynamics/transition model $P$ that specifies $p(s_{t+1}=s’ \vert  s_t=s)$. For a finite number of states, this can be modelled as</p>

\[P = \begin{bmatrix}
P(s_1|s_1) &amp; P(s_2|s_1) &amp; \dots &amp; P(s_N|s_1)\\
P(s_1|s_2) &amp; P(s_2|s_2) &amp; \dots &amp; P(s_N|s_2)\\
\vdots &amp; \vdots &amp; \ddots &amp; \vdots\\
P(s_1|s_N) &amp; P(s_2|s_N) &amp; \dots &amp; P(s_N|s_N)\\
\end{bmatrix}\]
    </li>
  </ul>

  <p>notice that we have no action nor rewards: so we basically just observe this process being a <strong>memoryless random process</strong></p>
</blockquote>

<p>For instance, we can consider Mar’s Rover having the following transition dynamics</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Markov World</th>
      <th style="text-align: center">Transition Model</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220517133727555.png" alt="image-20220517133727555" style="zoom: 50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220517134058349.png" alt="image-20220517134058349" style="zoom:50%;" /></td>
    </tr>
  </tbody>
</table>

<p>where we see that $p(s_1\vert s_1)=0.6$, and $p(s_2\vert s_1)=0.4$, etc.</p>

<p>Using the transition model we can also mathematically compute the probability distribution of the next state given current state. For instance, if we are currently at $s_t=s_1$, then $p(s_{t+1}\vert s_t)$ is modelled by</p>

\[p(s_{t+1}|s_t=s_1) = [1, 0, 0,0,0,0,0]P = \begin{bmatrix}
0.6\\
0.4\\
0\\
\vdots\\
0
\end{bmatrix}\]

<p>Then, a sequence of states you would observe from the world would be sampled from the above distribution, so in the end you only see some deterministic observations/<strong>episodes</strong> such as</p>

<ul>
  <li>$s_4 \to s_5 \to s_6 \to s_7 \to s_7, …$</li>
  <li>$s_4 \to s_5 \to s_4 \to s_5 \to s_7, …$</li>
  <li>$s_4 \to s_3 \to s_2 \to s_1 \to s_2, …$</li>
  <li>etc.</li>
</ul>

<h2 id="markov-reward-process">Markov Reward Process</h2>

<p>Markov Reward Process is essentially Markov Chain + Reward</p>

<blockquote>
  <p><strong>Markov Reward Process</strong>:</p>

  <p>Markov reward process involves</p>

  <ul>
    <li>a set of finite states $s \in S$</li>
    <li>a dynamics/transition model $P$ that specifies $p(s_{t+1}=s’ \vert  s_t=s)$.
      <ul>
        <li>for a finite number of states, this can be expressed as a matrix.</li>
      </ul>
    </li>
    <li>a <strong>reward function</strong> $R(s_t=s) \equiv \mathbb{E}[r_t \vert  s_t=s]$, meaning the reward at a state is the expected reward of that state
      <ul>
        <li>for a finite number of states, this can be expressed as a vector.</li>
      </ul>
    </li>
    <li>allow for a discount factor $\gamma \in [0,1]$
      <ul>
        <li>mainly for mathematical convenient, which can avoid infinite returns and values/converges</li>
        <li>if episodes are finite, then $\gamma = 1$ works</li>
      </ul>
    </li>
  </ul>

  <p>note that we still have no actions.</p>
</blockquote>

<p>Once there is a reward, we can consider ideas such as returns and value functions</p>

<blockquote>
  <p><strong>Horizon</strong>: Number of time steps in each episode</p>

  <ul>
    <li>Can be infinite</li>
    <li>if not, it is called finite Markov reward process</li>
  </ul>
</blockquote>

<blockquote>
  <p><strong>(MRP) Return</strong>: discounted sum of rewards from time step $t$ to Horizon</p>

\[G_t = r_t + \gamma r_{t+1} + \gamma^2 r_{t+2} + ...\]

  <p>note that</p>

  <ul>
    <li>this is like a reward for a particular episode starting from time $t$</li>
    <li>why geometric series? This is usually used for its nice mathematical properties.</li>
  </ul>
</blockquote>

<blockquote>
  <p><strong>(MRP) State Value Function $V(s)$</strong>: expected return from starting in state $s$</p>

\[V(s) = \mathbb{E}[G_t|s_t=s] = \mathbb{E}[ r_t + \gamma r_{t+1} + \gamma^2 r_{t+2} + ... | s_t=s]\]

</blockquote>

<p>note that</p>

<ul>
  <li>if the process is deterministic, then $\mathbb{E}[G_t\vert s_t=s]=G_t$</li>
  <li>if the process is stochastic, then it is usually different.</li>
</ul>

<hr />

<p><em>For instance</em>, consider the previous example of</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Markov World</th>
      <th style="text-align: center">Transition Model</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220517133727555.png" alt="image-20220517133727555" style="zoom: 50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220517134058349.png" alt="image-20220517134058349" style="zoom:50%;" /></td>
    </tr>
  </tbody>
</table>

<p>but now we have:</p>

<ul>
  <li>$R(s=s_1)=+1$, and $R(s=s_7)=+10$. Zero otherwise</li>
</ul>

<p>Then consider sampling 2 episodes with 4-step length, using $\gamma=1/2$ we can compute the <strong>sample return</strong></p>

<ul>
  <li>$s_4,s_5,s_6,s_7$ having a return of $0+\frac{1}{2}\times 0+\frac{1}{4}\times 0+\frac{1}{8}\times 10=1.25$</li>
  <li>$s_4, s_4, s_5, s_4$ having a return of $0+\frac{1}{2}\times 0+\frac{1}{4}\times 0+\frac{1}{8}\times 0=0$</li>
</ul>

<p>Finally, we can consider the state value function by averaging over all the possible trajectories for each state, and we would get</p>

\[V= [1.53, 0.37, 0.13, 0.22, 0.85, 3.59, 15.31]\]

<p>in this particular example.</p>

<hr />

<p>How do we ==compute== the state function in reality?</p>

<ul>
  <li>
    <p>Could estimate by <strong>simulation</strong> (i.e. generate a large number of episodes and take average)</p>

    <ul>
      <li>notice that this method assumes no Markov process, as we are just sampling and averaging</li>
      <li>we have theoretical bounds as well on how many episodes we need</li>
    </ul>
  </li>
  <li>
    <p>Or we can <strong>utilize the Markov structure</strong> and know that MRP value function satisfies</p>

\[V(s) = \underbrace{R(s)}_{\text{imemdiate reward}}+ \quad \underbrace{\gamma \sum_{s'\in S} P(s'|s)V(s')}_{\text{discounted sum of future rewards}}\]
  </li>
</ul>

<p>Of course for computation we will use the latter case, which brings us to</p>

<blockquote>
  <p><strong>Bellman’s Equation for MRP</strong>: for fintie state MRP, we can express $V(s)$ for each state using a matrix equation</p>

\[\begin{bmatrix}
V(s_1)\\
\vdots\\
V(s_N)
\end{bmatrix} = \begin{bmatrix}
R(s_1)\\
\vdots\\
R(s_N)
\end{bmatrix} + \gamma \begin{bmatrix}
P(s_1|s_1) &amp; P(s_2|s_1) &amp; \dots &amp; P(s_N|s_1)\\
P(s_1|s_2) &amp; P(s_2|s_2) &amp; \dots &amp; P(s_N|s_2)\\
\vdots &amp; \vdots &amp; \ddots &amp; \vdots\\
P(s_1|s_N) &amp; P(s_2|s_N) &amp; \dots &amp; P(s_N|s_N)\\
\end{bmatrix}\begin{bmatrix}
V(s_1)\\
\vdots\\
V(s_N)
\end{bmatrix}\]

  <p>or more compactly</p>

\[V = R + \gamma PV\]

</blockquote>

<p>Note that both $R, P$ is known. All we need is to ==solve for $V$==. This can be solved in two ways:</p>

<ul>
  <li>directly with liner algebra</li>
  <li>iterative using DP</li>
</ul>

<p>First, solving it with linear algebra</p>

\[\begin{align*}
V &amp;= R + \gamma PV\\
V - \gamma PV &amp;= R\\
V &amp;= (I-\gamma P)^{-1}R
\end{align*}\]

<p>which requires solving matrix inverses, hence is $\sim O(N^3)$.</p>

<p>Another way to compute $V$ is by dynamic programming:</p>

<ol>
  <li>
    <p>initialize $V_0(s)=0$ for all state $s$</p>
  </li>
  <li>
    <p>For $k=1$ until convergence</p>

    <ul>
      <li>for all $s \in S$</li>
    </ul>

\[V_k(s) = R(s) + \gamma \sum_{s' \in S} P(s'|s)V_{k-1}(s')\]
  </li>
</ol>

<p>As this is an iterative algorithm, the cost is $O(kN^2)$ for having $k$ iterations (so each iteration updates is only $O(N^2)$)</p>

<h2 id="markov-decision-process">Markov Decision Process</h2>

<p>Finally we add in action as well, so essentially MDPs are Markov Reward Process + actions</p>

<blockquote>
  <p><strong>Markov Decision Process</strong>: MDP involves</p>

  <ul>
    <li>a set of finite states $s \in S$</li>
    <li>a finite set of actions $a \in A$</li>
    <li>a dynamics/transition model $P$ ==for each action== that specifies $p(s_{t+1}=s’ \vert  s_t=s, a_t=a)$.</li>
    <li>a reward function $R(s_t=s,a_t=a) \equiv \mathbb{E}[r_t \vert  s_t=s,a_t=a]$</li>
    <li>allow for a discount factor $\gamma \in [0,1]$</li>
  </ul>

  <p>note that know we mostly deal with the “joint probability” of $s_t,a_t$ together.</p>
</blockquote>

<p>For instance, for the Mars Rover MDP case</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">World Model</th>
      <th style="text-align: center">Transition Model</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220517144202574.png" alt="image-20220517144202574" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220517144210423.png" alt="image-20220517144210423" /></td>
    </tr>
  </tbody>
</table>

<p>where in this case we are having deterministic actions, which nonetheless can be modelled as a stochastic transition with probability of one.</p>

<p>Once we have actions in our model, we also have the following</p>

<blockquote>
  <p><strong>Policy</strong>: specifies what action to take in each state</p>

\[\pi (a|s) = P(a_t=a|s_t=s)\]

  <p>Basically a conditional distribution of actions on current state</p>
</blockquote>

<p>Note that once you ==specified a policy==, you can ==convert MDP + policy to a Markov Reward Process==, so that</p>

\[R^\pi (s) = \sum_{a \in A} \pi(a|s)R(s,a)\]

<p>is again independent of action in MRP, and similarly</p>

\[P^\pi(s'|s) = \sum_{a\in A}\pi(a|s) P(s'|s,a)\]

<p>which implies we can use <strong>same techniques to evaluate the value of a policy for a MDP</strong> as we could to compute the value of a MRP</p>

<h3 id="mdp-policy-evaluation">MDP Policy Evaluation</h3>

<p>For a <strong>deterministic policy $\pi(s)$</strong>, we can evaluate the value function $V^\pi(s)$ by, for example, the iterative algorithm mentioned before</p>

<ol>
  <li>
    <p>initialize $V_0(s)=0$ for all state $s$</p>
  </li>
  <li>
    <p>For $k=1$ until convergence</p>

    <ul>
      <li>for all $s \in S$</li>
    </ul>

\[V^\pi_k(s) = r(s,\pi(s)) + \gamma \sum_{s' \in S} p(s'|s, \pi(s))V_{k-1}(s')\]

    <p>so essentially $V_k^\pi(s)$ is exact value of $k$-horizon value of state $s$ under policy $\pi$, i.e. the value function if we are allowed to act for $k$ steps. Therefore, as $k$ increases we converge to infinite horizon.</p>
  </li>
</ol>

<blockquote>
  <p>This is also called the <strong>Bellman backup</strong> for a particular (deterministic) policy.</p>

  <ul>
    <li>note that of course we could have also computed $V^\pi$ analytically, or with simulation.</li>
  </ul>
</blockquote>

<p><em>For instance</em>, consider the setup of Mars Rover</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220517144202574.png" alt="image-20220517144202574" style="zoom:50%;" /></p>

<p>And in this case we have:</p>

<ul>
  <li>Dynamics: $p(s_6 \vert  s_6,a_1)=0.5, p(s_7 \vert  s_6,a_1)=0.5, …$</li>
  <li>Reward: for all actions, +1 in state $s_1$, and +10 in state $s_7$. Zero otherwise</li>
  <li>Policy: $\pi(s)=a_1$ for all states.</li>
  <li>$\gamma$ set to $0.5$</li>
</ul>

<p>Let we initialize with $V^\pi_k=[1,0,0,0,0,0,0,10]$, we want to compute $V^\pi_{k+1}(s_6)$. From the iterative formula</p>

\[\begin{align*}
V^\pi_{k+1}(s_6) &amp;= r(s_6, a_1) + \gamma [0.5 * V_k(s_6) + 0.5 * V_k(s_7)]\\
&amp;= 0 + 0.5*[0.5 * 0 + 0.5 * 10]\\
&amp;= 2.5
\end{align*}\]

<blockquote>
  <p>Notice that we have <strong>propagated</strong> the reward information from $s_7$ to $s_6$ in this value function! If you do this for all states eventually such an information will be spread in all states.</p>
</blockquote>

<h3 id="mdp-control">MDP Control</h3>

<p>Ultimately we want our agent to <strong>find</strong> an optimal policy</p>

\[\pi^*(s) = \arg\max_\pi V^\pi(s)\]

<p>i.e. policy such that its value function is the maximum. Meaning that</p>

<blockquote>
  <p>A policy $\pi$ is defined to be better than or equal to a policy $\pi’$ if</p>

\[\pi \ge \pi' \iff V_\pi(s) \ge V_{\pi'}(s),\quad \forall s\]

  <p>which means its expected return is greater than or equal to that of $\pi’$ <strong>for all states</strong>. And there is ==always at least one policy that is better== than or equal to all other policies as a policy is essentially a mapping.</p>
</blockquote>

<p>Then, it turns out that</p>

<blockquote>
  <p><strong>Theorem</strong>:  MDP with infinite horizon:</p>

  <ul>
    <li>there exists a <em>unique optimal value function</em></li>
    <li>the <em>optimal policy</em> for a MDP in an infinite horizon problem is
      <ul>
        <li><em>deterministic</em></li>
        <li><em>stationary</em>: does not depend on time step. (intuition would be that for infinite horizon, you have essentially infinite time/visits for each state, hence the optimal policy does not depend on time)</li>
        <li><em>not necessarily unique</em></li>
      </ul>
    </li>
  </ul>
</blockquote>

<p>Therefore, it suffices for us to focus on (improving) deterministic policies as our final optimal policy is also deterministic</p>

<hr />

<p><em>For example</em>: Consider the Mars Rover case again</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220517151127572.png" alt="image-20220517151127572" style="zoom: 50%;" /></p>

<p>which have 7 states and 2 actions, $a_1, a_2$. How many deterministic policies are there?</p>

<ul>
  <li>since a policy is essentially a mapping from states to actions, there are $2^7$ possible policies.</li>
</ul>

<hr />

<p>So how do we search for the ==best policy==?</p>

<ul>
  <li><strong>enumeration</strong>: compute for all $\vert A\vert ^{\vert S\vert }$ possible deterministic policy and pick best one</li>
  <li><strong>policy iteration</strong>: which is more efficient by doing policy evaluation + improvement</li>
</ul>

<h3 id="mdp-policy-iteration">MDP Policy Iteration</h3>

<p>The goal is to improve a policy iteratively so we end up with an optimal policy:</p>

<ol>
  <li>set $i=0$</li>
  <li>initialize $\pi_0(s)$ randomly for all $s$</li>
  <li>while $i==0$ or $\vert \vert \pi_i - \pi_{i-1}\vert \vert _1 &gt; 0$ being the L1-norm
    <ol>
      <li>$V^{\pi_i}$ being the MDP policy evaluation of $\pi_i$</li>
      <li>$\pi_{i+1}$ being the policy improvement for $\pi_i$ (discuss next)</li>
      <li>$i = i+1$</li>
    </ol>
  </li>
</ol>

<p>How do we improve a policy? First need to consider some new definition</p>

<blockquote>
  <p><strong>State-Action Value Function</strong>: essentially a value function exploring what happens if you take some action $a$ (e.g. different than some given policy) in each state</p>

\[Q^\pi(s,a) = R(s,a)+\gamma \sum_{s' \in S}P(s'|s,a)V^\pi(s')\]

  <p>so essentially at each state $s$, we consider:</p>

  <ul>
    <li>take action $a$</li>
    <li>then follow policy $\pi$</li>
  </ul>
</blockquote>

<p>Therefore, using this we can essentially improve a policy $\pi_i$ by:</p>

<ol>
  <li>
    <p>compute the state-action value of a policy $\pi_i$</p>

    <ul>
      <li>for each state $s\in S$ and $a \in A$</li>
    </ul>

\[Q^{\pi_i}(s,a) = R(s,a) + \gamma \sum_{s' \in S} P(s'|s,a)V^{\pi_i}(s')\]
  </li>
  <li>
    <p>compute the ==new policy $\pi_{i+1}$ by==</p>

\[\pi_{i+1}(s) = \arg\max_a Q^{\pi_i}(s,a),\quad \forall s\in S\]

    <p>to prove that this is a better policy, we need to show that</p>

\[V^{\pi_{i+1}}(s) \ge V^{\pi_i}(s)\]

    <p>which we will prove below. (inequality becomes strict if $V^{\pi_i}$ is suboptimal)</p>
  </li>
</ol>

<blockquote>
  <p>Using this approach, we are <strong>guaranteed</strong> to arrive at the global optimum of best policy.</p>
</blockquote>

<p><em>Proof</em>: Monotonic Improvement in Policy.</p>

<p>We first know that:</p>

\[\max_a Q^{\pi_i}(s,a) \ge V^{\pi_i}(s)=r(s,\pi_i(s)) + \gamma \sum_{s' \in S} p(s'|s, \pi_i(s))V^{\pi_i}(s')\]

<p>by definition of choosing a $\max_a$. Then, notice that</p>

\[\begin{align*}
V^{\pi_i}(s) 
&amp;\le \max_a Q^{\pi_i}(s,a)\\
&amp;= \max_a \{ R(s,a) + \gamma \sum_{s' \in S} P(s'|s,a)V^{\pi_i}(s') \}\\
&amp;= R(s,\pi_{i+1}(s)) + \gamma \sum_{s' \in S} P(s'|s,\pi_{i+1}(s))V^{\pi_i}(s')\\
&amp;\le R(s,\pi_{i+1}(s)) + \gamma \sum_{s' \in S} P(s'|s,\pi_{i+1}(s))\left( \max_{a'} Q^{\pi_i}(s',a') \right)\\\\
&amp;= R(s,\pi_{i+1}(s)) + \gamma \sum_{s' \in S} P(s'|s,\pi_{i+1}(s))\left[ R(s',\pi_{i+1}(s')) + \gamma \sum_{s'' \in S} P(s''|s',\pi_{i+1}(s'))V^{\pi_i}(s'') \right]\\
&amp;\le \dots\\
&amp;= V^{\pi_{i+1}}(s)
\end{align*}\]

<p>where:</p>

<ul>
  <li>
    <p>notice that by definition of $Q^{\pi_{i}}$, we are <strong>using $\pi_i$ for future steps</strong> on the second and third equality</p>
  </li>
  <li>
    <p>the third equality comes from the fact that we know $\pi_{i+1}(s) = \arg\max_a Q^{\pi_i}(s,a)$ which spits out the action for maximizing $Q$</p>
  </li>
  <li>the fifth equality is basically doing the same as doing everything from the first to the third equality</li>
  <li>hence essentially we are expanding and pushing $\pi_{i+1}$ to a future step, ==until we are using $\pi_{i+1}$ for all steps==</li>
</ul>

<blockquote>
  <p>Note that: this is an <strong>monotonic improvement</strong></p>

  <ul>
    <li>this mean that if the policy didn’t change on one iteration, can it change in future iteration? No, because if taking the max cannot improve it, then it have reached global optimum.</li>
    <li>Is there are maximum number of policy iteration? Yes, because there is only $\vert A\vert ^{\vert S\vert }$ number of policies, and since improvement step is monotonic, each policy can only appear once (unless we reached optimal)</li>
  </ul>
</blockquote>

<h3 id="mdp-value-iteration">MDP Value Iteration</h3>

<p>Another approach to find an optimal policy is by <strong>value iteration</strong>.</p>

<ul>
  <li>policy iteration: for each policy $\pi_i$, we get the value $V^{\pi_i}$ for the infinite horizon and improve it, until obtained best $V^{\pi^*}$</li>
  <li>value iteration: maintain the best $V(s)$ up to $k$ number of steps left in the episode, until $k \to \infty$ or converges</li>
</ul>

<p>so we are computing a different thing here, but the final answer will be the same.</p>

<blockquote>
  <p><em>Recall</em> that value of a policy ==has to satisfy== the Bellman equation</p>

\[\begin{align*}
V^\pi(s) 
&amp;= R^\pi(s) + \gamma \sum_{s' \in S} P^\pi(s'|s)V^\pi(s')\\
&amp;=R(s,\pi(s)) + \gamma \sum_{s' \in S} P(s'|s,\pi(s))V^\pi(s')
\end{align*}\]

  <p>was the definition</p>
</blockquote>

<p>Then we can consider a Bellman backup operator which <strong>operates on a value function</strong>:</p>

\[\mathbb{B}V(s) \equiv \max_a \{ R(s,a) + \gamma \sum_{s'\in S}p(s'|s,a)V(s') \}\]

<p>so basically:</p>

<ul>
  <li>$\mathbb{B}$ is like an operator, which will spit out a new value function</li>
  <li>it will improve the value if possible, as this is basically what policy iteration did</li>
</ul>

<hr />

<p>Then, with this, we define the algorithm for value iteration:</p>

<ol>
  <li>
    <p>set $k=1$</p>
  </li>
  <li>
    <p>Initialize $V_0(s)=0$ for all state $s$</p>
  </li>
  <li>
    <p>loop until [finite horizon, convergence]</p>

    <ul>
      <li>
        <p>for each state $s$</p>

\[V_{k+1}(s) = \max_a \{ R(s,a) + \gamma \sum_{s'\in S}p(s'|s,a)V_k(s') \}\]

        <p>which can be views as just a Bellman backup operation on $V_k$</p>

\[V_{k+1} = \mathbb{B}V_k\]
      </li>
    </ul>
  </li>
  <li>
    <p>then policy for acting $k+1$ steps (best policy) can be easily derived by the action that leads to the best state given current state</p>

\[\pi_{k+1}(s) = \arg\max_a \{ R(s,a) + \gamma \sum_{s'\in S}p(s'|s,a)V_k(s') \}\]

    <p>so basically considering best action if only act for $k=1$ step, the use this to compute $k=2$ steps, and etc.</p>
  </li>
</ol>

<p>How do we know that this converges? This is because Bellman’s backup operator is a <a href="#Contraction Operator">contraction operator</a> (if $\gamma \le 1$)</p>

<blockquote>
  <p>Difference between Policy and Value iteration</p>

  <ul>
    <li><strong>Value iteration</strong>
      <ul>
        <li>Compute optimal value as if horizon $= k$ steps
          <ul>
            <li>Note this can be used to compute optimal policy if horizon $= k$, i.e. finite horizon</li>
          </ul>
        </li>
        <li>Increment $k$</li>
      </ul>
    </li>
    <li><strong>Policy iteration</strong>
      <ul>
        <li>Compute infinite horizon value of a policy</li>
        <li>Use to select another (better) policy</li>
        <li>Closely related to a very popular method in RL: policy gradient</li>
      </ul>
    </li>
  </ul>
</blockquote>

<h4 id="policy-iteration-as-bellman-operations">Policy Iteration as Bellman Operations</h4>

<p>Essentially policy iteration also derives from the Bellman’s constraint, so we can express the policy iteration as Bellman operations as well.</p>

<p>First, we consider Bellman backup operator $\mathbb{B}^\pi$ for a <strong>particular policy</strong> which operates <strong>on some value function</strong> (which could have a different policy):</p>

\[\mathbb{B}^\pi  V(s) = R^\pi(s) + \gamma \sum_{s'\in S} P^\pi(s'|s)V(s')\]

<p>Therefore, this means that:</p>

<ol>
  <li>
    <p>policy evaluation of $\pi_i$ is basically doing:</p>

\[V^{\pi_i} = B^{\pi_i}B^{\pi_i}...B^{\pi_i}V\]

    <p>for some randomly initialized $V$</p>
  </li>
  <li>
    <p>policy improvement</p>

\[\pi_{k+1}(s) = \arg\max_a \{ R(s,a) + \gamma \sum_{s'\in S}p(s'|s,a)V^{\pi_k}(s') \}\]
  </li>
</ol>

<h4 id="contraction-operator">Contraction Operator</h4>

<blockquote>
  <p><strong>Contraction Operator</strong>:</p>

  <p>Let $O$ be an operator, and $\vert x\vert$ denote any norm of $x$. If</p>

\[|OV-OV'| \le |V-V'|\]

  <p>then $O$ is an contraction operator.</p>
</blockquote>

<p>so basically</p>

<ul>
  <li>
    <p>distance between two value functions after applying Bellman’s operator must be less than or equal to distance they had before.</p>
  </li>
  <li>
    <p>Given this property, it is straightforward to argue that distance between some value function $V$ to the optimal value function $V^*$ will decrease monotonically, hence convergence.</p>
  </li>
</ul>

<p><em>Proof</em></p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220517171411902.png" alt="image-20220517171411902" style="zoom: 80%;" /></p>

<h1 id="policy-evaluation-with-unknown-world">Policy Evaluation with Unknown World</h1>

<p>Before in the <a href="#MDPs and MRPs">MDPs and MRPs</a> section we discussed the problem of planning: <strong>if we know how the world works</strong>, i.e. have some transition/reward function known, <strong>how do we find out the best policy</strong>.</p>

<p>However, what if we <strong>do not have a world model</strong> to begin with? This is what we will discuss in this section, including:</p>

<ul>
  <li>Monte Carlo policy evaluation</li>
  <li>Temporal Difference (TD)</li>
</ul>

<h2 id="monte-carlo-policy-evaluation">Monte Carlo Policy Evaluation</h2>

<p>First, recall that with a world model, our algorithm for <strong>policy evaluation</strong> is:</p>

<ol>
  <li>
    <p>initialize $V_0(s)=0$ for all state $s$</p>
  </li>
  <li>
    <p>For $k=1$ until convergence</p>

    <ul>
      <li>for all $s \in S$</li>
    </ul>

\[V^\pi_k(s) = r(s,\pi(s)) + \gamma \sum_{s' \in S} p(s'|s, \pi(s))V_{k-1}(s')\]

    <p>so essentially $V_k^\pi(s)$ is exact value of $k$-horizon value of state $s$ under policy $\pi$, i.e. the value function if we are allowed to act for $k$ steps. Therefore, as $k$ increases we converge to infinite horizon.</p>
  </li>
</ol>

<p>In other words, we are iteratively <strong>estimating $V^\pi(s)$</strong> by $V_k^\pi(s)$ as:</p>

\[V^\pi(s) = \mathbb{E}_\pi[G_t|s_t=s] \approx V_k^\pi(s) = \mathbb{E}_\pi[r_t + \gamma V_{k-1}|s_t=s]\]

<p>we can think update tule graphhically as:</p>

\[V^\pi(s) \leftarrow \mathbb{E}_\pi[r_t + \gamma V_{k-1}|s_t=s]\]

<table>
  <thead>
    <tr>
      <th style="text-align: center">Tree of Possible Trajectories Following a Stochastic $\pi(a\vert s)$</th>
      <th style="text-align: center">Dynamic Programming Algorithm</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220518173442550.png" alt="image-20220518173442550" style="zoom: 50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220518174109832.png" alt="image-20220518174109832" style="zoom: 50%;" /></td>
    </tr>
  </tbody>
</table>

<p>where notice that:</p>

<ul>
  <li>
    <p>essentially we are taking $V_{k-1}^\pi(s)$ for each state as the “true value functions”, and then computing the highlighted expectation by</p>

\[V^\pi(s) \leftarrow r(s,\pi(s)) + \gamma \sum_{s' \in S} p(s'|s, \pi(s))V_{k-1}(s')\]

    <p>to update the value functions. Notice that for this to make sense we need to ==assume infinite horizon==, since we are treating $V^\pi(s)$ being stationary for each state, i.e. not a function of time step.</p>
  </li>
  <li>
    <p>therefore we are bootstrapping as we are taking the value function from previous iteration.</p>
  </li>
  <li>
    <p>notice that to compute this update we needed $P(s’\vert s,a)$ to <strong>average over all possible futures</strong> (and $R(s,a)$ as well)</p>
  </li>
</ul>

<hr />

<p>Now, what happens if we ==do not know the world/model==?</p>

<p><strong>In the framework of MC Policy Evaluation</strong>, the idea is to notice that</p>

\[V^\pi(s) = \mathbb{E}_{T \sim \pi}[G_t | s_t=s]\]

<p>basically averaging the $G_t$ of each possible trajectory $T$ following $\pi$, i.e. <strong>average over the branches of the tree</strong></p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220518173442550.png" alt="image-20220518173442550" style="zoom: 50%;" /></p>

<p>therefore, if trajectories are all finite, <strong>sample set of trajectories &amp; average returns</strong> would give us some approximation of the value function. Hence, properties related to this approach include:</p>

<ul>
  <li>Does not require a known MDP dynamics/rewards, as we <strong>just need sample trajectories as its reward</strong></li>
  <li>Does not assume state is Markov (e.g. no notion of next state, etc.)</li>
  <li>Can only be applied to <strong>episodic MDPs</strong>
    <ul>
      <li>Requires each episode to terminate</li>
    </ul>
  </li>
</ul>

<blockquote>
  <p><strong>Aim</strong>: estimate $V^\pi(s)$ given sampled episodes $(s_1,a_1,r_1,s_2,a_2,r_2,…)$ generated under policy $\pi$</p>
</blockquote>

<p>Using this <strong>idea of MC policy evaluation</strong>, we have the following algorithms that can do this:</p>

<ul>
  <li>first visit MC on Policy Evaluation</li>
  <li>every visit MC on Policy Evaluation</li>
  <li>incremental MC on Policy Evaluation</li>
</ul>

<h3 id="first-visit-mc-on-policy-evaluation">First Visit MC On Policy Evaluation</h3>

<p>Our aim is to estimate $V^\pi(s)$ by sampling trajectories and taking their mean (as being the MC method). In this case we consider the following algorithm:</p>

<ol>
  <li>
    <p>Initialize $N(s)=0$, $G(s)=0, \forall s \in S$</p>
  </li>
  <li>
    <p>loop</p>

    <ol>
      <li>
        <p>sample an episode $i=(s_{i,1},a_{i,1},r_{i,1},s_{i,2},a_{i,2},r_{i,2},….,s_{i,T_i})$</p>
      </li>
      <li>
        <p>define $G_{i,t}$ being the return in this $i$-th episode from time $t$ onwards</p>

\[G_{i,t}=r_{i,t}+\gamma r_{i,t+1} + \gamma^2 r_{i,t+2} + ... + \gamma^{T_i-1} r_{i,T_i}\]
      </li>
      <li>
        <p>for each state $s$ visited in the episode $i$</p>

        <ol>
          <li>for the ==first time== $t$ that state $s$ is visited
            <ol>
              <li>increment counter of total first visits for that state $N(s)=N(s)+1$</li>
              <li>increment total return $G(s)=G(s)+G_{i,t}$</li>
              <li><strong>Update estimate</strong> $V^\pi(s)=G(s)/N(s)$</li>
            </ol>
          </li>
        </ol>
      </li>
    </ol>
  </li>
</ol>

<p>How does this algorithm work? How do we know that this way of estimating $V^\pi(s)$ being good (i.e. bias, variance, and consistent)?</p>

<blockquote>
  <p><strong>Theorem</strong>:</p>

  <ul>
    <li>$V^\pi$ estimator in this case is an <strong>unbiased</strong> estimator of the true $\mathbb{E}_\pi[G_t\vert s_t=s]$</li>
    <li>$V^\pi$ estimator in this case is also a <strong>consistent</strong> estimator so that as $N(s)\to \infty$, $V^\pi(s)\to \mathbb{E}_\pi[G_t\vert s_t=s]$</li>
  </ul>
</blockquote>

<p>However, those this is a good news, it might not be efficient as we are throwing away many other visits to the same state, which brings us to <a href="#Every Visit MC On Policy Evaluation">Every Visit MC On Policy Evaluation</a></p>

<h4 id="bias-variance-and-mse-recap">Bias, Variance and MSE Recap</h4>

<p>Recall that a way to see if certain estimators work is to <strong>compare against the ground truth</strong>. Let $\hat{\theta}=f(x)$ be our estimator function (a function of the observed data $x$) for some true parameter $\theta$.</p>

<ul>
  <li>so basically $x \sim P(x\vert \theta)$ being generated from the true parameter</li>
  <li>we are constructing an estimator $\hat{\theta}=f(x)$ to estimate such a parameter.
    <ul>
      <li>e.g. for $x \sim N(\mu, \sigma)$, we can estimate $\mu$ by $\hat{\mu} = \text{mean}(x)$ being our estimator</li>
    </ul>
  </li>
</ul>

<blockquote>
  <p><strong>Bias</strong>: The bias of an estimator $\hat{\theta}$ is defined by</p>

\[\text{Bias}_\theta(\hat{\theta}) \equiv  \mathbb{E}_{x|\theta}[\hat{\theta}] - \theta\]

  <p>so that over many sampled datasets, how far is the average $\hat{\theta}$ from the true $\theta$</p>
</blockquote>

<p>note that since we don’t know what $\theta$ is in reality, we usually just bound it.</p>

<blockquote>
  <p><strong>Variance</strong>: the variance of an estimator $\hat{\theta}$ is defined by:</p>

\[\text{Var}(\hat{\theta}) \equiv  \mathbb{E}_{x|\theta}[(\hat{\theta} - \mathbb{E}[\hat{\theta}])]\]

  <p>which is basically the definition of variance itself and has nothing to do with $\theta$</p>
</blockquote>

<p>In general different algorithms will have different trade-off between bias and variance.</p>

<blockquote>
  <p><strong>MSE</strong>: Mean squared error of an estimator $\hat{\theta}$ is</p>

\[\text{MSE}_\theta(\hat{\theta}) \equiv \text{Var}(\hat{\theta})+\text{Bias}_\theta(\hat{\theta})^2\]

</blockquote>

<h3 id="every-visit-mc-on-policy-evaluation">Every Visit MC On Policy Evaluation</h3>

<p>Here, the change is small</p>

<ol>
  <li>
    <p>Initialize $N(s)=0$, $G(s)=0, \forall s \in S$</p>
  </li>
  <li>
    <p>loop</p>

    <ol>
      <li>
        <p>sample an episode $i=(s_{i,1},a_{i,1},r_{i,1},s_{i,2},a_{i,2},r_{i,2},….,s_{i,T_i})$</p>
      </li>
      <li>
        <p>define $G_{i,t}$ being the return in this $i$-th episode from time $t$ onwards</p>

\[G_{i,t}=r_{i,t}+\gamma r_{i,t+1} + \gamma^2 r_{i,t+2} + ... + \gamma^{T_i-1} r_{i,T_i}\]
      </li>
      <li>
        <p>for each state $s$ visited in the episode $i$</p>

        <ol>
          <li>for the ==every time== $t$ that state $s$ is visited
            <ol>
              <li>increment counter of total first visits for that state $N(s)=N(s)+1$</li>
              <li>increment total return $G(s)=G(s)+G_{i,t}$</li>
              <li><strong>Update estimate</strong> $V^\pi(s)=G(s)/N(s)$</li>
            </ol>
          </li>
        </ol>
      </li>
    </ol>
  </li>
</ol>

<p>Although this is more data efficient as we performed more updates</p>

<blockquote>
  <p><strong>Theorem</strong>:</p>

  <ul>
    <li>$V^\pi$ estimator in this case is an <strong>biased</strong> estimator of the true $\mathbb{E}_\pi[G_t\vert s_t=s]$
      <ul>
        <li>the intuition here is that because each state in an episode is <em>not IID</em>, the $G_{i,t}$ is <em>not IID</em> either. Therefore, we will get a biased estimator in this case as we use all encounters of state $s$</li>
      </ul>
    </li>
    <li>$V^\pi$ estimator in this case is a <strong>consistent</strong> estimator so that as $N(s)\to \infty$, $V^\pi(s)\to \mathbb{E}_\pi[G_t\vert s_t=s]$</li>
    <li>Empirically, $V^\pi$ has a lower variance</li>
  </ul>
</blockquote>

<h3 id="incremental-mc-on-policy-evaluation">Incremental MC On Policy Evaluation</h3>

<p>In both previous algorithms we had to update the mean incrementally by</p>

<ol>
  <li>
    <p>first doing $N(s)=N(s)+1$</p>
  </li>
  <li>
    <p>increment total return $G(s)=G(s)+G_{i,t}$</p>
  </li>
  <li>
    <p>then update</p>

\[V^\pi(s)=\frac{G(s)}{N(s)}\]
  </li>
  <li></li>
</ol>

<p>We can also perform the <strong>same update incrementally</strong> by:</p>

<ol>
  <li>
    <p>first doing $N(s)=N(s)+1$</p>
  </li>
  <li>
    <p>update</p>

\[V^\pi(s)=V^\pi(s)\frac{N(s)-1}{N(s)} + \frac{G_{i,t}}{N(s)}=V^\pi(s)+\frac{G_{i,t}-V^\pi(s)}{N(s)}\]

    <p>for basically ==adding a “correction term”== of $(G_{i,t}-V^\pi(s))/N(s)$</p>
  </li>
</ol>

<p>this idea of a correction term will be used later in TD algorithms, but in practice we can tweak this term so that, if we consider the following algorithm:</p>

<ol>
  <li>
    <p>Initialize $N(s)=0$, $G(s)=0, \forall s \in S$</p>
  </li>
  <li>
    <p>loop</p>

    <ol>
      <li>
        <p>sample an episode $i=(s_{i,1},a_{i,1},r_{i,1},s_{i,2},a_{i,2},r_{i,2},….,s_{i,T_i})$</p>
      </li>
      <li>
        <p>define $G_{i,t}$ being the return in this $i$-th episode from time $t$ onwards</p>

\[G_{i,t}=r_{i,t}+\gamma r_{i,t+1} + \gamma^2 r_{i,t+2} + ... + \gamma^{T_i-1} r_{i,T_i}\]
      </li>
      <li>
        <p>for each state $s$ visited in the episode $i$</p>

        <ol>
          <li>
            <p>for the ==every time== $t$ that state $s$ is visited</p>

            <ol>
              <li>
                <p>increment counter of total first visits for that state $N(s)=N(s)+1$</p>
              </li>
              <li>
                <p>update</p>

\[V^\pi(s)=V^\pi(s)+\alpha\left( G_{i,t}-V^\pi(s) \right)\]
              </li>
            </ol>
          </li>
        </ol>
      </li>
    </ol>
  </li>
</ol>

<p>Then if we used:</p>

<ul>
  <li>$\alpha = 1/N(s)$ then it is the same as every visit MC</li>
  <li>$\alpha &gt; 1/N(s)$ then we are placing <strong>emphasis on more recent ones/updates $G_{i,t}-V^\pi(s)$</strong>.
    <ul>
      <li>this could be helpful if domains are non-stationary. For example in robotics some parts can be breaking down over time, so we want to focus more on more recently learnt data</li>
    </ul>
  </li>
</ul>

<h3 id="mc-on-policy-example">MC On Policy Example</h3>

<p>Consider a simple case of a Mars Rover again:</p>

<ul>
  <li>reward being $R=[1,0,0,0,0,0,0,10]$</li>
  <li>initialize $V^\pi(s)=0$ for all $s$</li>
  <li>Our policy is $\pi(s)=a_1,\forall s$.</li>
  <li>Any action from state $s_1$ or $s_7$ gives termination</li>
  <li>take $\gamma = 1$</li>
</ul>

<p>Suppose then we got a trajectory from this policy:</p>

<ul>
  <li>$T = (s_3,a_1,0,s_2,a_1,0,s_2,a_1,0,s_1,a_1,1,\text)$</li>
</ul>

<p><strong>Question</strong>: What is the first and every visit MC estimate of $V^\pi$?</p>

<ul>
  <li>first visit of $V^\pi(s)=[1,1,1,0,0,0,0]$</li>
  <li>every visit is the same even though $s_2$ has two updates</li>
</ul>

<blockquote>
  <p>Notice that for all MC methods, we only was able to <strong>perform updates until the termination of the episode</strong>, since we need to know $G_{i,t}$.</p>
</blockquote>

<h3 id="mc-on-policy-evaluation-key-limitations">MC On Policy Evaluation Key Limitations</h3>

<p>Graphically, what MC algorithms are doing is</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Tree of Possible Trajectories Following a Stochastic $\pi(a\vert s)$</th>
      <th style="text-align: center">MC On Policy Algorithm</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220518173442550.png" alt="image-20220518173442550" style="zoom: 50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220518215716060.png" alt="image-20220518215716060" style="zoom:50%;" /></td>
    </tr>
  </tbody>
</table>

<p>So notice that we are averaging across all trajectories, meaning that:</p>

<ul>
  <li><strong>Generally high variance estimator</strong>. Reducing variance can require a lot of data</li>
  <li><strong>Requires episodic settings</strong> (since we can only update once episode terminated)</li>
</ul>

<h2 id="temporal-difference-learning">Temporal Difference Learning</h2>

<blockquote>
  <p>“If one had to identify one idea as central and novel to reinforcement learning, it would undoubtedly be temporal-difference (TD) learning.” – Sutton and Barto 2017</p>
</blockquote>

<p>Some key attributes of this algorithm is:</p>

<ul>
  <li><strong>Combination</strong> of Monte Carlo &amp; dynamic programming methods
    <ul>
      <li>therefore, it Bootstraps (dynamic programming, reusing $V_{k-1}^\pi(s)$) and samples (MC)</li>
    </ul>
  </li>
  <li><strong>Model-free</strong> (does not need to know the transition/reward functions)</li>
  <li>Can be used in episodic <strong>or infinite-horizon</strong> non-episodic settings</li>
  <li>Can <strong>immediately updates</strong> estimate of $V$ after each $(s,a,r,s’)$ tuple, i.e. we do not need to wait until the end-of-episode like MC methods.</li>
</ul>

<blockquote>
  <p><strong>Aim</strong>: estimate $V^\pi(s)$ given sampled episodes $(s_1,a_1,r_1,s_2,a_2,r_2,…)$ generated under policy $\pi$</p>
</blockquote>

<p>this is the ==same== as MC on Policy Evaluation. But recall that if we are having a MDP model, the <strong>Bellman Operator can be used to perform an update</strong> of the $V(s)$:</p>

\[\mathbb{B}^\pi  V(s) = R^\pi(s) + \gamma \sum_{s'\in S} P^\pi(s'|s)V(s')\]

<p>which basically ==takes the current reward== and ==averages over the value of next state==. From this, we consider</p>

<blockquote>
  <p><strong>Insight</strong>: given some current estimate of $V^\pi$, we can update using</p>

\[V^\pi(s_t) =V^\pi(s_t)+\alpha( \underbrace{[r_t+\gamma V^\pi(s_{t+1})]}_{\text{TD target}}-V^\pi(s_t))\]

  <p>for $r_t+\gamma V^\pi(s_{t+1})$ basically is our target (to approximate $r_t+\gamma \sum P^\pi(s’\vert s)V(s’)$) to improve $V^\pi(s)$, as compared to the MC On-policy method which used $G_{i,t}$.</p>

  <p>Notice that:</p>

  <ul>
    <li>
      <p>this target is basically also ==takes the current reward== and ==looks at the value of next state==.</p>
    </li>
    <li>
      <p>we are bootstrapping again, instead of waiting until end of episode, we use previous estimate $V^\pi(s)$ to compute our target $r_t+\gamma V^\pi(s_{t+1})$ and updates ==at each time step==. Therefore we also don’t need episodic requirement.</p>
    </li>
  </ul>
</blockquote>

<blockquote>
  <p><strong>TD Error</strong>: we can also view the above update rule as basically correcting $V^\pi(s)$ by the error term:</p>

\[\delta_t \equiv [r_t+\gamma V^\pi(s_{t+1})]-V^\pi(s_t)\]

</blockquote>

<p>Under this framework of TD learning, we also have some variations:</p>

<ul>
  <li>TD(0) Learning: only boostrap</li>
  <li>TD($\lambda$) Learning: MC update for $\lambda$ steps and then bootstrap</li>
</ul>

<p>hence technically we have a continuum of algorithm between using bootstrap and using MC algorithm.</p>

<h3 id="td0-learning">TD(0) Learning</h3>

<p>The simplest TD algorithm is TD(0):</p>

<ol>
  <li>
    <p>input $\alpha$</p>
  </li>
  <li>
    <p>initialize $V^\pi(s)=0$, $\forall s \in S$</p>
  </li>
  <li>
    <p>loop</p>

    <ol>
      <li>
        <p>sample tuple $(s_t,a_t,r_t,s_{t+1})$</p>
      </li>
      <li>
        <p>update the state:</p>

\[V^\pi(s_t) =V^\pi(s_t)+\alpha( \underbrace{[r_t+\gamma V^\pi(s_{t+1})]}_{\text{TD target}}-V^\pi(s_t))\]
      </li>
    </ol>
  </li>
  <li></li>
</ol>

<p>which is a <strong>combination</strong> of MC sampling and bootstrapping:</p>

<ul>
  <li>we needed sampling to get $s’$ for evaluating $V^\pi(s_{t+1})$</li>
  <li>we used the previous estimate of $V^\pi$ to calculate the values, which is boostrapping</li>
</ul>

<h3 id="td0-learning-example">TD(0) Learning Example</h3>

<p>Consider a simple case of a Mars Rover again:</p>

<ul>
  <li>reward being $R=[1,0,0,0,0,0,0,10]$</li>
  <li>initialize $V^\pi(s)=0$ for all $s$</li>
  <li>Our policy is $\pi(s)=a_1,\forall s$.</li>
  <li>Any action from state $s_1$ or $s_7$ gives termination</li>
  <li>take $\gamma = 1$</li>
</ul>

<p>Suppose then we got a trajectory from this policy:</p>

<ul>
  <li>$T = (s_3,a_1,0,s_2,a_1,0,s_2,a_1,0,s_1,a_1,1,\text)$</li>
</ul>

<p><strong>Question</strong>: What is the first and every visit MC estimate of $V^\pi$?</p>

<ul>
  <li>first visit of $V^\pi(s)=[1,1,1,0,0,0,0]$</li>
  <li>every visit is the same even though $s_2$ has two updates</li>
</ul>

<p><strong>Question</strong>: What is the TD estimate of all states (init at 0, single pass) if we use $\alpha = 1$:</p>

<ul>
  <li>$[1,0,0,0,0,0,0]$. Notice that here we have forgotten the previous history/<strong>did not propagate</strong> the information of reward at $s_1$ to other states in a single episode.</li>
  <li>to propagate this information to $s_2$, we need <strong>another episode</strong> which had the tuple $s_2 \to s_1$. To propagate to $s_3$, we need yet another episode that contains $s_3 \to s_2$, etc. So this ==propagation is slow==</li>
</ul>

<h3 id="td-learning-key-limitations">TD Learning Key Limitations</h3>

<p>Graphically, temporal difference considers</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">MC On Policy Algorithm</th>
      <th style="text-align: center">TD(0) On Policy Algorithm</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220518215716060.png" alt="image-20220518215716060" style="zoom:50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220518225606223.png" alt="image-20220518225606223" style="zoom:50%;" /></td>
    </tr>
  </tbody>
</table>

<p>so we notice that TD(0):</p>

<ul>
  <li>sits between MC and DP because we are still sampling stuff, but we are updating in a DP fashion</li>
</ul>

<p>Although this algorithm allows us to update quickly:</p>

<ul>
  <li>it is a <strong>biased</strong> estimator, since our update rules are using bootstrapping (i.e. $V^\pi(s)$ we used are estimates of the true $V^\pi(s)$, hence it will just be biased)</li>
</ul>

<h2 id="comparison-between-dpmc-and-td">Comparison Between DP,MC and TD</h2>

<table>
  <thead>
    <tr>
      <th> </th>
      <th style="text-align: center">DP</th>
      <th style="text-align: center">MC</th>
      <th style="text-align: center">TD</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Usable when no models of current domain</td>
      <td style="text-align: center"> </td>
      <td style="text-align: center">Yes</td>
      <td style="text-align: center">Yes</td>
    </tr>
    <tr>
      <td>Handles continuing (non-episodic) domains</td>
      <td style="text-align: center">Yes</td>
      <td style="text-align: center"> </td>
      <td style="text-align: center">Yes</td>
    </tr>
    <tr>
      <td>Handles Non-Markovian domains</td>
      <td style="text-align: center"> </td>
      <td style="text-align: center">Yes</td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td>Converges to true value in limit (assume Markov)</td>
      <td style="text-align: center">Yes</td>
      <td style="text-align: center">Yes</td>
      <td style="text-align: center">Yes</td>
    </tr>
    <tr>
      <td>Unbiased estimate of value</td>
      <td style="text-align: center">N/A</td>
      <td style="text-align: center">Yes</td>
      <td style="text-align: center"> </td>
    </tr>
  </tbody>
</table>

<p>note that</p>

<ul>
  <li>for DP, it is the exact estimate.</li>
  <li>unbiased = for finite amount of data, on average it is $\theta$; consistent = for infinite amount of data it is $\theta$</li>
</ul>

<blockquote>
  <p>Note that here we are still living in the world of <strong>tabular state space</strong>, i.e. our state space is discrete. Once we move on to the case of having <strong>continuous state space</strong>, we will cover <strong>function approximation</strong> methods and a lot of them ==does not== guarantee convergence.</p>
</blockquote>

<p>In addition:</p>

<ul>
  <li><strong>MC: updates until end of episode</strong>
    <ul>
      <li>Unbiased</li>
      <li>High variance</li>
      <li>Consistent (converges to true) even with function approximation</li>
    </ul>
  </li>
  <li><strong>TD: updates per sample point $(s,a,r,s’)$ immediately</strong>
    <ul>
      <li>Some bias</li>
      <li>Lower variance</li>
      <li>TD(0) converges to true value with tabular representation</li>
      <li>TD(0) does not always converge with function approximation</li>
    </ul>
  </li>
</ul>

<h2 id="batch-mc-and-td">Batch MC and TD</h2>

<p>The aim is to use the data more efficiently, hence we might consider:</p>

<blockquote>
  <p><strong>Batch (Offline) solution</strong> for finite dataset:</p>

  <ul>
    <li>Given set of $K$ episodes</li>
    <li>Repeatedly sample an episode from $K$ (since we are offline, we can replay the episodes)</li>
    <li>Apply MC or TD(0) to the sampled episode</li>
  </ul>

  <p>The question is, ==what will MC and TD(0) converge to==?</p>
</blockquote>

<p>Consider the following example:</p>

<ul>
  <li>Two states $A, B$ with $\gamma = 1$ and a small $\alpha &lt; 1$</li>
  <li>Given 8 episodes of experience:
    <ul>
      <li>$A, 0, B, 0$</li>
      <li>$B, 1$ (observed 6 times)</li>
      <li>$B, 0$</li>
    </ul>
  </li>
</ul>

<p>Graphically we have</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220518232255338.png" alt="image-20220518232255338" style="zoom: 67%;" /></p>

<p><strong>Question</strong>: what is $V(A), V(B)$ under MC and TD(0) if we are sampling those data for infinite number of times until convergence?</p>

<ul>
  <li>$V(B)=6/8$ for MC: because in general for 6 out of 8 episodes we get $B\to 1$ in the trajectory</li>
  <li>$V(B)=6/8$ for TD(0): because in general 6 out of 8 times we get $B \to \text{Terminate}$ we will have a reward of 1</li>
  <li>$V(A)=0$ for MC: in MC setting because updates are done per episode, and the only episode that contained state $A$ had a reward of zero</li>
  <li>$V(A)\neq 0$ for TD(0): in TD settings reward propagate back across episodes. Hence once $V(B)\neq 0$ and we sampled a tuple $A\to B$, we will obtain a non-zero value for $V(A)$</li>
</ul>

<h3 id="properties-of-batch-md-and-td">Properties of Batch MD and TD</h3>

<ul>
  <li>Monte Carlo in batch setting
    <ul>
      <li>converges to min MSE (mean squared error) Minimize loss with respect to observed returns</li>
      <li>MC can be more data efficient than simple TD if markov assumption does not hold (i.e. we need to sample data in TD in order of the episode)</li>
    </ul>
  </li>
  <li>TD(0) in batch setting
    <ul>
      <li>converges to DP policy V π for the MDP with the maximum likelihood model estimates</li>
      <li>TD exploits Markov structure, if it holds then it is very data efficient</li>
    </ul>
  </li>
</ul>

<h1 id="model-free-control">Model Free Control</h1>

<p>How does an agent <strong>learn to act</strong> when it does not know how the world works, and does not aim to construct a model (model-free).</p>

<ul>
  <li>Previous section: ==Policy evaluation== with no knowledge of how the world works = how good is a specific policy?</li>
  <li>This section: ==Control (making decisions)== without a model of how the world works = how can we <strong>learn a good policy</strong>?</li>
</ul>

<p>Many applications can be modeled as a MDP:</p>

<ul>
  <li>Backgammon, Go, Robot locomation, Helicopter flight, Robocup soccer, Autonomous driving, etc.</li>
</ul>

<p>For many of these and other problems either:</p>

<ul>
  <li>MDP model is unknown but can be sampled</li>
  <li>MDP model is known but it is computationally infeasible to use directly, except through sampling (e.g. climate simulation)</li>
</ul>

<blockquote>
  <p><strong>Optimization Goal</strong>: identify a policy with high expected rewards (without model of the world). Certain features we will encounter like all RL algorithms:</p>

  <ul>
    <li><strong>Delayed consequences:</strong> May take many time steps to evaluate whether an earlier decision was good or not</li>
    <li><strong>Exploration:</strong> Necessary to try different actions to learn what actions can lead to high rewards</li>
  </ul>
</blockquote>

<p>In this section, we will discuss two types of algorithms:</p>

<ul>
  <li><strong>On-policy Learning</strong>
    <ul>
      <li>as we had for policy evaluation</li>
      <li>Direct experience</li>
      <li>Learn to estimate and evaluate a policy from experience obtained from following that policy</li>
    </ul>
  </li>
  <li><strong>Off-policy Learning</strong>
    <ul>
      <li>Learn to estimate and evaluate a policy using experience gathered from following a <strong>different</strong> policy</li>
      <li>e.g. given history $s_1,a_1,s_1,a_1$ and $s_1,a_2,s_1,a_2$, be able to <strong>extrapolate</strong> what happens if you do $s_1,a_1,s_1,a_2$</li>
    </ul>
  </li>
</ul>

<h2 id="mc-on-policy-policy-iteration">MC On-Policy Policy Iteration</h2>

<p>Recall that <strong>when we know the model</strong>, we had the following algorithm for control:</p>

<ol>
  <li>
    <p>set $i=0$</p>
  </li>
  <li>
    <p>initialize $\pi_0(s)$ randomly for all $s$</p>
  </li>
  <li>
    <p>while $i==0$ or $\vert \vert \pi_i - \pi_{i-1}\vert \vert _1 &gt; 0$ being the L1-norm</p>

    <ol>
      <li>
        <p>$V^{\pi_i}$ being the MDP policy evaluation of $\pi_i$</p>
      </li>
      <li>
        <p>$\pi_{i+1}$ being the policy improvement for $\pi_i$ (discuss next)</p>

\[\pi_{i+1}(s) =  \arg\max_a \left\{ R(s,a) + \gamma \sum_{s' \in S} P(s'|s,a)V^{\pi_i}(s') \right\} = \arg\max_a Q^{\pi_i}(s,a)\]
      </li>
    </ol>

    <p>which monotonically improves (strict inequality) the policy until optimal policy</p>
  </li>
</ol>

<blockquote>
  <p>Now, we want to do the above two steps without access to the true dynamics and reward models. Notice that essentially policy improvement does $\arg \max_a Q^\pi$, so we want to find a way to ==estimate $Q^\pi$ directly without knowing world==.</p>

  <ul>
    <li>previously we have only discussed how to do policy evaluation $V^\pi$ without the world, but ==not== how to improve it</li>
  </ul>
</blockquote>

<p>Therefore, we consider the following <strong>model-free policy iteration framework</strong>:</p>

<ol>
  <li>
    <p>initialize $\pi_0(s)$ randomly for all $s$</p>
  </li>
  <li>
    <p>repeat</p>

    <ol>
      <li>
        <p>policy evaluation: <strong>compute $Q^{\pi_i}(s,a)$</strong></p>
      </li>
      <li>
        <p>policy improvement: update $\pi_{i+1}$ by:</p>

\[\pi_{i+1} = \arg\max_a Q^{\pi_i}(s,a)\]
      </li>
    </ol>
  </li>
</ol>

<p>But how do we estimate $Q^\pi$?</p>

<ul>
  <li>MC for On Policy Q Evaluation (first visit and every visit)</li>
</ul>

<h3 id="mc-for-on-policy-q-evaluation">MC for On Policy Q Evaluation</h3>

<p>The idea is basically the same as $V^\pi$ evaluation, where we consider:</p>

<ol>
  <li>
    <p>Initialize $N(s,a)=0$, $G(s,a)=0, Q^\pi(s,a)=0,\forall s \in S, \forall a \in A$</p>

    <ul>
      <li>in contrast to $V^\pi$ evaluation where we had $N(s)=0, G(s)=0$, etc.</li>
    </ul>
  </li>
  <li>
    <p>loop</p>

    <ol>
      <li>
        <p>sample an episode $i=(s_{i,1},a_{i,1},r_{i,1},s_{i,2},a_{i,2},r_{i,2},….,s_{i,T_i})$</p>
      </li>
      <li>
        <p>define $G_{i,t}$ being the return in this $i$-th episode from time $t$ onwards</p>

\[G_{i,t}=r_{i,t}+\gamma r_{i,t+1} + \gamma^2 r_{i,t+2} + ... + \gamma^{T_i-1} r_{i,T_i}\]
      </li>
      <li>
        <p>for each <strong>state-action pair</strong> $(s,a)$ visited in the episode $i$</p>

        <ol>
          <li>for the ==first time or every time== $t$ that the pair $(s,a)$ is visited
            <ol>
              <li>increment counter of total first visits for that state $N(s,a)=N(s,a)+1$</li>
              <li>increment total return $G(s,a)=G(s,a)+G_{i,t}$</li>
              <li><strong>Update estimate</strong> $Q^\pi(s,a)=G(s,a)/N(s,a)$</li>
            </ol>
          </li>
        </ol>
      </li>
    </ol>
  </li>
</ol>

<blockquote>
  <p>Notice that a ==problem== with this algorithm: we can only evaluate $Q^\pi(s,a)$ for <strong>state-action pairs that we have experienced</strong>. And if $\pi$ is deterministic, we can’t compute $Q^\pi(s,a)$ for any $a\neq \pi(s)$. This means that we cannot say anything about new actions.</p>

  <p>The same problem goes with improvement, $\pi_{i+1} = \arg\max_a Q^{\pi_i}(s,a)$ since we have initialized $Q^\pi(s,a)=0,\forall a \in A,\forall s \in S$.</p>

  <ul>
    <li>one solution to deal with this is optimistic initialization so we initialize a high $Q^\pi(s,a)$ to promote ==exploration==</li>
  </ul>
</blockquote>

<p>This means that our policy improvement will only look at actions we have taken, i.e. it ==will not explore new state-action pairs== so that</p>

\[\pi_{i+1} = \arg\max_a Q^{\pi_i}(s,a)\]

<p>will only end up choosing actions visited by $s,\pi(s)$.</p>

<blockquote>
  <p>This means we may need to <strong>modify the policy evaluation algorithm</strong> to include non-deterministic state-action pairs for $Q^\pi(s,a)$</p>
</blockquote>

<h3 id="policy-evaluation-with-exploration">Policy Evaluation with Exploration</h3>

<p>Recall that the definition of $Q^\pi(s,a)$ was:</p>

\[Q^\pi(s,a) = R(s,a)+\gamma \sum_{s' \in S}P(s'|s,a)V^\pi(s')\]

<p>so to <strong>find a good evaluation</strong> of $Q^\pi(s,a)$, we need to:</p>

<ul>
  <li>==explore== every possible action $a$ from state $s$, to record $R(s,a)$</li>
  <li>after that, follow policy $\pi$ to get $\gamma \sum_{s’ \in S}P(s’\vert s,a)V^\pi(s’)$</li>
</ul>

<blockquote>
  <p><strong>Insight</strong>: since we need to explore every possible action, consider the simple idea to balance exploration and exploitation</p>

\[\pi(a|s) = \begin{cases}
\pi(s),&amp; p=1-\epsilon\\
a \in A, &amp; p = \epsilon / |A|
\end{cases}\]

  <p>which is called the ==epsilon-greedy policy== <strong>w.r.t a deterministic policy $\pi(s)$.</strong></p>
</blockquote>

<p>This also means we can also define $\epsilon$-greedy policy <strong>w.r.t. a state-action value $Q(s,a)$</strong></p>

\[\pi(a|s) = \begin{cases}
\arg\max_a Q(s,a),&amp; p=1-\epsilon\\
a \in A, &amp; p = \epsilon / |A|
\end{cases}\]

<p>so that you will see we can use this to change the update rule we had, which is $\pi_{i+1} = \arg\max_a Q^{\pi_i}(s,a)$.</p>

<hr />

<p><em>For Example</em>: Mars Rovers again, with 7 states:</p>

<ul>
  <li>
    <p>Now we specify rewards for both actions as we need to compute $Q(s,a)$</p>

\[r(\cdot, a_1) = [1,0,0,0,0,0,10]\\
r(\cdot, a_2) = [0,0,0,0,0,0,5]\]
  </li>
  <li>assume current greedy policy $\pi(s)=a_1$</li>
  <li>take $\gamma =1, \epsilon = 0.5$</li>
</ul>

<p>Then, <strong>using $\epsilon$-greedy w.r.t to $\pi(s)$</strong>, we got a sampled trajectory of</p>

\[(s_3,a_1,0,s_2,a_2,0,s_3,a_1,0,   s_2,a_2,0,   s_1,a_1,1, \text{terminal})\]

<p><strong>Question</strong>: What is the first visit MC estimate of $Q$ of each $(s,a)$ pair?</p>

<ul>
  <li>$Q^{\epsilon-\pi}(\cdot,a_1)=[1,0,1,0,0,0,0]$ since we are doing MC, we propagates the end-of-episode reward to all states</li>
  <li>$Q^{\epsilon-\pi}(\cdot, a_2)=[0,1,0,0,0,0,0]$ same reason as above</li>
  <li>notice that without $\epsilon$-greedy, we would have never got $(s_2,a_2,0)$, hence we would have $Q^{\epsilon-\pi}(\cdot, a_2)=[0,0,0,0,0,0,0]$</li>
</ul>

<h3 id="epsilon-greedy-policy-improvement">$\epsilon$-greedy Policy Improvement</h3>

<p><em>Recall</em> that we previous thought of the following as the framework of Model free PI:</p>

<ol>
  <li>
    <p>set $i=0$</p>
  </li>
  <li>
    <p>initialize $\pi_0(s)$ randomly for all $s$</p>
  </li>
  <li>
    <p>while $i==0$ or $\vert \vert \pi_i - \pi_{i-1}\vert \vert _1 &gt; 0$ being the L1-norm</p>

    <ol>
      <li>
        <p>$V^{\pi_i}$ being the MDP policy evaluation of $\pi_i$</p>
      </li>
      <li>
        <p>$\pi_{i+1}$ being the policy improvement for $\pi_i$ (discuss next)</p>

\[\pi_{i+1}(s) =  \arg\max_a \left\{ R(s,a) + \gamma \sum_{s' \in S} P(s'|s,a)V^{\pi_i}(s') \right\} = \arg\max_a Q^{\pi_i}(s,a)\]
      </li>
    </ol>

    <p>which <strong>monotonically</strong> improves (strict inequality) the policy until optimal policy</p>
  </li>
</ol>

<p>And we had the <strong>problem</strong> of $Q^\pi(s,a)$ only containing updates for very small set of $(s,a)$ pairs that we followed a deterministic $\pi(s)$. This means that policy improvement will ==not try new actions==.</p>

<blockquote>
  <p>Now, the idea is to replace the update step <strong>w.r.t the stochastic $\epsilon$-greedy policy $\pi_i$,</strong> so that we consider from a $Q^{\pi_i}$ that:</p>

\[\pi_{i+1}(a|s) = \begin{cases}
\arg\max_a Q^{\pi_{i}}(s,a),&amp; p=1-\epsilon\\
a \in A, &amp; p = \epsilon / |A|
\end{cases}\]

  <p>being the ==new update rule==, which now can cover a wider range of $(s,a)$ pairs hence our updated $\pi_{i+1}$ will also contain ==new actions==.</p>
</blockquote>

<p>But does this actually provide a monotonic improvement as well (as in the determinstic case)?</p>

<blockquote>
  <p><strong>Theorem</strong>: For any $\epsilon$-greedy policy $\pi_i$, the $\epsilon$-greedy policy $\pi_{i+1}$ w.r.t $Q^{\pi_i}$ is a <strong>monotonic improvement</strong>, such that $V^{\pi_{i+1}} \ge V^{\pi_i}$</p>

  <ul>
    <li>with this theorem, we can have the <a href="#MC On Policy Improvement/Control">MC On Policy Improvement/Control</a> algorithm which uses this to provide a better estimate of $Q^\pi(s,a)$ and improve $\pi$</li>
  </ul>
</blockquote>

<p><em>Proof</em>: We just need to show that the value for taking this new policy is higher:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220519162000682.png" alt="image-20220519162000682" style="zoom: 80%;" /></p>

<p>where basically:</p>

<ul>
  <li>on the fourth equality, we utilize the fact that $\sum_{a}\pi_i(a\vert s)=1$</li>
  <li>in the last equality, we basically cancelled out the $1-\epsilon$ again and obtained our result</li>
  <li>this of course <strong>assumes that you know exactly $Q^{\pi_i}$ for a policy $\pi_i$</strong>.
    <ul>
      <li>in case when you have an ==estimate== of $Q^{\pi_i}$, then there is ==no guarantee== of monotonic policy improvement. This will happen a lot in function approximation when we have a continuous state space.</li>
    </ul>
  </li>
</ul>

<p>This shows that by following $\pi_{i+1}$ the first step and then following $\pi_i$, we get a higher value. Then, we can show $V^{\pi_{i+1}} \ge V^{\pi_i}$ in the similar fashion as we proved the policy improvement by pushing out the $\pi_{i+1}$ policy to future terms.</p>

<hr />

<p>Finally, we need guarantees on convergence</p>

<blockquote>
  <p>**GLIE **(Greedy in the Limit of Infinite Exploration):</p>

  <ul>
    <li>
      <p>all state-action pairs are visitied an infintie number of times</p>

\[\lim_{i\to \infty} N_i(s,a) = \infty\]

      <p>(satisfied as we have stochastic policy)</p>
    </li>
    <li>
      <p>Behavior policy (the one we used to sample trajectory) <strong>converges to greedy policy</strong> (deterministic)</p>

\[\lim_{i \to \infty} \pi(a|s) \to \arg\max Q^\pi(s,a)\]
    </li>
  </ul>

</blockquote>

<p>A practice, instead of having $i \to \infty$, we can also reduce $\epsilon$ to have $\epsilon_i = 1/i$ to also satisfy GLIE (over time we have $0$ prob for exploration).</p>

<blockquote>
  <p><strong>Theorem</strong>: GLIE Monte-Carlo control converges to the optimal state-action value function</p>

\[Q(s,a) \to Q^*(s,a)\]

  <p>from which we can find the optimal policy easily by taking $\arg\max_a Q^*(s,a)$</p>
</blockquote>

<h3 id="mc-on-policy-improvementcontrol">MC On Policy Improvement/Control</h3>

<p>Finally, putting everything together, we have the MC On-policy Policy Improvement algorithm as:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220519164409454.png" alt="image-20220519164409454" style="zoom: 60%;" /></p>

<p>which basically combines:</p>

<ul>
  <li>
    <p><a href="#MC for On Policy Q Evaluation">MC for On Policy Q Evaluation</a></p>
  </li>
  <li>
    <p><a href="#$\epsilon$-greedy Policy Improvement">$\epsilon$-greedy Policy Improvement</a></p>
  </li>
  <li>
    <p>and $\epsilon$-Greedy$(Q)$ means that</p>

\[\pi_{k}(a|s) = \begin{cases}
\arg\max_a Q(s,a),&amp; p=1-\epsilon\\
a \in A, &amp; p = \epsilon / |A|
\end{cases}\]
  </li>
</ul>

<hr />

<p><em>For Example</em>: Mars Rovers again, with 7 states:</p>

<ul>
  <li>
    <p>Now we specify rewards for both actions as we need to compute $Q(s,a)$</p>

\[r(\cdot, a_1) = [1,0,0,0,0,0,10]\\
r(\cdot, a_2) = [0,0,0,0,0,0,5]\]
  </li>
  <li>assume current greedy policy $\pi(s)=a_1$</li>
  <li>take $\gamma =1, \epsilon = 0.5$</li>
</ul>

<p>Then, <strong>using $\epsilon$-greedy w.r.t to $\pi(s)$</strong>, we got a sampled trajectory of</p>

\[(s_3,a_1,0,s_2,a_2,0,s_3,a_1,0,   s_2,a_2,0,   s_1,a_1,1, \text{terminal})\]

<p>So we know the first visit MC estimate of $Q$ of each $(s,a)$ pair gives:</p>

<ul>
  <li>$Q^{\epsilon-\pi}(\cdot,a_1)=[1,0,1,0,0,0,0]$ since we are doing MC, we propagates the end-of-episode reward to all states</li>
  <li>$Q^{\epsilon-\pi}(\cdot, a_2)=[0,1,0,0,0,0,0]$ same reason as above</li>
</ul>

<p>now, given the policy evaluation:</p>

<p><strong>Question</strong>: what is the greedy policy $\pi(s)$ w.r.t this $Q^{\epsilon - \pi}$?</p>

<ul>
  <li>simply $\pi(s) = [a_1,a_2,a_1,\text{tie},\text{tie},\text{tie},\text{tie}]$</li>
</ul>

<p><strong>Question</strong>: therefore, what is the new improved policy $\pi_{k+1}=\epsilon\text{-greedy}(Q)$ if $k=3$?</p>

<ul>
  <li>
    <p>this means $\epsilon=1/3$</p>
  </li>
  <li>
    <p>then, from the above result, this means</p>

\[\pi_{k+1}(a|s) = \begin{cases}
[a_1,a_2,a_1,\text{tie},\text{tie},\text{tie},\text{tie}], &amp; p=2/3\\
a \in A, &amp; p = 1/6
\end{cases}\]
  </li>
</ul>

<h2 id="td-on-policy-policy-iteration">TD On-Policy Policy Iteration</h2>

<p><em>Recall that</em> the general framework for policy iteration in a model-free case</p>

<ol>
  <li>initialize $\pi_0(a\vert s)$ randomly for all $s$</li>
  <li>repeat
    <ol>
      <li>policy <strong>evaluation</strong>: compute $Q^{\pi_i}(s,a)$</li>
      <li>policy <strong>improvement</strong>: update $\pi_{i+1}$ using $Q^{\pi_i}$</li>
    </ol>
  </li>
</ol>

<blockquote>
  <p>Recall that in the section <a href="#Policy Evaluation with Unknown World">Policy Evaluation with Unknown World</a>, we had <strong>two ways of doing policy evaluation</strong>, either doing MC or doing TD. We have come up with a way to compute $Q^\pi(s,a)$ using MC method, therefore, another variant is to use TD method.</p>
</blockquote>

<p>Hence, the general algorithm for TD based On-Policy Policy Iteration looks like</p>

<ol>
  <li>
    <p>initialize $\pi_0(a\vert s)$ randomly for all $s$</p>
  </li>
  <li>
    <p>repeat</p>

    <ol>
      <li>
        <p>policy <strong>evaluation ==using TD==</strong>: compute $Q^{\pi_i}(s,a)$</p>
      </li>
      <li>
        <p>policy <strong>improvement (same as MC)</strong>: update $\pi_{i+1}$ using $Q^{\pi_i}$ by</p>

\[\pi_{i+1} = \epsilon\text{-Greedy}(Q^{\pi_i})\]
      </li>
    </ol>
  </li>
</ol>

<h3 id="sarsa">SARSA</h3>

<p>Essentially using TD for policy evaluation:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220519171606359.png" alt="image-20220519171606359" style="zoom:67%;" /></p>

<p>where:</p>

<ul>
  <li>
    <p>the key change is the update rule</p>

\[Q(s_t,a_t) =Q(s_t,a_t)+\alpha( \underbrace{[r_t+\gamma Q(s_{t+1},a_{t+1})]}_{\text{TD target}}-Q(s_t,a_t))\]

    <p>which can perform update per sample instead of waiting until end-of-episode (in MC case).</p>
  </li>
  <li>
    <p>therefore, notice that the policy are updated much more frequently as well (as compared to the MC case)</p>
  </li>
  <li>
    <p>the $\alpha$ used is also often called the ==learning rate== in this context</p>
  </li>
</ul>

<blockquote>
  <p>Note that we discarded the notation of $Q^\pi$ here and used $Q$, as we are frequently changing the policy when computing this running estimate to converge to $Q^*(s,a)$</p>
</blockquote>

<h3 id="convergence-properties-of-sarsa">Convergence Properties of SARSA</h3>

<blockquote>
  <p><strong>Theorem</strong>: SARSA for finite-state and finite-action MDPs <strong>converges</strong> to the optimal action-value, $Q(s,a)\to Q^*(s,a)$ ,under the following conditions:</p>

  <ul>
    <li>
      <p>the policy sequence $\pi_t(a\vert s)$ satisfies GLIE</p>
    </li>
    <li>
      <p>the step size/learning rate $\alpha_t$ satisfy the Robbins-Munro sequence such that</p>

\[\sum_{t=1}^\infty \alpha_t =\infty\\
\sum_{t=1}^\infty \alpha_t^2 &lt; \infty\]

      <p>an example would be $\alpha_t = 1/t$</p>
    </li>
  </ul>
</blockquote>

<p>But as the above are conditions <strong>sufficient</strong> to guarantee convergence, in reality</p>

<ul>
  <li>we could also <strong>simply use $\alpha$ being some small constants</strong> and empirically they often converge as well</li>
  <li>there are also some domains that is <strong>hard to satisfy GLIE</strong> (e.g. helicopter crashed, can no longer visit some other states). Some research has been working on how to deal with that, but for now we will not worry about it.</li>
</ul>

<h3 id="q-learning">Q-Learning</h3>

<p>The only change will be in SARSA</p>

\[Q(s_t,a_t) =Q(s_t,a_t)+\alpha( \underbrace{[r_t+\gamma Q(s_{t+1},a_{t+1})]}_{\text{TD target}}-Q(s_t,a_t))\]

<p>but <strong>for Q-learning we consider</strong> the update rule:</p>

\[Q(s_t,a_t) =Q(s_t,a_t)+\alpha( \underbrace{[r_t+\gamma \max_{a'} Q(s_{t+1},a')]}_{\text{TD target}}-Q(s_t,a_t))\]

<p>so that</p>

<ul>
  <li>
    <p>instead of taking $a_{t+1}\sim \pi(a\vert s_{t+1})$, which is being ==realistic== (in SARSA), we are being ==optimistic== so that we update our $Q(s_t,a_t)$ by the <strong>best value we could possibly get</strong> using $\max_{a’} Q(s_{t+1},a’)$</p>
  </li>
  <li>
    <p>this means that in cases where we have lots of negative reward/risks in <strong>early stages</strong> (e.g. cliff walking), SARSA would produce better policy whereas Q-Learning would produce more risky policy</p>
  </li>
</ul>

<hr />

<p>Hence the entire algorithm looks like</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220519175251084.png" alt="image-20220519175251084" style="zoom:67%;" /></p>

<p>where notice that:</p>

<ul>
  <li>we no longer need the $a_{t+1}$ in the five tuple $(s_t, a_t, r_t, s_{t+1}, a_{t+1})$ in SARSA, since we will be taking the next best action</li>
  <li>since we are being optimistic, does how Q is initialized matter? Asymptotically no, under mild conditions, but at the beginning, yes</li>
  <li>finally, like SARSA it is a policy based on TD, this means that the final reward will only <strong>propagate slowly</strong> to other states.</li>
</ul>

<h3 id="convergence-properties-of-q-learning">Convergence Properties of Q-Learning</h3>

<p>What conditions are sufficient to ensure that Q-learning with $\epsilon$-greedy exploration <strong>converges to optimal $Q^*$</strong> ?</p>

<ul>
  <li>Visit all $(s, a)$ pairs infinitely often</li>
  <li>and the step-sizes αt satisfy the Robbins-Munro sequence.</li>
  <li>Note: the algorithm does not have to be greedy in the limit of infinite exploration (GLIE) to satisfy this (could keep $\epsilon$ large).</li>
</ul>

<p>What conditions are sufficient to ensure that Q-learning with $\epsilon$-greedy exploration <strong>converges to optimal $\pi^*$ ?</strong></p>

<ul>
  <li>The algorithm is GLIE (i.e. policy being more and more greedy over time), along with the above requirement to ensure the Q value estimates converge to the optimal Q.</li>
</ul>

<h3 id="maximization-bias">Maximization Bias</h3>

<p>Because Q-Learning exploits the greedy action early on, we could have a <strong>maximization bias</strong> when estimating the value of a policy.</p>

<p>Consider the case of a single state MDP, so that $\vert S\vert =1$, with two actions. And suppose the two actions both have mean random rewards of zero: $\mathbb{E}[r\vert a=a_1]=\mathbb{E}[r\vert a=a_2]=0$</p>

<ul>
  <li>then this means that $Q(s,a_1)=Q(s,a_2)=0=V(s)$ is the true estimate and is optimal.</li>
</ul>

<p>In practice, we can only do finite samples taking action $a_1,a_2$. Let $\hat{Q}(s,a_1),\hat{Q}(s,a_2)$ be finite sample estimate of $Q$</p>

<ul>
  <li>
    <p>suppose we used an <strong>unbiased estimate of $\hat{Q}(s,a)$</strong> by taking the mean</p>

\[\hat{Q}(s,a_1) = \frac{1}{N(s,a_1)}\sum_{i=1}^{N(s,a_1)}r_i(s,a_1)\]
  </li>
  <li>
    <p>Let $\hat{\pi}=\arg\max \hat{Q}(s,a)$ be the greedy policy w.r.t the estimated $\hat{Q}$</p>
  </li>
  <li>
    <p>then we notice that:</p>

\[\begin{align*}
\hat{V}^{\hat{\pi}}
&amp;=\mathbb{E}[\max (\hat{Q}(s,a_1),\hat{Q}(s,a_2))]\\
&amp;\ge\max(\mathbb{E}[\hat{Q}(s,a_1)],\mathbb{E}[\hat{Q}(s,a_2)]\\
&amp;= \max[0,0]\\
&amp;= V^\pi
\end{align*}\]

    <p>meaning we have a <strong>biased estimator</strong> of $V^{\hat{\pi}}$ for the optimal policy.</p>
  </li>
</ul>

<p>To solve this, the idea is to instead split samples and use to create two independent unbiased estimates of $Q_1(s_1, a_i)$ and $Q_2(s_1, a_i),\forall a$.</p>

<ul>
  <li>Use one estimate to select max action: $a^* = \arg\max_a Q_1(s_1,a)$</li>
  <li>Use other estimate to estimate value of $a^<em>:Q_2(s,a^</em>)$</li>
  <li>Yields unbiased estimate: $\mathbb{E}[Q_2(s,a^<em>)]=Q(s,a^</em>)$</li>
</ul>

<p>This therefore gives birth to the double Q-Learning algorithm</p>

<h3 id="double-q-learning">Double Q-Learning</h3>

<p>So the only difference is now we have <strong>two $Q$ estimates:</strong></p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220519181511825.png" alt="image-20220519181511825" style="zoom:67%;" /></p>

<p>where in practice compared to Q-Learning:</p>

<ul>
  <li>doubles the memory</li>
  <li>same computation requirements</li>
  <li>data requirements are subtle– might reduce amount of exploration needed due to lower bias</li>
</ul>

<p>Additionally</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220519181621394.png" alt="image-20220519181621394" style="zoom:67%;" /></p>

<h1 id="value-function-approximation">Value Function Approximation</h1>

<p>In the previous section, we discussed how to do <strong>control</strong> (make decisions) <strong>without a known model</strong> of how the world works:</p>

<ul>
  <li>learning a good policy from experience (sampled episodes)</li>
  <li>update $Q$ estimate using a ==tabular representation==: ==finite== number of state-action pair</li>
</ul>

<p>However, as you can imagine many real world problems have <strong>enormous state and/or action space</strong> so that we cannot really tabulate all possible values. So we need to somehow ==generalize== to those unknown state-actions.</p>

<blockquote>
  <p><strong>Aim</strong>: even if we encounter state-action pairs <em>not</em> met before, we want to make <em>good decisions</em> by past experience.</p>
</blockquote>

<blockquote>
  <p><strong>Value Function Approximation</strong>: represent a (state-action/state) value function <strong>with a parametrized function</strong> instead of a table, so that even if we met an inexperienced state/state-action, we can get some values.</p>
</blockquote>

<p>So we imagine</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220521111857200.png" alt="image-20220521111857200" style="zoom: 50%;" /></p>

<p>so that essentially we are parameterized the function with weights $W$ as in a deep neural network.</p>

<p>Using such an approach has the following benefits:</p>

<ul>
  <li>Reduce memory needed to store $(P,R)/V/Q/\pi$</li>
  <li>Reduce computation needed to compute  $(P,R)/V/Q/\pi$</li>
  <li>Reduce experience/data needed to find a good  $(P,R)/V/Q/\pi$</li>
</ul>

<p>but this will <em>usually</em> be a tradeoff:</p>

<ul>
  <li><strong>representational capacity</strong> (of the DNN to represent states) v.s. memory/computation/data needed</li>
</ul>

<p>Then most importantly, we need to consider <strong>what class of functions</strong> do we consider for such an approximation? Many possible function approximators including</p>

<ul>
  <li>Linear combinations of features</li>
  <li>Neural networks</li>
  <li>Decision trees (useful for being highly interpretable)</li>
  <li>Nearest neighbors</li>
  <li>Fourier/ wavelet bases</li>
</ul>

<blockquote>
  <p>But here we will focus on function approximators that are <strong>differentiable</strong>, so that we can easily optimize for (e.g. gradient descent). Two popular classes of differentiable function approximators include:</p>

  <ul>
    <li><strong>linear feature representations</strong> (this section)</li>
    <li><strong>neural networks</strong> (next section)</li>
  </ul>

  <p>Also notice that since we are now doing gradient descent, our approximator will be local optimas instead of the global optimas.</p>
</blockquote>

<h2 id="vfa-for-policy-evaluation">VFA for Policy Evaluation</h2>

<blockquote>
  <p><strong>Aim</strong>: find the best approximate representation of $V^\pi$ using a parametrized function $\hat{V}$.</p>
</blockquote>

<h3 id="vfa-for-policy-evaluation-with-oracle">VFA for Policy Evaluation with Oracle</h3>

<p>In this case, we consider:</p>

<ul>
  <li>given a policy $\pi$ to evaluate</li>
  <li>assume that there is an ==oracle== that returns the <strong>true value for $V^\pi(s)$</strong></li>
</ul>

<p>so we basically want our function approximation to look like the true $V^\pi(s)$ in our space.</p>

<p>Then we can simply perform gradient descent type methods. For instance,</p>

<ul>
  <li>
    <p><strong>loss function</strong></p>

\[L(w) = \frac{1}{2} \mathbb{E}_\pi[(V^\pi(s) - \hat{V}(s;w))^2]\]

    <p>where $\mathbb{E}_\pi$ means expected value over the <strong>distribution of states</strong> under current policy $\pi$</p>
  </li>
  <li>
    <p><strong>then gradient update is</strong></p>

\[w:=w - \alpha \left( \nabla_w L(w) \right)\]

    <p>and</p>

\[\nabla_w L(w) = \mathbb{E}_\pi[(V^\pi(s)- \hat{V}(s;w))\nabla_w \hat{V}(s)]\]
  </li>
</ul>

<p>Then, for instance SGD considers using some batched/single sample to approximate the expected value:</p>

\[\nabla_w L(w) \approx (V^\pi(s)- \hat{V}(s;w))\nabla_w \hat{V}(s)\]

<p>for some sampled $s,V^\pi(s)$.</p>

<hr />

<p>If we are considering a <strong>Linear Value Function Approximation</strong> with an Oracle, then simply we consider</p>

\[\hat{V}(s;w) = \vec{x}(s)^T \vec{w}\]

<p>for $\vec{x}(s)$ being a representation of our state. Then we acn also show the gradient to be:</p>

\[\nabla_w L(w) = \mathbb{E}_\pi[(V^\pi(s)- \hat{V}(s;w)) \vec{x}(s)]\]

<p>since $\nabla_w \hat{V} = \vec{x}(s)$ in this case.</p>
<h3 id="model-free-vfa-policy-evaluation">Model Free VFA Policy Evaluation</h3>

<p>Obviously most of the time we do not have an oracle, which is like knowing the model of the world already.</p>

<blockquote>
  <p><strong>Aim</strong>: do model-free value function approximation for prediction/evaluation/policy evaluation <strong>without a model/oracle</strong></p>

  <ul>
    <li>recall that this means given a fixed policy $\pi$</li>
    <li>estimate its $V^\pi$ or $Q^\pi$</li>
  </ul>
</blockquote>

<p><em>Recall</em> that we have done model-free policy evaluation using tabular methods in:</p>

<ul>
  <li><a href="#Monte Carlo Policy Evaluation">Monte Carlo Policy Evaluation</a>: update estimate after each episode</li>
  <li><a href="#Temporal Difference Learning">Temporal Difference Learning</a>: update estimate after each step</li>
</ul>

<p>both of which essentially does:</p>

<ul>
  <li>maintain a look up table to store current estimates $V^\pi$ or $Q^\pi$</li>
  <li>Updated these estimates after each episode (Monte Carlo methods) or after each step (TD methods)</li>
</ul>

<hr />

<blockquote>
  <p>In VFA, we can basically ==change the update step== to be ==fitting the function approximation== (e.g. gradient descent)</p>
</blockquote>

<p>This means that we need to have prepared:</p>

<ul>
  <li>
    <p>a feature vector to <strong>represent a state $s$</strong></p>

\[x(s) = \begin{bmatrix}
x_1(s)\\
x_2(s)\\
\dots\\
x_n(s)
\end{bmatrix}\]

    <p>for instance, for robot navigation, it can be a 180-dimensional vector, with each cell representing the distance to the first detected obstacle. 
However, notice that this representation also means that it is ==not markov==, as in different hallways (true states) you could have the same feature vector. But it could be still a ==good representation to condition our decision on==.</p>
  </li>
  <li>
    <p>choose a class of function approximators to approximate the value function</p>
    <ul>
      <li>linear function</li>
      <li>neural networks</li>
    </ul>
  </li>
</ul>

<h4 id="mc-value-function-approximation">MC Value Function Approximation</h4>

<p>Recall that for MC methods, we used the following update rule for value function updates</p>

\[V^\pi(s)=V^\pi(s)+\alpha\left( G_{i,t}-V^\pi(s) \right)\]

<p>so that our ==target is $G_t$==, which is an <strong>unbiased</strong> but noisy estimate of the true value of $V^\pi(s_t)$.</p>
<blockquote>
  <p><strong>Idea</strong>: therere we treat $G_t$ being the “oracle” fo $V^\pi(s_t)$, from which we can get a loss and update our approximator.</p>
</blockquote>

<p>This then means our gradient update (for SGD is):</p>

\[\begin{align*}
\nabla_w L(w) 
&amp;=(V^\pi(s_t)- \hat{V}(s_t;w))\nabla_w \hat{V}(s_t)\\
&amp;\approx (G_t- \hat{V}(s_t;w))\nabla_w \hat{V}(s_t)
\end{align*}\]

<p>If we are using a linear function:</p>

\[\nabla_w L(w) \approx (G_t- \vec{x}(s_t)^T \vec{w}) \vec{x}(s_t)\]

<p>and then just use $\vec{w} := \vec{w} - \alpha \nabla_w L(w)$ to do descent.</p>

<blockquote>
  <p>This means that we essentially reduce MC VFA to doing ==supervised learning== on a set of (state,return) pairs: $(s_1, G_1), (s_2, G_2), …, (s_T, G_t)$</p>
</blockquote>

<p>Therefore our algorithm with MC updates looks like</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220521130409230.png" alt="image-20220521130409230" style="zoom: 50%;" /></p>

<p>where notice that:</p>
<ul>
  <li>of course you can also have an every-visit version by changing line 5</li>
  <li>since we have a finite episode, we used $\gamma=1$ in line 6</li>
</ul>

<hr />

<p><em>For instance</em>: consider a 7 state space with the transition looking like:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220521144341630.png" alt="image-20220521144341630" style="zoom:50%;" /></p>

<p>so that:</p>

<ul>
  <li>state $\vec{x}(s_1) = [2,0,0,0,0,0,1]$ so that $\vec{x}(s_1)^T \vec{w} = 2w_1+w_8$, etc.</li>
  <li>there are two states, $a_1$ being the solid lines and $a_2$ being the dashed lines.</li>
  <li>dashed transition means that here we have a uniform probability $1/6$ to be transitioned to any state $s_i$ for $i \in [1,6]$.</li>
  <li>we assume some small termination probability from state $s_7$, but not shown on the diagram</li>
  <li>all states have zero reward (so the optimal value function is $V^\pi = 0$)</li>
</ul>

<p>Suppose we have sampled the following episode:</p>
<ul>
  <li>$s_1, a_1, 0, s_7, a_1, 0, s_7, a_1, 0, \text{terminal}$</li>
  <li>we are using a <strong>linear function</strong></li>
  <li>we have initialized all weights to one $\vec{w}_0 = [1,1,1,1,1,1,1]$</li>
  <li>$\alpha = 0.5$, take $\gamma = 1$</li>
</ul>

<p><strong>Question</strong>: what is the MC estimate of $V^\pi(s_1)$? $\vec{w}$ after one update?</p>

<ul>
  <li>first we need $G_1$, which in this case is $0$</li>
  <li>our current estimate for $V^\pi(s_1)$ is $\vec{x}(s_1)^T \vec{w}_0 = 2+1=3$</li>
  <li>
    <p>therefore, our update for one step is:</p>

\[\Delta w = -\alpha \cdot (0 - 3) \cdot \vec{x}(s_1) =-1.5\vec{x}(s_1)=[-3,0,0,0,0,0,-1.5]\]
  </li>
  <li>
    <p>finally, our new weight is therefore $w + \Delta w$:</p>

\[\vec{w}_1 = [-2,1,1,1,1,1,-0.5]\]

    <p>so essentially we are doing SGD per state in the episode.</p>
  </li>
</ul>

<p>But does such an update ==converge to the right thing==?</p>

<h4 id="convergence-for-mc-linear-value-function-approximation">Convergence for MC Linear Value Function Approximation</h4>

<p>Recall that if provided a policy, then MDP problem is reduced to a Markov Reward Process (by following that policy). Therefore, if we eventually sample many episodes, we get a <strong>probability distribution</strong> over states $d(s)$, such that:</p>
<ul>
  <li>$d(s)$ is the stationary distribution over states following $\pi$</li>
  <li>then obviously $\sum_s d(s) = 1$</li>
</ul>

<p>Since it is stationary, this means that the distribution after a single transition gives the same $d(s)$:</p>

\[d(s') = \sum_s \sum_a \pi(a|s)p(s'|s,a)d(s)\]

<p>must hold, if the markov process has ran long enough.</p>

<p>Using this distribution, we can consider the ==mean square error== of our estimators for a particular policy $\pi$:</p>

\[MSVE(\vec{w}) = \sum_{s\in S} d(s)\cdot (V^\pi(s) - \hat{V}^\pi(s;\vec{w}))^2\]

<p>for a linear function, we use $\hat{V}^\pi(s;\vec{w}) = \vec{x}(s)^T \vec{w}$.</p>

<blockquote>
  <p><strong>Theorem</strong>: MC policy evaluation with VFA converges to the weights $\vec{w}_{MC}$ which has the ==minimum mean squared error== possible:</p>

\[MSVE(\vec{w}_{MC}) = \min_w \sum_{s\in S} d(s)\cdot (V^\pi(s) - \hat{V}^\pi(s;\vec{w}))^2\]

  <p>note that the error might not be zero, e.g. using a linear approximator has only a small capacity.</p>
</blockquote>

<h4 id="batch-mc-value-function-approximation">Batch MC Value Function Approximation</h4>

<p>The SGD version basically performs an update per sample, which is suitable for online scenario. However, often we could get a set of episodes already sampled from using a policy $\pi$. Then we can perform a better weight update by considering:</p>

\[\arg\min_\vec{w} \sum_{i=1}^N (G(s_i)- \vec{x}(s_i)^T \vec{w})^2\]

<p>to approximate the expected value version of the MSVE. Then the optimal weights can be solved <strong>directly</strong> to be:</p>

\[\vec{w} = (X^TX)^{-1} X^T \vec{G}\]

<p>for:</p>
<ul>
  <li>$\vec{G}$ is a vector of all $N$ returns</li>
  <li>$X$ is a matrix of the features of each of the $N$ states $\vec{x}(s_i)$</li>
  <li>but of course this would be memory intensive as we need to store all $N$ states and returns.</li>
  <li>finally, you can obviously have something in between SGD and this full batch.</li>
</ul>

<h4 id="td-learning-with-value-function-approximation">TD Learning with Value Function Approximation</h4>

<p>First recall that TD method considers bootstrapping and sampling to approximate $V^\pi$, so that the update rule is based on per sample:</p>

\[V^\pi(s) = V^\pi(s) + \alpha (r + \gamma V^\pi(s') - V^\pi(s))\]

<p>with the ==target== being $r+\gamma V^\pi(s’)$, which is a biased estimate of the true $V^\pi$.</p>

<blockquote>
  <p><strong>Idea</strong>: use function to represent $V^\pi$, and use boostrapping + sampling in TD method, with the same update rule shown above.</p>
</blockquote>

<p>(recall that we are still on-policy, we are evaluating the value of a given policy $\pi$ and all sampled data + estimation are on the same policy)</p>

<blockquote>
  <p>Therefore, essentially we now consider TD larning being a supervised learning on the set of data pairs:</p>

\[(s_1, r_1 + \hat{V}^\pi(s_2;\vec{w})), (s_2, r_2 + \hat{V}^\pi(s_3;\vec{w})), ...\]

  <p>then the MSE loss is simply:</p>

\[L(\vec{w}) = \mathbb{E}_\pi [ (r_j + \gamma \hat{V}^\pi(s_{j+1},\vec{w})) -\hat{V}(s_j; \vec{w})]\]

  <p>Hence our gradient step with a SGD update (replacing mean with a single sample) is:</p>

\[\Delta w = \alpha \cdot (r + \hat{V}^\pi(s';\vec{w}) - V^\pi(s;\vec{w})) \cdot \nabla_w \hat{V}^\pi(s;\vec{w})\]

  <p>again, with target being $r+\gamma \hat{V}^\pi(s’;\vec{w})$</p>
</blockquote>

<p>In the case of a linear function, then we have:</p>

\[\begin{align*}
\Delta w 
&amp;= \alpha \cdot (r + \hat{V}^\pi(s';\vec{w}) - V^\pi(s;\vec{w})) \cdot \nabla_w \hat{V}^\pi(s;\vec{w})\\
&amp;= \alpha \cdot (r + \hat{V}^\pi(s';\vec{w}) - V^\pi(s;\vec{w})) \cdot \vec{x}(s)\\
&amp;= \alpha \cdot (r + \vec{x}(s')^T \vec{w} - \vec{x}(s)^T \vec{w}) \cdot \vec{x}(s)\\
\end{align*}\]

<p>so we are boostrapping our target using our current estimate of $V^\pi(s)$.</p>

<p>Finally, the algorithm therefore looks like</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220521160015879.png" alt="image-20220521160015879" style="zoom:50%;" /></p>

<hr />

<p><em>For instance</em>: we can consider the same example with MC case to compare the difference:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220521144341630.png" alt="image-20220521144341630" style="zoom:50%;" /></p>

<p>so that:</p>

<ul>
  <li>state $\vec{x}(s_1) = [2,0,0,0,0,0,1]$ so that $\vec{x}(s_1)^T \vec{w} = 2w_1+w_8$, etc.</li>
  <li>there are two states, $a_1$ being the solid lines and $a_2$ being the dashed lines.</li>
  <li>dashed transition means that here we have a uniform probability $1/6$ to be transitioned to any state $s_i$ for $i \in [1,6]$.</li>
  <li>we assume some small termination probability from state $s_7$, but not shown on the diagram</li>
  <li>all states have zero reward (so the optimal value function is $V^\pi = 0$)</li>
</ul>

<p>Suppose we have sampled the following episode:</p>

<ul>
  <li>$s_1, a_1, 0, s_7, a_1, 0, s_7, a_1, 0, \text{terminal}$</li>
  <li>we are using a <strong>linear function</strong></li>
  <li>we have initialized all weights to one $\vec{w}_0 = [1,1,1,1,1,1,1]$</li>
  <li>$\alpha = 0.5$, take $\gamma = 0.9$</li>
</ul>

<p><strong>Question</strong>: what is the TD estimate of $V^\pi(s_1)$? $\vec{w}$ after one update of $(s_1,a_1,0,s_7)$?</p>

<ul>
  <li>
    <p>using the update formula:</p>

\[\Delta \vec{w} = \alpha (0+ 0.9 * 3 - 3)\vec{x}(s_1) = -0.3\alpha \vec{x}(s_1)\]

    <p>which is a much smaller weight update than the MC update.</p>
  </li>
</ul>

<h4 id="convergence-for-td-linear-value-function-approximation">Convergence for TD Linear Value Function Approximation</h4>

<p>As mentioned in the MC case, we consider the MSVE for our estimators for a particular policy $\pi$:</p>

\[MSVE(\vec{w}) = \sum_{s\in S} d(s)\cdot (V^\pi(s) - \hat{V}^\pi(s;\vec{w}))^2\]

<p>for a linear function, we use $\hat{V}^\pi(s;\vec{w}) = \vec{x}(s)^T \vec{w}$.</p>

<blockquote>
  <p><strong>Theorem</strong>: TD policy evaluation with VFA converges to the weights $\vec{w}_{TD}$ is ==within a constant factor== of minmum mean squared error possible:</p>

\[MSVE(\vec{w}_{TD}) \le \frac{1}{1-\gamma} \min_w \sum_{s\in S} d(s)\cdot (V^\pi(s) - \hat{V}^\pi(s;\vec{w}))^2\]

  <p>so it is slightly worse than MC method as it is biased, but it <strong>updates/converges much faster</strong>.</p>
</blockquote>

<p>As mentioned before, this happens also because we are using</p>
<ul>
  <li>some feature representation for a state which might be a <strong>subspace</strong> of the true space of states</li>
  <li>in TD we are <strong>bootstrapping</strong>, which gives rise to bias and error</li>
</ul>

<p>But this also means that if we have some one-hot encoded feature, <strong>one for each state</strong>, then:</p>

\[\min_w \sum_{s\in S} d(s)\cdot (V^\pi(s) - \hat{V}^\pi(s;\vec{w}))^2 = 0\]

<p>as you can have a unique value per state, even with a linear function. Therefore:</p>
<ul>
  <li>
    <p>if we used a MC method, then simply:</p>

\[MSVE(\vec{w}_{MC})= \min_w \sum_{s\in S} d(s)\cdot (V^\pi(s) - \hat{V}^\pi(s;\vec{w}))^2 = 0\]
  </li>
  <li>
    <p>if we used a TD method, then:</p>

\[MSVE(\vec{w}_{TD})\le 0\]

    <p>is also optimal, and MC v.s. TD has no difference.</p>
  </li>
</ul>

<p>(of course this also means we have enough data)</p>

<blockquote>
  <p>If our state representation is a <strong>subspace</strong> of the true state space, then using a TD might incur some error (due to bootstrapping error). But if the state representation is larger or equal to the true state space, then using a TD and MC has no difference.</p>
</blockquote>

<h2 id="control-using-vfa">Control using VFA</h2>

<p>Now for control, essentially we consider moving from policy evaluation (previous sections) to policy iteration. This is basically achieved by:</p>

<ol>
  <li><strong>estimate $Q^\pi(s,a)$</strong> instead, using MC or TD technique</li>
  <li>perform <strong>$\epsilon$-greedy policy improvement</strong></li>
</ol>

<p>However, this can get unstable because we had the folllowing components:</p>
<ul>
  <li>function approximation (has uncertainty)</li>
  <li>bootstrapping (has uncertainty)</li>
  <li><strong>off-policy</strong> learning for policy improvement (has the biggest uncertainty)
    <ul>
      <li>we are changing the policy over-time, so no longer have a good estimate of the stationary distribution over states of a particular policy</li>
    </ul>
  </li>
</ul>

<p>But again, lets first go through the algorithm.</p>

<h3 id="action-value-function-approximation-with-an-oracle">Action-Value Function Approximation with an Oracle</h3>

<blockquote>
  <p><strong>Aim</strong> approximate $Q^\pi(s,a)$ given a policy $\pi$, by $\hat{Q}^\pi(s,a)$</p>
</blockquote>

<p>The idea is the same as what we see in <a href="#Model Free VFA Policy Evaluation">Model Free VFA Policy Evaluation</a>. Given an oracle $Q^\pi(s,a)$ which spits out the true value, our loss is simply:</p>

\[L(\vec{w}) = \frac{1}{2} \mathbb{E}_\pi [(Q^\pi(s,a) - \hat{Q}^\pi(s,a;\vec{w}))^2]\]

<p>Then for stochastic gradient descent method, the gradient looks like:</p>

\[\begin{align*}
\nabla_w L(w) 
&amp;= \mathbb{E}_w [(Q^\pi(s,a) - \hat{Q}^\pi(s,a;w) ) \nabla_w \hat{Q}^\pi(s,a;w)] \\
&amp;\approx (Q^\pi(s,a) - \hat{Q}^\pi(s,a;w) ) \nabla_w \hat{Q}^\pi(s,a;w)
\end{align*}\]

<p>for some sampled $s,a$ pair.</p>

<p>Finally, the features would then should include both a state and action pair:</p>

\[\vec{x}(s,a) = \begin{bmatrix}
  x_1(s,a)\\
  x_2(s,a)\\
  \vdots\\
  x_n(s,a)
\end{bmatrix}\]

<hr />

<p>For a <strong>Linear State Action Value Function Approximation</strong>, we consider simply:</p>

\[\hat{Q}(s,a;\vec{w}) = \vec{x}^T(s,a)\vec{w}\]

<p>and the rest is trivial.</p>

<h3 id="model-free-vfa-control">Model Free VFA Control</h3>

<p>Similar to how we did <a href="#Model Free VFA Policy Evaluation">Model Free VFA Policy Evaluation</a>, the idea is to approximate the oracle with ==some target==.</p>
<ul>
  <li>
    <p>in MC methods, the target is simply $G_t$, so we consider:</p>

\[\begin{align*}
\nabla_w L(w) 
&amp;\approx (Q^\pi(s,a) - \hat{Q}^\pi(s,a;w) ) \nabla_w \hat{Q}^\pi(s,a;w)\\
&amp;\approx (G_t - \hat{Q}^\pi(s,a;w) ) \nabla_w \hat{Q}^\pi(s,a;w)
\end{align*}\]
  </li>
  <li>
    <p>for SARSA, we used a TD target of $r + \gamma \hat{Q}^\pi(s’,a’;\vec{w})$ which leverages the current function approximation value to bootstrap:</p>

\[\begin{align*}
\nabla_w L(w) 
&amp;\approx (Q^\pi(s,a) - \hat{Q}^\pi(s,a;w) ) \nabla_w \hat{Q}^\pi(s,a;w)\\
&amp;\approx (r + \gamma \hat{Q}^\pi(s',a';\vec{w})- \hat{Q}^\pi(s,a;w) ) \nabla_w \hat{Q}^\pi(s,a;w)
\end{align*}\]

    <p>and you see for the above update we need $s,a,r,s’,a’$</p>
  </li>
  <li>
    <p>for Q-Learning, we use the TD target of $r + \gamma \max_{a’}\hat{Q}^\pi(s’,a’;\vec{w})$, which is optimistic and update gradient is:</p>

\[\begin{align*}
\nabla_w L(w) 
&amp;\approx (Q^\pi(s,a) - \hat{Q}^\pi(s,a;w) ) \nabla_w \hat{Q}^\pi(s,a;w)\\
&amp;\approx (r + \gamma \max_{a'}\hat{Q}^\pi(s',a';\vec{w})- \hat{Q}^\pi(s,a;w) ) \nabla_w \hat{Q}^\pi(s,a;w)
\end{align*}\]

    <p>which we only needs $s,a,r,s’$</p>
  </li>
</ul>

<blockquote>
  <p>For all of the above essentially $\hat{Q}(s,a)$ is a neural network, approximating a function of the feature vectors $\vec{x}(s,a)$</p>
</blockquote>

<p>Graphically, the gradient descent algorithms are:</p>
<ul>
  <li>performing a Bellman backup update and</li>
  <li>then projecting back to the space of our approximator</li>
</ul>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220521203039620.png" alt="image-20220521203039620" style="zoom:67%;" /></p>

<p>so that we can imagine our control algorithm doing:</p>

<ul>
  <li>the horizontal place is the space of our linear approximator</li>
  <li>first we perform one Bellman backup, and reaches $\mathbb{B}^\pi \vec{v}_w$, which is outside of our representation</li>
  <li>then, we project back to complete our gradient update $\Pi \mathbb{B}^\pi \vec{v}_w$</li>
</ul>

<p>However, notice that:</p>
<ul>
  <li>instead of iteratively performing Bellman’s backup outside the space (shown in gray above), which would make us reach the true value function (e.g. dynamic programming), we are constantly projecting back</li>
  <li>since we are <strong>projecting back at each step</strong>, then the final fixed point would be the point of vector-zero PBE</li>
  <li>the best approximation $\Pi v_\pi$ in the value error (VE) sense by projecting the true value function, the best approximators in the Bellman error (BE), projected Bellman error (PBE), and temporal difference error (TDE) senses are <strong>all potentially different</strong></li>
</ul>

<h4 id="convergence-of-vfa-control">Convergence of VFA Control</h4>

<p>Consider the following example.</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220521201453082.png" alt="image-20220521201453082" style="zoom:67%;" /></p>

<p>Suppose we want to evaluate the policy of $\pi(\text{solid}\vert \cdot)=1$. Then as we are doing policy iteration, we consider $\epsilon$-greedy policy of:</p>

<ul>
  <li>$\mu(\text{dashed})\vert \cdot)= 6/7$</li>
  <li>$\mu(\text{solid})\vert \cdot)= 1/7$</li>
  <li>$\gamma = 0.99$</li>
</ul>

<p>as the behavioral policy used to sample data.</p>

<p>Suppose for simplicity that we then throw away all $(s,a,r,s’)$ tuples whose $a\neq \pi(s)$ which we wanted to evaluate. It turns out that <strong>TD-method will diverge</strong>:</p>

<ul>
  <li>the stationary distribution of states under the policy we want to approximate will contain a lot of $s_7$ states, so episodes look like $s_1,s_7,s_7,…$</li>
  <li>however, the data sampled using our behavior policy will contain episodes such as $s_1,s_7, \text{thrown away}, s_1, s_7, …$</li>
</ul>

<p>Therefore, the <strong>distribution of states</strong> we sampled will be very <strong>different</strong> from the distribution of state under $\pi(s)$.</p>

<p>Hence, in summary:</p>

<table>
  <thead>
    <tr>
      <th> </th>
      <th>Tabular</th>
      <th>Linear VFA</th>
      <th>Nonlinear VFA</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>MC Control</td>
      <td>Converge</td>
      <td>Oscillates but Converge</td>
      <td>No guarantee</td>
    </tr>
    <tr>
      <td>SARSA</td>
      <td>Converge</td>
      <td>Oscillates but Converge</td>
      <td>No guarantee</td>
    </tr>
    <tr>
      <td>Q-Learning</td>
      <td>Converge</td>
      <td>No guarantee</td>
      <td>No guarantee</td>
    </tr>
  </tbody>
</table>

<p>but as VFA is very important, many research are done on this:</p>
<ul>
  <li>Extensive work in better TD-style algorithms with value function approximation, some with convergence guarantees: see Chp 11 S&amp;B</li>
  <li>Exciting recent work on batch RL that can converge with nonlinear VFA (Dai et al. ICML 2018): uses primal dual optimization</li>
</ul>

<h1 id="deep-reinforcement-learning">Deep Reinforcement Learning</h1>

<p>Before, we discussed value function approximation using NN and linear functions. Here, we will focus on <strong>RL with function approximation using deep NN</strong>:</p>

<ul>
  <li>need to deal with very large state spaces (e.g. for self-driving, video games, etc.)</li>
  <li>an intuition for using DNN in RL is to have a DNN to represent the features and the last linear layer represent the linear function approximator for $Q(s,a)$</li>
  <li>why is DNN so popular/useful? Universal function approximator theorem.</li>
</ul>

<p>(the following material assumes you know some basic DNN architectures, including CNNs, RNNs, etc.) Often the idea is to have:</p>

<ul>
  <li>game images as state</li>
  <li>game actions as actions (e.g. left, right, up, down, etc.)</li>
  <li>game score as rewards</li>
  <li>model the $Q$ value function using a DNN</li>
</ul>

<h2 id="deep-q-learning">Deep Q Learning</h2>

<p>Recall that since Q-Learning was based on TD updates, we had a concern that those off-policy control algorithms can fail to converge:</p>

<ul>
  <li>off-policy control + bootstrapping + function approximation, the deadly triad</li>
  <li>we have also seen some simple cases where the such an algorithm does diverge</li>
</ul>

<p>However, in 2014, DeepMind tried again to combine DNN with RL and achieved extraordinary results in Atari: <strong>in practice we can get reasonably good policies out</strong>. This is essentially the DQN network:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220522155926513.png" alt="image-20220522155926513" /></p>

<p>where</p>

<ul>
  <li>since we somehow need to represent velocities in game state, 4-in game frames are taken to represent a state</li>
  <li>the network models $Q(s,a)$ for a total of 18 possible joystick actions</li>
  <li>reward is the game score</li>
</ul>

<hr />

<p>We know that Q-learning with VFA can diverge. Two of the issues are:</p>
<ul>
  <li><strong>correlations between samples</strong>: consider an episode of $s,a,r,s’,a’,r’…$. we notice that $V(s)$ would be highly correlated with $V(s’)$ in this case.</li>
  <li><strong>non-stationary targets due to bootstrapping</strong>: the update target is current approximation, which changes as we perform an update!</li>
</ul>

<p>DQN addresses those issues by using:</p>
<ul>
  <li><strong>Experience replay</strong>: help remove correlations</li>
  <li><strong>Fixed Q-targets</strong>: help convergence</li>
</ul>

<p>so that it is more likely to converge.</p>

<h3 id="dqns-experience-replay">DQNs: Experience Replay</h3>

<blockquote>
  <p>To help remove correlations, store dataset (called a ==replay buffer==) $D$ from prior experience. So that instead of having updates in the same order as the episode = high correlation, we sample from the buffer.</p>
</blockquote>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220522161057736.png" alt="image-20220522161057736" style="zoom:80%;" /></p>

<p>note that this also means we need to decide <strong>which experience to put in the buffer</strong>.</p>
<ul>
  <li>Usually we can just place the most recent 1 million (for instance) samples in the buffer and sample from it.</li>
  <li>this means we also tend to set some fixed probability of how often we will want to sample new experiences</li>
</ul>

<p>With this, the update step of the algorithm would look like:</p>
<ol>
  <li>sample an experience tuple $(s,a,r,s’) \sim D$ from the replay buffer</li>
  <li>
    <p>compute the target value in a TD fashion as we are doing Q-learning:</p>

\[r + \gamma \max_{a'} \hat{Q}(s',a'| \vec{w})\]
  </li>
  <li>
    <p>use SGD to update:</p>

\[\Delta w = \alpha (r + \gamma \max_{a'} \hat{Q}(s',a'| \vec{w}) - \hat{Q}(s,a|\vec{w}))\nabla_w \hat{Q}(s,a|\vec{w})\]
  </li>
</ol>

<p>now, as mentioned before another problem is that our update target is using the current approximation, which changes as we perform an update. We are chasing a <strong>non-stationary target</strong>.</p>

<h3 id="dqns-fixed-q-target">DQNs: Fixed Q-Target</h3>

<blockquote>
  <p>To help improve stability, fix the target weights used in the target calculation <strong>for multiple updates</strong>, instead of having it changed per update.</p>
</blockquote>

<p>Let parameters $\vec{w}^-$ and $\vec{w}$ be the weights of the target and current network. Essentially the idea is</p>
<ol>
  <li>sample an experience tuple $(s,a,r,s’) \sim D$ from the replay buffer</li>
  <li>
    <p>compute the target value <strong>using $\vec{w}^-$</strong></p>

\[r + \gamma \max_{a'} \hat{Q}(s',a'| \vec{w}^-)\]
  </li>
  <li>
    <p>use SGD to update:</p>

\[\Delta w = \alpha (r + \gamma \max_{a'} \hat{Q}(s',a'| \vec{w}^-) - \hat{Q}(s,a|\vec{w}))\nabla_w \hat{Q}(s,a|\vec{w})\]
  </li>
  <li>after a certain period, e.g. per 100 steps, update $\vec{w}^- := \vec{w}$.</li>
</ol>

<h3 id="dqn-ablation-study">DQN Ablation Study</h3>

<p>How well does the above improve performance?</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220522164035968.png" alt="image-20220522164035968" style="zoom: 50%;" /></p>

<p>so we see that:</p>
<ul>
  <li>replay is <strong>hugely</strong> important</li>
</ul>

<h3 id="dqn-summary">DQN Summary</h3>

<ul>
  <li>DQN uses experience replay and fixed Q-targets</li>
  <li>Store transition $s_t, a_t, r_{t+1}, s_{t+1}$ in replay memory $D$</li>
  <li>Sample random mini-batch of transitions $(s,ta,r,s’)$ from $D$</li>
  <li>Compute Q-learning targets w.r.t. old, fixed parameters $w^−$</li>
  <li>Update using $\epsilon$-greedy exploration, so as before need some decaying exploration</li>
  <li>Optimizes MSE loss between Q-network and Q-learning targets</li>
</ul>

<p>After the success of DQNs, we then had many immediate improvements (many others!)</p>
<ul>
  <li><strong>Double DQN</strong> (Deep Reinforcement Learning with Double Q-Learning, Van Hasselt et al, AAAI 2016)</li>
  <li><strong>Prioritized Replay</strong> (Prioritized Experience Replay, Schaul et al, ICLR 2016)</li>
  <li><strong>Dueling DQN</strong> (best paper ICML 2016) (Dueling Network Architectures for Deep Reinforcement Learning, Wang et al, ICML 2016)</li>
  <li>etc.</li>
</ul>

<h2 id="double-dqn">Double DQN</h2>

<p><em>Recall</em> that we had Double Q-Learning because we had the <strong>maximization bias challenge</strong>: Max of the estimated state-action values can be a biased estimate of the max. To solve this issue, there comes the Double Q-learning algorithm which looks like:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220522164647254.png" alt="image-20220522164647254" style="zoom:33%;" /></p>

<p>so that we basically maintained two Q-networks.</p>

<blockquote>
  <p>Extend this idea to DQN using Deep network for the two $Q$ networks.</p>
</blockquote>

<p>Result:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220522165031684.png" alt="image-20220522165031684" style="zoom:80%;" /></p>

<h2 id="prioritized-replay">Prioritized Replay</h2>

<p>The idea is that instead of sampling randomly from the replay buffer, maybe there are some better distributions to sample such that we can converge better.</p>

<p>Intuitively, consider the following example of the 7-state Mars Rovers again:</p>

<ul>
  <li>reward is $R=[1,0,0,0,0,0,10]$</li>
  <li>any action from $s_1,s_7$ are terminal</li>
  <li>we initialized with the greedy policy of $\pi(s)=a_1,\forall s$</li>
  <li>
    <p>we sampled a trajectory by having an $\epsilon$-greedy version of the policy $\pi$, and obtained</p>

\[(s_3, a_1, 0,s_2,a_1,0,s_2,a_1,0,s_1,a_1,1,\text{terminal})\]
  </li>
  <li>the TD estimate of all states after an in-order update with $\alpha=1$ is: $[1,0,0,0,0,0,0]$ which we had computed before.</li>
  <li>the MC estimate with $\gamma =1$ gives $V = [1,0,0,0,0,0,0]$</li>
</ul>

<p>Now, using experience buffer, we consider the four tuples:</p>

\[(s_3,a_1,0,s_2), (s_2,a_1,0,s_2), (s_2,a_1,0,s_1), (s_1,a_1,1,T)\]

<p><strong>Question</strong> if we get to choose three replay backups to do, which should we pick?</p>

<ul>
  <li>first pick the fourth tuple $(s_1,a_1,1,T)$ so that $V(s_1)=1+\gamma * 0 = 1$</li>
  <li>then pick the third tuple $(s_2,a_1,0,s_1)$, because we know that $V(s_1)=1$, so that $V(s_2)= 0 + \gamma * 1$ gets <strong>propagated</strong></li>
  <li>finally pick the first tuple, $(s_3,a_1,0,s_2)$, because we know that $V(s_2)=\gamma$, and so we can further propagate back to $s_3$.</li>
  <li>for $\gamma =1$, this results in $V = [1,0,0,0,0,0,0]$. Notice that it would be ==the same as MC update==!</li>
</ul>

<hr />

<p>In theory, such an order is important. There has been research on this and we basically found that if we know the correct order for TD updates, we can require exponentially less updates as sample grows:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220522170804087.png" alt="image-20220522170804087" /></p>

<p>However, computing the exact ordering is intractable in practice.</p>

<blockquote>
  <p>Therefore, the idea is to consider some ordering based on how big the error is. Consider a sample being $(s_i,a_i,r_i,s_{i+1})$, then we consider the ==priority== of such tuple $i$ being:</p>

\[p_i \equiv \left|  \underbrace{r + \gamma \max_{a'}Q(s_{t+1},a';\vec{w}^-)}_{\text{TD target}&gt;  }- Q(s_i,a_i;\vec{w}) \right|\]

  <p>then the probability of sampling such a tuple is basically proportional to the priority:</p>

\[P(i) \equiv \frac{p_i^\alpha}{\sum_k p_k^\alpha}\]

  <p>notice that if we set $\alpha=0$ we get the normal experience replay with equal probability.</p>
</blockquote>

<h2 id="dueling-dqn-advantage-function">Dueling DQN: Advantage Function</h2>

<p>The intuition here is that:</p>

<ul>
  <li>Game score may be relevant to predicting $V(s)$</li>
  <li>But not necessarily in indicating <strong>relative benefit of taking different actions</strong> in a state</li>
</ul>

<p>Therefore, we do not care about the value of a state, but about ==which actions at state $s$ has a better value==, which can be done by looking at the advantage function</p>

\[A^\pi(s,a) \equiv Q^\pi(s,a) - V^\pi(s) = Q^{\pi}(s,a) - Q^{\pi}(s,\pi(s))\]

<p>which is basically the advantage of taking action $a$ at state $s$ compared to taking $\pi(s)$.</p>

<p>Then the architecture looks like:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">DQN</th>
      <th style="text-align: center">Dueling DQN</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220522172421357.png" alt="image-20220522172421357" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220522172429762.png" alt="image-20220522172429762" style="zoom:67%;" /></td>
    </tr>
  </tbody>
</table>

<p>where essentially</p>
<ul>
  <li>Dueling DQN keeps one estimate of $V(s)$ from the network and another for the advantage function</li>
  <li>then, it is recombined back to $Q(s,a) = A^{\pi}(s,a) - V^{\pi}(s,a)$ to perform the control algorithm.</li>
  <li>notice that we are having ==another set of features== to represent $A(s,a)$, which reiterates the point that we might need different features for approximating the advantage than the value function $V\left(s,a\right)$.</li>
</ul>

<p>When compared to Double DQN with Prioritized Replay, this <strong>already has a big improvement</strong>:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220522173022329.png" alt="image-20220522173022329" /></p>

<p>also note that the performance for “Montezuma’s Revenge” was still ==not improved==, i.e. those families of improvements mainly aimed at improving reward propagation, but not for games that require <strong>a high exploration</strong>.</p>

<h3 id="identifiability-of-advantage-function">Identifiability of Advantage Function</h3>

<p>However, realize that by the definition of advantage function, this means:</p>

\[\hat{Q}^{\pi}(s,a) = V^{\pi}(s) + A^{\pi}(s,a)\]

<p>but it is <strong>not unique</strong> as we can have the same $\hat{Q}$ for different $\hat{A}$ and $\hat{V}$. This would be problematic as then our labels for training $A,V$ would be non-unique.</p>

<p>Therefore, the idea is to impose some fixed points:</p>

<ul>
  <li>
    <p>option 1: Force $A(s,a)=0$  for $a$ is the greedy action</p>

\[\hat{Q}(s,a;\vec{w}) = \hat{V}(s;\vec{w}) + \underbrace{\left( \hat{A}(s,a;\vec{w}) - \max_{a'} \hat{A}(s,a';\vec{w}) \right)}_{\text{approximate } A(s,a)}\]
  </li>
  <li>
    <p>option 2: Use mean to be zero as the baseline (more stable)</p>

\[\hat{Q}(s,a;\vec{w}) = \hat{V}(s;\vec{w}) + \underbrace{\left( \hat{A}(s,a;\vec{w}) - \frac{1}{\left|\mathcal{A}\right|} \sum\limits_{a'} \hat{A}(s,a';\vec{w}) \right)}_{\text{approximate } A(s,a)}\]
  </li>
</ul>

<h1 id="imitation-learning">Imitation Learning</h1>

<p>Previously we have seen approaches using DNN for learning value functions, and by performing policy iteration, we can improve policy.</p>

<p>However, there exists hardness results that if learning in a generic MDP, can require large number of samples to learn a good policy.</p>

<p>So it is important to remember that:</p>

<blockquote>
  <p>Reinforcement Learning: Learning policies guided by (often ==sparse==) rewards (e.g. win the game or not):</p>
  <ul>
    <li>Good: as a simple, cheap form of supervision</li>
    <li>Bad: requires high sample complexity for finding a good policy</li>
  </ul>
</blockquote>

<p>Therefore, it most successful when:</p>
<ul>
  <li>in simulation where data is cheap and parallelization is easy</li>
</ul>

<p>==Not== when:</p>
<ul>
  <li>Execution of actions is slow</li>
  <li>Very expensive or not tolerable to fail (e.g. learning to fly a helicopter will require crashing many times)</li>
  <li>Want to be safe</li>
</ul>

<blockquote>
  <p><strong>Alternative idea</strong>: instead of learning policies from scratch, we could use <em>structure and additional knowledge</em> (if there is) to help constrain and speed reinforcement learning:</p>
  <ul>
    <li>imitation learning: we have a fix structure of policy to learn (this section)</li>
    <li>policy search/gradient: we have a fixed class of policy to search from (next section)</li>
  </ul>
</blockquote>

<p>One application for this is to help improve the performance on “Montezoma’s Revenge” game:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220523170757631.png" alt="image-20220523170757631" style="zoom:67%;" /></p>

<p>where it is:</p>

<ul>
  <li>a game that you need to collect keys and explore many different rooms</li>
  <li>a very very long horizon game, and requires large exploration as well</li>
  <li>we see that DQN agents only reached the first two rooms (LHS), with exploration bonus (RHS), we can reach more rooms but still not finishing the game</li>
  <li>some of the early approaches to make this work is via imitation learning</li>
</ul>

<h2 id="learning-from-demonstrations">Learning from Demonstrations</h2>

<p>One of the challenge in Montezuma’s revenge is that long episodes means reward is very sparse. This means that you need to try many different things before getting some feedback of good or bad.</p>

<blockquote>
  <p>Rewards that are <strong>dense</strong> in time closely guide the agent:</p>
  <ul>
    <li>Manually design them: often brittle</li>
    <li>Implicitly specify them through demonstrations: <strong>imitation learning</strong>!</li>
  </ul>

  <p>Therefore, the idea is to have (optimal or pretty good) Expert provides a set of demonstration trajectories: sequences of states and actions</p>
</blockquote>

<p>This is useful when it is easier for the expert to demonstrate the desired behavior rather than come up with a reward that would generate such behavior, or coding up the desired policy directly.</p>

<hr />

<p>Hence in this section, we consider the following problem setup:</p>
<ul>
  <li>given some transition model $P(s’\vert s,a)$</li>
  <li>no reward function $R$</li>
  <li>given a set of teacher demonstrations $(s_{0,} a_{0}, s_{1,} a_{1} , …)$  drawn from some teacher policy $\pi^{*}$</li>
</ul>

<blockquote>
  <p><strong>Aim</strong>:</p>
  <ul>
    <li>Behavior Cloning: learn the teacher’s policy $\pi^*$</li>
    <li>Inverse RL: find the reward function $R$ (e.g. to <em>understand</em> behavior of certain creatures)</li>
    <li>Apprenticeship Learning via Inverse RL: find the reward function $R$ and then generate a good policy</li>
  </ul>
</blockquote>

<h2 id="behavior-cloning">Behavior Cloning</h2>

<p>The idea of this is simple. Since we need to learn the teacher’s policy $\pi^{*}$, all we need to do is to ==learn the mapping from state to action==.</p>

<blockquote>
  <p>Therefore, this can be formulated as a <strong>supervised machine learning</strong> problem:</p>
  <ul>
    <li>Fix a policy class (e.g. neural network, decision tree, etc.)</li>
    <li>Estimate a policy (i.e. state to action mapping) from training examples $(s_{0} , a_{0}) , (s_{1}, a_{1} ), …$</li>
  </ul>
</blockquote>

<p>However, remember that supervised learning ==assumes iid. $(s, a)$ pairs==. This means that</p>
<ul>
  <li>supervised learning assumes the <strong>state distribution</strong> you will get in any future (e.g. after taking some actions) is the <strong>same</strong> as the ones in the past (iid)</li>
  <li>however, in MDP processes, the state distribution would change after you take some actions.</li>
</ul>

<blockquote>
  <p><strong>Problem: Compounding Errors</strong>. Therefore errors training in a supervised fashion leads to high generalization error, so that once we went into an unseen state:</p>
  <ul>
    <li>assumed same state distribution, hence gets errors</li>
    <li>takes the wrong action and continue getting in unseen states</li>
  </ul>

  <p>Therefore, we could often get a mismatch in training and test distribution as our data is limited:</p>
  <ul>
    <li>train have $s_t \sim D_{\pi^*}$ sampled from the teacher policy</li>
    <li>test will encounter $s_t \sim D_{\pi_{\theta}}$ sampled from the our estimated policy</li>
  </ul>
</blockquote>

<p>Graphically, this means that as soon as you made a mistake, you will continuously deviate from the path:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220523203357492.png" alt="image-20220523203357492" style="zoom: 50%;" /></p>

<p>theoretically, the generalization error in this case will be bounded by $\epsilon T^{2}$ instead of $\epsilon T$ bound in supervised learning.</p>

<h3 id="dagger-dataset-aggregation">DAGGER: Dataset Aggregation</h3>

<p>This is a simple idea to counter the compounding errors problem, so that during training we can <strong>ask the expert</strong> to provide the gold standard action:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220523205338781.png" alt="image-20220523205338781" style="zoom:67%;" /></p>

<p>therefore, we get:</p>

<ul>
  <li>in training we have $s_{t} \sim D_{\pi_\theta}$, which will be the same in test environment!</li>
  <li>note that we technically <em>don’t need to know the teacher’s policy $\pi^{</em>}$*, we just need to query something to get the gold standard action.</li>
</ul>

<p>So in this technique we need to have an expert, kind of like ==human in the loop==. Therefore in many cases this could be very label intensive.</p>

<h2 id="inverse-reinforcement-learning">Inverse Reinforcement Learning</h2>

<p><em>Recall</em> that our setup was:</p>
<ul>
  <li>given some transition model $P(s’\vert s,a)$
    <ul>
      <li>there are also some extensions on how to do it without transition model as well</li>
    </ul>
  </li>
  <li>no reward function $R$</li>
  <li>given a set of teacher demonstrations $(s_{0,} a_{0}, s_{1,} a_{1} , …)$  drawn from some teacher policy $\pi^{*}$</li>
</ul>

<blockquote>
  <p>Goal: infer the reward function $R$.</p>
</blockquote>

<p>How does this work? Consider the following:</p>
<ul>
  <li>With <em>no assumptions</em> on the optimality of the teacher’s policy, what can be inferred about R?
    <ul>
      <li>nothing, because if the teacher is doing random things, then you have no idea what the reward/goal is.</li>
    </ul>
  </li>
  <li>Now <em>assume that the teacher’s policy is optimal</em>. What can be inferred about R?
    <ul>
      <li>given some optimal path, would the reward function be unique? No: consider the reward function $R=0$ for all states and actions. Then any policy/trajectory would be optimal hence there would be more than one unique answers.</li>
      <li>in fact, a reward function of any constant will have this behavior. Therefore, we need to <strong>impose additional constraints</strong> to solve this problem</li>
    </ul>
  </li>
</ul>

<p>Some of the key papers are:</p>
<ul>
  <li>Maximumum Entropy Inverse Reinforcement Learning (Ziebart et al. AAAI 2008)</li>
</ul>

<h2 id="apprenticeship-learning">Apprenticeship Learning</h2>

<p><em>Recall</em> that the setup is”</p>
<ul>
  <li>given some transition model $P(s’\vert s,a)$</li>
  <li>no reward function $R$</li>
  <li>given a set of teacher demonstrations $(s_{0,} a_{0}, s_{1,} a_{1} , …)$  drawn from some teacher policy $\pi^*$</li>
</ul>

<blockquote>
  <p><strong>Aim</strong>: find a policy that is as good as the expert policy</p>
</blockquote>

<p>(essentially this comes from trying to solve for the reward function, but realize that it is no longer needed.)</p>

<p>Like linear value function approximation, we can consider a model:</p>

\[R(s) = \vec{w}^{T} \vec{x}(s)\]

<p>for $\vec{x}(s)$  is a feature vector for states.</p>

<p>Then, given a set of demonstrations from $\pi$, we want to identify $\vec{w}$:</p>

\[\begin{align*}
  V^{\pi} 
  &amp;= \mathbb{E}_\pi\left[\sum\limits_{t=0}^{\infty} \gamma^{t}R(s_t)\right]\\
  &amp;= \vec{w}^{T}\mathbb{E}_\pi\left[\sum\limits_{t=0}^{\infty} \gamma^{t}\vec{x}(s_t)\right]\\
  &amp;= \vec{w}^{T}\vec{\mu}(\pi)
\end{align*}\]

<p>for $\vec{\mu}(\pi) \equiv \mathbb{E}<em>\pi\left[\sum\limits</em>{t=0}^{\infty} \gamma^{t}\vec{x}(s_t)\right]$ can be interpreted as a distribution of states/features weighted by the discount factor.</p>

<p>But we know that an optimal policy will have by definition the largest value function:</p>

\[\begin{align*}
  V^{*}
  &amp;\ge V^{\pi}\\
  \mathbb{E}_{\pi^{*}}\left[\sum\limits_{t=0}^{\infty} \gamma^{t}R^{*}(s_t)\right]
  &amp;\ge \mathbb{E}_{\pi}\left[\sum\limits_{t=0}^{\infty} \gamma^{t}R^{*}(s_t)\right]\\
  \vec{w}^{*^{T}} \vec{\mu}(\pi^{*})
  &amp;\ge \vec{w}^{*^{T}} \vec{\mu}(\pi)
\end{align*}\]

<blockquote>
  <p>From this, the idea is that:</p>
  <ul>
    <li>to find the optimal weights $w^{*}$, we need the expert policy to perform better than any other policy (under this reward function)</li>
    <li>to perform close to the optimal value $\vec{w}^{*^{T}}$, we just need to match the features under the expert policy</li>
  </ul>
</blockquote>

<p>Formally, if</p>

\[||\vec{\mu}(\pi) - \vec{\mu}(\pi^*)||_1 \le \epsilon\]

<p>then for ==all $\vec{w}$== with $\vert \vert \vec{w}_\infty \vert \vert  \le 1$ :</p>

\[||\vec{w}^T\vec{\mu}(\pi) - \vec{w}^{T}\vec{\mu}(\pi^*)||_1 \le \epsilon\]

<blockquote>
  <p>So that we can find the ==optimal policy== $\pi^{*}$ without needing to know the reward weight $\vec{w}$ by finding a policy $\pi$ such that:</p>

\[||\vec{\mu}(\pi) - \vec{\mu}(\pi^*)||_1 \le \epsilon\]

  <p>and for $\vec{\mu}(\pi)$, all we need to know is to compute the discounted sum of features $\vec{x}(s)$ following that policy $\pi$.</p>
</blockquote>

<p>Therefore, this gives the Feature Expectation Matching:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220523222433551.png" alt="image-20220523222433551" style="zoom: 67%;" /></p>

<p>where here we are picking the best policy and picking the corresponding reward function</p>
<ul>
  <li>still doesn’t deal with the problem that reward function is not unique</li>
  <li>if expert policy is suboptimal then the resulting policy is a mixture of somewhat arbitrary policies which have expert in the convex hull</li>
</ul>

<p>Nowadays we tend to use DNN versions, and some extensions include:</p>
<ul>
  <li>GAIL: Generative adversarial imitation learning (Ho and Ermon, NeurIPS 2016)</li>
</ul>

<h2 id="imitation-learning-summary">Imitation Learning Summary</h2>

<ul>
  <li>Imitation learning can greatly reduce the amount of data need to learn a good policy
    <ul>
      <li>i.e. think of the expert demonstration as an additional “constraint”/structure</li>
    </ul>
  </li>
  <li>Challenges remain and one exciting area is combining inverse RL / Learning from demonstration and online reinforcement learning</li>
</ul>

<h1 id="policy-gradient">Policy Gradient</h1>

<p>Similar to imitation learning, policy gradient/search methods imposes some <strong>constraints</strong> on the policy and hence makes learning more efficient. However, the changes are:</p>

<ul>
  <li>recall that previously our Policy Improvement algorithm mainly involved:
    <ul>
      <li>policy evaluation: update our estimate of the value function ($V_{\theta} \approx V^{\pi}(s)$ or $Q_{\theta} (s,a) \approx Q^\pi (s,a)$  )</li>
      <li>policy improvement: improve $\pi \gets \epsilon\mathrm{-Greedy}(Q_{\theta} (s,a))$</li>
    </ul>
  </li>
  <li>
    <p>however, in this section we will <strong>directly parametrize the policy</strong>, to consider the model:</p>

\[\pi_{\theta} (s,a) \equiv P_\theta[a|s]\]

    <p>and the ==aim is to find a policy $\pi$ with the highest value function $V^{\pi}$==.</p>
  </li>
  <li>of course we will do it in a model-free approach (i.e. without transition/reward function)</li>
</ul>

<p>Graphically, we are at:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220605205922887.png" alt="image-20220605205922887" style="zoom:67%;" /></p>

<p>so essentially:</p>

<table>
  <thead>
    <tr>
      <th> </th>
      <th style="text-align: center">Learnt/Modelling Value Function</th>
      <th style="text-align: center">Learnt/Modelling Policy</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Value Based (previous sections)</td>
      <td style="text-align: center">Yes</td>
      <td style="text-align: center">Implicit (e.g. greedy)</td>
    </tr>
    <tr>
      <td>Policy Based (here)</td>
      <td style="text-align: center">No</td>
      <td style="text-align: center">Yes</td>
    </tr>
    <tr>
      <td>Actor-Critic (next sections)</td>
      <td style="text-align: center">Yes</td>
      <td style="text-align: center">Yes</td>
    </tr>
  </tbody>
</table>

<p>Why might we want to use policy search/gradient methods? Advantages:</p>
<ul>
  <li>
    <p>Better convergence properties (also depends on computation power)</p>
  </li>
  <li>
    <p>Effective in high-dimensional or <strong>continuous action spaces</strong></p>
  </li>
  <li>
    <p>Can learn <strong>stochastic</strong> policies.</p>
    <ul>
      <li>
        <p>Useful when: exists competitor and do no want to be exploited (e.g. rock-paper-scissor)</p>
      </li>
      <li>
        <p>Useful when: the problem is not Markov, e.g. your grey states cannot be distinguished</p>

        <p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220605211409890.png" alt="image-20220605211409890" style="zoom:67%;" /></p>

        <p>the problem that states cannot be distinguished is also called ==aliasing==. In this case using stochastic policy in grey states is a good idea/has a higher value.</p>
      </li>
      <li>
        <p>Not very useful when: in a tabular MDP problem, optimal policy is deterministic</p>
      </li>
      <li>
        <p><strong>monotonic improvement</strong> of the policy (value-based methods, e.g. DQN, is noisy)</p>
      </li>
    </ul>
  </li>
</ul>

<p>Disadvantages:</p>
<ul>
  <li>Typically ==converge to a local rather than global optimum==</li>
  <li><strong>Evaluating</strong> a policy (from which we compute gradient) is typically sample inefficient and high variance</li>
</ul>

<h2 id="policy-objective-functions">Policy Objective Functions</h2>

<blockquote>
  <p><strong>Goal</strong>: given a policy $\pi_{\theta} (s,a)$  parameterized by $\theta$, we want to find $\theta$ that yields the <strong>highest value</strong> (not value function, but a single score)</p>
  <ul>
    <li>
      <p>in episodic setting (i.e. has terminal states), we can use the <strong>start state</strong> to compare policies:</p>

\[J_{1}(\theta) = V^{\pi_\theta}(s_1)\]

      <p>for $s_1$ is the start state of the entire environment</p>
    </li>
    <li>
      <p>in continuing/online environment where there is no terminal states, we can use the <strong>average value</strong> over all states:</p>

\[J_{avV}(\theta) = \sum_s d^{\pi_\theta} (s) V^{\pi_\theta}(s)\]

      <p>where $d^{\pi_\theta}(s)$ is the <strong>stationary distribution</strong> of states for $\pi_\theta$. A similar version of this is to look at the <strong>average reward per time-step</strong>:</p>

\[J_{avR}(\theta) = \sum_s d^{\pi_\theta}(s) \sum_a  \pi_\theta(s,a) R(a,s)\]
    </li>
  </ul>

</blockquote>

<p>Now, we have a goal function from which we can ==optimize==. Therefore, it becomes an optimization problem and we can consider:</p>

<ul>
  <li>gradient free optimization (useful when not differentiable, but not used often now)
    <ul>
      <li>Hill climbing</li>
      <li>Simplex / amoeba / Nelder Mead</li>
      <li>Genetic algorithms</li>
      <li>Cross-Entropy method (CEM)</li>
      <li>Covariance Matrix Adaptation (CMA)</li>
    </ul>
  </li>
  <li>gradient based optimization (this section)
    <ul>
      <li>Gradient descent</li>
      <li>Conjugate gradient</li>
      <li>Quasi-newton</li>
    </ul>
  </li>
</ul>

<h2 id="policy-gradient-methods">Policy Gradient Methods</h2>

<p>Consider the setup of:</p>
<ul>
  <li>Define $V(\theta) \equiv V^{\pi_{\theta}}$  to make explicit the dependence of the value on the policy parameters</li>
  <li>assume episodic MDPs</li>
</ul>

<p>Then policy search/gradient considers ==gradient ascent== w.r.t parameter $\theta$:</p>

\[\nabla \theta = +\alpha \nabla_{\theta} V(\theta)\]

<p>But the question is, ==what is $\nabla_{\theta} V(\theta)$==</p>

\[\nabla_{\theta} V(\theta) = \begin{bmatrix}
  \frac{\partial V(\theta)}{\partial \theta_1} \\
  \frac{\partial V(\theta)}{\partial \theta_2} \\
  \vdots\\
  \frac{\partial V(\theta)}{\partial \theta_n}
\end{bmatrix}\]

<p>==when our parameter is on $\pi_\theta$?==</p>

<h3 id="gradients-by-finite-differences">Gradients by Finite Differences</h3>

<p>The simplest approach to compute this by “trial and error”:</p>
<ol>
  <li>for each dimension $k \in [1, n]$ for $\theta \in \mathbb{R}^{n}$:
    <ol>
      <li>
        <p>perturb the parameter by a small amount:</p>

\[V(\theta + \epsilon u_{k})\]

        <p>for $u_k$ is a unit vector in the $k$-th dimension</p>
      </li>
      <li>
        <p>estimate the gradient w.r.t. $\theta_k$ by:</p>

\[\frac{\partial V(\theta)}{\partial \theta_k} \approx \frac{V(\theta + \epsilon u_{k}) - V(\theta)}{\epsilon}\]
      </li>
    </ol>
  </li>
  <li>repeat</li>
</ol>

<p>While this method seems simple, it has been used practically and was effective (required only few trials).</p>

<hr />

<p><em>For instance: AIBO Policy Experiment</em></p>

<p>The task was to train AIBO robots so that they can walk as fast as possible. Then there was research which had:</p>

<ul>
  <li>open-loop policy: find a sequence of actions, irrespective of the state</li>
  <li>12 parameters $\theta \in \mathbb{R}^{12}$ they wanted to search for:
    <ul>
      <li>The front locus (3 parameters: height, x-pos., y-pos.)</li>
      <li>The rear locus (3 parameters)</li>
      <li>Locus length</li>
      <li>Locus skew multiplier in the x-y plane (for turning)</li>
      <li>etc.</li>
    </ul>
  </li>
</ul>

<p>Then, essentially they needed to compute the gradient of the policy, which they can by:</p>
<ul>
  <li>Ran on 3 AIBOs at once</li>
  <li>Evaluated 15 policies per iteration.</li>
  <li>Each policy evaluated 3 times (to reduce noise) and averaged</li>
  <li>Used $\eta = 2$ (learning rate for their finite difference approach)</li>
</ul>

<p>And they were very successful in few iterations:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220605224812515.png" alt="image-20220605224812515" style="zoom: 67%;" /></p>

<p>note that as we are converging to local optima, initialization for $\theta$  matters.</p>

<h3 id="likelihood-ratioscore-function-policy-gradient">Likelihood Ratio/Score Function Policy Gradient</h3>

<p>Suppose we <strong>can compute $\nabla_{\theta} \pi_\theta(s)$</strong>. We want to find a way to compute $\nabla_\theta V(\theta)$ by analytical methods, and one of which is the likelihood ratio policy gradient.</p>

<p>Consider the following setup:</p>

<ul>
  <li>denote a trajectory as $\tau = (s_{0}, a_{0} , r_{0} , … , s_{T-1},a_{T-1},r_{T-1},s_{T},a_{T},r_{T})$.</li>
  <li>denote the reward of the trajectory as $R(\tau) \equiv \sum\limits_{t=0}^{T} R(s_t, a_t)$</li>
  <li>
    <p>then define the ==policy value== as:</p>

\[V(\theta) \equiv \sum\limits_{\tau} P_{\pi_\theta}(\tau) R(\tau) = \mathbb{E}_{\pi_{\theta}} \left[ \sum\limits_{t=0}^{T} R(s_{t} , a_{t} ) \right]\]

    <p>for $P_{\pi_\theta}(\tau)$ being the probability over trajectories when executing policy $\pi_\theta$.</p>
  </li>
</ul>

<blockquote>
  <p>In this new notation, our goal is to find parameters $\theta$ such that:</p>

\[\arg\max_\theta V(\theta) = \arg\max_\theta \sum\limits_{\tau} P_{\pi_\theta}(\tau) R(\tau)\]

  <p>notice that only $P_{\pi_\theta}(\tau)$ changes if you change $\theta$.</p>
</blockquote>

<p>Therefore, we are interested in finding $\nabla_\theta V(\theta)$, which can be computed as:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220605230842266.png" alt="image-20220605230842266" style="zoom: 67%;" /></p>

<p>which seems to have done nothing, but we will soon see that</p>

<ul>
  <li>since we are doing model free, ==this trick helps us to compute $\nabla_\theta \log P(\tau; \theta)$ without knowing the world==.</li>
  <li>to evaluate $\sum\limits_{\tau}$ and $R(\tau)$, we can just ==sample== a bunch of trajectories!</li>
</ul>

<p>Therefore, first we approximate this by:</p>

\[\nabla_{\theta} V(\theta) \approx \hat{g} = \frac{1}{m} \sum\limits_{n=1}^{m} R(\tau^{(i)}) \nabla_\theta \log P(\tau^{(i)};\theta)\]

<p>for which $R(\tau^{(i)})$ are known already, and we are weighting each trajectory equally.</p>

<blockquote>
  <p>The above form of policy gradient can be interpreted as follows: consider the ==generic form of $R(\tau^{(i)}) \nabla_\theta \log P(\tau^{(i)};\theta)$ which can be made into:</p>

\[\hat{g}_i \equiv f(x_i) \nabla_\theta \log p(x_i;\theta)\]

  <p>which means that:</p>
  <ul>
    <li>$f(x)$ measure how good a sample $x$ is (e.g. $f(x_i) = R(\tau^{(i)})$ )</li>
    <li>performing a gradient ascent step means we are <strong>pushing up the log probability $p(x_i;\theta)$ of the sample, in proportion to how good it is $f(x)$</strong></li>
    <li>note that this form is valid even if $f(x)$ is discontinous</li>
  </ul>
</blockquote>

<p>Graphically:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220605232345294.png" alt="image-20220605232345294" style="zoom: 50%;" /></p>

<p>Finally, we need to solve for the term $\nabla_\theta \log P(\tau^{(i)};\theta)$ to compute the gradient $\nabla_{\theta} V(\theta) \approx \hat{g}$:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220605232719619.png" alt="image-20220605232719619" style="zoom:67%;" /></p>

<p>notice that from this we ==only need to know $\nabla_{\theta} \log \pi_\theta$==! This term also gets a (relatively useless) name of ==score function==.</p>

<blockquote>
  <p><strong>Score Function Policy Gradient:</strong></p>

  <p>The goal is to find $\theta$ such that:</p>

\[\arg\max_\theta V(\theta) = \arg\max_\theta \sum\limits_{\tau} P_{\pi_\theta}(\tau) R(\tau)\]

  <p>which we can find local optimal using gradient ascent, by:</p>

\[\begin{align*}
  \nabla_{\theta} V(\theta) \approx \hat{g} 
    &amp;= \frac{1}{m} \sum\limits_{n=1}^{m} R(\tau^{(i)}) \nabla_\theta \log P(\tau^{(i)};\theta)\\
    &amp;= \frac{1}{m} \sum\limits_{n=1}^{m} R(\tau^{(i)}) \sum_{t=0}^{T-1} \nabla_\theta \log \pi_\theta(a_t^{(i)}|s_t^{(i)})
 \end{align*}\]

  <p>and the $m$ trajectories would be sampled under policy $\pi_\theta$. Notice that this is model free as we only need to evaluate the score function $\nabla_{\theta} \log \pi_\theta$.</p>
</blockquote>

<p>Finally, it turns out that this can be extended to many other objective functions $J$ than the one shown above $J = V(\theta) = \sum\limits_{\tau} P_{\pi_\theta}(\tau) R(\tau)$.</p>

<blockquote>
  <p><strong>Policy Gradient Theorem</strong>: for any differentiable policy $\pi_{\theta} (s,a)$, for any policy objective function:</p>
  <ul>
    <li>episodic $J = J_1$</li>
    <li>average reward per time step $J = J_{avR}$</li>
    <li>average value $J = (1 / (1 - \gamma)) J_{avV}$
the policy gradient is:</li>
  </ul>

\[\nabla_\theta J(\theta) = \mathbb{E}_{\pi_\theta} [ Q^{\pi_\theta}(s,a) * \nabla_{\theta} \log \pi_\theta (a|s)  ]\]

  <p>which can be derived in the same manner as we have shown here (also shown in Sutton and Barto chapter 13)</p>
</blockquote>

<h2 id="reducing-variance-in-policy-gradient">Reducing Variance in Policy Gradient</h2>

<p>Previously, we were able to compute policy gradient without a world model by:</p>

\[\nabla_{\theta} V(\theta) \approx \frac{1}{m} \sum\limits_{n=1}^{m} R(\tau^{(i)}) \sum_{t=0}^{T-1} \nabla_\theta \log \pi_\theta(a_t^{(i)}|s_t^{(i)})\]

<p>for letting the objective function being $J = V(\theta)$. However, although this is an ==unbiased estimate of the gradient==, it is ==noisy (high variance) in practice==. Fixes include:</p>

<ul>
  <li>temporal structure/bootstrapping methods (reduces variance)</li>
  <li>baseline</li>
  <li>alternatives to using MC return $R(\tau^{(i)})$ as targets, e.g. Actor-Critic methods for TD and bootstrapping</li>
</ul>

<h3 id="policy-gradient-use-temporal-structure">Policy Gradient: Use Temporal Structure</h3>

<p>It turns out that we can manipulate the same expression we had to achieve another gradient expression. Consider the previous conclusion:</p>

\[\nabla_{\theta} \mathbb{E}_\tau [R] = \mathbb{E}_\tau \left[ R \left( \sum\limits_{t=0}^{T-1} \nabla_\theta \log \pi_\theta(a_t|s_t) \right) \right]\]

<p>for $R = \left( \sum\limits_{t=0}^{T-1} r_t \right)$. This means that:</p>

\[\nabla_{\theta} \mathbb{E}_\tau [r_{t'}] = \mathbb{E}_\tau \left[ r_{t'} \left( \sum\limits_{t=0}^{t'} \nabla_\theta \log \pi_\theta(a_t|s_t) \right) \right]\]

<p>Hence we can recover the original form by summing over $t$:</p>

\[\begin{align*}
  \nabla_{\theta} V(\theta) = \nabla_{\theta} \mathbb{E}_\tau [R] 
  &amp;= \mathbb{E}_\tau \left[ \sum\limits_{t'=0}^{T-1} r_{t'}  \sum\limits_{t=0}^{t'} \nabla_\theta \log \pi_\theta(a_t|s_t) \right] \\
  &amp;= \mathbb{E}_\tau \left[ \sum\limits_{t=0}^{T-1} \nabla_\theta \log \pi_\theta(a_t|s_t) \sum\limits_{t'=t}^{T-1} r_{t'} \right] \\
  &amp;= \mathbb{E}_\tau \left[ \sum\limits_{t=0}^{T-1} \nabla_\theta \log \pi_\theta(a_t|s_t) G_{t'} \right]
\end{align*}\]

<p>where</p>
<ul>
  <li>the second last equality is due to the fact that, the $\nabla_\theta \log \pi_\theta(a_0\vert s_0)$ appears for all $r_{t’}$, and the $\nabla_\theta \log \pi_\theta(a_1\vert s_1)$ appears for all except $r_{t’ = 0}$, etc.</li>
  <li>the last equality is due to the fact that $G_{t’}$ is the expected return since time $t’$</li>
</ul>

<blockquote>
  <p>Therefore, this yields a slight lower variance estimate of the gradient:</p>

\[\nabla_{\theta} V(\theta) = \nabla_\theta \mathbb{E}_\tau [R] \approx \frac{1}{m} \sum_{i=1}^m \sum_{t=0}^{T-1} \nabla_\theta \log \pi_\theta(a_t^{(i)}|s_t^{(i)}) G_t^{(i)}\]

</blockquote>

<p>Notice that</p>
<ul>
  <li>as compared to the previous form $\nabla_{\theta} V(\theta) \approx \frac{1}{m} \sum\limits_{n=1}^{m} R(\tau^{(i)}) \sum_{t=0}^{T-1} \nabla_\theta \log \pi_\theta(a_t^{(i)}\vert s_t^{(i)})$, we multiply each $\nabla_\theta \log \pi_\theta(a_t^{(i)}\vert s_t^{(i)})$ by its own expected reward $G_t^{(i)}$ instead of the constant episodic reward $R(\tau^{(u)})$. This ==reduces the variance== of the gradient estimate.</li>
  <li>since this uses $G_t$, it is a MC estimate.</li>
</ul>

<h3 id="reinforce-algorithm">REINFORCE Algorithm</h3>

<p>If we sample only one trajectory (doing SGD), then essentially the previous section says:</p>

\[\nabla_{\theta} V(\theta) \approx \sum_{t=0}^{T-1} \nabla_\theta \log \pi_\theta(a_t^{(i)}|s_t^{(i)}) G_t^{(i)}\]

<p>for an sampled trajectory $i$. And this is basically what REINFORCE algorithm does:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220606003925976.png" alt="image-20220606003925976" style="zoom:67%;" /></p>

<p>and of course if $\pi_{\theta} (a\vert s)$ is a neural network, then derivative can easily numerically evaluated as well (e.g. automatic differentiation in PyTorch/Tensorflow).</p>

<h3 id="differentiable-policy-classes">Differentiable Policy Classes</h3>

<p>Besides neural network, there are two classes of policy model that can be good to know:</p>

<ul>
  <li>
    <p><strong>Softmax Policy</strong>: weight action using linear combination of feature $\phi(s,a)$ so that:</p>

\[\pi_\theta(a|s)  = \mathrm{Softmax}\left( \phi(s,a)^{T} \theta \right)\]

    <p>which outputs a probability per ==discrete action==. The score function for this type of model is:</p>

\[\nabla_{\theta} \log \pi_{\theta} (a|s) = \phi(s,a) - \mathbb{E}_{\pi_{\theta}} [\phi(s, \cdot )]\]
  </li>
  <li>
    <p><strong>Gaussian Policy</strong>: very useful for ==continuos action space==, which we can parametrize by:</p>

\[\pi_\theta(a|s) \sim N( \mu(s), \sigma^{2})\]

    <p>for variance can be a fixed constant or parametrized as well. We model the mean by:</p>

\[\mu(s) = \phi(s)^{T} \theta\]

    <p>being a linear combination again. Then the score function for this is:</p>

\[\nabla_{\theta} \log \pi_{\theta} (a|s) = \frac{(a- \mu(s))\phi(s)}{\sigma^{2}}\]
  </li>
</ul>

<h3 id="policy-gradient-introduce-baseline">Policy Gradient: Introduce Baseline</h3>

<p>Another way to improve gradient estimates is to use a baseline $b(s_t)$. In the previous section we have derived:</p>

\[\nabla_{\theta} V(\theta) = \nabla_{\theta} \mathbb{E}_\tau [R] 
  = \mathbb{E}_\tau \left[ \sum\limits_{t=0}^{T-1} \nabla_\theta \log \pi_\theta(a_t|s_t) \sum\limits_{t'=t}^{T-1} r_{t'} \right]\]

<p>It turns out that we can reduce variance by:</p>

\[\nabla_{\theta} V(\theta) = \nabla_{\theta} \mathbb{E}_\tau [R] 
  = \mathbb{E}_\tau \left[ \sum\limits_{t=0}^{T-1} \nabla_\theta \log \pi_\theta(a_t|s_t) \left( \sum\limits_{t'=t}^{T-1} r_{t'} - b(s_t) \right)\right]\]

<p>which is still an ==unbiased== estimate:</p>

<ul>
  <li>a near optimal choice is to consider $b(s_t)$ as the expected return $b(s_{t}) \approx \mathbb{E}[r_{t} + r_{t+1} + … + r_{T-1}]$.</li>
  <li>in that case, this means that we are increasing logprob of action at proportionally to how much returns $\sum\limits_{t’=t}^{T-1}  r_{t’}$ are better than expected.</li>
</ul>

<p>Why does this not introduce bias? We can prove this by showing:</p>

\[\mathbb{E}_\tau \left[ \nabla_\theta \log \pi_\theta(a_t|s_t) b(s_t) \right] = 0\]

<p>Proof:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220606171712.png" style="zoom:60%;display:block;margin:auto" /></p>

<p>note that this holds for any $b(s_t)$ that is a function of states, and:</p>

<ul>
  <li>the second equality holds because $b(s_t)$ only depends on current and past states</li>
  <li>the fourth equality holds because the probability of getting an action $a_t$ given $s_t$ is exactly specified by $\pi_{\theta} (a_{t} \vert  s_t)$</li>
</ul>

<p>Finally the question is what choice of $b(s_t)$ could reduce variance? There will be a number of choices, and some of which we will discuss next.</p>

<h4 id="vanilla-policy-gradient-algorithm-and-auto-differentiation">Vanilla Policy Gradient Algorithm and Auto Differentiation</h4>

<p>Using the baseline $b(s_t)$ derivation, the simplest algorithm would look like:</p>

<ol>
  <li>initialize policy parameter $\theta$, baseline $b$  (e.g. a NN, or a lookup table)</li>
  <li>for iteration $i=1,2, …$:
    <ol>
      <li>collect a set of trajectory using current policy $\pi_\theta$:</li>
      <li>(MC target) at each time step $t=1 , … , \vert \tau^{(i)}\vert$:
        <ol>
          <li>compute average return $G_t^{(i)} = \sum_{t’=t}^{T}r_t^{(i)}$</li>
          <li>compute <strong>advantage estimate</strong>: $A_t^{(i)} = G_t^{(i)} - b(s_t)$</li>
        </ol>
      </li>
      <li>refit the baseline by minimizing $\sum\limits_{i} \sum\limits_{t} \left\vert b(s_t^{(i)}) - G_t^{(i)} \right\vert ^{2}$
        <ul>
          <li>or instead of going over all trajectories (off-policy), we can only use the trajectories of the most recent iteration as well (on-policy)</li>
          <li>if only current iteration is used, then baseline is basically estimating $b(s_{t}) \approx V^{\pi_\theta}$ of the current policy</li>
        </ul>
      </li>
      <li>
        <p>(Policy Improvement) update the policy by policy gradient estimate by summing:</p>

\[\nabla_\theta \log \pi_\theta(a_t|s_t) \hat{A}_t\]

        <p>and plug this into SGD or ADAM, etc.</p>
      </li>
    </ol>
  </li>
</ol>

<blockquote>
  <p>Practically, many libraries have auto differentiation. Therefore, instead of calculating manually:</p>

\[\nabla_\theta \log \pi_\theta(a_t|s_t) \hat{A}_t\]

  <p>we can just define a ==surrogate loss function==:</p>

\[L(\theta) \equiv \sum_t \log \pi_\theta(a_t|s_t) \hat{A}_t\]

  <p>And then let ==auto differentiation== compute the gradient:</p>

\[\hat{g} = \nabla_\theta L(\theta)\]

</blockquote>

<h3 id="policy-gradient-actor-critic-methods">Policy Gradient: Actor-Critic Methods</h3>

<p>In the previous algorithm, we used MC targets which derives from the form:</p>

\[\nabla_{\theta} V(\theta) \approx \frac{1}{m} \sum\limits_{n=1}^{m} R(\tau^{(i)}) \sum_{t=0}^{T-1} \nabla_\theta \log \pi_\theta(a_t^{(i)}|s_t^{(i)})\]

<p>having $R(\tau^{(i)})$ as a target we know leads to high variance but is unbiased (MC updates). But we can then reduce variance by introducing bias using <strong>bootstrapping</strong> and <strong>function approximation</strong> (e.g. TD vs MC)</p>

<blockquote>
  <p><strong>Actor-Critic Methods</strong>: Estimate the value function $V$ or $Q$, called ==critic==. Therefore, it maintains an explicit representation of ==both the policy and the value function==, and update both. (e.g. A3C model)</p>
</blockquote>

<p>Therefore, in the actor-critic case, we consider instead of:</p>

\[\nabla_{\theta} V(\theta) = \nabla_{\theta} \mathbb{E}_\tau [R] 
  = \mathbb{E}_\tau \left[ \sum\limits_{t=0}^{T-1} \nabla_\theta \log \pi_\theta(a_t|s_t) \left( \sum\limits_{t'=t}^{T-1} r_{t'} - b(s_t) \right)\right]\]

<p>Use:</p>

\[\nabla_{\theta} V(\theta) = \nabla_{\theta} \mathbb{E}_\tau [R] 
  = \mathbb{E}_\tau \left[ \sum\limits_{t=0}^{T-1} \nabla_\theta \log \pi_\theta(a_t|s_t) \left( Q(s_t,a_t;w)- b(s_t) \right)\right]\]

<p>for $Q(s_t,a_t;w)$ being another function approximator using weights $w$. If we choose $b(s_t)$ to be the value function, then this becomes</p>

\[\nabla_{\theta} V(\theta)  
  = \mathbb{E}_\tau \left[ \sum\limits_{t=0}^{T-1} \nabla_\theta \log \pi_\theta(a_t|s_t) \hat{A}^{\pi} (s_{t}, a_t) \right], \quad \hat{A}^{\pi} (s_{t}, a_{t}) \equiv Q(s_{t}, a_{t} ) - V(s_t)\]

<h4 id="n-step-estimators">N-step Estimators</h4>

<p>It turns out that how exactly we model the $Q$ function can also be varied. Recall that</p>

\[\nabla_{\theta} V(\theta) \approx \frac{1}{m} \sum\limits_{n=1}^{m} R(\tau^{(i)}) \sum_{t=0}^{T-1} \nabla_\theta \log \pi_\theta(a_t^{(i)}|s_t^{(i)})\]

<p>The critic can select any blend between TD and MC estimates for the true-state action value function:</p>

<ul>
  <li>
    <p>$\hat{R}<em>t^{(1)} = r</em>{t} + \gamma V(s_{t+1})$ being “TD(0)”, for which you bootstrap the value $V(s_{t+1})$ from your critic</p>
  </li>
  <li>$\hat{R}<em>t^{(2)} = r</em>{t} + \gamma r_{t+1} + \gamma^{2} V(s_{t+2})$ being “TD(1)”</li>
  <li>…</li>
  <li>$\hat{R}<em>t^{(\infty)} = r</em>{t} + \gamma r_{t+1} + \gamma^{2}r_{t+2} + … = G_t$ being MC</li>
</ul>

<p>From this , ths means hhat the ==critic can model $V$ and choose between==:</p>

<ul>
  <li>$\hat{A}<em>t^{(1)} = r</em>{t} + \gamma V(s_{t+1}) - V(s_t)$</li>
  <li>$\hat{A}<em>t^{(2)} = r</em>{t} + \gamma r_{t+1} + \gamma^{2} V(s_{t+1}) - V(s_t)$</li>
  <li>…</li>
  <li>$\hat{A}<em>t^{(\infty)} = r</em>{t} + \gamma r_{t+1} + \gamma^{2} r_{t+2} + … - V(s_{t}) = G_{t} - V(s_t)$ becomes the MC update used in the (Vanilla Policy Gradient Algorithm)[#Vanilla Policy Gradient Algorithm and Auto Differentiation].</li>
</ul>

<p>to plug into the gradient equation:</p>

\[\nabla_{\theta} V(\theta)  
  = \mathbb{E}_\tau \left[ \sum\limits_{t=0}^{T-1} \nabla_\theta \log \pi_\theta(a_t|s_t) \hat{A}^{\pi} (s_{t}, a_t) \right]\]

<p>and of course $\hat{A}_t^{(1)}$ would have <strong>low variance</strong> but high bias, and $\hat{A}_t^{(\infty)}$ would have high variance but low bias. Such models are also called ==Advantage Actor-Critic Methods== (A2C).</p>

<h2 id="automatic-step-size-tuning">Automatic Step Size Tuning</h2>

<p>In supervised learning case, we can overshoot the gradient if our step size is too big. However, it is not too bad because at least the ==data is fixed==, i.e. you might recover the local minima later.</p>

<p>However, in Reinforcement Learning cases, <strong>changing policy changes the data</strong>, this means that if you overshoot and obtain bad policies, then you might have ==no data that can learn towards optimas==.</p>

<ul>
  <li>previously we have been experimenting with different target values (MC vs TD target, etc)</li>
  <li>now, we care about how we use the gradient to update parameters, i.e. step size.</li>
</ul>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220606215929.png" style="zoom:70%;display:block;margin:auto" /></p>

<p>Therefore, what can we do to determine a good step size (and in order to <strong>achieve monotonic improvement</strong> we wanted before)?</p>

<ul>
  <li><strong>Line search</strong> in direction of gradient
    <ul>
      <li>Simple but expensive (perform evaluations along the line)</li>
      <li>Naive: ignores where the first order approximation is good or bad</li>
    </ul>
  </li>
  <li>
    <p>Given old policy weights $\theta_i$, we want to somehow find $\theta_{i+1}$ such that:</p>

\[\arg\max_{\theta_{i+1}} V^{\pi_{\theta_{i+1}}}(s)\]

    <p>so we ensure monotonic improvement and improvement is large. To do this we would need to do <strong>off-policy evaluation</strong>.</p>
  </li>
</ul>

<blockquote>
  <p>Central Problem: We have trajectories genreated from our old policy $\tau \sim \pi_{\theta_i}$, and we want to know the <strong>value of a new policy</strong> $V^{\pi_{\theta_{i+1}}}$ (e.g. results from a gradient update). Essentially this is off-policy evaluation!</p>
</blockquote>

<h3 id="evaluating-off-policy-value-function">Evaluating Off-Policy Value Function</h3>

<p>How do we estimate $V^{\pi_{\theta_{i+1}}}$ given only old data $V^{\pi_{\theta_{i}}}$ and trajectories $\tau \sim \pi_{\theta_i}$? Consider the following equality:</p>

\[V(\tilde{\theta}) = V(\theta) + \mathbb{E}_{\pi_{\tilde{\theta}}} \left[ \sum\limits_{t=0}^{\infty}  \gamma^{t}A_{\pi_\theta} (s_{t}, a_t) \right]\]

<p>for the advantage being $A_{\pi_\theta}(s,a)$ we can compute using old weights (i.e. $A_{\pi_\theta}(s,a)= Q^{\pi_\theta}(s,a) - Q^{\pi_\theta}(s,\pi_\theta (s))$ ) <strong>but $(s,a) \sim \pi_{\tilde{\theta}}$ is from the new policy</strong>.</p>

<p>This can then be expressed as:</p>

\[\begin{align*}
  V(\tilde{\theta}) 
  &amp;= V(\theta) + \mathbb{E}_{\pi_{\tilde{\theta}}} \left[ \sum\limits_{t=0}^{\infty}  \gamma^{t}A_{\pi_\theta} (s_{t}, a_t) \right]\\
  &amp;= V(\theta) + \sum\limits_{s} \mu_{\tilde{\theta}}(s) \left[ \sum\limits_{t=0}^{\infty}  \gamma^{t}A_{\pi_\theta} (s_{t}, a_t) \right]\\
  &amp;= V(\theta) + \sum\limits_{s} \mu_{\tilde{\theta}}(s) \sum\limits_{a} \pi_{\tilde{\theta}}(a|s) A_{\pi_\theta} (s_{t}, a_t) \\
\end{align*}\]

<p>therefore, the only unknown is $\mu_{\tilde{\theta}}(s)$ which is a ==stationary distribution of states under new policy $\pi_{\tilde{\theta}}$== as we don’t have new trajectories.</p>

<p>However, we do know $\mu_{\theta}(s)$ from the old policy $\pi_\theta$, and it turns out that the following <strong>approximation</strong> would provide a good lower bound estimate:</p>

\[L_{\pi_\theta} (\pi_{\tilde{\theta}}) \equiv V(\theta) + \sum\limits_{s} \mu_{\theta}(s) \sum\limits_{a} \pi_{\tilde{\theta}}(a|s) A_{\pi_\theta} (s_{t}, a_t)\]

<p>where we essentially substituted $\mu_{\tilde{\theta}}(s)$ for $\mu_{\theta}(s)$ . Notice that from this definition of objective function:</p>

\[L_{\pi_\theta} (\pi_\theta) = V(\theta)\]

<p>and of course we want $L_{\pi_\theta} (\pi_{\tilde{\theta}}) \approx V(\tilde{\theta})$, so there comes the theorem.</p>

<blockquote>
  <p><strong>Conservative Policy Iteration</strong>: if we take the new policy to be a mixture of old policy and a different policy:</p>

\[\pi_{new}(a|s) = (1-\alpha)\pi_{old}(a|s) + \alpha\pi_{old}'(a|s)\]

  <p>then this guarantees a lower bound:</p>

\[V^{\pi_{new}} \ge L_{\pi_{old}} (\pi_{new}) - \frac{2 \epsilon \gamma}{(1-\gamma)^2} \alpha^2\]

  <p>meaning the RHS is the lower bound of the true value we want $V^{\pi_{new}}$. And notice that all quantities on the RHS are computable/known!</p>
</blockquote>

<p>The above need a mixture of policy for the new policy. Can we make it even better? It turns out that we can have a lower bound of ==any stochastic policy== by:</p>

<blockquote>
  <p><strong>Lower Bound in General Stochastic Policy</strong>: for any new stochastic polict $\pi_{new}$, the following holds:</p>

\[V^{\pi_{new}} \ge L_{\pi_{old}} (\pi_{new}) - \frac{4 \epsilon \gamma}{(1-\gamma)^2} (D_{TV}^{\max} (\pi_{old}, \pi_{new}))^2\]

  <p>for $\epsilon = \max{s,a}\left\vert  A_{\pi} (s,a) \right\vert$ and the distance is defined as $D_{TV}^{\max} (\pi_{1}, \pi_{2})=\max_s D_{TV}(\pi_{1}, \pi_{2})$ for:</p>

\[D_{TV}(\pi_{1}(\cdot |s), \pi_{2}(\cdot|s)) \equiv \max_a | \pi_{1}(a|s) - \pi_{2}(a|s) |\]

  <p>essentially is a distance depending on the probability distribution.</p>
</blockquote>

<p>But of course since finding max will be difficult to work with, often we use the fact that:</p>

\[D_{TV}(p,q)^{2} \le D_{KL}(p,q)\]

<p>being the KL divergence between two distribution, which is more computable. Hence this means we can use:</p>

\[V^{\pi_{new}} \ge L_{\pi_{old}} (\pi_{new}) - \frac{4 \epsilon \gamma}{(1-\gamma)^2} D_{KL}^{\max} (\pi_{old}, \pi_{new})\]

<p>Finally, how do we use this result to make sure we are having monotonic policy improvement?</p>

<blockquote>
  <p><strong>Guaranteed Improvement</strong>: recall that the goal is to make sure that the new policy $\pi_{i+1}$ (e.g. after gradient descent updates) have a better value than the old policy $\pi_i$. To achieve this, if we consider defineing a ==metric==:</p>

\[M_i(\pi) \equiv  L_{\pi_{i}} (\pi) - \frac{4 \epsilon \gamma}{(1-\gamma)^2} D_{KL}^{\max} (\pi_{i}, \pi)\]

  <p>Then, we realize that if we ==ensure improvement in this metric==:</p>

\[\begin{align*}
M_i(\pi_{i+1}) - M_i(\pi_i) &amp;&gt; 0\\
V^{\pi_{i+1}} - M_i(\pi_i) \ge M_i(\pi_{i+1}) - M_i(\pi_i) &amp;&gt; 0 \\
V^{\pi_{i+1}} - M_i(\pi_i) = V^{\pi_{i+1}} - V^{\pi_i} &amp;&gt; 0
\end{align*}\]

  <p>which achieved what we wanted, that $V^{\pi_{i+1}} - V^{\pi_i}$ is improved for all states (i.e. infinity norm), and where:</p>
  <ul>
    <li>
      <p>the second inequality due to the fact that we know by definition:</p>

\[V^{\pi_{new}} \ge L_{\pi_{old}} (\pi_{new}) - \frac{4 \epsilon \gamma}{(1-\gamma)^2} D_{KL}^{\max} (\pi_{old}, \pi_{new})\]
    </li>
    <li>
      <p>the last equality is because we know the KL divergence between the same distribution is zero:</p>

\[M_i(\pi_i) = L_{\pi_i}(\pi_i) - 0 = V^{\pi_i}\]

      <p>as the advantage function is zero for the same policy.</p>
    </li>
  </ul>
</blockquote>

<p>This means that if the ==new policy has a higher $M_i$, then my new policy has to be improving==.</p>

<ul>
  <li>
    <p>however, for cases when you have a large state-action space, evaluating the quantity:</p>

\[\epsilon = \max_{s,a}\left| A_{\pi} (s,a) \right|\]

    <p>would be difficult. So next we show some practical algorithms that “approximate” this.</p>
  </li>
  <li>
    <p>in general, algorithms that uses this type of objective will be called ==Minorization-Maximization (MM) algorithm==</p>
  </li>
</ul>

<h2 id="mm-objective-and-trust-regions">MM Objective and Trust Regions</h2>

<p>In the first part of this section, we were considering policy gradient with the objective being the value function itself, so that we were considering:</p>

\[\nabla_{\theta} V(\theta) \approx \frac{1}{m} \sum\limits_{n=1}^{m} R(\tau^{(i)}) \sum_{t=0}^{T-1} \nabla_\theta \log \pi_\theta(a_t^{(i)}|s_t^{(i)})\]

<p>But from the previous section, we found a way to guarantee the improvement of the policy by looking at the lower bound of $V^{\pi_{i+1}}$. This means that we can also ==directly optimize over the lower bound==:</p>

\[M_{\theta_i}(\theta) \equiv L_{\theta_{i}} (\theta) - \frac{4 \epsilon \gamma}{(1-\gamma)^2} D_{KL}^{\max} (\theta_{i}, \theta)\]

<p>But to make it practical as it may be hard to compute $\epsilon$, we consider:</p>

\[J_{\theta_i}(\theta) \equiv L_{\theta_{i}} (\theta) - c \cdot D_{KL}^{\max} (\theta_{i}, \theta)\]

<p>for $c$ is a <strong>penalty coefficient</strong> that we choose as a hyperparameter. Note that</p>

<ul>
  <li>if we used $c = \frac{4 \epsilon \gamma}{(1-\gamma)^2}$ is computable in your case, then you need to use a <strong>very small step size</strong>.</li>
  <li>or we can approximately find a <strong>step size</strong> in this case that will likely make the monotonic improvement hold: <strong>trust regions constraint</strong></li>
</ul>

<h3 id="trust-region-constraints">Trust Region Constraints</h3>

<p>Notice that we can reformulate the above objective into a constraint optimization task, and from which we can <strong>Use a trust region constraint on step sizes $\delta$ (Schulman, Levine, Abbeel, Jordan, &amp; Moritz ICML 2015)</strong>:</p>

\[\begin{align*}
  \max_{\theta} L_{\theta_{old}} (\theta &amp;) \\
  \mathrm{subject\,to}\, D_{KL}^{s\sim \mu_{\theta_{old}}} (\theta_{old},\theta)\le &amp;\delta
\end{align*}\]

<p>which uses the <strong>average KL divergence</strong> over states instead of max (max requires the KL is bounded at all states and yields an impractical number of constraints).</p>

<h3 id="trust-region-policy-optimization">Trust Region Policy Optimization</h3>

<p>The goal is to compute the policy improvement based on:</p>

\[\begin{align*}
  \max_{\theta} L_{\theta_{old}} (\theta &amp;) \\
  \mathrm{subject\,to}\, D_{KL}^{s\sim \mu_{\theta_{old}}} (\theta_{old},\theta)\le &amp;\delta
\end{align*}\]

<p>for</p>

\[L_{\theta_{old}} (\theta ) = V(\theta_{old}) + \sum\limits_{s} \mu_{\theta_{old}}(s) \sum\limits_{a} \pi_{\theta}(a|s) A_{\pi_{\theta_{old}}} (s, a)
$
we then make there further substitutions to make this more computable:

- instead of weigthing on the true stationary distribution:\]

<p>\sum\limits_{s} \mu_{\theta_{old}}\to \frac{1}{1-\gamma} \mathbb{E}<em>{s\sim \mu</em>{\theta_{old}}}</p>

\[- use ==importance sampling== to estimate the desired sum, which enables the use of an **alternate sampling distribution $q$** (other than the new policy $\pi_\theta$):\]

<table>
  <tbody>
    <tr>
      <td>\sum\limits_{a} \pi_{\theta}(a</td>
      <td>s) A_{\pi_{\theta_{old}}} (s, a)\to \mathbb{E}<em>{a\sim q}\left[ \frac{\pi</em>\theta(a</td>
      <td>s_n)}{q(a</td>
      <td>s_n)}  A_{\pi_{\theta_{old}}} (s_n, a)\right]</td>
    </tr>
  </tbody>
</table>

\[for $s_n$ is a particular sampled state. A simple choice of $q$ is to take the old policy $q(a\vert s)=\pi_{old}$.
- finally:\]

<p>A_{\theta_{old}}\to Q_{\theta_{old}}</p>

<p>$$</p>
<ul>
  <li>Note that these 3 substitutions ==do not change the solution== to the above optimization problem, but make them more computable.</li>
</ul>

<p>Therefore, this gives the following reformulation of the same objective:</p>

<blockquote>
  <p>Trust Region Objective Function: we want to optimize:
$$</p>

  <p>\begin{align<em>}
   \max_{\theta} \mathbb{E}_{a\sim q}\left[ \frac{\pi_\theta(a|s_n)}{q(a|s_n)}  Q_{\pi_{\theta_{old}}} (s_n, a )\right] <br />
   \mathrm{subject\,to}\, \mathbb{E}_{s\sim \mu_{\theta_{old}}} \left[ D_{KL} (\pi_{\theta_{old}}(\cdot,s),\pi_{\theta}(\cdot,s)) \right] \le &amp;\delta
\end{align</em>}</p>

  <p>$$
and often we take $q(a\vert s)=\pi_{old}$.</p>
</blockquote>

<p>Which gives rises to the TRPO algorithm:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220607164703.png" style="zoom:60%;" /></p>

<p>which has the following benefits and has been popular:</p>

<ul>
  <li>Policy gradient approach</li>
  <li>Uses surrogate optimization function</li>
  <li>Automatically constrains the weight update to a trusted region, to approximate where the first order approximation is valid</li>
  <li>Empirically consistently does well</li>
</ul>

<h1 id="monte-carlo-tree-search">Monte Carlo Tree Search</h1>

<p>Essentially it is Model-Based Reinforcement Learning, which aims to do:</p>

<ul>
  <li>given experience, <strong>learn the model</strong> (i.e. transition and/or reward function)</li>
  <li>then use the model to plan and <strong>construct a value function or policy</strong>
    <ul>
      <li>since now you have that simulator model, you can also do model-free RL at this step</li>
    </ul>
  </li>
</ul>

<p>(whereas all the previous sections were directly learning the value function or policy from experience, which Model-Free RL)</p>

<p>Graphically, model-based RL is trying to answer the following questions:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220608141633.png" style="zoom:50%;" /></p>

<p>where the trick of this against the Model-Free approach is that, when finding the next action, we ==do not have to compute the full value function/policy== (as in Model-Free approaches). We only need to find the ==next single action==, which is exploited by the MCTS algorithm.</p>

<p><strong>Advantages</strong>:</p>
<ul>
  <li>Can efficiently learn model by supervised learning methods
    <ul>
      <li>e.g. for modeling transition function we need to spit out a distribution, and for reward, it is a regression problem.</li>
    </ul>
  </li>
  <li>Can reason about model uncertainty
    <ul>
      <li>e.g.upper confidence bound methods for exploration/exploitation trade offs</li>
    </ul>
  </li>
  <li>can be good at transfer learning if only the reward function is changed.
    <ul>
      <li>i.e. if you have the model learnt, then you can zero-shot transfer</li>
    </ul>
  </li>
</ul>

<p><strong>Disadvantages</strong>:</p>
<ul>
  <li>First learn a model, then construct a value function. This means there are potentially two sources of approximation error
    <ul>
      <li>e.g. like imitation learning, we could have compounding errors</li>
    </ul>
  </li>
</ul>

<h2 id="model-learning">Model Learning</h2>

<p>Recall that a model is a representation of an MDP $(S,A,P,R)$, which can be <strong>parametrized by $\eta$</strong>:</p>

\[M = (P_{\eta}, R_{\eta} ), \quad \begin{cases}
  s_{t+1}\sim P_\eta(S_{t+1}|S_t,A_t) \\
  r_{t+1} = R_\eta(S_t,A_t) =R_\eta(R_{t+1}|S_t,A_t)
\end{cases}\]

<p>assuming that the state space and action space are already known. Typically we also assume that state transitions and rewards are independent:</p>

\[\mathbb{P}(S_{t+1},R_{t+1}|S_t,A_t) = P_{\eta}(S_{t+1}|S_t,A_t)R_{\eta}(R_{t+1}|S_t,A_t)\]

<blockquote>
  <p><strong>Goal</strong>: estimate a model $M_\eta$ from experience ${ S_1,A_1,R_1, …,S_T }$. This becomes a supervised problem to consider input of:
$$</p>

  <p>\begin{align<em>}
   S_1,A_1&amp;\to R_1,S_2<br />
   S_2,A_2&amp;\to R_2,S_3<br />
   &amp;…
\end{align</em>}</p>

  <p>$$
since there are two outputs, we can consider:</p>
  <ul>
    <li>learning $s,a\to r$ being a <strong>regression</strong> problem (output a scalar)</li>
    <li>learning $s,a\to s’$ being a <strong>density estimation</strong> problem (e.g. a vector of size $\left\vert S\right\vert$ with each slot being a probability)</li>
  </ul>

  <p>then the loss functions could be mean-square error and KL divergence, and etc.</p>
</blockquote>

<p>Example Models:</p>

<ul>
  <li>
    <p>Table Lookup Model, e.g. if state and actions are discrete, we can just count them:
$$</p>

    <table>
      <tbody>
        <tr>
          <td>\hat{P}(s’</td>
          <td>s,a) = \frac{1}{N(s,a)} \sum\limits_{t=1}^{T}\mathbb{1} {s’</td>
          <td>S_t=s,A_t=a}\</td>
        </tr>
        <tr>
          <td>\hat{R}(r</td>
          <td>s,a) = \frac{1}{N(s,a)} \sum\limits_{t=1}^{T}R(S_t=s,A_t=a)</td>
          <td> </td>
        </tr>
      </tbody>
    </table>

    <p>$$</p>
  </li>
  <li>Linear Expectation Model</li>
  <li>Linear Gaussian Model</li>
  <li>Gaussian Process Model</li>
  <li>Deep Belief Network Mode</li>
  <li>Bayseian DNN</li>
  <li>etc.</li>
</ul>

<hr />

<p><em>For instance</em>, consider using a table lookup model shown above and we have the following data:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Data</th>
      <th style="text-align: left">Table Lookup Model</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220608151144.png" style="zoom:50%;" /></td>
      <td style="text-align: left"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220608151159.png" style="zoom:50%;" /></td>
    </tr>
  </tbody>
</table>

<p>where:</p>

<ul>
  <li>for simplicity we assume there is only one action</li>
  <li>since we are storing averages and counts, essentially table look up decides:
    <ul>
      <li>$R(S=a)=0$ since all the time the immediate reward is zero</li>
      <li>$R(S=b)=0.75$ on average</li>
    </ul>
  </li>
</ul>

<p>What would happen if we used a MC/TD estimate of the value $V(A),V(B)$?</p>

<ul>
  <li>MC estimate considers full track, but since the track with $A$ is still zero:
    <ul>
      <li>$V(A)=0$</li>
      <li>$V(B)=0.75$</li>
    </ul>
  </li>
  <li>TD(0) estimate with infinite sampling propagates information by $V(A)=r+V(B)$ since $A\to B$ happens 100\%.
    <ul>
      <li>$V(B)=0.75$ still the same</li>
      <li>$V(A)=0+0.75=0.75$ is different</li>
    </ul>
  </li>
  <li>essentially the difference arises because TD assumes/factors in the MDP process, whereas the MC method does not.</li>
</ul>

<p>However, if we used our simulated model and ==sampled from it==, you could see the following data</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Data</th>
      <th style="text-align: center">Table Lookup Model</th>
      <th style="text-align: center">Sampled Data</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220608151144.png" style="zoom:50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220608151159.png" style="zoom:50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220608152748.png" style="zoom:70%;" /></td>
    </tr>
  </tbody>
</table>

<p>where notice that in this case, if you were to estimate a value function using MC method (e.g. for planning), you will get:</p>

<ul>
  <li>$V(A)=1$ instead</li>
  <li>$V(B)=0.75$ remains the same</li>
</ul>

<p>notice that value functions now becomes closer to our TD estimates.</p>

<h2 id="planning-with-a-model">Planning with a Model</h2>

<p>Once we have a learnt model, we can:</p>

<ol>
  <li><strong>sample experience from model</strong> $(S,A,P_\eta,R_\eta)$</li>
  <li>apply planning algorithms
    <ul>
      <li><strong>model-free</strong> RL to samples
        <ul>
          <li>e.g. MC control/policy iteration</li>
          <li>e.g. SARSA, Q-Learning</li>
        </ul>
      </li>
      <li><strong>Tree search</strong>!</li>
    </ul>
  </li>
</ol>

<p>However, if the model $(S,A,P_\eta,R_\eta)$ is imperfect, then obviously the performance of your planning will be limited by your model.</p>

<ul>
  <li>in those cases it is important to know <em>where it has gone wrong</em>, e.g. by reasoning about its uncertainty (see previous section), before switching back to use model-free RL</li>
</ul>

<p>But for here, we will focus on having a reasonbly good model, and how we can use tree search algorithms to compute the next step without explictly modelling the value functions.</p>

<h3 id="forward-search">Forward Search</h3>

<p>The idea here is simple. Since we have a model that can spit out next state and rewards, we can build a tree by <strong>trying out different actions</strong>:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220608154536.png" style="zoom:50%;" /></p>

<p>But then the question is, what is the next action to take if we are currently at $s_t$? For that we need to construct a <strong>value of the next actions</strong>, and one way is to consider:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220608154845.png" style="zoom:50%;" /></p>

<p>namely:</p>

<ul>
  <li>the value of the action is the <strong>mean</strong> of its future states</li>
  <li>the value of a state is the <strong>max</strong> of its actions</li>
</ul>

<blockquote>
  <p>Why might this be helpful? Notice that we don’t need to solve whole MDP, just ==sub-MDP starting from the current state==!</p>
</blockquote>

<p>However, to compute this at every step would be expensive. Do we have other approaches?</p>

<h3 id="simulation-based-search">Simulation-Based Search</h3>

<p>On the other hand, we can also utilize the <strong>model-free approaches</strong>, so that given a model $M=(S,A,P_\eta,R_\eta)$ we can:</p>

<ol>
  <li>given a policy $\pi$</li>
  <li>
    <p>sample experience ($K$ episodes) using the <strong>model</strong>:
 $$</p>

    <p>{ S_t^{k},A_t^{k},R_{t}^{k}, …,S_T^{k} }<em>{k=1}^{K}\sim M</em>\eta</p>

    <p>$$
 do model-free control algorithsm treating those simulated experience to be real:</p>
    <ul>
      <li>Monte-Carlo Control (e.g. policy iteration) $\to$ Monte-Carlo Search</li>
      <li>SARSA $\to$ TD-Search</li>
    </ul>
  </li>
</ol>

<h4 id="simple-monte-carlo-search">Simple Monte-Carlo Search</h4>

<p>Since we are considering MC methods, then the idea is:</p>

<ol>
  <li>Given a model $M_\eta$ and a simulation policy $\pi$</li>
  <li>for each action $a \in A$
    <ol>
      <li>
        <p>simulate $K$ episodes from current state $s_t$ by <em>considering all possible next actions, but then follows $\pi$</em>:
$$</p>

        <p>{s_t,a,R_{t+1}^{k},S^{k}<em>{t+1},\pi(S^{k}</em>{t+1}), …, S_T^{k}}<em>{k=1}^{K}\sim M</em>\eta,\pi</p>

        <p>$$</p>
      </li>
      <li>
        <p>from this, we can compute the $Q^{\pi}$ function for each possible next action:
$$</p>

        <p>Q^{\pi}(s_t,a) = \frac{1}{K} \sum\limits_{k=1}^{K} G_t^{k}(a)</p>

        <p>$$
for $G_t^{k}$ is the discounted reward of the $k$-th episode after following action $a$.</p>
      </li>
    </ol>
  </li>
  <li>
    <p>Then the current best action is:
$$</p>

    <p>a_{t} = \arg\max_{a} Q^{\pi}(s_t,a)</p>

    <p>$$
which is like ==one-step of policy improvement==</p>
  </li>
</ol>

<p>But can we do better by finding an optimal policy instead of only improving by one-step?</p>

<h4 id="monte-carlo-tree-search-1">Monte-Carlo Tree Search</h4>

<p><em>Recall</em> that we can compute the optimal policy by considering the ==expectimax tree== that we have shown before:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220608154845.png" style="zoom:50%;" /></p>

<p>however, the size of this tree scales as $O((\vert S\vert \vert A\vert )^{H})$ for a height of $H$. Therefore, doing this at each step would be computationally intractable.</p>

<p>Instead, we consider a more computationally efficent way to approximate this full tree.</p>

<blockquote>
  <p><strong>Heuristics</strong>: instead of simulting all possibilities, we can Iteratively construct and update tree by performing <strong>$K$ simulation episodes</strong> starting from the root state (i.e. $K$ rollout trajectories).</p>
  <ul>
    <li>note that for this to work we need to have a “good” policy while generating those trajectories, which we shall discuss next</li>
    <li>in fact, one key difference here against the Smple MC Search is that the <em>policy generating each rollouts would be improving as well</em></li>
  </ul>

  <p>Then, after the search is finished, simply consider:
$$</p>

  <p>a_t=\arg\max_a Q^\pi(s_t,a)</p>

  <p>$$
note that as the policy $\pi$ genearing those trajectories improves, eventually this will <strong>converge</strong> to $\pi \to \pi^{<em>}$ and $Q^{\pi} \to Q^{</em>}$.</p>
</blockquote>

<p>So we will consider two main changes as compared to the simple MC search:</p>

<ol>
  <li>rolling out $K$ trajecories will involve <em>changing policies</em> as well</li>
  <li>To evaluate the value of a tree node $i$ at state action pair $(s, a)$, <em>average over all rewards</em> received (instead of max and average) from that node onwards across simulated episodes in which this tree node was reached</li>
</ol>

<blockquote>
  <p>The key unasnwered question is: How to select what action to take during a simulated episode? <strong>Upper Confidence Tree Search</strong>!</p>
  <ul>
    <li>UCT: borrow idea from bandit literature and treat each node where can select actions as a multi-armed bandit (MAB) problem</li>
    <li>i.e. want to <strong>rollout more on actions that previously looked good</strong>, and spend less time on actions that previously looked bad</li>
  </ul>
</blockquote>

<p>Therefore, we consider maintaining an <strong>upper confidence bound</strong> over reward of each arm $s,a$ of an episode $i$:</p>

\[U(s,a,i) = \hat{Q}(s,a,i) + c\sqrt{\frac{\log(N(s))}{N(s,a)}}\]

<p>for $\hat{Q}(s,a,i)$ is just an average reward by counting:</p>

\[\hat{Q}(s,a,i)= \frac{1}{N(s,a,i)} \sum\limits_{k=1}^{K} \sum\limits_{u=t}^{T} \mathbb{1}(i\in \mathrm{episd.k})G_k(s,a,i)\]

<p>so essentially we are treating each state node as a separate MAB. Then, using this, while simulating episode $k$ at node $i$, our “policy” is to <strong>select action/arm with highest upper bound</strong> to expand (or evaluate) in the tree:</p>

\[a_{ik}=\arg\max U(s,a,i)\]

<p>This implies that the ==policy== used to simulate episodes with (and expand/update the tree) can ==change across each episode==.</p>

<p>All in all, we will sample new episodes by:</p>

<ul>
  <li><strong>Tree policy</strong>: pick actions for tree nodes to maximize $U(S, A)$, the upper confidence bound. e.g. use it until all next action has at least one sampled trajectory</li>
  <li><strong>Roll out policy</strong>: pick actions randomly, or another policy. This is used when we met a state with no data</li>
</ul>

<p>For a more detailed example of this, see the next section.</p>

<h2 id="case-study-go">Case Study: GO</h2>

<p>Go is 2500 years old and is considered as the Hardest classic board game:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220608170059.png" style="zoom:60%;" /></p>

<p>However, in this case:</p>

<ul>
  <li>instead of a need to model the game, since all the rules are known, we <strong>do not need $M_\eta$</strong> in this case, but <strong>only do MCTS</strong>.</li>
  <li>since it is a two-player game, we consider a <strong>minimax tree</strong> (min value for opponent wining) instead of a expectimax tree</li>
</ul>

<p>For instance, we can consider a reward function of:
$$</p>

<p>R_{T} = \begin{cases}
1, &amp; \text{if black wins}<br />
0, &amp; \text{if white wins}
\end{cases}</p>

\[and our aim is to, say let black win. Then for $\pi=(\pi_B,\pi_W)$:\]

<p>V_\pi(s)=\mathbb{E}<em>\pi\left[R_T|S=s\right]=\mathbb{P}[\text{black wins}|S=s]<br />
V^*(s)=\max</em>{\pi_B}\min_{\pi_W}V_\pi(s)</p>

\[is a minimax problem. Then, essentially we consider sampling:

|$t=1$ | $t=2$ | $t=3$ | $t=4$ | $t=5$ |
|:----:|:----:|:----:|:----:|:----:|
|&lt;img src='/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220608173657.png' style='zoom:50%;'/&gt;|&lt;img src='/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220608172736.png' style='zoom:50%;'/&gt;|&lt;img src='/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220608172750.png' style='zoom:50%;'/&gt;|&lt;img src='/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220608172808.png' style='zoom:50%;'/&gt;|&lt;img src='/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220608172827.png' style='zoom:50%;'/&gt;|

where essentially for the first 5 sampled episodes:

- the choice of opponent $\pi_W$ could be the agent at previous iteration (i.e. doing self-play)
- the default policy could just be a random policy
- we are performing the **default/rollout policy** for states that we have not seen before
- perform **tree policy** with picking the upper confidence bound for states when we have seen all actions.


&gt; **Importance of self-play**: essentially the idea is that in the beginning, both current agent and the opponent (e.g. previous checkpoint) would have a similar level. Then this makes the *reward signal being more dense* and the model learns faster.

And finally, for minimax tree, it looks like:

&lt;img src='/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220608174045.png' style='zoom:60%;'/&gt;

where we are trying to minimize the probability of white winning and maximize the probability of black winning (as we are learning the policy for black).

**Advantages for MC Tree Search**:

- Highly **selective** best-first search
- Evaluates states dynamically (unlike e.g. DP)
- Uses **sampling** to break curse of dimensionality (model tree)
- Works for “black-box” models (only requires samples)
- Computationally efficient, anytime, parallelisable


# Safe Offline Reinforcement Learning

As we have known so far, RL algorithms updates/improves itself via interacting with the environment, which in some cases might not be feasible. (e.g. training conversation bot, but since its interaction is with people, it is often not possible).

&lt;img src='/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220821203131.png' style='zoom:50%;'/&gt;


&gt; Therefore, the aim of offline RL is to ==reuse previously collected datasets== (e.g. ImageNet) to create a data-driven RL framework.

Recall that some techniques we covered so far:

| Technique | Visual | Comments |
| :--:        |     :--: |   :--:    |
| on-policy RL|&lt;img src='/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220821203859.png' style='zoom:50%;'/&gt; | continuously collects new data from environment
| on-policy RL|&lt;img src='/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220821204030.png' style='zoom:50%;'/&gt;| collects new data after each policy update
| off-policy RL(sometimes called batch RL) | &lt;img src='/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220821204141.png' style='zoom:100%;'/&gt; | we only have a buffer, no environment to interact with

Note that just as in off-policy RL, the policy we trained $\pi_\beta$ is different the policy that is used for data collection $\pi$.

---
In particular, consider solving the following problem:

&lt;img src='/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220821205626.png' style='zoom:80%;'/&gt;

where essentially:
- we cannot interact with the student/let them do more experiments
- hence, we only have two sets of data, which you can think of as:\]

<p>\begin{cases}
    (s_{1} =\text{A}, a_{1} = \text{add}, a_{2} = \text{multiply}, r=95)<br />
    (s_{1} =\text{B}, a_{1} = \text{multiply}, a_{2} = \text{add}, r=92)
  \end{cases}</p>

\[- so the task is to learn a policy **only from a fixed set of data** but can **generalize**/reason about unseen cases

In addition to produing a new policy:

&gt; ==Safe Offline/Batch RL== considers the following guarantee. Given past experience from some current policy $\pi$, we want to produce a new policy $\pi_\beta$ that
&gt; - with the probability at least $1 - \delta$, will not be worse than $\pi_\beta$
&gt; - guarantee should not contingent on tuning any hyperparamters
&gt; 
&gt; In general, we will be thinking of the **confidence** ($1-\delta$) we have on our predicted expected outcome using our policy $\pi_\beta$.

This is particularly useful in high stakes domain (e.g. medicine).

Finally, just to make the task clear:

&gt; **Task**: given some dataset $D$, we want to learn the ==best possible policy $\pi_e$== from it. Notice that sometimes learning a very good policy might not even be possible if $D$ contains no good data (e.g. only visiting the first few rooms in Montezuma's Revenge). In general, it depends on the coverage and will be discussed in section [Importance Sampling for Policy Evaluation](#Importance Sampling for Policy Evaluation).

## Safe Offline RL Formulation

We will consider the following notation for consistency:

- Our Policy $\pi$: $\pi(a) = P(a_t = a\vert s_t=s)$
- Trajectory: $T=(s_{1}, a_{1}, r_{1}, s_{2}, a_{2}, r_{2}, ..., s_{L}, a_{L}, r_{L})$
- Historical/Training Data: $D= \{ T_1, T_2, ..., T_n \}$
- Behavioral policy used to generated the data $D$: $\pi_b$
- Objective:\]

<table>
  <tbody>
    <tr>
      <td>V^{\pi} = \mathbb{E} \left[ \sum\limits_{t=1}^{L} \gamma^{t} R_{t}</td>
      <td>\pi \right]</td>
    </tr>
  </tbody>
</table>

\[(note that in many cases we may not know what $\pi_b$ is, especially when it is generated by human. This will be discussed at the end of the section, **but for now we assume that it is known**.)

Then our aim is to have an algorithm $A$ learn a policy $A(D) \to \pi$ such that:\]

<p>P(V^{A(D)} \ge V^{\pi_{b}}) \ge 1 - \delta</p>

\[where the value of the behavioral policy $V^{\pi_{b}}$ can be estimated by MC estimation from the historical data, that $V^{\pi_b} (s) = (1/n)\sum\limits_{i=1}^{n} G_i(s)$ for $G_i(s)$ is the discounted return starting from state $s$ and ending at the end of the trajectory (and there are $n$ trajectories).

Or, more commonly, we could consider some external baselines $V_{\min}$ as well, that:\]

<p>P(V^{A(D)} \ge V_{\min}) \ge 1 - \delta</p>

<p>$$</p>

<p>Realize that to find out $V^{A(D)}$, we need to take our old data to <strong>compute how good our new policy is</strong>, which is intrinsically off-policy.</p>

<h2 id="off-policy-policy-evaluation">Off Policy Policy Evaluation</h2>

<blockquote>
  <p><strong>Off Policy Policy Evaluation (OPE)</strong></p>
  <ul>
    <li>for policy $\pi_e$ we want to evaluate (e.g. $A(D)\to \pi$), convert historical data $D$ into $n$ independent and unbiased estimates of $V^{\pi_e}$</li>
  </ul>
</blockquote>

<p>Essentially:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220821220503.png" style="zoom:50%;" /></p>

<p>Therefore, our aim is:</p>

<blockquote>
  <p>Estimate value of policy $\pi_1$, $V^{\pi_1}(s)$, but <strong>given episodes $D= { T_1, T_2, …, T_n }$ generated under $\pi_2$</strong></p>
  <ul>
    <li>recall that $V^{pi}(s) = \mathbb{E}<em>\pi [G</em>{t} \vert s_t=s]$</li>
    <li>we want to learn an unbiased estimate of $V^{\pi_1}(s)$</li>
  </ul>
</blockquote>

<h3 id="mc-off-policy-evaluation">MC Off Policy Evaluation</h3>

<p>Once mentioned unbiased, we should think of MC methods (as opposed to TD methods, which does sampling + bootstrapping). Additionally, this ==does not require the world to be Markov==, which in realiy is often not the case!</p>

<p>First, we realize that because the policies are different $\pi_{1} \neq \pi_{2}$, we have <strong>two different distribution of states $\tau_{\pi_1}\neq  \tau_{\pi_2}$</strong> (otherwise the policies have the same value)</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">$\tau_{\pi_1}$</th>
      <th style="text-align: center">$\tau_{\pi_2}$</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220821231215.png" style="zoom:100%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220821231318.png" style="zoom:100%;" /></td>
    </tr>
  </tbody>
</table>

<p>Suppose that $\pi_{1}, \tau_{\pi_1}$ is known/collected. The idea is: how do we change the distribution to that they look alike? ==Importance Sampling==!</p>
<ul>
  <li>essentially reweight the samples from $\tau_{\pi_2}$ so that samples from $\tau_{\pi_1}$</li>
</ul>

<h3 id="importance-sampling-for-policy-evaluation">Importance Sampling for Policy Evaluation</h3>

<blockquote>
  <p><strong>Importance Sampling</strong>: goal is to estimate the expected value of a function $f(x)$ under some probability distribution $q(x)$, without knowing the distribution $q(x)$.</p>

  <ul>
    <li>
      <p>we want to know:
$$</p>

      <p>\mathbb{E}_{x \sim q}[f(x)]</p>

      <p>$$</p>
    </li>
    <li>but we only have samples from $p(x)$, so that $x_1, x_2, …, x_n$ sampled form $p(x)$</li>
    <li>(just swap $x \to s$, and $f(x)\to G_(s)$ you should see why this could be helpful)</li>
  </ul>
</blockquote>

<p>Under few assumptions, we can use those samples to obtain an unbiased estimate of $\mathbb{E}_{x \sim q}[f(x)]$
$$</p>

<p>\begin{align<em>}
  \mathbb{E}_{x\sim q}[f(x)] 
  &amp;= \int_{x} q(x)f(x)dx<br />
  &amp;= \int_{x} \frac{p(x)}{p(x)}q(x) f(x) dx<br />
  &amp;= \int_{x} p(x) \left[ \frac{q(x)}{p(x)} f(x)\right] dx<br />
  &amp;\approx \frac{1}{n} \sum\limits_{i} \frac{q(x_i)}{p(x_i)}f(x_i),\quad x_i\sim p(x) 
\end{align</em>}</p>

\[so that essentially we sample data $x$ from $p(x)$, but ==reweigh== the probability so that it looks the same as if the came from $x\sim q(x)$

Therefore, back in the case of RL, let $T_j$ be the episode $j$ of states actions and rewards (that are collected/sampled by $p(x)$):\]

<p>T_{j} = (s_{j,1}, a_{j,1}, r_{j,1}, s_{j,2}, a_{j,2}, r_{j,2}, …, s_{j,L}, a_{j,L}, r_{j,L})</p>

\[We need to first compute the ratio of $p(T_j\vert \pi_e)$ (the $q(x)$) over $p(T_j\vert \pi_b)$ (the $p(x)$):\]

<table>
  <tbody>
    <tr>
      <td>p(T_j</td>
      <td>\pi_e) =p(s_{j,1}) \prod_{i=1}^{L}\underbrace{p(a_{j,i}</td>
      <td>s_{j,i})}<em>{\mathrm{policy}} \underbrace{p(r</em>{j,i}</td>
      <td>s_{j,i},a_{j,i})}<em>{\text{reward model}} \underbrace{p(s</em>{j,i+1}</td>
      <td>s_{j,i},a_{j,i})}_{\text{transition model}}</td>
    </tr>
  </tbody>
</table>

\[Then if we compute the ratio:\]

<p>\begin{align<em>}
  \frac{p(T_j|\pi_e)}{p(T_j|\pi_b)}
  &amp;= \frac{p_{\pi_e}(s_{j,1})}{p_{\pi_b}(s_{j,1})} \prod_{i=1}^{L} \frac{p_{\pi_e}(a_{j,i}|s_{j,i})}{p_{\pi_b}(a_{j,i}|s_{j,i})}<br />
  &amp;= \prod_{i=1}^{L} \frac{p_{\pi_e}(a_{j,i}|s_{j,i})}{p_{\pi_b}(a_{j,i}|s_{j,i})}<br />
  &amp;= \prod_{i=1}^{L} \frac{\pi_e(a_{j,i}|s_{j,i})}{\pi_b(a_{j,i}|s_{j,i})}
\end{align</em>}</p>

\[where 
- in the first equality, the over terms cancel since they do not depend on the policy chosen. 
- in the second equality, we are assuming the start state is the same for both policies

Notice that the interpretation here is simple. Consider comparing the value of the policy using its start state, then:
- we have a bunch of trajectories and computed expected rewards $(T_1,G_1),(T_2,G_2),...,(T_n,G_n)$ sampled from following $\pi_b$
- then the value of this policy $\pi_b$ can be estimated by $(1/n)\sum\limits G_i$
- but to estimate the value of $\pi_e$, we ==reweigh the probabilities by thinking how likely those trajectories are to be generated by $\pi_e$==. So that if it is more likely, i.e. $p(T_j\vert \pi_e)&gt;p(T_j\vert \pi_b)$, we will increase the weight using the above ratio.

In general, $s_{j,1}$ can be any state as you can just rederive the above by considering $p(T_j\vert \pi_e,s=s_{j,1})$.

Finally, this gives us the estimate:\]

<p>\begin{align<em>}
  V^{\pi_e}(s)
  &amp;\approx \frac{1}{n} \sum\limits_{j=1}^{n} \frac{p(T_j|\pi_e,s)}{p(T_j|\pi_b,s)} G(T_j)<br />
  &amp;= \frac{1}{n} \sum\limits_{j=1}^{n} \left(\prod_{i=1}^{L} \frac{\pi_e(a_{j,i}|s_{j,i})}{\pi_b(a_{j,i}|s_{j,i})} \right) G(T_j)
\end{align</em>}</p>

\[Finally, since future cannot affect past rewards, we typically consider rewards only up to the timestep $t$ to reduce variance in our estimate:\]

<p>\begin{align<em>}
  V^{\pi_e}(s)
  &amp;\approx \frac{1}{n} \sum\limits_{j=1}^{n} \left(\prod_{i=1}^{L} \frac{\pi_e(a_{j,i}|s_{j,i})}{\pi_b(a_{j,i}|s_{j,i})} \right) \left( \sum_{t=1}^L \gamma^T R_t^{i} \right)
  &amp;\equiv \frac{1}{n} \sum\limits_{j=1}^{n} w_i \left( \sum_{t=1}^L \gamma^T R_t^{i} \right)
\end{align</em>}</p>

\[note than since sometimes the importance weights $w_i$ can become very small, there is a Weighted Importance Sampling (WIS) algorithm to deal with this tha basically switch $1/n$ ratio to $1/\sum w_i$ (however, this increase bias while reduces variance)

Now, what are the assumptions used to make IS work? You might notice the term $\frac{\pi_e(a_{j,i}\vert s_{j,i})}{\pi_b(a_{j,i}\vert s_{j,i})}$ could have gone badly, and it is extactly the case

&gt; **Importance Sampling Assumptions**: since we are reweighing samples from $\pi_b$, if we have distributions that are non-overlapping, then this will obviously not work.
&gt; - in particular, if we have any single case that $\pi_b(a\vert s)=0$ but $\pi_e(a\vert s)&gt;0$, then this will not work.
&gt; - therefore, for this to work, we want to have a large ==coverage==: so that for $\forall a,s$ such that $\pi_e(a\vert s)&gt;0$, you want $\pi_b(a\vert s)&gt;0$.

Intuively, this means that if $\pi_e$ is not too far off from $\pi_b$, then the importance sampling would work reasonably.

### Adding Controlling Variates

Given some random variable $X$, we want to estimate $\mu = \mathbb{E}[X]$.

- we have our estimator being $\hat{\mu}=X$
- unbiased estimator: $\mathbb{E}\left[\hat{\mu}\right]=\mathbb{E}\left[X\right]=\mu$
- variance of this estimator: $\mathrm{Var}\left[\hat{\mu}\right]=\mathrm{Var}\left[X\right]$

Now, we want to show that in many cases we can use some tricks to reduce the variance while still having an unbiased estimator. Consider another random variable $Y$:

- let our new estimator be $\hat{\mu}=X-Y+\mathbb{E}[Y]$
- it is still unbiased because:\]

<p>\mathbb{E}[\hat{\mu}] = \mathbb{E}[X-Y + \mathbb{E}[Y]] = \mathbb{E}[X] - \mathbb{E}[Y] + \mathbb{E}[Y] = \mathbb{E}[X]</p>

\[- it however can get a lower variance:\]

<p>\mathrm{Var}[\hat{\mu}] = \mathrm{Var}[X-Y+\mathbb{E}[Y]]=\mathrm{Var}[X-Y] = \mathrm{Var}[X] + \mathrm{Var}[Y] - 2 \mathrm{Cov}(X,Y)</p>

\[therefore, ==we just need $2\mathrm{Cov}(X,Y) &gt; \mathrm{Var}[Y]$== to lower the variance in total while not introducing bias. Note that this might sound like some free lunch, but it is not because we are using $Y$ that has some information about $X$ since $2\mathrm{Cov}(X,Y) &gt; \mathrm{Var}[Y]$.

---

Therefore, we can use this fact and use $X$ being the **importance sapmling estimator**, and $Y$ being a **control variate** build from an approxiamte model of the MDP (e.g. a Q value estimate). This gives a Doubly Robust Estimator (Jiang and Li, 2015)

&gt; **Doubly Robust Estimator**: robust to (1) poor approximate model/control variate, and (2) error in estimates of $\pi_b$ (importnace sampling) because:
&gt; - if the model is poor, the estimates $V^{\pi_b}$ is still unbiased
&gt; - if importance sampling could not see some $\pi_b$ state/actions, but the model/contorl variate is good, then MSE will still be low.

And just to briefly show the equation:\]

<table>
  <tbody>
    <tr>
      <td>DR(\pi_{e}</td>
      <td>D) = \frac{1}{n} \sum\limits_{i=1}^{n} \sum\limits_{t=0}^{L} \gamma^{t} \underbrace{w_i}<em>{\text{IS weights}} (R_t^{i} - \underbrace{\hat{q}^{\pi_e}(S_t^{i},A_t^{i})}</em>{\text{Y}})+\gamma^{t} \rho_{t-1}^{i}\underbrace{\hat{V}^{\pi_e}(S_t^{i})}_{\mathbb{E}[Y]}</td>
    </tr>
  </tbody>
</table>

<p>$$</p>

<hr />

<p>Finally, we can show the properties of those different algorithms empically by simulating a small grid world (e.g. 4x4 world), providing the algorithm with some data collected under polict $\pi_b$ and ask it to evaluate the value of some new policy $\pi_e$:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220822195359.png" style="zoom:80%;" /></p>

<p>where:</p>
<ul>
  <li>the vertical axis is the MSE, which is $\hat{V}^{\pi_e}-V^{\pi_e}$ for $V^{\pi_e}$ is known beforehand since the world is simulated</li>
  <li>so we want to get low MSE with small amount of data</li>
</ul>

<h2 id="high-confidence-off-policy-policy-evaluation">High confidence Off-policy Policy Evaluation</h2>

<p>Now, we have had some methods of how to obtain an OPE of $\pi_e$. The question is how confidence we are of our estimates?</p>

<blockquote>
  <p><strong>High-confidence off-policy policy evaluation (HCOPE)</strong></p>
  <ul>
    <li>Use a concentration inequality to convert the $n$ independent and unbiased estimates of $V^{\pi_e}$ into a $1-\delta$ confidence lower bound on $V^{\pi_e}$</li>
  </ul>
</blockquote>

<p>You can often think of such as confidence as the confidence used for RL exploration: how confident are we in terms of the new actions we are taking?</p>

<p>Essentially:
<img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220821222311.png" style="zoom:50%;" /></p>

<p>To be be able to know the confidence interval, we first need to revisit Hoeffding’s inequality:</p>

<blockquote>
  <p><strong>Hoeffding’s Inequality</strong>: let $X_1, X_2, …, X_n$ be $n$ IID random variables such that $X_i\in[0.b]$. THen with the probability at least $1-\delta$:
$$</p>

  <p>\mathbb{E}[X_i]\ge \frac{1}{n} \sum\limits_{i=1}^{n} X_i - b \sqrt{\frac{\ln(1/\delta)}{2n}}</p>

  <p>$$
where $X_i=\frac{1}{n}\sum\limits_{i=1}^{n} (w_{i} \sum\limits_{t=1}^{L} \gamma^{T} R_{t}^{i})$ in our case</p>
</blockquote>

<p>However, the problem with applying this directly is that we can get very high $b$ since the weights $w_i$ might become big for rare but successful events.</p>
<ul>
  <li>for instance, if we you have 10,000 trajectories/samples, we could get a 95% confidence lower bound of the policy’s vlaue being $-5,8310,000$</li>
  <li>whereas the true value would be $0.19$</li>
</ul>

<p>Graphically:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">IS weighted Return</th>
      <th style="text-align: center">Idea</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220822204110.png" style="zoom:60%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220822204215.png" style="zoom:70%;" /></td>
    </tr>
  </tbody>
</table>

<p>where by cutting the large weights off, we will get a lower expected value but not have confidence interval exploding. Therefore, in practice, we can:</p>

<ul>
  <li>take 20% of the data to optimize the cutoff</li>
  <li>use 80% of the data to compute lower bound</li>
</ul>

<p>results for a certain policy on mountain climbing gives (true value $0.19$)</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220822204717.png" style="zoom: 80%;" /></p>

<p>where the other columns are other concentration based methods.</p>

<h2 id="safe-policy-improvement">Safe Policy Improvement</h2>

<blockquote>
  <p>Safe policy improvement (SPI)</p>
  <ul>
    <li>
      <p>Use HCOPE method to create a safe batch reinforcement learning algorithm, by doing:
$$</p>

      <p>\pi = \arg\max_{\pi_e} V^{\pi_e}</p>

      <p>$$
with some confidence intervals</p>
    </li>
  </ul>
</blockquote>

<p>Essentially:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220821222520.png" style="zoom:50%;" /></p>

<p>for instance, if there is too little data, we should be able to say no that we can have some new policy/improved policy is safe.</p>

<p>Practically, some current approach involve</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220822205037.png" style="zoom:80%;" /></p>

<p>Note that this is a algorithm that only <strong>improves the policy for a single step</strong>. Other future areas/goals involve improving the policy over multiple steps.</p>

<h1 id="general-offline-rl-algorithms">General Offline RL Algorithms</h1>

<blockquote>
  <p>A relevant content will be UCB CS285 on YouTube. <a href="https://www.youtube.com/watch?v=NV4oSWe1H9o&amp;list=PL_iWQOsE6TfXxKgI1GgyV1B_Xa0DxE5eH&amp;index=71">link</a></p>
</blockquote>

<p>Besides those safety constraints, there are also many other offline RL algorithms that are worth discussion. Before going to any details, we want to make certain high level ideas clear. Given this dataset $D$:</p>

<ul>
  <li>can offline RL perform <strong>better than the best behavior in $D$</strong>? Possibly yes, because of generalization: good behavior in one place may sufggst good behavior in another place</li>
  <li>can offline RL learn the <strong>best policy just from $D$</strong>? Often no, because we might have very few or no samples in $D$ where we see traces of the best policy, hence it is not even possible.</li>
</ul>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220822210525.png" style="zoom:60%;" /></p>

<p>But more generally, we consider:</p>
<ul>
  <li>$D = {(s_i, a_i, s_i^{\prime}, r_i}$ the same as before</li>
  <li>$\pi_b$ is the behavior policy creating the data $D$, so that $s \sim \mu_{\pi_b}(s)$ and $a \sim \pi_b(a\vert s)$</li>
  <li>however, now we generally assume that ==$\pi_b$ is NOT known==</li>
  <li>we want to find a new policy $\pi_{\mathrm{new}}$ that can combine good decisions</li>
</ul>

<p>And, as mentioned before, since $\pi_b \neq \pi_\mathrm{new}$ for $\pi_\mathrm{new}$ we want to learn, there is a problem of ==distribution shift==</p>

<blockquote>
  <p><strong>Distribution Shift for learning Value Functions in Offline RL</strong>: consider we are learning a value function $Q$. Idealy, if we want to learn $Q^{\pi_{b}}$, we consider the objective:
$$</p>

  <p>\min_Q \mathbb{E}<em>{(s,a,s’)\sim D} \left[  \left(\underbrace{r(s,a) + \mathbb{E}</em>{a’\sim \pi_b}[ Q(s’,a’)]}_{\mathrm{target}} - Q(s,a)\right)^2 \right]</p>

\[in practice, we can only do:
- using sample mean instead of expcted value (as usual)
- can only sample $a' \sim \pi_{e}$ since we do not have the behavioral policy, hence we are doing:\]

  <p>\min_Q \mathbb{E}<em>{(s,a,s’)\sim D} \left[  \left(\underbrace{r(s,a) + \mathbb{E}</em>{a’\sim \pi_\mathrm{new}}[ Q(s’,a’)]}_{\mathrm{target}} - Q(s,a)\right)^2 \right]</p>

  <p>$$
which we only expect to work if $\pi_\mathrm{new}(a\vert s) \approx \pi_b(a\vert s)$.</p>
</blockquote>

<p>However, in reality we usually consider having:
$$</p>

<table>
  <tbody>
    <tr>
      <td>\pi_{\mathrm{new}} = \arg \max_{\pi} \mathbb{E}_{a \sim \pi(a</td>
      <td>s)} [Q(s,a)]</td>
    </tr>
  </tbody>
</table>

\[so that the $\pi_\mathrm{new}$ learnt usually ends up fooling us by adverserially picking large values in the (inaccurate) Q function estiamte. Graphically:

| $\hat{Q}$ estimate of $\pi_\mathrm{new}$ | Actual Return of $\pi_\mathrm{new}$ |
| :--:                      | :--:                                |
| &lt;img src='/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220826192651.png' style='zoom:60%;'/&gt; |&lt;img src='/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220826192630.png' style='zoom:60%;'/&gt; |

Therefore, what can we do this such a problem?

## Policy Constraint Methods

A simple and a bit naive way is to consider a policy $\pi_\mathrm{new}$ such that:\]

<table>
  <tbody>
    <tr>
      <td>\pi_\mathrm{new}(a</td>
      <td>s) = \arg\max_\pi \mathbb{E}_{a \sim \pi(a</td>
      <td>s)} [Q(s,a)],\quad \mathrm{s.t.} D_{KL}(\pi</td>
      <td> </td>
      <td>\pi_b) \le \epsilon</td>
    </tr>
  </tbody>
</table>

\[and then continue with the Bellman update:\]

<p>Q(s,a) \gets r(s,a) + \mathbb{E}<em>{a’ \sim \pi</em>\mathrm{new}} [Q(s’,a’)]</p>

\[while this seems to solve distribution shift, there are several issues:

1. usually we don't know what $\pi_b$ is (e.g. human collected data)
2. if you are too close to $\pi_b$, then you cannot improve your policy, even if your data $D$ already has a large support/coverage (e.g. $\pi_b$ is uniformly random)

But before we consider other methods, let us dive into more details about how/when this idea could work. Consider the case that you are at some state $s$ and given some rewards for some actions in your $D$:

| Data | Fitted Q Function | Constrained New Policy $\pi$ |
| :--: | :--: | :--:|
|&lt;img src='/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220826211857.png' style='zoom:100%;'/&gt;|&lt;img src='/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220826211906.png' style='zoom:80%;'/&gt;|&lt;img src='/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220826212034.png' style='zoom:80%;'/&gt;|

where:

- the orange dots are the given $Q$ values
- the middle fitted $Q$ function would give bad policy exploiting the tails
- the last one seems better, but it is still giving a bit too high Q values to non-optimal actions

Therefore, given this intution, we would prefer to have a support policy (instead of $\pi_b$) to look like:

&lt;img src='/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220826212548.png' style='zoom:50%;'/&gt;

so that KL-divergence would work the best. This means we consider the support constraint:\]

<table>
  <tbody>
    <tr>
      <td>\pi(a</td>
      <td>s) \ge 0 \text{ only if } \pi_b(a</td>
      <td>s) \ge \epsilon</td>
    </tr>
  </tbody>
</table>

\[which we can approximate using methods such as MMD as we don't have $\pi_b$ directly, but in practice they are very difficult to implement.

---

Finally, here we show some examples of how to ==explicitly include policy constraints== in practice:

1. consider the case of using Actor Critic methods, where the actor $\pi_\theta(a\vert s)$ has the objective:\]

<table>
  <tbody>
    <tr>
      <td>\theta \gets \arg\max_\theta \mathbb{E}<em>{s \sim D} \left[ \mathbb{E}</em>{a\sim \pi_\theta(a</td>
      <td>s)} [Q(s,a)] \right]</td>
    </tr>
  </tbody>
</table>

\[but for KL divergence constraint, we want:\]

<table>
  <tbody>
    <tr>
      <td>D_{KL}(\pi_\theta</td>
      <td> </td>
      <td>\pi_b)  = \mathbb{E}<em>{\pi</em>\theta}[\log \pi_\theta(a</td>
      <td>s) - \log \pi_b(a</td>
      <td>s)] = \mathbb{E}<em>{\pi</em>\theta}[\log \pi_b(a</td>
      <td>s)] - \mathcal{H}(\pi_\theta)</td>
    </tr>
  </tbody>
</table>

\[for $\mathcal{H}(\pi_\theta)$ is the entropy. We can then easily convert constrained problems into unconstrained optimization using Legrange's Methods:\]

<table>
  <tbody>
    <tr>
      <td>\theta \gets \arg\max_\theta \mathbb{E}<em>{s \sim D} \left[ \mathbb{E}</em>{a\sim \pi_\theta(a</td>
      <td>s)} [Q(s,a)+ \lambda\log \pi_b(a</td>
      <td>s)] + \lambda \mathcal{H}(\pi_\theta(a</td>
      <td>s)\right]</td>
    </tr>
  </tbody>
</table>

\[for $\lambda &gt; 0$ is the Legrange Multiplier. But again, this means you need to know $\pi_b$, which unfortunatly you cannot avoid and commonly is done by doing behavioral cloning on the dataset $D$.
2. Another simple way is to change the reward function:\]

<table>
  <tbody>
    <tr>
      <td>\bar{r}(s,a) = r(s,a) - D_{KL}(\pi</td>
      <td> </td>
      <td>\pi_b)</td>
    </tr>
  </tbody>
</table>

\[which can not only makes current behavior more consistent, but also accounts for future behavior/divergence. This form of approach is called ==Behavior Regularized Offline RL==

But again, generally best offline RL algorithms today do not use these methods.

## Implicit Policy Constraint Methods

Recall the for policy constraint, we are considering the problem:\]

<table>
  <tbody>
    <tr>
      <td>\pi_\mathrm{new}(a</td>
      <td>s) = \arg\max_\pi \mathbb{E}_{a \sim \pi(a</td>
      <td>s)} [Q(s,a)],\quad \mathrm{s.t.} D_{KL}(\pi</td>
      <td> </td>
      <td>\pi_b) \le \epsilon</td>
    </tr>
  </tbody>
</table>

\[and by using Legrange Duality and solving for the optimal policy we get:\]

<table>
  <tbody>
    <tr>
      <td>\pi^{\star}(a</td>
      <td>s) = \frac{1}{Z(s)} \pi_b(a</td>
      <td>s) \exp\left( \frac{1}{\lambda}A^{\pi}(a</td>
      <td>s) \right)</td>
    </tr>
  </tbody>
</table>

\[which intuitively means that:

- suboptimal actions are exponentially less likely
- even for very high advantage $A$, if the action is rare in behavior policy $\pi_b$ then this is bad
- $\lambda$ can be often treated as a hyperparameter or tuned

Since this is the best policy, then it means we can approximate using weighted maximum likelihood:\]

<table>
  <tbody>
    <tr>
      <td>\pi_\mathrm{new}(a</td>
      <td>s) = \arg\max_\pi \mathbb{E}_{(s,a)\sim \pi_b(a</td>
      <td>s)}  \left[ \log\pi(a</td>
      <td>s)  \underbrace{\frac{1}{Z(s)}\exp\left(\frac{1}{\lambda}A^{\pi_{\mathrm{old} (s,a)}}\right)}_{\text{weights }w(s,a) } \right]</td>
    </tr>
  </tbody>
</table>

\[where the advantage function is just given by critic. In a sense this is a **weighted behavior cloning**, so that it is imitating the good actions more than the bad actions.

To implement this, all you need to do is to change slightly the actor-critic training:

1. train critic as usual with the loss:\]

<table>
  <tbody>
    <tr>
      <td>L_C(\phi) = \mathbb{E}<em>{(s,a,s’)\sim D} \left[ (Q</em>\phi(s,a) - ( r(s,a)+\gamma \mathbb{E}<em>{a’\sim \pi</em>\theta(a’</td>
      <td>s’)}[Q_\phi(s’,a’)] ))^{2}  \right]</td>
    </tr>
  </tbody>
</table>

\[2. train actor with our constrained loss:\]

<table>
  <tbody>
    <tr>
      <td>L_A(\theta) = - \mathbb{E}_{(s,a)\sim \pi_b(a</td>
      <td>s)}  \left[ \log\pi_\theta(a</td>
      <td>s)  \frac{1}{Z(s)}\exp\left(\frac{1}{\lambda}A^{\pi_{\mathrm{old} (s,a)}}\right) \right]</td>
    </tr>
  </tbody>
</table>

\[3. update the actor and critic loss via gradient descent alternatingly

More details see this paper [Nair, Dalal, Gupta, Levine. 2020](https://arxiv.org/pdf/2006.09359.pdf). Some more caustions of this method include the fact that you could still query OOD actions **during** training (constraints respected only at expectation), which could happen when computing the target value for updating critic or when estimating the advantage function.

### Implicit Q-Learning

Is there a way to avoid OOD actions while learning the Q function? This serves for the motivation of the work [Kostrikov, Nair, Levine. 2021](https://arxiv.org/pdf/2110.06169.pdf), with the idea being formulated as follows.

1. we consider instead of the following update rule\]

<p>Q(s,a) \gets r(s,a) + \mathbb{E}<em>{a’ \sim \pi</em>{\mathrm{new}}}[Q(s’,a’)]</p>

\[we view it as\]

<p>Q(s,a) \gets r(s,a) + \underbrace{V(s’)}_{\text{just another neural network}}</p>

\[2. next, we recall that a batch constrained TD updates considers:\]

<table>
  <tbody>
    <tr>
      <td>L(\theta) = \mathbb{E}<em>{(s,a,s’)\sim D} \left[ ( r(s,a) +\gamma \max</em>{\pi_b(a’</td>
      <td>s’)&gt;0}Q_{\hat{\theta}} - Q_\theta(s,a))^2 \right]</td>
    </tr>
  </tbody>
</table>

\[thefore, to mimic this behavior, we have two choices:
   - using expectile loss $L_2^{\tau}$ directly on $Q$, so that we have:\]

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  L(\theta) =  \mathbb{E}_{(s,a,s')\sim D} \left[ L_2^\tau( r(s,a) +\gamma \max_{\pi_b(a'|s')&gt;0}Q_{\hat{\theta}} - Q_\theta(s,a)) \right]
  
  $$
  (explaination of expectile loss seen in the next paragraph) but this have a drawback, and that is since each update sample contains $(s,a,s')$, it includes the stochasticity of a sample getting high reward because of *lucky* transition to $s'$ instead of doing the correct action $a$. This we do not want to have in our learned critic/policy.
- using expectile loss to first fit a value function $V$:
  $$
  
  L_V(\psi) = \mathbb{E}_{(s,a) \sim D} \left[ L_2^{\tau}(Q_{\hat{\theta}}(s,a) - V_\psi(s)) \right]
  
  $$
  which uses expectile because we want $V_\psi$ to learn the upper end in the distribution to approximate $\max Q_{\hat{\theta}}$, and then we simply use that and do:
  $$
  
  L_Q(\theta) = \mathbb{E}_{(s,a,s')\sim D} \left[ ( r(s,a) +\gamma V_\psi(s')- Q_\theta(s,a))^{2} \right]
  
  $$
  which notice that we do avoided the case of lucky transition while we are training the $V_\psi$ approximation function.
</code></pre></div></div>

<p>note that one concern could be: “before we were worried about $Q(s,a)$ giving unlikely large values, but now we are fitting $V$ to get large values?” The answer is no, because the <strong>previous problem is due to the fact that it comes from OOD actions</strong>, but here $V$ is trained only in data and hence have no overestimation problem.</p>

<p>Finally, we graphically provide interpretation of why this expectile and the $V_\psi$ function would work. Consider the case that you have multiple trajectories, and for a continous/large action space, you might see:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220827004946.png" style="zoom:60%;" /></p>

<p>Suppose you are on the green circle state. Even though there is only one action, you can still consider the value of this state being a distribution because its neighbor states/trajectories has a different action. Therefore, this leads up to the following value function distribution from your data:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220827005200.png" style="zoom:60%;" /></p>

<p>where the probability of each value is induced by actions (e.g. neighbor/similar states) only. Then, if we go back to the objective of fitting a value function:</p>

\[V = \arg\min_{V} \frac{1}{N} \sum\limits_{i=1}^{N} L(V(s_i), Q(s_i,a_i))\]

<p>taking:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">MSE Loss</th>
      <th style="text-align: center">Expectile Loss, $x=V_\psi(s)-Q_{\hat{\theta}}(s,a)$</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">$(Q_{\hat{\theta}}(s,a) - V_\psi(s))^{2}$</td>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220827010014.png" style="zoom:50%;" /></td>
    </tr>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220827010118.png" style="zoom:60%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220827010125.png" style="zoom:60%;" /></td>
    </tr>
  </tbody>
</table>

<p>This means that when fitting the $V$:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">MSE Loss</th>
      <th style="text-align: center">Expectile Loss</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220827010746.png" style="zoom:60%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220827010347.png" style="zoom:65%;" /></td>
    </tr>
  </tbody>
</table>

<p>Finally, when this $V$ learns from the good actions at each state, it can be effectively combined to our $Q$ network from which we can extract the policy, as indicated in the paper/algorithm overview above.</p>

<h2 id="conservative-q-learning-methods">Conservative Q-Learning Methods</h2>

<p>Instead of trying to fix actors by asking them not to sample OOD actions, CQL methods try to repair critic directly. Specically, recall that our previous problem is:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">$\hat{Q}$ estimate of $\pi_\mathrm{new}$</th>
      <th style="text-align: center">Actual Return of $\pi_\mathrm{new}$</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220826192651.png" style="zoom:60%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220826192630.png" style="zoom:60%;" /></td>
    </tr>
  </tbody>
</table>

<p>SO essentially, if the idea is to push down large Q values in general (as they are likely to be wrong), being rather pessimistic:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Fitted Q vs Real Q</th>
      <th style="text-align: center">Conservative Q-Learning</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220827115742.png" style="zoom:50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220827115829.png" style="zoom:50%;" /></td>
    </tr>
  </tbody>
</table>

<p>a simple idea to achieve this is to consider the Q value objective:</p>

\[\hat{Q}^{\pi} = \arg\min_{Q} \,\,\max_\mu \underbrace{\alpha \mathbb{E}_{s\sim D, a \sim \mu(a|s)}[Q(s,a)]}_{\text{push down big Q-values}}
+ \underbrace{\mathbb{E}_{(s,a,s')\sim D} \left[ (Q(s,a) - (r(s,a)+ \mathbb{E}_\pi[Q(s',a')]))^{2} \right]}_{\text{regular objective}}\]

<p>where notice that $\mu$ is picked so that $Q$ looks large, and then the final $Q$ is picked to minimize those. Hence in theory, it can be shown that if you pick a large enough $\alpha$, you can show that $\hat{Q}^\pi \le Q^{\pi}$ for the true $Q^\pi$.</p>

<p>But in reality, this generally pushes down all the Q values, which could be a little too pessimistic. Therefore, we could maybe do better by considering:</p>

\[\hat{Q}^{\pi} = \arg\min_{Q} \,\,\max_\mu \underbrace{\alpha \mathbb{E}_{s\sim D, a \sim \mu(a|s)}[Q(s,a)]}_{\text{always pushes down Q}}
- \underbrace{\alpha \mathbb{E}_{(s,a)\sim D}[Q(s,a)]}_{\text{push up (s,a) in data}}
+ \underbrace{\mathbb{E}_{(s,a,s')\sim D} \left[ (Q(s,a) - (r(s,a)+ \mathbb{E}_\pi[Q(s',a')]))^{2} \right]}_{\text{regular objective}}\]

<p>where this is the CQL objective $L_{\mathrm{CQL}}$, such that:</p>

<ul>
  <li>for $(s,a)$ samples in the dataset, the push up and down term will cancel the effect out and have little net effect</li>
  <li>for $(s,a)$ samples not in the dataset, the first term will push them down but the second will push up actions in dataset. This means that for the next time, $\mu$ would tend to select actions <em>similar to the dataset</em> since they have large values.</li>
</ul>

<p>Therefore, the intuition is that :</p>
<ul>
  <li>if you meet OOD actions, the two terms will act to push them back to in-distribution actions.</li>
  <li>once they are in-distribution, the two terms more or less cancel out.</li>
</ul>

<p>As a result:</p>
<ul>
  <li>we no longer directly guarantee that $\hat{Q}^{\pi}(s,a) \le Q^\pi(s,a),\forall (s,a)$</li>
  <li>but we do guarantee that their expected value (i.e. value function) is bounded $\mathbb{E}<em>{\pi(a\vert s)}[\hat{Q}^{\pi}(s,a)] \le \mathbb{E}</em>{\pi(a\vert s)}[Q^{\pi}(s,a)], \forall s \in D$</li>
</ul>

<p>Then, as shown in the paper <a href="https://arxiv.org/abs/2006.04779">Kumar, Zhou, Tucker, Levine. 2020</a>, implement RL algorithm with CQL:</p>

<ol>
  <li>update $\hat{Q}^{\pi}$ w.r.t $L_{\mathrm{CQL}}$ using the dataset</li>
  <li>update your policy $\pi$:
    <ul>
      <li>
        <p>if actions are discrete then simply:
 $$</p>

        <p>\pi(a|s) = \begin{cases}
   1, \text{if } a=\arg\max_a \hat{Q}(s,a)<br />
   0 , \text{otherwise}
 \end{cases}</p>

        <p>$$</p>
      </li>
      <li>
        <p>if actions are continous, then you usually have to fit another policy network $\theta$:
 $$</p>

        <table>
          <tbody>
            <tr>
              <td>\theta \gets \theta + \alpha \nabla_\theta \sum_i \mathbb{E}<em>{a \sim \pi</em>\theta(a</td>
              <td>s)}[\hat{Q}(s_i,a)]</td>
            </tr>
          </tbody>
        </table>

        <p>$$
 which is basically like an actor-critic method.</p>
      </li>
    </ul>
  </li>
</ol>

<p>Finally, to pick a $\mu$, we can first consider adding a max-entropy regularization term in our objective:</p>

\[\begin{align*}
  \hat{Q}^{\pi} 
  &amp;= \arg\min_{Q} \,\,\max_\mu \alpha \mathbb{E}_{s\sim D, a \sim \mu(a|s)}[Q(s,a)]
- \alpha \mathbb{E}_{(s,a)\sim D}[Q(s,a)] - \overbrace{\mathcal{R}(\mu)}^{\text{regularizer}} \\
  &amp;\quad + \mathbb{E}_{(s,a,s')\sim D} \left[ (Q(s,a) - (r(s,a)+ \mathbb{E}_\pi[Q(s',a')]))^{2} \right]
\end{align*}\]

<p>then with the choice of taking $\mathcal{R}=\mathbb{E}_{s\sim D}[H(\mu(\cdot \vert s))]$, we will have an optimal choce with $\mu(a\vert s) \propto \exp(Q(s,a))$ and hence:
$$</p>

<table>
  <tbody>
    <tr>
      <td>\mathbb{E}_{a \sim \mu(a</td>
      <td>s)} [Q(s,a)] = \log \sum\limits_{a} \exp(Q(s,a))</td>
    </tr>
  </tbody>
</table>

<p>$$
so that:</p>
<ul>
  <li>for discrete actions, we can just caulcate directly $\log \sum\limits_{a} \exp(Q(s,a))$</li>
  <li>for contionus actions, we can estimate $\mathbb{E}_{a \sim \mu(a\vert s)} [Q(s,a)]$ by using importance sampling</li>
</ul>

<h2 id="model-based-offline-rl">Model-Based Offline RL</h2>

<p>All the previous mentioned methods are model-free, i.e. we do not have a world model getting us the transitions/rewards. In the context of offline RL, model-based methods can be pretty useful as you can:</p>
<ol>
  <li>train a wolrd model using your data $D$</li>
  <li>use that model to do planning directly or learn a policy from it</li>
</ol>

<p>Usually, model-based RL methods work as follows:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220827161230.png" style="zoom:50%;" /></p>

<p>But since we cannot collect more data in offline RL, it means that:</p>

<p>| <img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220827161524.png" style="zoom:50%;" /> | <img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220827161544.png" style="zoom:50%;" /> |
| :—: | :—: |</p>

<p>so that essentially we are facing the same problem as those OOD actions in Q value estimates: now we are facing the threat that ==our policy could adversarially pick actions and transit to OOD states which the model could have some erroneously high values==.</p>

<p>Therefore, the general intuition for this is to apply some kind of penalty for policys that exploit too many OOD states/actions.</p>

<h3 id="model-based-offline-policy-optimization">Model-based Offline Policy Optimization</h3>

<p>There are two papers on this topic of thought, which is:</p>
<ul>
  <li>MOPO: Model-based Offline Policy Optimization (2020)</li>
  <li>MOReL: Model-based Offline Reinforcement Learning (2020)</li>
</ul>

<p>where both of which <strong>modifies the reward function</strong> to trick the policy to stick more of less to data we have.</p>

<blockquote>
  <p><strong>Uncertainty Penalty</strong>: we would like to modify the reward function to penalize the policy for going into states that might be incorrect (due to inaccuracies in the learned model). Therefore, we in general consider:
$$</p>

  <p>\tilde{r}(s,a) = r(s,a) + \lambda u(s,a)</p>

  <p>$$
for $u$ is an <em>uncertain penalty</em> term.</p>
</blockquote>

<p>While this sounds easy, it is usually hard to adjust the penalty term to make it work. Intuitvely, we would want:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Before Penalty</th>
      <th style="text-align: center">After Penalty</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220827162535.png" style="zoom:50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220827162718.png" style="zoom:50%;" /></td>
    </tr>
  </tbody>
</table>

<p>This means that this penalty term needs to be <strong>at least as large as the error</strong> the model makes at those erroneous states (hence to provide incentive for the policy to not exploit them). So how do we quantify this?</p>

<ul>
  <li>one simple idea is to use <strong>ensemble disagreement</strong>: we train an ensemble of world models, and quantify the error by looking at the disagreement between the models.</li>
  <li>but of course there are other ways as well</li>
</ul>

<p>Consider we are learning a policy $\hat{\pi}$, then in the MOPO paper it is proven that:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220827163651.png" style="zoom:80%;" /></p>

<p>where $M$ is the world model we trained, and $\nu$ measures the true return. This basically gave two important implications. As we can substitute the policy $\pi$ term:</p>

<ol>
  <li>
    <p>Our learned policy can improve upon the behaviorial policy (in terms of the true return):
$$</p>

    <p>\nu_M(\hat{\pi}) \ge \nu_M(\pi_b) - 2 \lambda \epsilon_u(\pi_b)</p>

    <p>$$</p>
  </li>
  <li>
    <p>We can also quantify the gap between the learned policy and the true optimal policy in terms of model error:
$$</p>

    <p>\nu_M(\hat{\pi}) \ge \nu_M(\pi^{\star}) - 2 \lambda \epsilon_u(\pi^{\star})</p>

    <p>$$
and notice that if our model $M$ is very accurate, then $\epsilon_u$ is small and we are close to the optimal policy.</p>
  </li>
</ol>

<h3 id="conservative-model-based-rl">Conservative Model-Based RL</h3>

<blockquote>
  <p>see the <a href="https://arxiv.org/pdf/2102.08363.pdf">COMBO paper</a> for more details</p>
</blockquote>

<p>Intuition: just like with CQL we can minimize the Q-value of OOD policy actions, we can minimize the <strong>Q-value of model</strong> for OOD state-action tuples.</p>

\[\begin{align*}
  \hat{Q}^{k+1}
  &amp;\gets \arg\min_{Q} \beta ( \overbrace{\mathbb{E}_{(s,a) \sim \rho(s,a)}[Q(s,a)]}^{\text{push down}} - \overbrace{\mathbb{E}_{(s,a) \sim D}[Q(s,a)]}^{\text{push up}} )\\
  &amp;+ \frac{1}{2} \mathbb{E}_{(s,a,s') \sim d_f}[ (Q(s,a) - \mathcal{B}^\pi \hat{Q}^{k}(s,a))^{2} ]
\end{align*}\]

<p>where $\rho(s,a)$ is from our model $M$, and $\mathcal{B}^\pi$ is a Bellman operator. This tries to make the Q-values from the models be worse, but Q-values from the dataset be better. Therefore,</p>

<ul>
  <li>if the model produces something that looks different from the dataset, then this objective can have $Q$ makes it look bad</li>
  <li>if the model produces something that is very close/indistinguishable from the dataset, then the first two terms cancel out</li>
</ul>

<h3 id="trajectory-transformer">Trajectory Transformer</h3>

<blockquote>
  <p>See <a href="https://arxiv.org/pdf/2106.02039.pdf">Offline Reinforcement Learning as One Big Sequence Modeling Problem</a></p>
</blockquote>

<p>The basic idea is:</p>
<ol>
  <li>
    <p>consider trajectory as a whole, so we have a joint state-action model:
$$</p>

    <p>p_b(\tau) = p_b(s_1, a_1, …, s_{T}, a_T)</p>

    <p>$$
which is the probabiliy under the behavioral policy.</p>
  </li>
  <li>
    <p>then, we can use a transformer to model such a probability distribution.</p>
  </li>
</ol>

<p>Specifically, to deal with continuous states and actions, we discretize each dimension independently. Assuming N-dimensional states and M-dimensional actions, this turns $\tau$ into sequence of length $T(N +M +1)$:</p>

\[\tau = ( ... , s_t^1, s_t^{2}, ..., s_t^{N},a_t^{1},a_t^{2},...,a_t^{M},r_t, ...), \quad t=1,...,T\]

<p>so that subscripts on all tokens denote timestep and superscripts on states and actions denote dimension (i.e. $s_t^{i}$ is the $i$th dimension of the state at time $t$). While this choice may seem inefficient, it allows us to model the distribution over trajectories with more expressivity without simplifying assumptions such as Gaussian transition.</p>

<p>Then, we can model this as:</p>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220827173339.png" style="zoom:60%;" /></p>

<p>where we can then <strong>decode next state/actions given previous ones</strong>, and note that both the model and search strategy are nearly identical to those common in natural language processing.</p>

<p>Finally, to do planning, you need to keep in mind to take the action probabilities into account, so that you avoid OOD actions. But otherwise, you can:</p>

<ul>
  <li>just use Beam search, but to promote non-myoptic chioces:
    <ol>
      <li>given the current sequence (e.g. upto time stamp 3), sample the next $K$ tokens from the model (which means they are sampled from $p_b$)</li>
      <li>store the top $K$ tokens with highest cumulative reward $\sum_{t} r(s_t,a_t)$ instead of probability</li>
      <li>continue</li>
    </ol>
  </li>
  <li>or you could even use MCTS</li>
</ul>

<p>Why does/should this work?</p>

<ul>
  <li>generating high-probability trajectories avoids OOD states and actions already, since we are sampling from $p_b$ when decoding.</li>
  <li>using a big model (e.g. transformers) tend to work well in offline mode</li>
</ul>

<h2 id="summaries-and-directions-on-offline-rl">Summaries and Directions on Offline RL</h2>

<p>If you want to to <strong>only train offline</strong>:</p>
<ul>
  <li>CQL: just one hyperparmeter and is well understood and widely tested</li>
  <li>Implicit Q-Learning: more flexible (offline+online), but has more hyperparameters</li>
</ul>

<p>If you want to <strong>train offline and finetune online</strong>:</p>

<ul>
  <li>not CQL because it tends to be too conservative</li>
  <li>Adavantage-weighted Actor-Critic (AWAC) is widely used and well tested</li>
  <li>Implicit Q-learning works well</li>
</ul>

<p>If you are confident that you <strong>can train a good world model</strong>:</p>

<ul>
  <li>COMBO: similar properties from CQL but also benefits from being model-based</li>
  <li>Trajectory Transformer: very powerful, but is extremly computationally expensive to train and evaluate</li>
</ul>

<p><img src="/lectures/images/2022-09-30-STFCS234_Reinforcement_Learning/image-20220827184217.png" style="zoom:60%;" /></p>

<p>Finally, worthy mentions and challenages include that:</p>
<ul>
  <li>as compared to supervised training where you can train/test offline, offline RL upto today still have to <strong>test online</strong> (costly and maybe even dangerous)</li>
  <li>statistically guarantees to help quantify <strong>distributional shift</strong> (currently pretty loose and incomplete)</li>
</ul>]]></content><author><name></name></author><category term="2022@Columbia" /><summary type="html"><![CDATA[Stanford Reinforcement Learning:]]></summary></entry><entry><title type="html">APPH4901 AP Seminar</title><link href="/lectures/2022@columbia/APPH4901_AP_Seminar.html/" rel="alternate" type="text/html" title="APPH4901 AP Seminar" /><published>2022-09-07T00:00:00-04:00</published><updated>2022-09-07T00:00:00-04:00</updated><id>/lectures/2022@columbia/APPH4901_AP_Seminar</id><content type="html" xml:base="/lectures/2022@columbia/APPH4901_AP_Seminar.html/"><![CDATA[<h1 id="applied-physics-seminar">Applied Physics Seminar</h1>

<p>We will arrange speakers for each class, and it is recommended that you do some bio research/material readup.</p>]]></content><author><name></name></author><category term="2022@Columbia" /><summary type="html"><![CDATA[Applied Physics Seminar]]></summary></entry><entry><title type="html">COMS4705 NLP part2</title><link href="/lectures/2022@columbia/COMS4705_NLP_part2.html/" rel="alternate" type="text/html" title="COMS4705 NLP part2" /><published>2022-05-09T00:00:00-04:00</published><updated>2022-05-09T00:00:00-04:00</updated><id>/lectures/2022@columbia/COMS4705_NLP_part2</id><content type="html" xml:base="/lectures/2022@columbia/COMS4705_NLP_part2.html/"><![CDATA[<p>Continuation from: NLP_part_1</p>

<h1 id="semantic-role-labeling">Semantic Role Labeling</h1>

<p>Here we consider solving the problem of, for each clause, determine the <strong>semantic role played by each noun phrase</strong> that is an argument to the verb.</p>

<p>We’ll introduce</p>

<ul>
  <li><strong>semantic role labeling</strong>, the task of assigning roles to spans in sentences, and</li>
  <li><strong>selectional restrictions</strong>, the preferences that predicates express about their arguments, such as the fact that the theme of eat is generally something edible.</li>
</ul>

<p>Examples would be:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220302195745957.png" alt="image-20220302195745957" style="zoom:50%;" /></p>

<p>Then, this would be useful as it can act as a <strong>shallow meaning representation</strong> that can let us <strong>make simple inferences</strong> that aren’t possible from the pure surface string of words:</p>

<ul>
  <li><strong>Question Answering</strong>, e.g. “Who” questions usually use Agents</li>
  <li><strong>Machine Translation Generation</strong></li>
</ul>

<h2 id="semantic-roles">Semantic Roles</h2>

<p>A variety of semantic role labels have been proposed, common ones are:</p>

<ul>
  <li><strong>Agent</strong>: Actor of an action</li>
  <li><strong>Patient</strong>: Entity affected by the action</li>
  <li><strong>Instrument</strong>: Tool used in performing action.</li>
  <li><strong>Beneficiary</strong>: Entity for whom action is performed</li>
  <li><strong>Source</strong>: Origin of the affected entity</li>
  <li><strong>Destination</strong>: Destination of the affected entity</li>
</ul>

<p>Although there is no universally agreed-upon set of roles, the above list some thematic roles that have been used in various  computational papers</p>

<hr />

<p>However, there are many <strong>problems</strong> with using those as-as. For instance, consider these possible realizations of the thematic arguments of the verb <em>break</em>:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220302201246632.png" alt="image-20220302201246632" style="zoom: 80%;" /></p>

<p>These examples suggest that <em>break</em> has (at least) the possible arguments <code class="language-plaintext highlighter-rouge">AGENT</code>, <code class="language-plaintext highlighter-rouge">THEME</code>, and <code class="language-plaintext highlighter-rouge">INSTRUMENT</code>.</p>

<blockquote>
  <p>The <strong>set of thematic role arguments</strong> taken by a verb is often called the <strong>thematic grid</strong>, q-grid, or <strong>case frame</strong></p>
</blockquote>

<p>An example would be for <em>break</em>:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220302201350908.png" alt="image-20220302201350908" style="zoom:80%;" /></p>

<p>Additionally, researchers attempting to define role sets often find they need to <strong>fragment</strong> a role like <code class="language-plaintext highlighter-rouge">AGENT </code>or <code class="language-plaintext highlighter-rouge">THEME </code>into many specific roles. And it has proved difficult to <strong>formally define</strong> the thematic roles. This essentially leads to two class of models for solution</p>

<ul>
  <li>
    <p>define <strong>generalized semantic roles</strong> that abstract over the specific thematic roles.</p>

    <p>For example, <code class="language-plaintext highlighter-rouge">PROTO-AGENT</code> and <code class="language-plaintext highlighter-rouge">PROTO-PATIENT</code> are generalized roles that express <strong>roughly</strong> agent-like and roughly patient-like meanings, and those roles are not defined by some “necessary tabular conditions”, but rather by <strong>a set of heuristic features</strong> that accompany more agent-like or more patient-like meanings.</p>

    <p>Then the <strong>more an argument displays agent-like properties</strong> (e.g. being volitionally involved in the event), the more likely it is to be classified as <code class="language-plaintext highlighter-rouge">PROTO-AGENT</code>.</p>
  </li>
  <li>
    <p>define <strong>semantic roles that are specific</strong> to a particular verb or a particular group of semantically related verbs or nouns</p>
  </li>
</ul>

<p>The first of them leads to the <strong>PropBank</strong> dataset, which uses both <code class="language-plaintext highlighter-rouge">proto</code>-roles and verb-specific semantic roles.</p>

<p>The second leads to <strong>FrameNet</strong> dataset, which uses semantic roles that are specific to a general semantic idea called a <em>frame</em>.</p>

<blockquote>
  <p><strong>PropBank</strong> is a verb-oriented resource, while <strong>FrameNet</strong> is centered on the more abstract notion of frames, which generalizes descriptions across similar verbs.</p>

  <p>Of course, both of which have sentences annotated with semantic roles.</p>
</blockquote>

<h2 id="the-proposition-bank">The Proposition Bank</h2>

<p>Because of the difficulty of defining a universal set of thematic roles, the semantic roles in PropBank are defined with <strong>respect to an individual verb sense</strong>. Basically we have <strong>verb sense-specific labels</strong> (i.e. depending on the verb-sense, we will have different labels for arguments.)</p>

<p>In general, we will use labels names: <code class="language-plaintext highlighter-rouge">Arg0</code>, <code class="language-plaintext highlighter-rouge">Arg1</code>, <code class="language-plaintext highlighter-rouge">Arg2</code>, and so on:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">Arg0 </code>represents the <code class="language-plaintext highlighter-rouge">PROTO-AGENT</code></li>
  <li><code class="language-plaintext highlighter-rouge">Arg1</code>, the <code class="language-plaintext highlighter-rouge">PROTO-PATIENT</code></li>
  <li><code class="language-plaintext highlighter-rouge">Arg2 </code>is often the benefactive, instrument, attribute, or end state</li>
  <li><code class="language-plaintext highlighter-rouge">Arg3 </code>the start point, benefactive, instrument, or attribute,</li>
  <li><code class="language-plaintext highlighter-rouge">Arg4 </code>the end point</li>
</ul>

<p>Examples include:</p>

<p>| <img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220302204216699.png" alt="image-20220302204216699" /> | <img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220302204206118.png" alt="" /> |
| ———————————————————– | ———————————— |</p>

<p>Additionally, PropBank also has a number of non-numbered arguments called <code class="language-plaintext highlighter-rouge">ArgMs</code>, (<code class="language-plaintext highlighter-rouge">ArgMTMP</code>, <code class="language-plaintext highlighter-rouge">ArgM-LOC</code>, etc.) which represent modification or adjunct meanings. As those are pretty much the same across verb senses, they are not listed with each frame file. However, they could be useful for training systems. Some examples of <code class="language-plaintext highlighter-rouge">ArgM</code>’s include:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220302204509497.png" alt="image-20220302204509497" style="zoom:80%;" /></p>

<h2 id="framenet">FrameNet</h2>

<blockquote>
  <p>Whereas roles in the PropBank project are specific to an individual <strong>verb</strong>, roles in the FrameNet project are specific to a <strong>frame</strong>.</p>
</blockquote>

<p>A <strong>frame</strong> is basically the holistic background knowledge that unites these words, such as:</p>

\[\text{reservation, flight, travel, buy, price, cost, fare}\]

<p>all defined with respect to a coherent chunk of common-sense <strong>background information concerning air travel</strong>.</p>

<blockquote>
  <p>Therefore, FrameNet defines a set of <strong>frame-specific semantic roles,</strong> called <strong>frame elements,</strong> and includes a set of predicates that use these roles. (i.e. those roles of a word will be different across different frames)</p>

  <ul>
    <li>additionally, FrameNet also codes relationships between frames, allowing frames to inherit from each other, or representing relations between frames like causation</li>
  </ul>
</blockquote>

<p>For example, the <code class="language-plaintext highlighter-rouge">change_position_on_a_scale</code> frame is defined as follows:</p>

<ul>
  <li>This frame consists of words that indicate the change of an Item’s position on a scale (the <code class="language-plaintext highlighter-rouge">Attribute</code>) from a starting point (<code class="language-plaintext highlighter-rouge">Initial value</code>) to an end point (<code class="language-plaintext highlighter-rouge">Final value</code>).</li>
</ul>

<p>And example sentences with their labels include:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220302205208263.png" alt="image-20220302205208263" style="zoom: 80%;" /></p>

<p>so if a word/verb (predicate) is in this frame, the above would be the labels. Verbs/predicates used in this frame looks like:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220302205628334.png" alt="image-20220302205628334" style="zoom:80%;" /></p>

<h2 id="semantic-role-labeling-models">Semantic Role Labeling Models</h2>

<p>Now we get to the task of Semantic role labeling (sometimes shortened as SRL): automatically <strong>finding the semantic roles of each argument of each predicate</strong> in a sentence. This is often done by:</p>

<ul>
  <li>supervised machine learning</li>
  <li>using FrameNet and PropBank to <em>specify predicates, define roles, and provide training and test sets</em>.</li>
</ul>

<h3 id="feature-based-algorithm-for-srl">Feature-based Algorithm for SRL</h3>

<p>A simplified feature-based semantic role labeling algorithm basically do:</p>

<ol>
  <li>assign a parse (e.g. constituency parsing) of an input string</li>
  <li>traverse the tree to find <strong>all predicates</strong></li>
  <li>for each <strong>node that is a predicate</strong>:
    <ol>
      <li>do a classification on that node, any standard classification algorithms can be used.</li>
      <li>this can be done either by finding some <strong>feature representation</strong> of it, or using idea such as GNN</li>
    </ol>
  </li>
</ol>

<p>This results in a 1-of-$N$ classifier, i.e. where basically choosing one out of $N$ potential semantic roles (plus 1 for an extra <code class="language-plaintext highlighter-rouge">None</code> role for non-role constituents). The algorithm hence looks like:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220302210527944.png" alt="image-20220302210527944" style="zoom:80%;" /></p>

<p>And the parse we did in step one could look like:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220302210628528.png" alt="image-20220302210628528" style="zoom: 80%;" /></p>

<p>The general idea of those algorithms can be summarized into the following steps:</p>

<ol>
  <li><strong>Pruning</strong>: Since only a small number of the constituents in a sentence are arguments of any given predicate, many systems use simple heuristics to prune unlikely constituents.</li>
  <li><strong>Identification</strong>: a binary classification of each node as an argument to be labeled or a <code class="language-plaintext highlighter-rouge">NONE</code>.</li>
  <li><strong>Classification</strong>: a 1-of-N classification of all the constituents that were labeled as arguments by the previous stage</li>
</ol>

<p>However, since this <strong>labels each argument of a predicate independently</strong>, it is ingoing interactions between arguments, as we know the semantic roles are not independent.</p>

<p>Therefore, thus often <strong>add a fourth step to deal with global consistency across the labels in a sentence</strong>. This can be done by:</p>

<ul>
  <li>local classifiers can return a list of possible labels associated with probabilities for each constituent,</li>
  <li>a <strong>second-pass</strong> Viterbi decoding or re-ranking approach can be used to choose the best consensus label.</li>
</ul>

<hr />

<p><strong>Features</strong> for Semantic Labelling Nodes</p>

<p>Common basic features templates mentioned above include</p>

<ul>
  <li>Phrase type: The syntactic label of the candidate role, the <strong>filler</strong> (e.g. <code class="language-plaintext highlighter-rouge">NP</code>).</li>
  <li>Parse tree path: The path in the parse tree between the <strong>predicate</strong> and the candidate role filler.</li>
  <li>Position: Does candidate role filler precede or follow the predicate in the sentence?</li>
  <li>Voice: Is the predicate an active or passive verb?</li>
  <li>Head Word: What is the head word of the candidate role filler?</li>
</ul>

<p>An example would be for the predicate <em>bit</em>:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220302215527363.png" alt="image-20220302215527363" style="zoom: 50%;" /></p>

<hr />

<p>Problems that this method will suffer:</p>

<ul>
  <li>Due to <strong>errors in syntactic parsing</strong>, the parse tree is likely to be incorrect.</li>
  <li>Can have <strong>many other useful features</strong>.</li>
</ul>

<h3 id="neural-algorithm-for-srl">Neural Algorithm for SRL</h3>

<blockquote>
  <p>A simple neural approach to SRL is to treat it as a <strong>sequence labeling task</strong> like named-entity recognition, using the BIO approach.</p>
</blockquote>

<p>Assume that we are given the predicate and the task is just <strong>detecting and labeling spans</strong>. This means that we will have:</p>

<ul>
  <li><strong>Input</strong>: sentence + the predicate, which will be separated by the <code class="language-plaintext highlighter-rouge">SEP</code> tag as shown in the example below</li>
  <li><strong>Output</strong>: semantic labels + BIO tags, as each label is a constituent (can span over more than one word)
    <ul>
      <li>recall that BIO tags are: beginning, inside, outside.</li>
    </ul>
  </li>
</ul>

<p>An example architecture would be feeding it into a transformer:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220302211635684.png" alt="image-20220302211635684" style="zoom:80%;" /></p>

<p>where of course those input word is mapped to pretrained embeddings.</p>

<p>Some problems that this method would encounter would be:</p>

<ul>
  <li>Results may <strong>violate constraints</strong> like “an action has at most one agent”?</li>
</ul>

<h3 id="evaluation-metric-for-srl">Evaluation Metric for SRL</h3>

<p>Since essentially we have <strong>Identification</strong> (should label or not) and <strong>Classification</strong> (which label), their performance can be evaluated separately:</p>

<ul>
  <li>each <strong>argument label</strong> must be assigned to the <strong>exact same parse constituent</strong> as in the ground truth</li>
  <li>then, accuracy and recall can be used, for combined to look at F-score.</li>
</ul>

<h2 id="selectional-restrictions">Selectional Restrictions</h2>

<p>We turn in this section to another way to represent facts about the <strong>relationship between predicates and arguments</strong>.</p>

<blockquote>
  <p>Frequently semantic role is indicated by a <strong>particular syntactic position</strong> . Examples include:</p>

  <ul>
    <li>Agent: subject</li>
    <li>Patient: direct object</li>
    <li>Instrument: object of “with” <code class="language-plaintext highlighter-rouge">PP</code></li>
    <li>Beneficiary: object of “for” <code class="language-plaintext highlighter-rouge">PP</code></li>
    <li>Source: object of “from” <code class="language-plaintext highlighter-rouge">PP</code></li>
    <li>Destination: object of “to” <code class="language-plaintext highlighter-rouge">PP</code></li>
  </ul>
</blockquote>

<p>However, obviously this is <strong>not always correct</strong>.</p>

\[\text{The hammer hit the window.}\]

<p>then by the above logic <em>hammer</em> would be the <code class="language-plaintext highlighter-rouge">AGENT</code>, but it is actually an <code class="language-plaintext highlighter-rouge">INSTRUMENT</code> since it is not active.</p>

<p>Therefore, this means we also need to add <strong>Selectional Restrictions</strong>.</p>

<blockquote>
  <p>A <strong>selectional restriction</strong> is a semantic type <strong>constraint that a verb imposes</strong> on the kind of concepts that are allowed to fill its argument roles.</p>
</blockquote>

<p>For instance, consider the following two sentences:</p>

\[\text{I want to eat someplace nearby.}\\
\text{I want to eat Malaysian food.}\]

<p>where both involve the predicate <em>eat</em>:</p>

<ul>
  <li>in the first case, we would want <em>someplace nearby</em> is an <em>adjunct</em> that gives the location of the eating event, <strong>instead of direct object</strong></li>
  <li>in the second case, we would want <em>Malaysian food</em> to be <em>direct object</em>, <strong>instead of adjunct</strong></li>
</ul>

<p>Therefore, we see that:</p>

<ul>
  <li>selectional restrictions are associated with senses, not entire lexemes</li>
  <li>yet another way is to instead specify <strong>preference</strong>, i.e. which one is preferred instead of which one is deferred, which we will see soon.</li>
</ul>

<p>This can be very <strong>useful</strong> in that it can rule out <strong>many ambiguities include</strong>:</p>

<ul>
  <li><strong>Syntactic Ambiguity</strong>: “John ate the spaghetti with <em>chopsticks</em>.” would be wrong as <code class="language-plaintext highlighter-rouge">PATIENTS</code> of <em>eat</em> must be <em>edible</em></li>
  <li><strong>Word Sense Disambiguation</strong>: “John <em>fired</em> the secretary.” vs “John <em>fired</em> the rifle.”</li>
</ul>

<p>But of course, it is difficult to acquire all of the selectional restrictions and taxonomic knowledge and applying them is also a problem.</p>

<hr />

<p>In reality, taxanomic abstraction hierarchies or ontologies (e.g. hypernym links in <strong>WordNet</strong>) can be used to <strong>determine if such constraints are met</strong>.</p>

<ul>
  <li>e.g. “<em>John</em>” is a “Human” which is a “Mammal” which is a “Vertebrate” which is an “Animate”</li>
</ul>

<hr />

<h3 id="selectional-preferences">Selectional Preferences</h3>

<p>Early word sense disambiguation systems used this idea to rule out senses that violated the selectional restrictions of their governing predicates. However, soon it became clear that these <strong>selectional restrictions were better represented as preferences</strong> rather than strict constraints.</p>

<p>Basically there will be measurements being a probabilistic measure of the <strong>strength of association between a predicate and a class</strong> dominating the argument to the predicate. More details see the book.</p>

<h1 id="advanced-semantics">Advanced Semantics</h1>

<p>This section aims to give a quick recap of <strong>why we are using Pre-trained Language Models</strong> today for so many tasks.</p>

<p>A quick recap. We used pre-trained <strong>Embeddings</strong> to do:</p>

<ul>
  <li>e.g. skipgram word embeddings, compact dense representation for words</li>
  <li>captures <strong>static semantic information</strong> of a word</li>
</ul>

<p>Yet in reality, tasks we need to consider usually includes doing things <strong>after you got some embeddings</strong>. This means having NN such as RNN/transformer for downstream tasks such as sentiment analysis. However, there we <strong>also face problems if we want to train a model from scratch</strong>:</p>

<ul>
  <li>need a collection of data + manual labeling</li>
  <li>often end up doing <strong>transfer learning</strong>: the training dataset is for move reviews, but for test we are working on Amazon product review</li>
</ul>

<h2 id="simple-transfer-learning">Simple Transfer Learning</h2>

<p>The idea with word embedding to have a <em>model learning some task agnostic data</em>, and then fine tune it to task specific data.</p>

<p>This has been commonly used for <strong>fine-tuning word embeddings</strong>, but you will see that we can also have a model <strong>learn task agonistic objective</strong> (e.g. a language model), and then <strong>fine tune it for downstream task</strong>:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220309162325596.png" alt="image-20220309162325596" style="zoom:50%;" /></p>

<p>Then the <strong>advantage of pre-trained model in this setting</strong> would be:</p>

<ul>
  <li>
    <p>no need of large corpus, only a few for fine-tuning</p>
  </li>
  <li>
    <p>Can plug learned embeddings into the first layer</p>
  </li>
</ul>

<p>Additionally, for learning the task agnostic model, often:</p>

<ul>
  <li>No labelled data required – just a large text corpus and do self-learning such as <strong>masked word prediction</strong> or <strong>next word prediction</strong></li>
</ul>

<h3 id="problems-with-pre-trained-word-embeddings">Problems with Pre-trained Word Embeddings</h3>

<blockquote>
  <p>Why can we <strong>not</strong> just use the pretrained embeddings? (but use pretrained language models)</p>
</blockquote>

<p>One assumption/property we had so far for a word embedding include:</p>

<ul>
  <li><strong>they are static</strong>, hence does not care about the context, meaning the following would have the same
    <ul>
      <li>“She broke the windshield with a <em>bat</em>.”</li>
      <li>“He was driving like a <em>bat</em> out of hell.”</li>
    </ul>
  </li>
  <li>word embedding before learnt from <strong>co-occurrence</strong>, which <strong>does not care about order!</strong></li>
</ul>

<p>However, for an <strong>entire network</strong> trained only tasks such as language model related ones:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Pretrained Word Embeddings</th>
      <th style="text-align: center">Pretrained Language Model</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220310005529542.png" alt="image-20220310005529542" style="zoom:67%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220310005553330.png" alt="image-20220310005553330" style="zoom:67%;" /></td>
    </tr>
  </tbody>
</table>

<p>then you basically <strong>remove the $\hat{y}$ layer and add a linear layer at the end</strong> for transfer learning.</p>

<ul>
  <li>e.g. include recurrent or Transformer layers to incorporate context</li>
  <li>Better parameter initializations, for make it fine-tunable</li>
</ul>

<p>Now, we discuss <strong>language model as a effective pretrain task</strong> (e.g. next word prediction, masked word prediction, etc)</p>

<ul>
  <li>It’s self-supervised, so there’s no need for labelled data. e.g. Large text collections are readily available on the web</li>
  <li>it’s actually a difficult task, even for humans
    <ul>
      <li>A model would need to learn about syntax, semantics, and even some world knowledge in order to do well at this task</li>
      <li>Luckily with a large number of parameters, large corpora, and lots of GPUs (or TPUs), we can do a pretty reasonable job</li>
    </ul>
  </li>
</ul>

<h2 id="neural-language-model">Neural Language Model</h2>

<p><em>Recall</em>: N-gram Language Model</p>

<p>The N-gram language model (e.g. for next word prediction) has limitations:</p>

<ul>
  <li><strong>Sparsity</strong> (e.g. bigram matrix)</li>
  <li>Need to store ngrams (and counts)
    <ul>
      <li>Increases with n and corpus size</li>
    </ul>
  </li>
  <li>Don’t take into account word similarity</li>
</ul>

<hr />

<p>The solution to use <strong>Neural Language Model</strong>: predict the next word given the current context window</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220309164017685.png" alt="image-20220309164017685" style="zoom: 80%;" /></p>

<p>where the architecture is simply:</p>

<ul>
  <li>input -&gt; embedding layer to start with</li>
  <li>one or more intermediate layers, e.g. <code class="language-plaintext highlighter-rouge">Linear</code>, <code class="language-plaintext highlighter-rouge">RNN</code>, etc</li>
  <li>output $\vec{h}$ and attach a SoftMax layer
    <ul>
      <li>for fine-tuning the entire model, consider removing the softmax and attach another linear layer on top of $\vec{h}$ for your downstream task</li>
    </ul>
  </li>
</ul>

<p>This model <strong>solved</strong> several issues from N-gram models such as:</p>

<ul>
  <li>we have no sparsity problem</li>
  <li>no need to store n-grams</li>
  <li>can capture word-similarity via embeddings</li>
</ul>

<p>However, several <strong>unsolved problems</strong> include:</p>

<ul>
  <li>Context window is limited (cannot just put in the entire document)
    <ul>
      <li>Still can’t capture long range dependencies</li>
    </ul>
  </li>
  <li>Increasing context window == increasing parameters</li>
</ul>

<h2 id="lms-and-transfer-learning">LMs and Transfer Learning</h2>

<p>Then the idea is that the LM task could be <strong>useful for any downstream task</strong>.</p>

<ul>
  <li>intuition: predict the next word positive fromthe sentence: the movie is great; positive”. Then we can use it as <strong>sentiment analysis</strong></li>
</ul>

<p>Therefore, you basically take the entire pre-trained model before the softmax layer as <strong>initialization</strong>, or as fine-tuning, or your downstream task. For instance:</p>

<ul>
  <li>use an pretrained LSTM LM on a large corpus</li>
  <li>Use weights of embeddings and LSTM layers as initialization for the target task</li>
</ul>

<p>Nowadays, besides LSTM LM, we have <strong>many pretrained architectures</strong> to choose from.</p>

<h3 id="architecture-choices">Architecture Choices</h3>

<p>In NLP we have <strong>a lot of pretained language models</strong>. For each, be careful to consider the following aspects:</p>

<ul>
  <li>Model Architecture</li>
  <li>Pre-training Objective</li>
  <li>Pre-training Data</li>
  <li>Adaptation to downstream tasks</li>
</ul>

<h3 id="architecture-examples">Architecture Examples</h3>

<blockquote>
  <p>In reality, since the ==pretained model has a lot of parameters==, it is common to <strong>freeze those weights</strong> for the following models and <strong>add a linear/NN layer</strong> on top for your downstream task.</p>
</blockquote>

<p><strong>GPT</strong></p>

<ul>
  <li>Transformer decoder with 12 layers
    <ul>
      <li>768 hidden units, 12 heads, 3072-dim feed forward layer
(117M params)</li>
    </ul>
  </li>
  <li>Pre-training objective: next word prediction</li>
  <li>Data:
    <ul>
      <li>BooksCorpus</li>
      <li>7K unpublished books covering a variety of genres (800M words)</li>
      <li>Allows model to condition on long-range dependencies</li>
    </ul>
  </li>
  <li>For GPT-2 and GPT-3
    <ul>
      <li>Larger models + more data = stronger LMs</li>
    </ul>
  </li>
</ul>

<p>then, the paper tested this model and applied to a variety of different downstream tasks.</p>

<hr />

<p><strong>BERT</strong></p>

<ul>
  <li>Pre-training objective: <strong>masked word prediction</strong> + <strong>next sentence prediction</strong>
    <ul>
      <li>LMs are unidirectional, but language understanding is bidirectional.</li>
      <li>next sentence prediction: whether if the next sentence follows from the previous sentence</li>
    </ul>
  </li>
  <li>12 layer transformer encoder, 768 hidden units, 12 attention heads = 110M parameters</li>
  <li>Data
    <ul>
      <li>BooksCorpus (800M words)</li>
      <li>English Wikipedia (2,500M words)
        <ul>
          <li>Text passages only</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Training time
    <ul>
      <li>4 days on 4x4 or 8x8 TPU v2 slices</li>
      <li>~$7K to train BERT Large</li>
    </ul>
  </li>
</ul>

<p>Input architecture looks like</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220309170209027.png" alt="image-20220309170209027" style="zoom:50%;" /></p>

<p>where:</p>

<ul>
  <li>segment embedding is to denote where we are putting the <strong>separator</strong>.</li>
</ul>

<p>Then, using this model for <strong>other downstream tasks</strong> include</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220309170441560.png" alt="image-20220309170441560" style="zoom:50%;" /></p>

<p>Some importnat variants of BERT:</p>

<ul>
  <li>RoBERTa
    <ul>
      <li>Next sentence prediction not necessary as objective</li>
      <li>BERT + data + training steps</li>
    </ul>
  </li>
  <li>SpanBERT
    <ul>
      <li>Mask out spans instead
        <ul>
          <li>e.g. which span of the reading/resource relates to the question that was asked</li>
        </ul>
      </li>
      <li>Significant improvements on span selection tasks (such as QA)</li>
    </ul>
  </li>
</ul>

<p>It turns out that this also can be tuned for <strong>other languages</strong>: https://github.com/google-research/bert/blob/master/multilingual.md</p>

<h2 id="future-of-pretrained-models">Future of Pretrained Models</h2>

<p>Currently the trend is</p>

<ol>
  <li>to have an increasing size of model and data:</li>
  <li>consider <strong>zero/one/few-shot learning</strong> instead of transfer learning</li>
</ol>

<hr />

<p>Model size</p>

<ul>
  <li>BERT/GPT (2018) -&gt; ~100M params</li>
  <li>GPT-2 (2019) -&gt; 1.5B params</li>
  <li>T5 (2020) -&gt; 11B param</li>
  <li>GPT-3 (2020) -&gt; 175B params</li>
</ul>

<p>Dataset sizes</p>

<ul>
  <li>GPT (2018) -&gt; 800M words</li>
  <li>BERT (2018) -&gt; 3B words</li>
  <li>GPT-2 (2019) -&gt; 40B words</li>
  <li>GPT-3 (2020) -&gt; 500B words</li>
</ul>

<hr />

<p>Additionally, <strong>different from the transfer learning paradigm</strong>, recently we have been looking at <strong>zero/one/few-shot learning</strong></p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Zero-shot</th>
      <th style="text-align: center">One-shot</th>
      <th style="text-align: center">Few-hot</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220310010926634.png" alt="image-20220310010926634" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220310010905618.png" alt="image-20220310010905618" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220310010915069.png" alt="image-20220310010915069" /></td>
    </tr>
  </tbody>
</table>

<p>one key difference here is that ==we do NOT update weights==, we are only providing exmaples = providing a <strong>context</strong>.</p>

<h1 id="machine-translation">Machine Translation</h1>

<blockquote>
  <p>The task here is to <strong>translate</strong> one natural language into another. Some common usages include:</p>

  <ul>
    <li><strong>pure translation</strong>: Google translate</li>
    <li><strong>computer-aided translation</strong>: used to produce a draft translation that is fixed up in a post-editing phase by a human translator. This is commonly used as part of <strong>localization</strong>: the task of <em>adapting</em> content or a product to a <em>particular language community</em></li>
    <li><strong>incremental translation</strong>: translating speech on-the-fly before the entire sentence is complete</li>
    <li><strong>Image-centric translation</strong>: use OCR of the text on a phone camera image as input to an MT system to translate menus or street signs</li>
  </ul>
</blockquote>

<p>The standard algorithm for MT:</p>

<ul>
  <li>
    <p><strong>statistical</strong> methods (not used a lot today)</p>
  </li>
  <li>
    <p>the <strong>encoder-decoder</strong> network, also called the decoder sequence to sequence network, an architecture that can be implemented with RNNs or with Transformers. Why can we not just use an encoder/just an decoder?</p>

    <blockquote>
      <p>Machine Translation needs a map from a sequence of input words or tokens to a sequence of tags that are <strong>not merely direct mappings</strong> from individual words, which is exactly what such an architecture is doing.</p>
    </blockquote>
  </li>
</ul>

<p>An example of MT task would be:</p>

\[\text{English}: \quad \text{He wrote a letter to a friend}\\
\text{Japanese}: \quad \underbrace{\text{tomodachi}}_{\text{friend}}\,\,\underbrace{\text{ni tegami-o}}_{\text{to letter}}\,\,\underbrace{\text{kaita}}_{\text{wrote}}\]

<p>which evinces some <strong>key challenges</strong> that makes the task difficult:</p>

<ul>
  <li><strong>syntactical difference</strong> amongst languages: in English, <code class="language-plaintext highlighter-rouge">verb</code> is in the middle while in Japanese, <code class="language-plaintext highlighter-rouge">verb</code> is at the end.
    <ul>
      <li>e.g. word ordering difference: <code class="language-plaintext highlighter-rouge">SVO</code> (e.g. English), <code class="language-plaintext highlighter-rouge">SOV</code> (e.g. Hindi), and <code class="language-plaintext highlighter-rouge">VSO</code> (e.g. Arabic) languages.</li>
      <li>e.g. In some SVO languages (like English and Mandarin) <code class="language-plaintext highlighter-rouge">adjectives </code>tend to appear before <code class="language-plaintext highlighter-rouge">verbs</code>, while in others languages like Spanish and Modern Hebrew, <code class="language-plaintext highlighter-rouge">adjectives </code>appear after the <code class="language-plaintext highlighter-rouge">noun</code></li>
    </ul>
  </li>
  <li><strong>Pro-drop languages</strong>: regularly omit subjects that must be inferred.
    <ul>
      <li>e.g. Chinese sometimes drop subjects</li>
    </ul>
  </li>
  <li><strong>Morphological difference</strong></li>
  <li><strong>Lexical gaps</strong>: there might not exist a one to one mapping for a word in foreign languages</li>
</ul>

<blockquote>
  <p><strong>Encoder-decoder</strong> networks are very successful at handling these sorts of complicated cases of sequence mappings.</p>
</blockquote>

<p>Indeed, the encoder-decoder algorithm is not just for MT; it’s the state of the art for many other tasks where complex mappings between two sequences are involved:</p>

<ul>
  <li>summarization (where we map from a long text to its summary, like a title or an abstract)</li>
  <li>dialogue (where we map from what the user said to what our dialogue system should respond)</li>
  <li>semantic parsing (where we map from a string of words to a semantic representation like logic or SQL)</li>
  <li>and many others.</li>
</ul>

<p>However, the current translation quality is <strong>not perfect</strong>:</p>

<ul>
  <li>Existing MT systems can generate rough translations that at least convey the gist of a document</li>
  <li>High quality translations possible when specialized to narrow domains, e.g. weather forecasts.</li>
</ul>

<h2 id="language-divergence">Language Divergence</h2>

<p>This section discusses a bit more on the differences between languages that makes the task of MT difficult</p>

<blockquote>
  <p>Languages differ in many ways, and an understanding of what causes translation such divergences will help us <strong>build better MT</strong> models. The study of these systematic cross-linguistic similarities and differences is called <strong>linguistic typology</strong></p>
</blockquote>

<h3 id="word-order-typology">Word Order Typology</h3>

<p>As we hinted it in our example above comparing English and Japanese, languages differ in the basic word order:</p>

<ul>
  <li>Subject-Verb-Object order</li>
  <li>In some SVO languages (like English and Mandarin) <code class="language-plaintext highlighter-rouge">adjectives </code>tend to appear before <code class="language-plaintext highlighter-rouge">verbs</code>, while in others languages like Spanish and Modern Hebrew, <code class="language-plaintext highlighter-rouge">adjectives </code>appear after the <code class="language-plaintext highlighter-rouge">noun</code></li>
</ul>

<p>Visual example of word order difference hence complex mapping:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220321190648445.png" alt="image-20220321190648445" style="zoom:67%;" /></p>

<h3 id="lexical-divergences">Lexical Divergences</h3>

<p>Here we need to deal with problems such as:</p>

<ul>
  <li>appropriate word/translation can vary depending on the <strong>context</strong>.
    <ul>
      <li>e.g. German uses two distinct words for what in English would be called a <code class="language-plaintext highlighter-rouge">wall</code>: <code class="language-plaintext highlighter-rouge">Wand </code>for walls inside a building, and <code class="language-plaintext highlighter-rouge">Mauer </code>for walls outside a building.</li>
    </ul>
  </li>
  <li>Sometimes one language places more grammatical <strong>constraints on word choice</strong> than another.</li>
  <li><strong>lexical gap</strong>: no word or phrase, short of an explanatory footnote, can express the exact meaning of a word in the other language.</li>
</ul>

<h3 id="morphological-typology">Morphological Typology</h3>

<blockquote>
  <p>Recall that a <em>morpheme</em> is the smallest unit of meaning that a word can be divided into.</p>
</blockquote>

<p>Then, in many languages we have:</p>

<ul>
  <li>difference in the <strong>number of morphemes per word</strong>
    <ul>
      <li><strong>isolating</strong> languages like Vietnamese and Cantonese, one morpheme per word</li>
      <li><strong>polysynthetic</strong> languages like Siberian Yupik (“<code class="language-plaintext highlighter-rouge">Eskimo</code>”), in which a single word may have very many morphemes, <em>corresponding to a whole sentence</em> in English</li>
    </ul>
  </li>
  <li>difference in the <strong>degree a morpheme is separable</strong>
    <ul>
      <li><strong>agglutinative</strong> languages like Turkish, in which morphemes have relatively clean boundaries</li>
      <li><strong>fusion</strong> languages like Russian, in which a single affix may conflate multiple morphemes</li>
    </ul>
  </li>
</ul>

<p>This means that translating between languages with rich morphology requires dealing with structure below the word level, .e.g. use <strong>subword models</strong> such as BPE.</p>

<h2 id="rule-based-mt-model">Rule-Based MT Model</h2>

<p><strong>Rules-based machine translation</strong> (<strong>RBMT</strong>) is a machine translation approach based on hardcoded linguistic rules. The rules used here would include:</p>

<ul>
  <li>lexical transfer</li>
  <li>lexical reordering</li>
  <li>etc.</li>
</ul>

<h3 id="direct-transfer">Direct Transfer</h3>

<p>The task is to use rules to translate between, e.g. English to Spanish:</p>

<ol>
  <li>
    <p>Use <strong>morphological analysis</strong></p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220321194326179.png" alt="image-20220321194326179" style="zoom: 67%;" /></p>
  </li>
  <li>
    <p>Use <strong>lexical transfer rules</strong> to find syntactic ==one to many mapping== of the translation of each word:</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220321194444415.png" alt="image-20220321194444415" style="zoom: 67%;" /></p>

    <p>notice that here we did two things: do the translation per word (e.g. using a dictionary) + translated into basic grammar structure in Spanish</p>
  </li>
  <li>
    <p><strong>Lexical Reordering</strong>: fixing some more detailed word orders</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220321194642643.png" alt="image-20220321194642643" style="zoom:67%;" /></p>
  </li>
  <li>
    <p><strong>Morphological generation</strong>: generate the morphology back from the first step</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220321194835167.png" alt="image-20220321194835167" style="zoom:67%;" /></p>
  </li>
</ol>

<p>But of course even this rule-based approach has shortcomings in quality:</p>

<ul>
  <li>
    <p>lexical reordering does not adequately handle <strong>more dramatic reordering</strong> such as that required to translate from an SVO to an SOV language. This means we need <strong>syntactic transfer rules</strong> that map parse tree for one language into one for another.</p>

    <p>For example:</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220321195042900.png" alt="image-20220321195042900" style="zoom:60%;" /></p>
  </li>
  <li>
    <p>some transfer requires <strong>semantic information</strong>. For example, in Chinese <code class="language-plaintext highlighter-rouge">PP</code> expressing <em>a goal</em> semantically should occur <em>before</em> <code class="language-plaintext highlighter-rouge">verb</code>, but in English, it occurs <em>after</em> the <code class="language-plaintext highlighter-rouge">verb</code>.</p>

    <p>Hence we need rules such as</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220321195242729.png" alt="image-20220321195242729" style="zoom: 60%;" /></p>
  </li>
</ul>

<h2 id="statistical-mt">Statistical MT</h2>

<p>Of course rule-based approach have big problems</p>

<ul>
  <li>
    <p>difficult to come up with <strong>good rules</strong> between two languages</p>
  </li>
  <li>
    <p>it <strong>does not scale</strong> as it requires hand-written rules.</p>
  </li>
</ul>

<p>Instead of rule based direct transfer, consider a statistical model which at least scales</p>

<blockquote>
  <p>SMT acquires knowledge needed for translation from a <strong>parallel corpus</strong> or bitext that contains the same set of documents in two languages.</p>
</blockquote>

<h3 id="noisy-channel-model">Noisy Channel Model</h3>

<p>The idea is to consider, for example translating French to English:</p>

<blockquote>
  <p>Source sentence (e.g. French) was generated from some ==noisy transformation== of the target sentence (e.g. English), as we have done in Spelling Correction.</p>
</blockquote>

<p>Therefore, we consider finding the translation $\hat{E}$:</p>

\[\hat{E} = \arg\max P(E |F)\]

<p>for $F=f_1,f_2…,f_m$ being a sentence in French composing $m$ words, and $E = e_1,e_2,…,e_n$ being a sentence in English composed of $n$ words. Then using Bayesian rules:</p>

\[\hat{E} = \arg\max_E P(E|F)  = \arg\max_E \underbrace{P(F|E)}_{\text{likelihood of $E$}}\quad\underbrace{P(E)}_{\text{prior of $E$ occuring}}\]

<p>where $P(F\vert E)$ would then be computed by a <strong>translation model</strong> and $P(E)$ by a <strong>language model</strong>.</p>

<ul>
  <li>
    <p>e.g. $P(E)$ could come form a n-gram model. or a PCFG which captures syntactic structure as well, etc.</p>
  </li>
  <li>
    <p>to compute $P(F\vert E)$, we would ideally want to do:</p>

    <ul>
      <li>find phrase alignments from a given $E$ to $F$ and translate each phrase</li>
      <li>but this is hard to do, so in reality we consider <strong>word alignment $A=a_1,…,a_k$</strong> then translation</li>
    </ul>

\[P(F|E) = \sum_A P(F|E,A)P(A|E)\]

    <p>more details on how this works is covered in the next section.</p>
  </li>
</ul>

<h3 id="word-alignment-for-mt">Word Alignment for MT</h3>

<p>Recall that our task is to compute $P(F\vert E)$, for $F$ being a random variable and $E$ of length $n$.</p>

<blockquote>
  <p>To simplify the problem, typically assume the following:</p>

  <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220321202333366.png" alt="image-20220321202333366" style="zoom: 50%;" /></p>

  <p>where notice that:</p>

  <ul>
    <li>
      <p>given a $E$, each word in $E$ aligns to <strong>one or more</strong> words in $F$</p>
    </li>
    <li>
      <p>each word in $F$ aligns to 1 word in $E$ (so it is a vector, as shown below)</p>
    </li>
  </ul>

  <p>Then, an alignment in basically becomes a size $9$ vector which looks like:</p>

\[[1,2,3,3,3,0,4,6,5]^T\]

  <p>which is for each word in $F$, the <strong>index of the word in $E$ which generated it</strong>. (then you can apply word-word level translation)</p>
</blockquote>

<p>In general, such an alignment can be learnt from</p>

<ul>
  <li>
    <p>supervised word alignments, but human-aligned bitexts are rare and expensive to construct.</p>
  </li>
  <li>
    <p>so typically obtained using an <strong>unsupervised EM-based approach</strong> to compute a word alignment from unannotated parallel corpus.</p>
  </li>
</ul>

<h3 id="ibm-model-1">IBM Model 1</h3>

<p>Now, ==assume that $P(F\vert E,A)$== is computable. The IBM model for SMT can generated a single $F$ from $E=e_1,…,e_n$ of length $n$ by:</p>

<ol>
  <li>choose length $k$, so that we would have $F=f_1,…,f_k$</li>
  <li>choose an alignment $A=a_1,…,a_k$ which represents which English <strong>word</strong> it should comes from</li>
  <li>For each position of word in $F$, generated a word $f_j$ <strong>from</strong> the aligned English version $e_{a_j}$</li>
</ol>

<p>Next, we can define how to compute $P(F\vert E)$ of $E$ having length $n$ by:</p>

<ol>
  <li>
    <p>given some length distribution $P(K=k\vert E)$</p>
  </li>
  <li>
    <p>assuming all alignments are qually likely, then there are $(n+1)^k$ possible alignments. Hence:</p>

\[P(A=a_1,...,a_k|E=e_1,...,e_n) = \frac{P(K=k|E)}{(n+1)^k},\quad \forall a_i\]

    <p>i.e. same probability if given the same length. e.g. $P(A=0,1,2\vert E)=P(A=1,0,2\vert E)$</p>
  </li>
  <li>
    <p>Given some translation probability per word from $e_y \to f_x$, let it be $t(f_x\vert e_y)$ we then have:</p>

\[P(F|E,A) = \prod_{j=1}^kt(f_j|e_{a_j})\]

    <p>where the alignment would be given by previous step</p>
  </li>
  <li>
    <p>Finally, we sum over all possible alignments:</p>

\[P(F|E) = \sum_A P(F|E,A)P(A|E) = \sum_A \frac{P(k|E)}{(n+1)^k} \prod_{j=1}^kt(f_j|e_{a_j})\]

    <p>where the alignments $A$ would <strong>vary both in</strong> length $k$ and in the elements/indices within an alignment of same length.</p>
  </li>
</ol>

<p>Typically use an unsupervised EM-based approach to compute a word alignment from unannotated parallel corpus, e.g. you could have $A=0,1,2$, $A=1,0,2$, $A=1,0,0,2$, etc.</p>

<ul>
  <li>notice that this is only a <strong>forward algorithm</strong>, so if we need to decode, this would be not very computational efficient.</li>
</ul>

<hr />

<p>Lastly, the decoding produce for finding the <strong>best alignment</strong> can be done by:</p>

\[\hat{A} = \arg\max_A \frac{P(k|E)}{(n+1)^k} \prod_{j=1}^kt(f_j|e_{a_j}) = \arg\max_A \prod_{j=1}^kt(f_j|e_{a_j})\]

<p>then, how do we maximize a product of terms? Since each term is independent, we can maximize it by <strong>maximizing each term independently</strong>. Hence:</p>

\[\hat{a}_j = \arg\max_{i} t(f_j,e_i),\quad \forall j\]

<p>which tells you which English word $f_j$ should align to.</p>

<ul>
  <li>of course you can compute this once you know all the probabilities $P(k\vert E), t(f_y\vert e_x)$.</li>
</ul>

<h3 id="hmm-based-word-alignment">HMM-Based Word Alignment</h3>

<p>Obviously, one problem with IBM Model 1 is that it assumes all alignments are <strong>equally likely</strong> and ==does not take into account locality==, e.g. <em>next to each other words are likely to be next to each other in another language as well.</em></p>

<blockquote>
  <p>To solve this issue, <strong>HMM models</strong> can be used which models the <strong>jump width</strong> as hidden state, i.e. :</p>

  <ol>
    <li>translate current word</li>
    <li>decide which next word to jump to for translation</li>
    <li>repeat from step 1</li>
  </ol>
</blockquote>

<p>First, an example would be</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Iteration 1</th>
      <th style="text-align: center">Iteration 3</th>
      <th style="text-align: center">Iteration 4</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220321224922541.png" alt="image-20220321224922541" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220321225048967.png" alt="image-20220321225048967" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220321225055378.png" alt="image-20220321225055378" /></td>
    </tr>
  </tbody>
</table>

<p>notice that:</p>

<ul>
  <li>
    <p>the jump could jump to the current word itself, as there could be one-to-many mapping</p>
  </li>
  <li>
    <p>the jump could jump both forward and backward discontinuously. E.g.</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220321225219480.png" alt="image-20220321225219480" style="zoom: 25%;" /></p>
  </li>
</ul>

<p>Therefore, now we can define what this model really is</p>

<blockquote>
  <ul>
    <li><strong>Hidden states</strong> are current English word $e_i$ being translated</li>
    <li><strong>State transition</strong> would be modelling the <strong>jumps</strong> for the next word, which is $a_{ij}=P(s_i \to s_j)$</li>
    <li><strong>Observations</strong> are the translated French word $f_j$</li>
    <li><strong>Emission probability</strong> is therefore $b_j(f_i)=P(f_i\vert e_j)$, which is basically probability of translation from $e_j \to f_i$</li>
  </ul>
</blockquote>

<p>Then this means that:</p>

<ul>
  <li>==Observation likelihood $P(F\vert E)$== can be computed by the <strong>forward algorithm</strong> with HMM</li>
  <li>==Decoding $\hat{E}=\arg\max_E P(E\vert F)$== can be computed by <strong>Viterbi algorithm</strong> with HMM</li>
</ul>

<h3 id="training-word-alignment-models">Training Word Alignment Models</h3>

<p>Both the IBM model 1 and HMM model require the following parameters</p>

<ul>
  <li>$P(f_i\vert e_j)$ probability of individual word translation (shown in the example below)</li>
  <li>$P(K=k\vert E)$, length of target translation sentence</li>
</ul>

<p>which can be obtained/trained on a <strong>parallel corpus</strong> to set the required parameters, including the specific ones such as:</p>

<ul>
  <li>for HMM Model, we also need $P(e_i)$ and $P(e_i \to e_j)$ being transition probabilities</li>
</ul>

<blockquote>
  <p><strong>In general</strong></p>

  <ul>
    <li>if we have a labelled/<strong>supervised</strong> (hand-aligned) training data, parameters can be estimated directly using frequency counts; e.g. <strong>sentence alignment</strong>. Which sentence in a corpus corresponds to which sentence is another corpus.</li>
    <li>most often we have an <strong>unsupervised</strong> piece of parallel corpus. Then we need to estimate the probabilities using EM type algorithm.</li>
  </ul>
</blockquote>

<p>A sketch of the algorithm looks like</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220321230852813.png" alt="image-20220321230852813" style="zoom: 50%;" /></p>

<p>For example, given two data in the training corpus:</p>

\[\text{green house} \iff \text{casa verde}\\
\text{the house} \iff \text{la casa}\]

<blockquote>
  <p>Our aim is to be able to compute $P(s_i\vert e_j)$ for $s_i$ being a Spanish word, and perhaps vice versa.</p>

  <ul>
    <li>notice that you should expect $\text{house} \iff \text{casa}$ to have a higher probability as this pair occurs more often</li>
    <li>this is exactly what the EM algorithm tries to do</li>
  </ul>
</blockquote>

<ol>
  <li>
    <p>Step one: initialization. Here we can assume a uniform distribution such that each row/column sums to one</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220321231613695.png" alt="image-20220321231613695" style="zoom: 33%;" /></p>

    <p>notice that each cell would represent $P(s_i\vert e_j)$ and vice versa.</p>
  </li>
  <li>
    <p><strong>Expectation Step</strong>: we impute the missing data, which is to consider all possible alignments/individual translations. Here we have four possible cases:</p>

\[\text{green} \iff \text{casa}\quad \text{AND} \quad  \text{house} \iff \text{verde};\quad p=\frac{1/9}{2/9}=\frac{1}{2}\\
\text{green} \iff \text{verde}\quad \text{AND} \quad  \text{house} \iff \text{casa};\quad p=\frac{1/9}{2/9}=\frac{1}{2}\]

    <p>and that</p>

\[\text{the} \iff \text{la}\quad \text{AND} \quad  \text{house} \iff \text{casa};\quad p=\frac{1/9}{2/9}=\frac{1}{2}\\
\text{the} \iff \text{casa}\quad \text{AND} \quad  \text{house} \iff \text{la};\quad p=\frac{1/9}{2/9}=\frac{1}{2}\]
  </li>
  <li>
    <p><strong>Maximization Step</strong>: then we fill in the table using the previous probabilities</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220321232324142.png" alt="image-20220321232324142" style="zoom:33%;" /></p>

    <p>And <strong>normalizing to sum to one</strong>:</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220321232358667.png" alt="image-20220321232358667" style="zoom: 33%;" /></p>
  </li>
  <li>
    <p>Repeat step 2-3 until convergence. Here just to be clear we show one more iteration of step 2. Possible alignments and their probability:</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220321233011833.png" alt="image-20220321233011833" style="zoom: 67%;" /></p>

    <p>Hence</p>

\[\text{green} \iff \text{casa}\quad \text{AND} \quad  \text{house} \iff \text{verde};\quad p=\frac{1/8}{3/8}=\frac{1}{3}\\
\text{green} \iff \text{verde}\quad \text{AND} \quad  \text{house} \iff \text{casa};\quad p=\frac{1/4}{3/8}=\frac{2}{3}\]

    <p>and</p>

\[\text{the} \iff \text{la}\quad \text{AND} \quad  \text{house} \iff \text{casa};\quad p=\frac{1/4}{3/8}=\frac{2}{3}\\
\text{the} \iff \text{casa}\quad \text{AND} \quad  \text{house} \iff \text{la};\quad p=\frac{1/8}{3/8}=\frac{1}{3}\]
  </li>
</ol>

<p>Note that the above works by the assumption that many words will be <strong>repeated</strong>.</p>

<h2 id="neural-machine-translation">Neural Machine Translation</h2>

<p>As mentioned before, translation often involves a complex map between two sequences, hence usually we do</p>

<ul>
  <li>
    <p><strong>encoder-decoder</strong> model (e.g. LSTM blocks)</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220321234653968.png" alt="image-20220321234653968" style="zoom: 33%;" /></p>

    <p>e.g. transformer based encoder-decoder</p>
  </li>
  <li>
    <p>integrate an LSTM with language model using “deep fusion.”</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220321234901398.png" alt="image-20220321234901398" style="zoom:67%;" /></p>

    <p>which basically is for decoder to <strong>predict the next word</strong> from a concatenation of the <strong>hidden states of both</strong> the translation and language LSTM models.</p>
  </li>
</ul>

<h2 id="evaluating-mt">Evaluating MT</h2>

<p>Translations are evaluated along <strong>two dimensions</strong>:</p>

<ol>
  <li><strong>adequacy</strong>: how well the translation captures the exact ==meaning== of the source sentence. Sometimes called <strong>faithfulness</strong> or fidelity.</li>
  <li><strong>fluency</strong>: how ==fluent== the translation is in the target language (is it grammatical, clear, readable, natural).</li>
</ol>

<p>The most accurate metric is to have human to score the translations based on the above criterion, but that is inefficient and expensive. This in reality is done often in the following manner:</p>

<ol>
  <li>Collect one or more human <strong>reference translations</strong> of the source, i.e. gold standard</li>
  <li>Compare MT output to these reference translations.</li>
  <li>Score <strong>result based on similarity</strong> to the reference translations.</li>
</ol>

<p>Some automatic scoring system implemented today include BLEU, NIST, TER, etc.</p>

<h3 id="bleu">BLEU</h3>

<blockquote>
  <p><strong>BLEU (Bilingual Evaluation Understudy)</strong>: scores based on the following criteria:</p>

  <ul>
    <li>What percentage of machine n-grams can be found in the reference translation?</li>
    <li>Brevity Penalty: if translated sentence is too short, e.g. <code class="language-plaintext highlighter-rouge">the.</code>, it matches/precision $1.0$ but it is cheating!</li>
  </ul>
</blockquote>

<p>To answer the first question, an example would be:</p>

<ul>
  <li>
    <p>finding shared unigrams:</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220321235856265.png" alt="image-20220321235856265" style="zoom: 25%;" /></p>

    <p>where basically we count a match if the unigram appears in <strong>at least one of the reference translation</strong></p>
  </li>
  <li>
    <p>finding shared bigrams</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220322000121945.png" alt="image-20220322000121945" style="zoom:25%;" /></p>
  </li>
  <li>
    <p>until some fixed size $N$, typically $4$.</p>
  </li>
</ul>

<p>Finally, scoring the <strong>first criteria</strong> involves finding a <strong>geometric mean</strong>:</p>

\[\text{Precision}_{gm} = \sqrt[N]{\prod_{n=1}^NPr_n}\]

<p>However, this alone will <strong>not work</strong>, because you can have a <strong>shorter sentence</strong> which would give a higher score. Therefore, we also need a <strong>brevity penalty</strong>/the second criteria:</p>

<ul>
  <li>
    <p>ideally, we might compute $\text{Recall}$​. which could solve the problem. But this is problematic since there are <em>multiple alternative gold-standard references</em>.</p>
  </li>
  <li>
    <p>therefore, we cook up with the following metric:</p>

    <p>Define effective reference length, $r$, as the <strong>length of the reference sentence</strong> with the <strong>largest number of</strong>
<strong>n-gram matches</strong>. Then, if $c$ is the candidate sentence length:</p>

\[BP = \begin{cases}
1,&amp; \text{if }c &gt; r\\
e^{1-(r/c)},&amp; \text{if }c \le r
\end{cases}\]
  </li>
</ul>

<p>So that the final score is:</p>

\[BLUE = \text{Precision}_{gm} \times BP\]

<h2 id="challenges-and-futures-in-mt">Challenges and Futures in MT</h2>

<p>Certain challenges in MT include:</p>

<ul>
  <li>OOV word in test set. We need smoothing or other techniques, such as subword.</li>
  <li>domain mismatch: e.g. corpus in movie but test in Amazon product review</li>
  <li>translating long context is hard, even with attention it is not completely solved</li>
  <li>low-resource language pairs</li>
  <li>NMT can pick up biases (e.g. gender bias)</li>
</ul>

<p>Some future directions include:</p>

<ul>
  <li>unsupervised MT attempts to learn language laignment form monolinguial data</li>
  <li>multilingual NMT, learn shared representation across all languages (which can solve low resource problem)</li>
  <li>Neural LSTM methods are currently the state-of-the-art.</li>
</ul>

<h1 id="sentiment-analysis-and-classification">Sentiment Analysis and Classification</h1>

<blockquote>
  <p>In this chapter we introduce the algorithms such as Naïve text Bayes algorithm and apply it to <strong>text categorization</strong>, the task of assigning a label or category to an entire text or document. In particular, we focus on categorizing text based on its sentiments, i.e. <strong>sentiment analysis</strong>.</p>

  <ul>
    <li>e.g. positive or negative orientation that a writer expresses toward some object.</li>
    <li>simplest version of sentiment analysis is a binary classification task</li>
  </ul>

  <p>Other commonly used names for sentiment analysis include: Opinion extraction; Opinion mining; Sentiment mining; Subjectivity analysis.</p>
</blockquote>

<p>So now are are dealing with <strong>classification task</strong>, which is to be set in contrast to <code class="language-plaintext highlighter-rouge">Seq2Seq</code> task. Here we only need to output a <strong>single</strong> label/or a small fixed set for the <strong>entire document</strong>, e.g. a single written product review.</p>

<p>Other text categorization other than sentiment include:</p>

<ul>
  <li><strong>Spam detection</strong>: another important commercial application, the binary classification task of assigning an email to one of the two classes spam or not-spam</li>
  <li><strong>Authorship attribution</strong>: whether if a given text is written by the person</li>
  <li><strong>Subject category classification</strong>: which library category does a piece of text belong to? Science? Humanities? etc.</li>
</ul>

<blockquote>
  <p>The goal of classification is to take a single observation, i.e. a test sample, <strong>extract</strong> some useful features, and thereby <strong>classify</strong> the observation into one of a set of discrete classes.</p>
</blockquote>

<p>And again recall that there are two broad class of classification algorithms:</p>

<ul>
  <li><strong>Generative</strong> classifiers like Naïve Bayes</li>
  <li><strong>Discriminative</strong> classifiers like logistic regression</li>
</ul>

<hr />

<p><em>Real Life Example</em>: Twitter posts sentiment analysis</p>

<p>For posts from Twitter:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220323202111044.png" alt="image-20220323202111044" /></p>

<p>where we see “Happiness” surges around Election day and Thanksgiving. Other commonly used cases include:</p>

<ul>
  <li>
    <p>Movie: is this review positive or negative?</p>
  </li>
  <li>Products: what do people think about the new iPhone?</li>
  <li>Politics: what do people think about this candidate or issue?</li>
  <li>Used as an input/feature to other task, such as predicting market trends from sentiment</li>
  <li>etc.</li>
</ul>

<h2 id="scherer-typology-of-affective-states">Scherer Typology of Affective States</h2>

<p>Some labels you can have for affective states human have:</p>

<ul>
  <li><strong>Emotion</strong>: brief organically synchronized … evaluation of a major event
    <ul>
      <li>angry, sad, joyful, fearful, ashamed, proud, elated</li>
    </ul>
  </li>
  <li><strong>Mood</strong>: diffuse non-caused low-intensity long-duration change in subjective feeling
    <ul>
      <li>cheerful, gloomy, irritable, listless, depressed, buoyant</li>
      <li>more for <em>longer term predictions</em></li>
    </ul>
  </li>
  <li><strong>Interpersonal stances</strong>: affective stance toward another person in a specific interaction
    <ul>
      <li>friendly, flirtatious, distant, cold, warm, supportive, contemptuous</li>
      <li>used often for Social Media analysis, how users interact online between each other</li>
    </ul>
  </li>
  <li>==Attitudes==: enduring, affectively colored beliefs, dispositions towards objects or persons
    <ul>
      <li>liking, loving, hating, valuing, desiring</li>
      <li>used a lot for product reviews and ==sentiment analysis==</li>
    </ul>
  </li>
  <li><strong>Personality Traits</strong>
    <ul>
      <li>nervous, anxious, reckless, morose, hostile, jealous</li>
      <li>not very commonly used, but related to those personality test you take</li>
    </ul>
  </li>
</ul>

<p>Of course, which ones to use depends on the particular application.</p>

<h2 id="sentiment-analysis-and-attitudes">Sentiment Analysis and Attitudes</h2>

<p>Often sentiment analysis is framed as the <strong>detection of attitudes</strong>. In particular, we want to find out</p>

<ul>
  <li>
    <p><strong>Holder</strong> (source) of attitude</p>
  </li>
  <li>
    <p><strong>Target</strong> (aspect) of attitude</p>
  </li>
  <li><strong>Type</strong> of attitude
    <ul>
      <li>From a set of types: Like, love, hate, value, desire, etc.</li>
      <li>Or (more commonly) simple weighted <strong>polarity</strong>: positive, negative, neutral, together with <em>strength</em></li>
    </ul>
  </li>
  <li><strong>Text</strong> containing this attitude: which sentence/document</li>
</ul>

<p>In reality:</p>

<ul>
  <li><strong>Simplest task:</strong> Is the attitude of this text positive or negative? This will be our focus in this chapter as a ==classification task==.</li>
  <li><strong>More complex:</strong> Rank the attitude of this text from 1 to 5, i.e. include <em>strength</em></li>
  <li><strong>Advanced:</strong> all the 4 subtasks.</li>
</ul>

<h2 id="sentiment-classification">Sentiment Classification</h2>

<p>Here we take on the <strong>simplest task</strong>: Is an IMDB movie review positive or negative?</p>

<p>For instance, we could have</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Positive</th>
      <th style="text-align: center">Negative</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">When Han solo goes light speed , the stars change to bright lines, going towards the viewer in lines that converge at an invisible point .<br />Cool.</td>
      <td style="text-align: center">“snake eyes” is the most aggravating kind of movie : the kind that shows so much potential then becomes unbelievably disappointing</td>
    </tr>
  </tbody>
</table>

<p>In general, the steps we need to go through before and at classification time include:</p>

<ol>
  <li>
    <p><strong>Tokenization</strong>:</p>

    <ul>
      <li>Deal with HTML and XML markup</li>
      <li>Deal with Emoticons</li>
      <li>Deal with Twitter mark-up (names, hash tags), e.g. <code class="language-plaintext highlighter-rouge">@xxx</code></li>
    </ul>
  </li>
  <li>
    <p><strong>Feature Extraction</strong></p>

    <ul>
      <li>
        <p>Some how handle <em>negation</em>, which could flip the meaning of a sentence:</p>

\[\text{I didn’t like this movie.}\quad v.s.\quad \text{I did like this movie.}\]

        <p>one idea is to convert the former to:</p>

\[\text{I didn’t NOT\_like NOT\_this NOT\_movie}.\]

        <p>basically adding NOT to every word between negative and the following punctuation.</p>
      </li>
      <li>
        <p>Then perhaps we don’t need all words? Only need the adjectives? (It turns out using All words work better)</p>
      </li>
    </ul>
  </li>
  <li>
    <p><strong>Classification</strong> using different classifiers:</p>

\[\text{class} = \arg\max_{c_j \in C} P(C|W=w_1,...,w_n)\]

    <ul>
      <li>Naive Bayes</li>
      <li>MaxEntropy</li>
      <li>SVM</li>
    </ul>
  </li>
</ol>

<p>We will first introduce some <strong>baseline algorithms</strong> that works at least.</p>

<h3 id="baseline-multinomial-naïve-bayes">Baseline: Multinomial Naïve Bayes</h3>

<blockquote>
  <p><strong>Multinomial Naïve Bayes</strong> is essentially a Naive Bayes classifier that is able to output a class among many classes (more than two). This is essentially done by:</p>

  <ul>
    <li>(==assumption==: Naive Bayes) probabilities $P(w_i\vert c)$ are independent given the class $c$. Therefore it allows</li>
  </ul>

\[P(w_1,...,w_n|c_j) = \prod_i P(w_i|c_j)\]

  <p>hence</p>

\[c = \arg\max_{c_j \in C}  P(c_j) P(w_1,...,w_n |c_j) =\arg\max_{c_j \in C}  P(c_j)\prod_i P(w_i |c_j)\]

</blockquote>

<p>So for <strong>Naive Bayes</strong>, we consider:</p>

\[c = \arg\max_{c_j \in C} P(W|c_j)P(c_j) =\arg\max_{c_j \in C}  P(c_j)\prod_i P(w_i |c_j)\]

<p>meaning that we ==assume each word to be independently contributing to $c_j$==. Note that</p>

<ul>
  <li>
    <p>this is a generative model because this equation can be understood as:</p>

    <ol>
      <li>generate a class $P(c_j)$</li>
      <li>generate the words from the class $P(w_i\vert c_j)$</li>
    </ol>
  </li>
  <li>
    <p>in many cases Naive Bayes is a linear classifier</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220323222229514.png" alt="image-20220323222229514" style="zoom:80%;" /></p>

    <p>where you see the decision boundary for $P(c_1\vert x)=P(c_2\vert x)$ is a line.</p>
  </li>
</ul>

<p>To avoid numeric underflow, we would convert the estimate to log space:</p>

\[c_{NB} = \arg\max_{c_j \in C} \,\,\log P(c_j) + \sum_i \log P(w_i|c_j)\]

<p>But how do we ==learn== $P(c_j)$ and $P(w_i\vert c_j)$?</p>

<ul>
  <li>
    <p>learning the prior $P(c_j)$ is easy. Given $N_{doc}$ documents (e.g. posts), let $N_{c_j}$ be the number of document with sentiment class $c_j$. Then:</p>

\[\hat{P}(c_j) = \frac{N_{c_j}}{N_{doc}}\]
  </li>
  <li>
    <p>learning the likelihood means counting how often is $w_i$ associated with class $c_j$. Hence we consider:</p>

\[\hat{P}(w_i|c_j) = \frac{\text{Count}(w_i, c_j)}{\sum_{w\in V}\text{Count}(w_i, c_j)}\]

    <p>where:</p>

    <ul>
      <li>$\text{Count}(w_i, c_j)$ represent the number of times the word $w_i$ appears among all words in all documents of class $c_j$.</li>
      <li>In other words, we first concatenate all documents with class $c_j$ together, then count the number of occurrence of $w_i$.</li>
      <li>since eventually we need this for all words, $V$ presents the <strong>entire vocabulary</strong> instead of vocabulary in class $c_j$.</li>
    </ul>
  </li>
</ul>

<p>Since we are using count, consider <strong>smoothing</strong> as well for unmet $w_i,c_j$ pair:</p>

\[\hat{P}(w_i|c_j) = \frac{\text{Count}(w_i, c_j)+1}{\sum_{w\in V}\text{Count}(w_i, c_j)+1}=\frac{\text{Count}(w_i, c_j)+1}{\text{Count(total words in $c_j$)}+|V|}\]

<p>which is ==critically needed== as the likelihood term is a multiplication.</p>

<ul>
  <li>for <strong>OOV words</strong>, we can use the technique introduced before by inducing <code class="language-plaintext highlighter-rouge">OOV</code> vocab in the training set. However, for Naive Bayes, it is more common to ==ignore those words completely== (as if you didn’t see it)</li>
  <li>other processing step include <strong>removing stop words</strong> such as <code class="language-plaintext highlighter-rouge">a</code> and <code class="language-plaintext highlighter-rouge">the</code> for both train and test sets. Though the performance gain from this is not significant.</li>
</ul>

<p>Therefore, the algorithm for learning is</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220323211934552.png" alt="image-20220323211934552" style="zoom:67%;" /></p>

<p>Then for testing, we simply perform:</p>

\[\hat{c} = \arg\max_{c_j \in C}  P(c_j)\prod_i P(w_i |c_j)\]

<p>Hence the algorithm for test is</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220323212120485.png" alt="image-20220323212120485" style="zoom:80%;" /></p>

<hr />

<p><em>Example</em></p>

<p>We’ll use a sentiment analysis domain with the <strong>two classes positive (+) and negative (-).</strong> The train and test set is provided below</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220323223034920.png" alt="image-20220323223034920" style="zoom:67%;" /></p>

<p>What are the parameters $P(c_j)$ and $P(w_i\vert c_j)$ in this case?</p>

<ul>
  <li>
    <p>the prior $P(c_j)$ is simply counts:</p>

\[P(-) = \frac{3}{5},\quad P(+) = \frac{2}{5}\]
  </li>
  <li>
    <p>then the smoothed likelihood essentially is</p>

\[\hat{P}(w_i|c_j) = \frac{\text{Count}(w_i, c_j)+1}{\sum_{w\in V}\text{Count}(w_i, c_j)+1}=\frac{\text{Count}(w_i, c_j)+1}{\text{Count(total words in $c_j$)}+|V|}\]

    <p>where $\vert V\vert =20$ and we see that $\text{Count(total words in$+$)}=14$ and $\text{Count(total words in$-$)}=9$. Hence some examples:</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220323223909939.png" alt="image-20220323223909939" style="zoom:67%;" /></p>

    <p>and the rest is trivial.</p>
  </li>
</ul>

<p>For estimation, first we realize that the word <em>with</em> is OOV. Hence we ignored it as we are doing Naive Bayes. Then we are basically predicting $\text{“Prediction no fun”}$:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220323224008083.png" alt="image-20220323224008083" style="zoom:67%;" /></p>

<p>hence the result is $-$ as it has a higher probability.</p>

<h3 id="improvements-from-baseline">Improvements From Baseline</h3>

<p>While standard naive Bayes text classification can work well for sentiment analysis, some small changes are generally employed that improve performance.</p>

<ul>
  <li>
    <p>does the $\text{Count}(w_i,c_j)$ really matters? Maybe all it matters is that fact that it <strong>occurred</strong> in $c_j$ document at least once!</p>
  </li>
  <li>
    <p>dealing with <strong>negation</strong> improves Naive Bayes accuracy as well:</p>

\[\text{I didn’t like this movie.}\quad v.s.\quad \text{I did like this movie.}\]

    <p>notice that the negation of <em>didn’t</em> completely changed $P(\text{like}\vert c_j)$, for instance. The baseline that deals with this is mentioned before by converting them to</p>

\[\text{I didn’t NOT\_like NOT\_this NOT\_movie}.\]

    <p>where newly formed words such as $\text{NOT_like}$ will be treated as a word.</p>
  </li>
  <li>
    <p><strong>insufficient labeled training data</strong> to train accurate naive Bayes classifiers using all words in the training set. In those cases we will have to derive word features (e.g. labelled emotion carried in a word) using <strong>sentiment lexicons</strong>. Some popular ones online include:</p>

    <ul>
      <li>
        <p>General Inquirer, LIWC, The Opinion Lexicon, MPQA</p>
      </li>
      <li>
        <p>example of annotated words from MPQA include:</p>

\[+ : admirable, \,\,beautiful, \,\,confident, \,\,dazzling, \,\,ecstatic,\,\, favor,\,\, glee,\,\, great\\
- : awful,\,\, bad,\,\, bias,\,\, catastrophe, \,\,cheat, \,\,deny,\,\, envious,\,\, foul,\,\, harsh, \,\,hate\]

        <p>A common way to use lexicons in a naive Bayes classifier is to add a feature that is counted whenever a word from that lexicon occurs.</p>
      </li>
    </ul>
  </li>
</ul>

<p>Here we will go over details on how to implement the Binary NB variant.</p>

<blockquote>
  <p>If we believe that word <strong>occurrence</strong> may matter more than word frequency: then we can do “Binary Naive Bayes”, which clips all the word counts in <strong>each document</strong> at $1$. (i.e. it’s like a Boolean switch for each word)</p>

  <ul>
    <li>
      <p>this results in <strong>binary multimodal naive Bayes</strong>, or binary NB</p>
    </li>
    <li>
      <p>in practice this seems to be true, that performance is better.</p>
    </li>
  </ul>
</blockquote>

<p>In algorithm, basically you can <strong>first reduce all duplicate words ==in each document== to one occurrence</strong>, and then perform the same algorithm.</p>

<p>For example:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Raw Naive Bayes</th>
      <th style="text-align: center">Boolean Naive Bayes</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220323212718953.png" alt="image-20220323212718953" style="zoom:67%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220323212725092.png" alt="image-20220323212725092" style="zoom:67%;" /></td>
    </tr>
  </tbody>
</table>

<p>where the highlighted words are duplicates <strong>within the document</strong>. Hence the counts become:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220323212755987.png" alt="image-20220323212755987" style="zoom:80%;" /></p>

<p>Then for testing, the we <strong>do not remove words</strong> as this is just for making the probability work better.</p>

<h3 id="problems-in-sentiment-classification">Problems in Sentiment Classification</h3>

<p>Some cases where Naive Bayes’ assumption essentially <strong>fails</strong>:</p>

<ul>
  <li>
    <p><strong>Subtlety</strong> in words: each word itself is neutral, but overall there is a sentiment:</p>

    <p>“<em>If you are reading this because it is your darling fragrance, please wear it at home exclusively, and tape the windows shut.</em>”</p>
  </li>
  <li>
    <p><strong>Thwarted Expectations and Ordering Effects:</strong> where words such as <em>However</em> would suddenly change the sentiment</p>

    <p>“<em>This film should be brilliant. It sounds like a great plot, the actors are first grade, and the supporting cast is good as well, and Stallone is attempting to deliver a good performance. <strong>However, it can’t hold up.</strong></em>”</p>
  </li>
</ul>

<p>In those cases just modelling $P(w_i\vert c_j)$ won’t work. Neural Models that remember/see contexts would work better.</p>

<h2 id="polarity-in-sentiment-analysis">Polarity in Sentiment Analysis</h2>

<p>Here, the idea is that each <strong>word/phrase</strong> themselves could have polarity, meaning that they themselves <strong>could be indicative of the sentiment of the sentence/document.</strong></p>

<blockquote>
  <p><strong>Polarity</strong> is float which lies in the range of $[-1,1]$ where $1$ means positive statement and $-1$ means a negative statement.</p>
</blockquote>

<p>Some simple measurement of such is to consider:</p>

<ul>
  <li>==how likely each word== is to ==appear in each sentiment class== (discussed here)</li>
  <li>use some form of embedding, which could be learnt in a Word2Vec approach</li>
</ul>

<p>For instance, consider the polarity of the word “<em>bad</em>”:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220328202939691.png" alt="image-20220328202939691" style="zoom:50%;" /></p>

<p>where</p>

<ul>
  <li>each category $c$ would represent the word “<em>bad</em>” appearing in a 1-star, 2-star, 3-star review, etc</li>
  <li>notice that even in 10-star comments, we still see the word “<em>bad</em>” quite often. This could happen due to ==negations==.</li>
</ul>

<p>Then, since we have the counts, we can compute the likelihood</p>

\[P(w|c) = \frac{\text{Count}(w,c)}{\sum_{w}\text{Count}(w,c)}\]

<p>where $c$ would represent 1-star, 2-star, … Then we could <strong>scale</strong> it so it is <strong>comparable between words</strong></p>

\[\frac{P(w|c)}{P(w)}\]

<p>for $P(w)$ would be a the probability of observing the word at all.</p>

<hr />

<p><em>Exmaple</em>: Polarity of each word in IMDB</p>

<p>Plotting the scaled likelihood for some common words in the 1-10 star IMDB reviews look like:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220328203514745.png" alt="image-20220328203514745" style="zoom: 25%;" /></p>

<p>where:</p>

<ul>
  <li>notice that “<em>good</em>” looks relatively flat across ratings (perhaps due to negations). This means “<em>good</em>” is ==not a good indicator== for positive sentiment/rather <strong>neutral polarity</strong>.</li>
  <li>words such as “<em>great</em>” and “<em>excellent</em>” would be a better “metric” for the positive rating of the movie/positive polarity.</li>
  <li>words such as “<em>somewhat</em>” and “<em>fairly</em>” are attenuators as they most happen in th middle of the rating; they dampen extremely positive/negative reviews</li>
  <li>the upshot is that even seemingly positive/negative words <strong><em>could</em> happen in all contexts</strong></li>
</ul>

<h3 id="logical-negation-and-polarity">Logical Negation and Polarity</h3>

<blockquote>
  <p>Is <strong>logical negation</strong> (no, not) associated with negative sentiment? (we know there are problematic cases such as “I don’t hate this movie” is a positive review with double negative.)</p>
</blockquote>

<p>In general, there are <strong>slightly more negation in negative sentiments</strong>. For word such as “<em>no/not</em>”, the plot looks like:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220328163202281.png" alt="image-20220328163202281" style="zoom:50%;" /></p>

<p>where notice that:</p>

<ul>
  <li>the scaled likelihood is slightly higher for low ratings for negation word such as “<em>no/not</em>”</li>
  <li>so even if we have double negatives such as “I don’t hate this movie”, this is still a useful feature</li>
</ul>

<h2 id="learning-sentiment-lexicons">Learning Sentiment Lexicons</h2>

<p>Here we consider the case that you want to have some sort of word polarity for your domain task, <strong>but there is no dataset with lexicons and ratings</strong> so that you cannot really know which words are more positive/negative.</p>

<ul>
  <li>e.g. maybe dealing with a academic domain, where polarity of words would be different from well-established datasets such as movie reviews</li>
</ul>

<blockquote>
  <p>Can we use a few hand-built patterns/lexicons to <strong>bootstrap and build a larger lexicon list</strong>?</p>

  <ul>
    <li>more lexicons learnt means your model could be more robust to test set</li>
    <li>useful for domain transfer</li>
  </ul>
</blockquote>

<p>The general idea/a simple rule:</p>

<ul>
  <li>adjectives conjointed by “<em>and</em>” tend to have same/similar polarity. e.g. “<em>fair and legitimate</em>”</li>
  <li>adjectives conjointed by “<em>but</em>” tend to have different polarity. e.g. <em>fair but brutal</em></li>
</ul>

<p>Then, we can consider some kind of program that does:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220328163454985.png" alt="image-20220328163454985" style="zoom: 50%;" /></p>

<p>where seeds are the <strong>hand-built small lexicon list</strong> you made. Now, the question become:</p>

<blockquote>
  <p>Where do you find similar/different words? Use a database or search engine!</p>
</blockquote>

<p><em>Example</em>:</p>

<ol>
  <li>
    <p>Start with a labelled seed set of words. For instance a <strong>labelled seed set of 1336 adjectives</strong> such that:</p>

    <ul>
      <li>there are 675 <strong>positive</strong> ones: <em>adequate, central, clever, etc.</em></li>
      <li>there are 679 <strong>negative</strong> ones: <em>contagious, drunken, ignorant, etc</em></li>
    </ul>
  </li>
  <li>
    <p>Then we can find similar words from a database/a search engine by <strong>conjoining with <em>“and”</em></strong>:</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220328163757433.png" alt="image-20220328163757433" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>However, words might appear in many pairs. For instance, we could have a “<em>fair and nice</em>”, and but possibly <em>“fair and corrupt”</em> as well.</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220328164217042.png" alt="image-20220328164217042" style="zoom: 33%;" /></p>

    <p>Therefore, from the <strong>seed set</strong>, we can train a supervised classifier to assign a <strong>polarity similarity score</strong> to a given pair of word.</p>
  </li>
  <li>
    <p>Then we can determine the cluster by:</p>

    <ul>
      <li>for any two pair, if unknown polarity similarity, use the trained classifier</li>
      <li>closer polarity words are grouped/clustered together</li>
    </ul>

    <p>Hence we would arrive at:</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220328205610887.png" alt="image-20220328205610887" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>Output the clusters and words inside it</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220328164411821.png" alt="image-20220328164411821" style="zoom:33%;" /></p>

    <p>note that of course we can get errors.</p>
  </li>
</ol>

<h3 id="turney-algorithm">Turney Algorithm</h3>

<p>Notice the above is a semi-supervised approach to learn a lexicon list with polarity. Then with those polarity, we could potentially use to classify sentiment of documents containing those words.</p>

<p>However, is there are way to do it in a <strong>unsupervised</strong> approach?</p>

<blockquote>
  <p><strong>Unsupervised</strong> classificaiton of reviews! Done by:</p>

  <ol>
    <li><strong>Extract</strong> a phrasal lexicon from reviews (following some pre-defined rules)</li>
    <li><strong>Learn polarity</strong> of each phrase (by co-occurance with words such as “<em>excellent</em>” and “<em>poor</em>” )</li>
    <li>Rate a review by the <strong>average</strong> polarity of its phrases</li>
  </ol>
</blockquote>

<p>For computation and simplicity, we only extract <strong>two-word phrases</strong> with <strong>adjectives</strong>. Then, the algorithm does</p>

<ol>
  <li>
    <p>First we extract the phrases. We extract two-word phrases that satisfy the following POS tags:</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220328164637033.png" alt="image-20220328164637033" style="zoom:33%;" /></p>

    <p>note that RB, RBR, RBS are the comparitive/superlative form of <strong>adjectives</strong> JJ.</p>
  </li>
  <li>
    <p>Then we need to know the <strong>polarity of phrase</strong>. We hypothesize that:</p>

    <ul>
      <li>Positive phrases co-occur more with “<em>excellent</em>”</li>
      <li>Negative phrases co-occur more with “<em>poor</em>”</li>
      <li>the choice of the two words should at least come from the graphs in section <a href="#Polarity in Sentiment Analysis">Polarity in Sentiment Analysis</a></li>
    </ul>

    <p>We can measure the <strong>co-occurance</strong> by PMI, which comes from a co-occurance matrix. Recall that it is a measure of <strong>how often two events $x$ and $y$ occur together</strong>, compared with what we would expect if they were <strong>independent</strong>:</p>

\[I(x,y) = \log_2\left(\frac{P(x,y)}{P(x)P(y)}\right)\]

    <p>Hence, the <strong>pointwise mutual information</strong> between a target word $w$ and a context word $c$ (for ==some window size such as 7==) is then defined as:</p>

\[\text{PMI}(w,c) = \log_2\left(\frac{P(w,c)}{P(w)P(c)}\right)\]

    <p>for probabilities can be estimated with <strong>word-context matrix</strong>, we consider target words $w$ and context $c$. In this case, we don’t really care about context but rather how often $w$ appears with “<em>excellent</em>” and “<em>poor</em>” as:</p>

\[\text{PMI}(w, \text{excellent}) = \log_2\left(\frac{P(w,\text{excellent})}{P(w)P(\text{excellent})}\right)\]

    <p>and similarly for “<em>poor</em>”. Then:</p>

    <ul>
      <li>
        <p>To get those <strong>counts and the co-occurance matrix</strong>, we will use the search engine:</p>

\[\hat{P}(w) = \frac{\text{hits}(w)}{N}, \quad N=\sum_w \text{hits}(w)\]

        <p>Then $\hat{P}(w_1, w_2)$ can be esitmated by:</p>

\[\hat{P}(w_1, w_2) = \frac{\text{hits}(w_1\,\, \text{Near}\,\, w_2)}{\sum_{w_1, w_2}\text{hits}(w_1\,\, \text{Near}\,\, w_2)}=\frac{\text{hits}(w_1\,\, \text{Near}\,\, w_2)}{kN}\]

        <p>for $k$ being the size of the window, i.e. being $k$ words apart. (we often drop $k$ in subsequent calculation as it is a constant)</p>
      </li>
      <li>
        <p>Finally, the PMI is therefore</p>

\[\text{PMI}(w, \text{excellent}) = \log_2\left(\frac{\text{hits}(w_1\,\, \text{Near}\,\, w_2)/N}{\text{hits}(w)\text{hits}(w_2)/N^2}\right)\]
      </li>
    </ul>

    <p>Finally, we define the polarity of a phrase by doing the ==PMI difference between “<em>excellent</em>” or “<em>poor</em>”==:</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220328165248858.png" alt="image-20220328165248858" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>Now for evaluating the <strong>polarity of a single review</strong>, we simply first compute the polarity for each extracted phrase in the review:</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220328165526774.png" alt="image-20220328165526774" style="zoom:33%;" /></p>

    <p>notice that</p>

    <ul>
      <li>“<em>true service</em>” has a low score, i.e. co-occur more often with negative word such as “<em>poor</em>”, hence indicative of bad reviews. The obvious one would be “<em>inconveniently located</em>”</li>
      <li>then the <strong>final score</strong> for the review will be the <strong>average</strong>. Here it is $0.32$, which means this review is slighltly positive.</li>
    </ul>
  </li>
</ol>

<p>Results from this algorithm on the Epinions dataset:</p>

<ul>
  <li>170 (41%) negative</li>
  <li>240 (59%) positive</li>
  <li>baseline (59%): guessing all positive</li>
  <li>Turney algorithm: 74%</li>
</ul>

<p>Note that again, this is good given that it is fully unsupervised!</p>

<h3 id="summary-on-learning-lexicon">Summary on Learning Lexicon</h3>

<p>Both the algorithm covered above share the following pattern:</p>

<ol>
  <li>start with some seed set of words, e.g. “<em>good</em>”, “<em>excellent</em>”, “<em>poor</em>”</li>
  <li>find <strong>other words</strong> that have similar polarity from some external dataset/search engine
    <ul>
      <li>using “<em>and</em>” and “<em>but</em>”</li>
      <li>using co-occurance</li>
    </ul>
  </li>
  <li>add them to lexicon</li>
</ol>

<h2 id="other-sentiment-task">Other Sentiment Task</h2>

<p><em>Recall that</em>:</p>

<p>Often sentiment analysis is framed as the <strong>detection of attitudes</strong>. In particular, we want to find out</p>

<ul>
  <li>
    <p><strong>Holder</strong> (source) of attitude</p>
  </li>
  <li>
    <p><strong>Target</strong> (aspect) of attitude</p>
  </li>
  <li><strong>Type</strong> of attitude
    <ul>
      <li>From a set of types: Like, love, hate, value, desire, etc.</li>
      <li>Or (more commonly) simple weighted <strong>polarity</strong>: positive, negative, neutral, together with <em>strength</em></li>
    </ul>
  </li>
  <li><strong>Text</strong> containing this attitude: which sentence/document</li>
</ul>

<p>In reality:</p>

<ul>
  <li><strong>Simplest task:</strong> Is the attitude of this text positive or negative? This will be our focus in this chapter as a ==classification task==.</li>
  <li><strong>More complex:</strong> Rank the attitude of this text from 1 to 5, i.e. include <em>strength</em></li>
  <li><strong>Advanced:</strong> all the 4 subtasks.</li>
</ul>

<hr />

<blockquote>
  <p>Here we discuss some approaches of identifying the <strong>target/aspect</strong> of a positive/negative review:</p>

  <ul>
    <li>target: “<em>The <strong>food</strong> was <strong>great</strong> but the <strong>service</strong> was <strong>awful</strong></em>”.</li>
    <li>aspect: automatically find out it is talking about “<em>food</em>” and “<em>service</em>”</li>
  </ul>
</blockquote>

<h3 id="finding-targetaspect-of-a-sentiment">Finding Target/Aspect of a Sentiment</h3>

<p>Some simple approaches for extracting <strong>aspects</strong> mentioned in some review:</p>

<ul>
  <li>rule-based: simple
    <ol>
      <li>find all frequenct phrases across reviews, e.g. “<em>fish tacos</em>”</li>
      <li>filter again by some rules such as “an spect should <strong>occur after a sentiment word</strong>”. e.g. we need “<em>… great fish tacos</em>” to keep “<em>fish tacos</em>” unfiltered.</li>
    </ol>
  </li>
  <li>ML based: some aspects might not be in the sentence, i.e. its <strong>meaning is hidden</strong>. e.g. “<em>… the place smells bad</em>” correspond to something like “<em>odor</em>”.
    <ol>
      <li><strong>hand-label</strong> a small corpus of reviews sentences with aspect, e.g. whether it is about “<em>food, decor, service</em>”, etc.</li>
      <li>train a classifier on it</li>
    </ol>
  </li>
</ul>

<p>Then, once you have some way to extract aspect from a sentence, consider the following pipeline:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220328170839607.png" alt="image-20220328170839607" style="zoom: 50%;" /></p>

<p>hence the general idea would be:</p>

<ul>
  <li>first do a <strong>sentence</strong> level sentiment classification</li>
  <li>from the positive/negative reviews, extract the aspects using the trained classifier</li>
  <li>hence obtain <strong>aspects level classifcation</strong>, essentially by combing the extracted aspect + whether if they are positive/negative from the sentence level</li>
</ul>

<p>For Example, results would look like:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220328214159748.png" alt="image-20220328214159748" style="zoom: 25%;" /></p>

<h2 id="explaining-sentiment-classification">Explaining Sentiment Classification</h2>

<blockquote>
  <p>Why is certain sentence clasified as positive/negative?</p>
</blockquote>

<p>Still an active research topic, some current approaches:</p>

<ul>
  <li>
    <p>we just highlight the words associated with positive/negative score</p>
  </li>
  <li>
    <p>WT5, comes form T5. It is a text-to-text model, hene it can directly genrate a <strong>text explaining</strong> why it is a positive/negative post and classifying it</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220328171519774.png" alt="image-20220328171519774" style="zoom:50%;" /></p>
  </li>
</ul>

<h2 id="summary-on-sentiment-classification">Summary on Sentiment Classification</h2>

<p>Generally modeled as <strong>simple classification</strong> or regression task</p>

<ul>
  <li>predict a binary or ordinal label</li>
</ul>

<p>Some common process/task/problems it involves:</p>

<ul>
  <li>
    <p>how to deal with <strong>negation</strong> is important</p>
  </li>
  <li>
    <p>Using all words (in <strong>naive bayes</strong>) works well for some tasks</p>

\[c = \arg\max_{c_j \in C} P(W|c_j)P(c_j) =\arg\max_{c_j \in C}  P(c_j)\prod_i P(w_i |c_j)\]
  </li>
  <li>
    <p>Finding subsets of words may help in other tasks</p>

    <ul>
      <li>
        <p>Hand-built polarity lexicons</p>
      </li>
      <li>
        <p>Use seeds and semi-supervised learning to induce lexicons</p>
      </li>
    </ul>
  </li>
  <li>
    <p>A fully unsupervised approach such as Turney’s Algorithm</p>
  </li>
</ul>

<h1 id="statistical-significance-testing">Statistical Significance Testing</h1>

<blockquote>
  <p>In building systems we often need to compare the performance of two systems. How can we know if the <strong>new system we just built is better</strong> than our old one? How <strong>certain are we</strong> if one model performend better than nother on some test set?</p>
</blockquote>

<p>Let us have:</p>

<ul>
  <li>two models we want to compare, model $A$ being the new one and $B$ being some baseline.</li>
  <li>we are interested in testing on some metric $M$, such as $F_1$ score or accurarcy.</li>
  <li>suppose we have some test set $x$ to evaluate on</li>
</ul>

<p>Obviously we could measure:</p>

\[\delta(x) = M(A,x) - M(B-x) \equiv \text{Effect Size}\]

<p>for $M(A,x)$ is the performance of model $A$ on test set $x$ using metric $M$. Of course the <strong>larger the effect size the better</strong>, but another question we usually want to ask is:</p>

<blockquote>
  <p>if $A$’s superiority over $B$ is likely to hold again if we checked another test set $x’$</p>
</blockquote>

<p>In the paradigm of statistical hypothesis testing, we test this by formalizing two hypotheses. Suppose you found $\delta(x)=0.2$, i.e. we have a $0.2$ higher e.g. accurarcy:</p>

\[H_0: \text{what you observed is just a random effect}\\
H_1: \text{it is not random. Our model is better}\]

<p>We want to show that $H_0$, the <strong>null hypothesis</strong>, has a ==low probability of happening==, so that what we observed is <strong>not</strong> random/by chance:</p>

\[\text{p-value}(x) \equiv P(\delta(X) \ge \delta(x) | H_0 \text{ is true})\]

<p>i.e. we try on some ==random== test set $X=x$ (with mean $0$) to get $\delta(x)$ again and again. If it is ==not by chance==, then $\text{p-value}(x)$ should be small.</p>

<ul>
  <li>e.g. consider playing Poker, I claim that I am a better player, so the null hypothesis is that I win by luck.</li>
  <li>then, suppose $\delta(x)$ is I win 10 “random” games in a roll. We know that $P(\delta(X) \ge \delta(x) \vert  \text{I win by luck})$ is small. Hence I can reject the null hypothesis and conclude that I am actually a better player, if $\delta(x)$ happened.</li>
</ul>

<blockquote>
  <p>Therefore, p-value gives the <strong>probability of observing a test statistic as extreme as the one observed $\delta(x)$,</strong> if the null hypothesis is true.</p>

  <p>Hence, if the p-value is small, the observed test statistic is very <strong>unlikely under the null hypothesis</strong></p>
</blockquote>

<ul>
  <li>the expected value of $\delta(X)$ over many test sets, if assuming $A$ is not better than $B$ is $\mathbb{E}_X \delta(X) = 0$ for $X$ comes from a distribution with zero mean</li>
  <li>how small should the p-value be? Often <strong>threshold</strong> such as $0.05,0.01$ is fine.</li>
</ul>

<blockquote>
  <p>How do we compute the probability needed?</p>

  <ul>
    <li>In NLP we generally don’t use parametric tests such as t-tests or ANOVAs as they make <strong>assumptions on the distributions of the test statistic</strong> (such as normality) that don’t generally hold in our cases
So in NLP we usually ==use non-parametric tests based on sampling==.</li>
  </ul>
</blockquote>

<p>Either:</p>

<ul>
  <li>if we had lots of different <strong>random test sets $x^\prime$ with mean $0$</strong> we could just measure all the $\delta(x^\prime)$ for all the $x^\prime$. This gives a distribution, from which we can compute probability of at least $\delta(x)$ happening if it is a random effect</li>
  <li>use a bootstrap test by repeatedly drawing large numbers of smaller samples <strong>with replacement</strong>, under the assumption that the sample is representative of the population.</li>
</ul>

<h2 id="the-paired-bootstrap-test">The Paired Bootstrap Test</h2>

<p>The bootstrap test (Efron and Tibshirani, 1993) can apply to any metric; from precision, recall, or F1 to the BLEU metric used in machine translation.</p>

<blockquote>
  <p>The word bootstrapping refers to repeatedly drawing large numbers of smaller samples with replacement (called bootstrap samples) from an original larger sample.</p>

  <ul>
    <li>in fact, the idea is to ==virtually create random test sets $X$== by ==sampling with replacement from a fixed test set $x$==.</li>
    <li>since this means we have $X$ with mean of $\delta(x)$, we would have to change the formula a bit</li>
  </ul>
</blockquote>

<p>Consider a tiny text classification example with a test set $x$ of $10$ documents. And suppose we have $M$ being accuracy and we have two models $A$, and $B$:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220328231849869.png" alt="image-20220328231849869" style="zoom: 67%;" /></p>

<p>where a slash means the model got it wrong. For this test set $x$, the effect size is $\delta(x)=0.2$.</p>

<p>We need to create a large distribution of test sets $X$. We can do this by:</p>

<ol>
  <li>pick a large number $b$, e.g. $b=10^5$ being the number of tests $x^{(i)}$ we want to create</li>
  <li>each test $x^{(i)}$ will have $n=10$ same as $x$. Hence we repeatedly <strong>sample $n$ times from $x$ with replacement</strong>.</li>
  <li>do until we created $x^{(b)}$</li>
</ol>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220328233452958.png" alt="image-20220328233452958" style="zoom:67%;" /></p>

<p>Now that we have the ==$b$ random test sets==, providing a sampling distribution, we can compute how likely $A$ made $\delta(x)$ by pure chance. We might naively consider:</p>

\[\text{p-value}(x) = \frac{1}{b} \sum_{i=1}^b \mathbb{1}\left( \delta(x^{(i)}) - \delta(x) \ge 0 \right)\]

<p>so that if ==p-value is low==, then $\delta(x)$ is ==not by pure chance==. However, this would be wrong as</p>

\[\text{p-value}(x) \equiv P(\delta(X) \ge \delta(x) | H_0 \text{ is true})\]

<p><strong>assumes</strong> the $X$ would yield a mean of $\delta(X)=0$. Here we would yield a $\delta(X=x)=0.2$ since it all came from the test set $x$.</p>

<p>Therefore, the correct one would be</p>

\[\begin{align*}
\text{p-value}(x) 
&amp;= \frac{1}{b} \sum_{i=1}^b \mathbb{1}\left( \delta(x^{(i)}) - \delta(x) \ge \delta(x) \right)\\
&amp;= \frac{1}{b} \sum_{i=1}^b \mathbb{1}\left( \delta(x^{(i)})  \ge 2\delta(x) \right)
\end{align*}\]

<p>So that if we have $10^5$ tests and for $47$ of them it happened that $\delta(x^{(i)})  \ge 2\delta(x)$, then it means p-value is $.0047$, i.e. it is very rare by chance. If we take a threshold of $0.01$ being significant, then we can say that this result $\delta(x)$ is statistically significant.</p>

<h1 id="information-extraction-and-ner">Information Extraction and NER</h1>

<p>structed textual document: tables</p>

<blockquote>
  <p>Transform <strong>unstructured</strong> information in a corpus of documents or web pages <strong>into a structured data</strong>, e.g. populating a relational database, to enable further processing.</p>
</blockquote>

<p>Consider receiving an email from job posting:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Raw Data/Email</th>
      <th style="text-align: center">Extracted Data</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220330162319299.png" alt="image-20220330162319299" style="zoom: 50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220330162434115.png" alt="image-20220330162434115" style="zoom: 50%;" /></td>
    </tr>
  </tbody>
</table>

<p>The task would be to <strong>extract</strong> information from some <strong>pre-defined attributes</strong> we want to extract.</p>

<ul>
  <li>i.e. givne the input, fill out the table (on the right) as much as we can</li>
  <li>notice that each extracted info is an <strong>entity</strong></li>
</ul>

<p>The general pipeline you want to consider is:</p>

<ul>
  <li><strong>named entity recognition</strong></li>
  <li><strong>relation extraction</strong></li>
  <li><strong>template filling</strong></li>
</ul>

<h2 id="named-entity-recognition">Named Entity Recognition</h2>

<blockquote>
  <p>Specific type of information extraction in which the <strong>goal is to extract formal names of particular types of entities</strong> such as people, places, organizations, etc.</p>
</blockquote>

<p>Usually this is <strong>used as a preprocessing step</strong> for some future tasks, such as the template filling task we had, or question answering. Notice that this is a task in between sequence level and token level task - it is a ==span-oriented application==.</p>

<p>Formally, given an input $x$ with $T$ tokens, $x_1,…,x_T$, a span is a continuous sequence of tokens with start $i$ and end $j$ such that $1 \le i \le j \le T$. Then in total  for all possible span length we could have:</p>

\[\frac{T(T-1)}{2}\]

<p>total possible spans. Most application literally <strong>iterate through all possible spans</strong>. Hence they often have some application-specific length limit $L$ such that $j-i &lt; L$ is required/legal span. We refer tot the set of <strong>legal span in $x$ as $S(x)$.</strong></p>

<p>An example would be</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Input</th>
      <th style="text-align: center">Output Desired</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220330163241380.png" alt="image-20220330163241380" style="zoom: 50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220330163309719.png" alt="image-20220330163309719" style="zoom:50%;" /></td>
    </tr>
  </tbody>
</table>

<p>where note that we only find NER for the three entities we care here. Hence entities such as “<em>Geneva Conventions</em>” SHOULD NOT be highlighted. Hence this task is generally not easy.</p>

<p>In general, today we have two approaches:</p>

<ul>
  <li>train a BIO tagger. This will essentially be a <strong>Seq-labelling model</strong></li>
  <li>train an end-to-end model using GPT-3. This will be a <strong>Span-based Model</strong></li>
</ul>

<h3 id="bio-based-ner">BIO-based NER</h3>

<p>Some idea for <strong>training BIO-based model</strong> would be a ==Seq-labelling model==</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Training Data</th>
      <th style="text-align: center">BIO version of Training Data</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220331153159045.png" alt="image-20220331153159045" style="zoom:50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220331153208512.png" alt="image-20220331153208512" style="zoom:50%;" /></td>
    </tr>
  </tbody>
</table>

<p>Hence this is essentially a Seq-2-Seq decoding. A fuller example would be:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220331153630932.png" alt="image-20220331153630932" style="zoom: 50%;" /></p>

<p>==TODO: CRF==   on page 178-Chapter 8</p>

<h3 id="span-based-ner">Span-based NER</h3>

<p>Some idea for <strong>training an end-to-end NN based model</strong> would be a ==span-oriented application==.</p>

<ol>
  <li>
    <p>generate <strong>representations for all the spans</strong> in the input. This often contains</p>

    <ul>
      <li>representations of the span boundaries, $h_i,h_j$ being the embeddings</li>
      <li>representation of the content in the span, $f(h_{i+1:j-1}) \to g_{ij}$
        <ul>
          <li>an example of such as function could be $f(h_{i+1:j-1}) = \bar{h}_{i+1:j-1}$ being the average</li>
        </ul>
      </li>
      <li>combine the two representation, $\text{SpanRep}<em>{ij} = [h_1;h_j;g</em>{ij}]$</li>
    </ul>

    <p>this can be done using contextualized input embeddings from the model</p>
  </li>
  <li>
    <p>then, we have a span representation $g_{ij}$ for each span in $S(x)$. Then this is a <strong>classification problem</strong> where each span in an input is assigned a class label $y$:</p>

\[y_{ij} = \text{softmax}(\text{FFNN}(\text{SpanRep}_{ij})) \in \mathbb{R^{|Y|}}\]

    <p>since most spans will not have a label, we add $y = \text{null} \cup y$ to the set of labels, and hence $\vert Y\vert =\vert y\vert +1$.</p>
  </li>
  <li>
    <p>then for <strong>decoding</strong>, take $\arg\max y_{ij}$  to get the tag.</p>
  </li>
</ol>

<blockquote>
  <p><strong>Note</strong> that some post-processing steps will need to be done to prevent overlapping classifications, as this scores all $T(T-1)/2$ spans. However, it does have a benefit as it naturally accommodate embedded named entities:</p>

  <ul>
    <li>e.g. both “<em>United Airlines</em>” and “<em>United Airlines Holding</em>” would be evaluated</li>
    <li>a BIO based tagging approach would have not looked at this.</li>
  </ul>
</blockquote>

<p>A detailed <strong>example</strong> would be:</p>

<ul>
  <li>
    <p>instead of taking average, we consider using the embeddings as</p>

\[g_{ij} = \text{SelfAttn}(h_{i:j})\]

    <p>so that the representation would be centered around the head of the phrase corresponding to the span. Then combining to get:</p>

\[\text{SpanRep}_{ij} = [h_1;h_j;g_{ij}]\]
  </li>
  <li>
    <p>finally doing the same:</p>

\[y_{ij} = \text{softmax}(\text{FFNN}(\text{SpanRep}_{ij}))\]
  </li>
</ul>

<p>Hence graphically</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220331125718227.png" alt="image-20220331125718227" style="zoom:67%;" /></p>

<p>where:</p>

<ul>
  <li>cross-entropy loss would be used</li>
</ul>

<h2 id="relation-extraction">Relation Extraction</h2>

<p>Now we have detected named entities, our next step is to <strong>discern relationships between those entities</strong>. For instance:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220331154117733.png" alt="image-20220331154117733" style="zoom:50%;" /></p>

<p>where form the highlighted part, we know that:</p>

<ul>
  <li>“<em>Tim Wagner</em>” is a spokesman for “<em>American Airlines</em>”</li>
  <li>“<em>United</em>” is a unit of “<em>UAL Corp</em>”</li>
  <li>etc.</li>
</ul>

<p>All of those are simple ==binary relationships== which fall under some generic categorization such as:</p>

<ul>
  <li>
    <p>basic <strong>3 relations</strong>: employed-by; located-at; part-of</p>
  </li>
  <li>
    <p>a more <strong>complicated 17 relations</strong> used in ACE relation extraction</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220331154420120.png" alt="image-20220331154420120" style="zoom:50%;" /></p>
  </li>
</ul>

<p>Hence, a graphical representation of what are doing now is:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220331154717302.png" alt="image-20220331154717302" style="zoom:67%;" /></p>

<p>where:</p>

<ul>
  <li>the first two steps can be done in a NER</li>
  <li>the <strong>relation</strong> can be seen as consisting of a <strong>set of ordered tuples</strong> over elements of a domain (e.g. named entities)</li>
</ul>

<h3 id="relation-extraction-algorithms">Relation Extraction Algorithms</h3>

<p>Now, we answer the question: how do we find those relations? In general, there are four main ways to do it</p>

<ul>
  <li>handwritten patterns</li>
  <li>supervised machine learning</li>
  <li>semi-supervised (via bootstrapping or distant supervision)</li>
  <li>unsupervised</li>
</ul>

<h3 id="using-patterns-to-extract-relations">Using Patterns to Extract Relations</h3>

<p>Consider the example of:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220331160956115.png" alt="image-20220331160956115" style="zoom: 67%;" /></p>

<p>where we notice that “<em>Gelidium</em>” is a hyponym of “<em>red algae</em>”, which can be identified using the following pattern</p>

\[NP_0 \text{ such as } NP_1 \{,NP_2,...,(\text{and,or})NP_i\}\]

<p>implies the relation</p>

\[\forall NP_i,i\ge 1, \text{hyponym}(NP_i, NP_0)\]

<p>which inspires pattern such as</p>

<table>
  <thead>
    <tr>
      <th>Pattern</th>
      <th>Example</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220331161313184.png" alt="image-20220331161313184" style="zoom:50%;" /></td>
      <td><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220331161322250.png" alt="image-20220331161322250" style="zoom:50%;" /></td>
    </tr>
  </tbody>
</table>

<p>but of course, with hand-crafted rules we have:</p>

<ul>
  <li>advantage of high precision as they are tailored to specific domains</li>
  <li>low recall, missing a lot</li>
  <li>not scalable</li>
</ul>

<h3 id="relation-extraction-via-supervised-learning">Relation Extraction via Supervised Learning</h3>

<p>Consider now having the</p>

<ul>
  <li><strong>input</strong> of: a fixed set of entities</li>
  <li><strong>label</strong> of: a fixed set of pre-defined relations</li>
</ul>

<p>Then approaches to make it a classification problem could be: for each possible pair, apply a <strong>multiclass classification</strong> for each class being the relation</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220331161750368.png" alt="image-20220331161750368" style="zoom: 67%;" /></p>

<p>where the <strong>feature</strong>/embeddings of the named entity $e_1,e_2$ could be:</p>

<ul>
  <li>word level embeddings of the named entity $e_i$</li>
  <li>head word embedding of the named entity</li>
  <li>encoding the named entity’s type, e.g. if it is <code class="language-plaintext highlighter-rouge">ORG</code>, or <code class="language-plaintext highlighter-rouge">PER</code></li>
  <li>number of entities in this sentence</li>
  <li>encoding some syntactic structure of the sentence</li>
  <li>etc</li>
</ul>

<p>then the architecture of the classifier could be</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220331162335505.png" alt="image-20220331162335505" style="zoom: 67%;" /></p>

<p>where notice that</p>

<ul>
  <li>
    <p>essentially using a transformer, hence using context embeddings for the content</p>
  </li>
  <li>
    <p>we also included the entire sentence to give context for the two named entities in this case</p>
  </li>
</ul>

<p>of course, this can be optimized as we can skip some pairs for certain relation as it won’t happen at at all</p>

<blockquote>
  <p>But labeling a large training set is extremely expensive and supervised models are brittle: they <strong>don’t generalize well</strong> to different text genres.</p>
</blockquote>

<p>For this reason, much research in relation extraction has focused on the semi-supervised and unsupervised approaches we turn to next.</p>

<ul>
  <li>other problem include: what if the relation set is <strong>not fixed</strong>? Then of course supervised version would not work.</li>
</ul>

<h3 id="semi-supervised-relation-extraction">Semi-supervised Relation Extraction</h3>

<p>One idea is to <strong>bootstrap</strong> more relation-labeled entity pairs from some <strong>known small sample labelled pair</strong>. For instance, suppose you want to get a <strong>relation being <code class="language-plaintext highlighter-rouge">airline/hub</code> pair</strong>, and you already have</p>

\[\text{Ryanair has a hub at Charleroi} \iff \text{[ORG] has a hub at [LOC]}\]

<p>being a known pair, you can:</p>

<ol>
  <li>
    <p>finding other mentions of this relation in our corpus</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220331163230149.png" alt="image-20220331163230149" style="zoom: 67%;" /></p>
  </li>
  <li>
    <p>use features such as context to extract <strong>general patterns</strong> such as the following</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220331163324364.png" alt="image-20220331163324364" style="zoom:67%;" /></p>

    <p>which signifies a “rule” for <code class="language-plaintext highlighter-rouge">airline/hub</code> pair</p>
  </li>
  <li>
    <p>use these new patterns can then be used to search for additional tuples.</p>
  </li>
  <li>
    <p>assign <strong>confidence</strong> values to new tuples, and add to the dataset if high confidence</p>

    <ul>
      <li>this is to <strong>avoid semantic drift</strong>. In semantic drift, an erroneous pattern leads to the introduction of erroneous tuples, which, in turn, lead to the creation of problematic patterns and the meaning of the extracted relations ‘drifts’.</li>
    </ul>
  </li>
</ol>

<p>Hence, given some seed samples that have relation $R$, we can <strong>populate this set</strong> by</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220331163657605.png" alt="image-20220331163657605" style="zoom: 67%;" /></p>

<p>Once done, apply supervised classification as mentioned above.</p>

<h3 id="unsupervised-relation-extraction">Unsupervised Relation Extraction</h3>

<blockquote>
  <p>The goal of unsupervised relation extraction is to <strong>extract relations from the web</strong> when we have no labeled training data, and not even any list of relations.</p>

  <p>This task is often called <strong>open information extraction</strong> or Open IE.</p>
</blockquote>

<p>For example, the ReVerb system (Fader et al., 2011) extracts a relation from a sentence s in 4 steps:</p>
<ol>
  <li>Run a part-of-speech tagger and entity chunker over $s$</li>
  <li>For each verb in $s$, find the longest sequence of words $w$ that start with a verb and satisfy syntactic and lexical constraints, merging adjacent matches.</li>
  <li>For each phrase $w$, find the nearest noun phrase $x$ to the left which is not a relative pronoun, wh-word or existential “<em>there</em>”. Find the nearest noun phrase $y$ to the right.</li>
  <li>Assign confidence $c$ to the relation $r = (x;w;y)$ using a confidence classifier and return it.</li>
</ol>

<h2 id="template-filling">Template Filling</h2>

<blockquote>
  <p><strong>Task</strong>: fill the slots in the associated templates with <strong>fillers</strong> extracted from the text.</p>

  <ul>
    <li>those fillers could come from text segments extracted directly from the text</li>
    <li>consist of concepts that have been inferred from text elements through some additional processing</li>
  </ul>
</blockquote>

<p>A template looks like</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220331164508528.png" alt="image-20220331164508528" style="zoom:67%;" /></p>

<p>where we have four slots.</p>

<p>The next section describes a standard <strong>sequence-labeling approach to filling slots</strong>.</p>

<h3 id="supervised-approach-to-template-filling">Supervised Approach to Template Filling</h3>

<p>We are given</p>

<ul>
  <li>training documents with text spans <strong>annotated</strong> with predefined templates and their slot fillers.</li>
  <li>note that there can be <strong>multiple different templates</strong></li>
</ul>

<p>Our goal is to</p>

<ul>
  <li>create one template for each event in the input</li>
  <li>fill in the slots with text spans.</li>
</ul>

<p>Hence this means that we can split the task to train <strong>two classifiers</strong></p>

<ol>
  <li>
    <p>==first system== decides whether the template is present in a particular sentence</p>

    <ul>
      <li>called <strong>template recognition</strong> or <strong>event recognition</strong></li>
    </ul>

    <p>Then the</p>

    <ul>
      <li><strong>input</strong> could be a <strong>sequence of words</strong>, with the usual set of features can be used: tokens, embeddings, word shapes, part-of-speech tags, syntactic chunk tags, and named entity tags.</li>
      <li><strong>output</strong> is indicating any slot from a template being detected</li>
    </ul>

    <p>Then if detected, feed that sequence of words into the second system with that detected template</p>
  </li>
  <li>
    <p>==second system== has the job of role-filler extraction.</p>

    <ul>
      <li><strong>for each role</strong> in the template, e.g. <code class="language-plaintext highlighter-rouge">LEAD-AIRLINE</code>, <code class="language-plaintext highlighter-rouge">AMOUNT</code>, etc</li>
      <li>train a <strong>binary classifier</strong> that on each possible span to decide if it  would fill in the blank</li>
    </ul>

    <p>However, this means that you would need to resolve conflicts as multiple non-identical text segments could be labeled for the same slot.</p>
  </li>
</ol>

<h2 id="ie-examples">IE Examples</h2>

<p>below contains examples over some typical datasets you would deal with.</p>

<h3 id="muc">MUC</h3>

<blockquote>
  <p>Message Understanding Conference (MUC) was an annual event/competition where results were presented.</p>
</blockquote>

<p>But since this is found by DARPA, it cares more about military related. Focused on extracting information from news articles:</p>

<ul>
  <li>
    <p>Terrorist events</p>
  </li>
  <li>
    <p>Industrial joint ventures</p>
  </li>
  <li>
    <p>Company management changes</p>
  </li>
</ul>

<h3 id="medline-corpus">Medline Corpus</h3>

<p>Contains medical related data</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Input</th>
      <th style="text-align: center">NER: Proteins</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220330164520567.png" alt="image-20220330164520567" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220330164559910.png" alt="image-20220330164559910" /></td>
    </tr>
  </tbody>
</table>

<h3 id="web-extraction">Web Extraction</h3>

<p>Another example would be <strong>web extraction</strong></p>

<ul>
  <li>because those dynamically webpages generally reads data from database, it is often a <strong>semi-structured</strong> data</li>
  <li>i.e., we want to view the webpage back as a <strong>structured table/database</strong>. An extractor for this case is often called a <strong>wrapper</strong></li>
</ul>

<p>An example would be the Amazon Book Descriptions pages:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Input Information</th>
      <th style="text-align: center">Extracted Information</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220330164859648.png" alt="image-20220330164859648" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220330164910953.png" alt="image-20220330164910953" /></td>
    </tr>
  </tbody>
</table>

<p>where note that here:</p>

<ul>
  <li>
    <p>the <strong>template could be learnt</strong> as well</p>
  </li>
  <li>
    <p>since it is from HTML, we could image many rule-based approach works equally well</p>
  </li>
</ul>

<p>e.g. using <strong>Enhanced REGEX</strong> including</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">\b</code> for word boundary</li>
  <li><code class="language-plaintext highlighter-rouge">\d</code> for a digit</li>
  <li><code class="language-plaintext highlighter-rouge">{}</code> repetition operator, e.g. <code class="language-plaintext highlighter-rouge">A{1,5}</code> means you can have one-to-five <code class="language-plaintext highlighter-rouge">A</code></li>
</ul>

<p>Some examples include (in Perl):</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">/\b(\(\d{3}\)\s?)?\d{3}-\d{4}\b/</code> for US phone number</li>
</ul>

<p>Hence for filling in each field:</p>

<ul>
  <li>
    <p>Price pattern: <code class="language-plaintext highlighter-rouge">\b\$\d+(\.\d{2})?\b</code>. However, we also need to to <strong>identify proper context</strong>.</p>

    <ul>
      <li>Pre-filler pattern: <code class="language-plaintext highlighter-rouge">&lt;b&gt;List Price:&lt;/b&gt; &lt;span class=listprice&gt;</code></li>
      <li>Post-filler pattern: <code class="language-plaintext highlighter-rouge">&lt;/span&gt;</code></li>
    </ul>

    <p>those could also be <strong>induced</strong>, e.g  by RAPIER</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220331171232523.png" alt="image-20220331171232523" style="zoom:50%;" /></p>
  </li>
  <li>
    <p>of course, for other non-html format, REGEX may not work as well hence you need to train classifiers</p>
  </li>
</ul>

<h2 id="evaluating-ie-accuracy">Evaluating IE Accuracy</h2>

<p>Consider we have a <strong>fixed template</strong> to begin with, which has $N$ slots. Then:</p>

<ul>
  <li>our model extracted $C$ correct slot/value pairs in the template</li>
  <li>extracted a total number of $E$ pairs</li>
</ul>

<p>Then we can apply</p>

<ul>
  <li>precision=$C/N$</li>
  <li>recall=$C/E$</li>
  <li>$F_1$ measure from the above</li>
</ul>

<h1 id="question-answering">Question Answering</h1>

<blockquote>
  <p>The goal of question answering is to build systems that <strong>automatically answer questions</strong> posed by humans in a natural language</p>
</blockquote>

<p>Most question answering systems focus on a particular subset of these information needs: <strong>factoid questions</strong>, questions that can be answered with simple facts expressed in short texts:</p>

<ul>
  <li>e.g. “<em>Where is the Louvre Museum located?</em>”</li>
</ul>

<p>In general, the two common paradigms that solve this task are</p>

<ul>
  <li><strong>Information-retrieval (IR) based QA</strong>, sometimes called <strong>open domain QA</strong>, which relies on the vast amount of text on the web:
    <ol>
      <li>Given a user question, perform pre-processing of the question including tokenization/normalization</li>
      <li>information retrieval is used to <em>find relevant passages</em>, i.e. find documents that contain an answer
        <ul>
          <li>using cosine similarity of some vector representation of the query and documents you have</li>
        </ul>
      </li>
      <li>Then neural <strong><em>reading comprehension</em></strong> algorithms read these retrieved passages</li>
      <li>Draw the answer as a <em>span of text</em> from the passage (like SAT, GRE exams)</li>
    </ol>
  </li>
  <li><strong>knowledge-based question answering</strong>, which
    <ol>
      <li>builds a semantic representation of the query</li>
      <li>These meaning representations are then used to <strong><em>query databases of facts</em></strong></li>
    </ol>
  </li>
</ul>

<blockquote>
  <p><strong>Bonus</strong>: for large pretrained language models (i.e. on next word prediction), they can sometimes <em>directly answer the question</em>. This work because huge pretrained language models have already encoded a lot of factoids</p>
</blockquote>

<h2 id="information-retrieval">Information Retrieval</h2>

<blockquote>
  <p><strong>Information retrieval</strong> or IR is the name of the field encompassing the retrieval of all manner of media based on user information needs. The resulting IR system is often called a <strong>search engine</strong>.</p>
</blockquote>

<p>In particular, the IR we consider is called <strong>ad hoc retrieval</strong>, which:</p>

<ul>
  <li>a user poses a <strong>query</strong> to a retrieval system</li>
  <li>we output an <strong>ordered set of documents</strong> from some collection</li>
</ul>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220404202909433.png" alt="image-20220404202909433" style="zoom: 50%;" /></p>

<p>where:</p>

<ul>
  <li>A <strong>document</strong> refers to whatever unit of text the system indexes and retrieves (web pages, scientific papers, etc)</li>
  <li>A <strong>term</strong> refers to a word in a collection, but it may also include phrases</li>
  <li>the vector hence can be a TF-IDF vector or a bag of words. Then we can measure similarity for ranking.</li>
</ul>

<h3 id="term-weighting-and-document-scoring">Term weighting and document scoring</h3>

<p>Recall that if we use TF-IDF</p>

<blockquote>
  <p><strong>TF-IDF</strong> essentially consist of two components:</p>

  <ul>
    <li><strong>term frequency</strong> in log, essentially captures the frequency of words occurring in a document (i.e. the word-document matrix)</li>
    <li><strong>inverse document frequency</strong>, essentially giving a <strong>higher weight</strong> to words that occur <strong>only in a few documents</strong> (i.e. they would carry important discriminative meanings)</li>
  </ul>
</blockquote>

<p>The <strong>term frequency</strong> in a document $d$ is computed by:</p>

\[\text{tf}(t,d) = \log_{10}(\text{count}(t,d) + 1)\]

<p>where:</p>

<ul>
  <li>we added $1$ so that we won’t do $\log 0$, which is negative infinity</li>
</ul>

<p>The <strong>document frequency</strong>  of a term $t$ is the number of documents it occurs in.</p>

<ul>
  <li>note that this is different from <strong>collection frequency</strong> of a term, which is the total number of times the word appears in any document of the whole collection</li>
</ul>

<p>For example: consider in the collection of Shakespeare’s 37 plays the two words <em>Romeo</em> and <em>action</em></p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220210001201947.png" alt="image-20220210001201947" style="zoom:50%;" /></p>

<p>Therefore, we want to <strong>emphasize discriminative</strong> words like Romeo via the <strong>inverse document frequency</strong> or IDF term weight:</p>

\[\text{idf}(t) = \log_{10}\left( \frac{N}{\text{df}(t) } \right)\]

<p>where:</p>

<ul>
  <li>apparently $\text{df(t)}$​ is the <strong>number of documents</strong> in which term $t$ occurs and $N$ is the total number of documents in the collection</li>
  <li>so essentially, the fewer documents in which a term occurs, the higher this weight.</li>
  <li>
    <p>notice that we don’t need $+1$ here because the minimum document frequency of a word in your corpus would be $1$</p>
  </li>
  <li>again, because the number could be large, we use a $\log$.</li>
</ul>

<p>Here are some IDF values for some words in the Shakespeare corpus</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220210001906935.png" alt="image-20220210001906935" style="zoom: 50%;" /></p>

<p>Finally, the TF-IDF basically then does:</p>

\[\text{TF-IDF}(t,d) = \text{tf}(t,d) \times \text{idf}(t)\]

<p>An example would be:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220210002036715.png" alt="image-20220210002036715" style="zoom: 67%;" /></p>

<p>where notice that:</p>

<ul>
  <li>essentially it is <strong>still a term-document matrix</strong>, but it is <strong>weighted by IDF</strong>.</li>
  <li>notice that because $\text{idf(good)}=0$​, the row vector for <em>good</em> becomes all zero: this word appears in every document, the tf-idf weighting leads it to be ignored (as it is not very informative anymore)</li>
</ul>

<h3 id="document-scoring">Document Scoring</h3>

<p>Then, the above provide a way to <strong>represent a document by a vector</strong> (vertically). Then essentially:</p>

<ul>
  <li>
    <p>encode document $d$ to vector $\vec{d}$</p>
  </li>
  <li>
    <p>encode query $q$ to vector $\vec{q}$</p>
  </li>
  <li>
    <p>measure similarity as score:</p>

\[\text{score}(q,d) = \cos (\vec{q},\vec{d}) = \frac{\vec{q}\cdot \vec{d}}{|\vec{q}||\vec{d}|}\]
  </li>
</ul>

<p>However, since <strong>most queries are short and contain unique words</strong>, we want to approximate this by:</p>

\[\begin{align*}
\text{score}(q,d) 
&amp;= \frac{\vec{q}}{|\vec{q}|}\frac{\vec{d}}{|\vec{d}|}\\
&amp;= \sum_{t \in q} \frac{\text{tf-idf}(t,q)}{\sqrt{\sum_{t'\in q}\text{tf-idf}(t',q)^2}} \cdot \frac{\text{tf-idf}(t,d)}{\sqrt{\sum_{t'\in d}\text{tf-idf}(t',d)^2}}\\
&amp;\approx \sum_{t \in q}  \frac{\text{tf-idf}(t,d)}{\sqrt{\sum_{t'\in d}\text{tf-idf}(t',d)^2}}\\
&amp;= \sum_{t \in q} \frac{\text{tf-idf}(t,d)}{|\vec{d}|}
\end{align*}\]

<p>where the third approximation comes from:</p>

<ul>
  <li>
    <p>since we assume sparse query and unique words, hence</p>

\[\text{TF-IDF}(t,q) = \text{tf}(t,q) \times \text{idf}(t)\approx \text{idf}(t)\]

    <p>as term frequency is approximately one</p>
  </li>
  <li>
    <p>then the inverse document frequencies will be a constant for each document $d$, hence $\vert \vec{q}\vert$ will not affect ranking</p>
  </li>
</ul>

<hr />

<p><em>For Example</em>: Consider utilizing the above to rank the following query/document</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220404204729668.png" alt="image-20220404204729668" style="zoom:50%;" /></p>

<p>then, we first compute the TF-IDF like a <strong>term-document matrix</strong></p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220404204951658.png" alt="image-20220404204951658" style="zoom:50%;" /></p>

<p>where as an example, we see that document 2 which is “<em>Sweet sorrow</em>” has:</p>

<ul>
  <li>
    <p>term frequency of only those two words appearing once, then TF is computed by</p>

\[\text{tf}(t,d) = \log_{10}(\text{count}(t,d) + 1)=\log_{10}(1+1) = \log_{10}(2)\]

    <p>for both word</p>
  </li>
  <li>
    <p>document frequency of “<em>sweet</em>” appears in <strong>three of the collection of documents</strong>, and “<em>sorrow</em>” only appeared here hence a count of one.</p>
  </li>
</ul>

<p>Finally, we use this forumula to compute similarity by <strong>iterating through words in the query</strong></p>

\[\sum_{t \in q} \frac{\text{tf-idf}(t,d)}{|d|}\]

<p>which basically iterates over the word “<em>sweet</em>” and then “<em>love</em>”, hence we get:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220404205323421.png" alt="image-20220404205323421" style="zoom: 50%;" /></p>

<blockquote>
  <p><strong>Note</strong> that in this formula, if ==document $d$ contains none of the words in query $q$, then it will have a score of zero==. This is why we needed the <strong>inverted index</strong> to quickly filter documents and only get the ones containing terms in $q$.</p>
</blockquote>

<hr />

<p>In the previous example, we have included <strong>preprocessing steps</strong> such as:</p>

<ul>
  <li>remove punctuations and convert to lower case</li>
  <li>(deprecated) remove high-frequency words (e.g. <strong>stop words</strong>) from both the query and document before representing them</li>
</ul>

<p>where the latter is no longer used as it is partly handled by the TF-IDF weighting already and it could make query such as “<em>to be or not to be</em>” to be reduced to “<em>not</em>”, which makes IR hard.</p>

<h3 id="inverted-index">Inverted Index</h3>

<p>As mentioned before, In order to compute scores, we need to efficiently <strong>find documents that contain words in the query</strong>.</p>

<blockquote>
  <p>The basic search problem in IR is thus to find all documents $d \in C$ a collection that contain a term $q\in Q$ a query.</p>
</blockquote>

<p>An inverted index basically maps each word to <strong>indices of documents $d$</strong> that contains the word. For instance, consider the same example as before</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Text</th>
      <th style="text-align: center">Example TF-IDF</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220404204729668.png" alt="image-20220404204729668" style="zoom: 67%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220404210338771.png" alt="image-20220404210338771" style="zoom: 50%;" /></td>
    </tr>
  </tbody>
</table>

<p>The idea is to establish an <strong>index of all words in our database</strong>, and we get</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220404210357269.png" alt="image-20220404210357269" style="zoom: 67%;" /></p>

<p>where:</p>

<ul>
  <li>each word containing its <strong>document frequency</strong> in ${}$, which is the same as the ones computed in previous example</li>
  <li>a <strong>pointer</strong> to a postings list that contains document IDs and term counts in $[]$.
    <ul>
      <li>e.g. the word “<em>nurse</em>” appeared in document ID 1 and 4, each once.</li>
    </ul>
  </li>
</ul>

<p>Then, with this structure, we can:</p>

<ul>
  <li>given a list of terms in query</li>
  <li>very efficiently get lists of all candidate documents <strong>and</strong> together with the TF and DF values, hence easily compute the scores.</li>
</ul>

<h3 id="ir-with-dense-vectors">IR with Dense Vectors</h3>

<p>The score and hence collection of document returned using TF-IDF heavily depended us to have <strong>overlapping words in the document</strong>.</p>

<blockquote>
  <p>In other words, the user posing a query (or asking a question) needs to <strong>guess exactly what words</strong> the writer of the <strong>answer</strong> might have used to discuss the issue.</p>

  <ul>
    <li>e.g. we want to search for “<em>tragic love story</em>” but Shakespeare writes instead about “<em>star-crossed lovers</em>”.</li>
  </ul>

  <p>This is called the <strong>vocabulary mismatch problem</strong></p>
</blockquote>

<p>Therefore, the solution is to find a representation that can handle ==synonymy==: instead of (sparse) word-count vectors, ==using (dense) embeddings==, e.g. encoders like BERT.</p>

<p>In fact, in what is sometimes called a <strong>bi-encoder</strong> we use two separate encoder models $\text{BERT}_Q, \text{BERT}_D$:</p>

<ul>
  <li>
    <p>one to <strong>encode the query</strong> $q$</p>

\[h_q = \text{BERT}_Q(q)[\text{CLS}]\]

    <p>where since we ==need a single vector==, we take the embedding of the $[\text{CLS}]$ token which encodes all information of the sequence</p>
  </li>
  <li>
    <p>one to <strong>encode the document $d$</strong></p>

\[h_d = \text{BERT}_D(d)[\text{CLS}]\]
  </li>
  <li>
    <p>use the dot product between these two vectors as the score</p>

\[\text{score}(d,q) = h_d \cdot h_q\]
  </li>
</ul>

<p>Hence graphically</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220404211226917.png" alt="image-20220404211226917" style="zoom:50%;" /></p>

<hr />

<p>Some challenges in this area is:</p>

<ul>
  <li>Among the many areas of active research are <strong>how to do the fine-tuning</strong> of the encoder modules on the IR task</li>
  <li>Efficiency is also an issue. For TF-IDF version we had inverted index which allowed us to quickly rank documents. But here, with <strong>dense vectors we need a Nearest Neighbor search</strong>, which is inefficient.
    <ul>
      <li>Modern systems therefore make use of approximate nearest neighbor vector search algorithms like ==Faiss==</li>
    </ul>
  </li>
</ul>

<h2 id="ir-based-factoid-qa">IR-Based Factoid QA</h2>

<p>Finally, we come back to <strong>how to perform QA task using IR</strong>.</p>

<blockquote>
  <p>The goal of IR-based QA (sometimes called open domain QA) is to answer a user’s question by</p>

  <ol>
    <li>finding a <strong>related document</strong> among the web or some other large collection of documents. (IR task)</li>
    <li>finding <strong>short text segments</strong> from the selected related documents (what we are doing here)</li>
  </ol>
</blockquote>

<p>Some examples of what we need to do include:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220404212126291.png" alt="image-20220404212126291" style="zoom:50%;" /></p>

<p>Therefore the dominant paradigm implementation basically includes two steps:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220404212600688.png" alt="image-20220404212600688" style="zoom:67%;" /></p>

<p>which is essentially a ==retrieve and read model==</p>

<ol>
  <li>use <strong>retriever</strong> to retrieve relevant passages from a text collection, usually using a search engines
    <ul>
      <li>this we have discussed before in IR, e.g. use Dense Vectors for embedding</li>
    </ul>
  </li>
  <li>a neural <strong>reading comprehension</strong> algorithm passes over each passage and ==finds spans that are likely to answer the question==
    <ul>
      <li>given the query $q$ and a sample passage $p$ that could contain the answer</li>
      <li>return an answer $s$ or perhaps declare there is no answer</li>
      <li>hence here it becomes a <strong>close domain QA</strong> as we only have a fixed set of selected documents to look at</li>
    </ul>
  </li>
</ol>

<p>For the above to work, we will need a few components in the pipeline (we have already discussed the retriever in IR):</p>

<ul>
  <li>datasets for reading comprehension</li>
  <li>how to make a neural reader</li>
</ul>

<h3 id="ir-based-qa-datasets">IR-based QA: Datasets</h3>

<p>Our aim is to <strong>train a reading comprehension systems</strong>, so that given a passage and a question, and predicts a span in the passage as the answer. Therefore, we consider <strong>comprehension datasets</strong> containing tuples of <em>(passage, question, answer)</em>.</p>

<ul>
  <li><strong>Stanford Question Answering Dataset (SQuAD)</strong>, consists of passages from Wikipedia and associated questions whose answers are spans from the passage</li>
  <li>Squad 2.0 in addition adds some questions that are designed to be unanswerable</li>
</ul>

<p>Examples look like:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220404213333825.png" alt="image-20220404213333825" style="zoom:50%;" /></p>

<p>However, those datasets are often constructed by having annotators first read the passage, then construct QAs. This could make the questions easier. Hence, we also attempted to make datasets from <strong>questions that were not written with a passage in mind</strong>.</p>

<ul>
  <li>
    <p><strong>TriviaQA dataset</strong> resulting in 650K question-answer-evidence triples</p>
  </li>
  <li>
    <p>etc.</p>
  </li>
</ul>

<h3 id="ir-based-qa-reader">IR-based QA: Reader</h3>

<p>The retriever have now found a couple of relevant documents. Hence</p>

<blockquote>
  <p>The <strong>reader’s</strong> job is to take a passage and a question as input and <strong>produce the answer</strong>.</p>

  <ul>
    <li>In the <strong>extractive QA</strong> we discuss here, the answer is a <strong>span of text</strong> in the passage</li>
    <li>(skipped )more difficult task of <strong>abstractive QA</strong>, in which the system can write an answer which is not drawn exactly from the passage.</li>
  </ul>
</blockquote>

<p>For example:</p>

<ul>
  <li>given a question like <em>“How tall is Mt. Everest?”</em> and a passage that contains the clause <em>“Reaching 29,029 feet at its summit, a reader will output 29,029 feet.”</em></li>
  <li>output “<em>29,029 feet.</em>”</li>
</ul>

<blockquote>
  <p>Then this is a <strong>span-labelling task</strong> (e.g. <a href="#Span-based NER">Span-based NER</a>), i.e. we <strong>output a span</strong> that we think constitutes the answer</p>

  <ul>
    <li>given a question $q$ of $n$ tokens, $q_1,…,q_n$, and a passage $p$ of $m$ tokens that could contain the answer $p_1,…,p_m$</li>
    <li>return $p(a\vert q,p)$ for each span $a \in S(p)$ a set of possible spans in $p$</li>
  </ul>
</blockquote>

<p>Alike NER, we would need to score all possible spans, but we can make a <strong>assumption/simplification</strong> that</p>

\[P(a|q,p) = P_{start}(a_s|q,p)P_{end}(a_e|q,p)\]

<p>for basically $P_{start}(i\vert q,p)$ means token $p_i$ is the start of the span, and similarly for $P_{end}(j\vert q,p)$. How do we model such a probability? A standard baseline would be using BERT</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220404215201459.png" alt="image-20220404215201459" style="zoom:67%;" /></p>

<p>where:</p>

<ul>
  <li>
    <p>since we are conditioned on $q,p$, we pass <strong>both as input to the encoder</strong></p>
  </li>
  <li>
    <p>we add two new special vectors: a <strong>span-start embedding $S$</strong> and <strong>a span-end embedding $E$</strong>, which will be learned in fine-tuning so that</p>

\[P_{start}(i|q,p) = \text{Softmax}(S \cdot \vec{p}_i') = \frac{\exp(S \cdot \vec{p}_i')}{\sum_j \exp(S \cdot \vec{p}_j')}\]

    <p>where the embedding vector $\vec{p}_i’$ of token $p_i$ would have already contained information from $q$. Similarly</p>

\[P_{end}(i|q,p) = \text{Softmax}(E \cdot \vec{p}_i') = \frac{\exp(E \cdot \vec{p}_i')}{\sum_j \exp(E \cdot \vec{p}_j')}\]
  </li>
  <li>
    <p>then, the training objective would be  maximizing the probability of correct start and end positions, hence minimizing negative log likelihood:</p>

\[L = -\log P_{start}(i^*|q,p) - \log P_{end}(j^*|q,p)\]

    <p>where $i^<em>, j^</em>$ are the gold labels.</p>
  </li>
  <li>
    <p>for inference, we output the <strong>highest $\arg\max_{i,j} P_{start}(i\vert q,p)P_{end}(j\vert q,p)$ ** which is the same as finding the **highest score of</strong></p>

\[\arg\max_{i,j} P_{start}(i|q,p)P_{end}(j|q,p) = \arg\max_{i,j} S \cdot \vec{p}_i' + E \cdot \vec{p}_j'\]

    <p>as products of the exponentials (from the Softmax) are basically comparing sums of exponents</p>
  </li>
</ul>

<hr />

<p>Other model prior to BERT include BiDAF, Bidirectional Attention Flow model:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220404225037681.png" alt="image-20220404225037681" /></p>

<p>where the output is the same, $i,j$,  but here the major difference is that</p>

<ul>
  <li>
    <p><strong>attention</strong>: query to context attention, i.e. $q\to d$, and context to query attention, i.e. $d \to q$</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">C2Q</th>
          <th style="text-align: center">Q2C</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220404225356688.png" alt="image-20220404225356688" /></td>
          <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220404225408943.png" alt="image-20220404225408943" /></td>
        </tr>
      </tbody>
    </table>

    <p>so that:</p>

    <ul>
      <li>Context-to-query attention: For each context word, choose the most relevant words from the query words.</li>
      <li>Query-to-context attention: choose the context words that are most relevant to one of query words.</li>
    </ul>
  </li>
  <li>
    <p><strong>modelling</strong>: uses Bidirectional LSTM for <strong>encoding</strong>, which is <strong>sequential</strong> and hence not efficient. So, its speed is suboptimal compared to Transformer based which suitable for <strong>parallelization</strong>.</p>
  </li>
</ul>

<h2 id="knowledge-based-qa">Knowledge-based QA</h2>

<blockquote>
  <p><strong>Knowledge-based question answering</strong>: the idea of answering a natural language question by mapping it to a query over a <strong>structured database</strong>.</p>
</blockquote>

<p>Two common paradigms are used for knowledge-based QA.</p>

<ol>
  <li><strong>graph-based QA</strong>, models the knowledge base as a graph, i.e. entities as nodes and relations or propositions as edges between nodes.</li>
  <li><strong>QA by semantic parsing</strong>, using the semantic parsing methods</li>
</ol>

<p>Both of the methods above would need some entity linking step. Hence this will be discussed first.</p>

<h3 id="entity-linking">Entity Linking</h3>

<blockquote>
  <p><strong>Entity linking</strong> is the task of associating a <strong>mention in text</strong> with the representation of some <strong>real-world entity</strong> in an ontology.</p>

  <ul>
    <li>The most common ontology for factoid question-answering is Wikipedia, since Wikipedia is often the source of the text that answers the question</li>
  </ul>
</blockquote>

<p>For example,</p>

<ul>
  <li>given the sentence “<em>Paris is the capital of France</em>”</li>
  <li>the idea is to determine that “<em>Paris</em>” refers to the city of Paris and not to Paris Hilton or any other entity that could be referred to as “<em>Paris</em>”.</li>
</ul>

<p>In many practical cases, the set of entities will be the <strong>set of Wikipedia articles</strong>, where each article itself is an unique entity.</p>

<ul>
  <li>skipped, but can be treated as a sequence labelling task and use NN based methods</li>
</ul>

<h3 id="knowledge-based-qa-from-rdf-stores">Knowledge-Based QA from RDF stores</h3>

<p>Here we focus on the very simplest case of <strong>graph-based QA</strong>, in which the dataset is a set of factoids in the form of <strong>RDF triples</strong></p>

<blockquote>
  <p>RDF triple is a 3-tuple, a <strong>predicate</strong> with <strong>two arguments</strong>, expressing some simple relation or proposition. An example would look like</p>

  <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220404221421943.png" alt="image-20220404221421943" style="zoom:67%;" /></p>

  <p>Then, we can use this by:</p>

  <ul>
    <li>locate the entity asked in the query $Q$</li>
    <li>check which relation is it asking, e.g. <em>birth-year</em>?</li>
    <li>return the answer in this RDF triplet</li>
  </ul>
</blockquote>

<p>Let’s assume we’ve already done the stage of entity linking introduced in the prior section. Thus we’ve <strong>mapped already</strong> from a textual mention like <em>Ada Lovelace</em> to the canonical entity ID in the knowledge base. Then:</p>

<ul>
  <li>
    <p>determine which relation is being asked about. e.g.</p>

\[\text{“When was ... born”} \to \text{"birth-year"}\]

    <p>so that the question becomes:</p>

\[\text{“When was Ada Lovelace born?”} \to \text{birth-year (Ada Lovelace, ?x)}\]

    <p>For simple questions, where we <strong>assume the question has only a single relation</strong>, relation detection and linking can be done in a way resembling the neural entity linking models: computing <strong>similarity (generally by dot product) between the encoding of the question text and an encoding for each possible relation</strong>.</p>
  </li>
  <li>
    <p>then, once we located the relation like above, return the answer by fetching in the RDF database</p>
  </li>
</ul>

<h3 id="knowledge-based-qa-by-semantic-parsing">Knowledge-Based QA by Semantic Parsing</h3>

<p>The second kind of knowledge-based QA uses a <strong>semantic parser</strong> to <strong>map the question to a structured program</strong> to produce an answer.</p>

<ul>
  <li>basically into a query language like SQL or SPARQL</li>
</ul>

<p><em>Examples</em> of input question and output formatted query looks like:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220404222033378.png" alt="image-20220404222033378" style="zoom:50%;" /></p>

<p>where the logical form of the question is thus either in the form of a query or can easily be converted into one (predicate calculus can be converted to SQL, for example).</p>

<blockquote>
  <p>In a <strong>supervised</strong> case, the task is then to take those pairs of training tuples (question and logical form pair) and produce a system that maps from new questions to their logical forms.</p>
</blockquote>

<p>A common baseline algorithm is a simple sequence-to-sequence model, for example using BERT:</p>

<ul>
  <li>using BERT to represent question tokens</li>
  <li>passing them to an encoder-decoder</li>
</ul>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220404222259514.png" alt="image-20220404222259514" style="zoom:67%;" /></p>

<hr />

<p><em>Recall</em>: Encoder-Decoder</p>

<p>Essentially for decode, we usually do it <strong>auto-regressively</strong> so that suppose our ==decoder== has <code class="language-plaintext highlighter-rouge">Attention</code> with <code class="language-plaintext highlighter-rouge">MAX_SEQ_LEN=32</code>. Then:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/transformer_decoding_1.gif" style="zoom: 50%;" /></p>

<p>the input to decoder done <strong>auto-regressively</strong>:</p>

<ul>
  <li>at $t=0$, there is no input/or we have <code class="language-plaintext highlighter-rouge">&lt;pad&gt;&lt;pad&gt;...&lt;s&gt;</code> for filling the 32 sequence length and a positional embedding</li>
  <li>get cross attention from encoder output</li>
  <li>generate an output “<code class="language-plaintext highlighter-rouge">I</code>” and feed back as input at $t=1$. So we <strong>get <code class="language-plaintext highlighter-rouge">&lt;pad&gt;&lt;pad&gt;...&lt;s&gt;I</code> as the input of decoder</strong></li>
  <li>repeat until <code class="language-plaintext highlighter-rouge">&lt;/s&gt;</code> is generated</li>
</ul>

<blockquote>
  <p><strong>Note</strong>: Comparing with using a RNN based decoder, when we are generating output $o_{t+1}$, the <em>difference</em> is:</p>

  <ul>
    <li><strong>transformer</strong> based can <strong>only condition/read in</strong> $o_{t-31},…,o_t$ for a max sequence length of <code class="language-plaintext highlighter-rouge">32</code> for the attention layer</li>
    <li><strong>RNN</strong> based can use $h_t$ which ==encodes all previous information==. However, it has ==no attention/is sequential==.</li>
  </ul>
</blockquote>

<p>Essentially it is a Seq-2-Seq architecture, hence often done auto-regressively.</p>

<h2 id="using-language-models">Using Language Models</h2>

<blockquote>
  <p>An alternative approach to doing QA is to query a pretrained language model, forcing a model to answer a question <strong>solely from information stored in its parameters</strong>.</p>
</blockquote>

<p>The popular model in this case is the <strong>T5</strong> language model, which is</p>

<ul>
  <li>an <strong>encoder-decoder</strong> architecture (mentioned above)</li>
  <li>pretrained to fill in masked <strong>spans of task</strong></li>
</ul>

<p>The general picture of what it does is</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220404223704483.png" alt="image-20220404223704483" style="zoom:67%;" /></p>

<p>where as it is trained as a language model, we needed to <strong>finetune</strong> the T5 system to the question answering task, by giving it a question, and training it to output the answer text in the decoder.</p>

<h2 id="evaluation-of-factoid-answers">Evaluation of Factoid Answers</h2>

<p><strong>Factoid question answering</strong> is commonly evaluated using mean reciprocal rank, or <strong>MRR</strong></p>

<blockquote>
  <p><strong>MRR</strong> is designed for systems that <strong>return a short ranked list of answers</strong> or passages for each test set question, so that:</p>

  <ol>
    <li>each test set <strong>question</strong> is <strong>scored</strong> with the <strong>reciprocal of the rank</strong> of the first correct answer</li>
    <li>then MRR is the <strong>average of the scores</strong> for each question in the test set</li>
  </ol>
</blockquote>

<p>For example, if the system returned</p>

<ul>
  <li>five answers to a question (with its own ranking)</li>
  <li>but the first three are wrong (so the highest-ranked correct answer is ranked fourth)</li>
</ul>

<p>Then the reciprocal rank for that question is $1/4$. (The score for questions that return no correct answer is $0$.)</p>

<p>Therefore, more formally, for a system returning ranked answers to each question in test set $Q$, then MRR is</p>

\[\text{MRR} = \frac{1}{|Q|} \sum_{i=1}^{|Q|} \frac{1}{\text{rank}_i}\]

<hr />

<p>On the other hand, <strong>reading comprehension systems</strong> on datasets like SQuAD are evaluated by:</p>

<ul>
  <li><strong>Exact match</strong>: The % of predicted answers that match the gold answer exactly</li>
  <li><strong>F1 score</strong>: The average word/token overlap between predicted and gold answers.
    <ol>
      <li>Treat the prediction and gold as a bag of tokens,</li>
      <li>compute F1 for each question</li>
      <li>return the average F1 over all questions.</li>
    </ol>
  </li>
</ul>

<h1 id="language-generation">Language Generation</h1>

<blockquote>
  <p><strong>Text generation</strong> is a subfield of natural language processing (NLP). It leverages knowledge in computational linguistics and artificial intelligence to <strong>automatically generate natural language texts</strong></p>
</blockquote>

<p>Typically, you will see architectures generating a text be:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406211349237.png" alt="image-20220406211349237" style="zoom: 67%;" /></p>

<p>where essentially:</p>

<ul>
  <li>the language model’s aim is to output a distribution for next word $w_{n+1}$, given the input $w_1,..,w_n$</li>
  <li>hence essentially it is outputting $P(w_{n+1}\vert w_{i},…,w_n)$, hence called the language model</li>
  <li>this is usually done in an <strong>auto-regressive</strong> way, i.e. generated output is fed back as input <strong>until</strong> we generated some end of sentence token, such as <code class="language-plaintext highlighter-rouge">&lt;/s&gt;</code>.</li>
  <li>this architecture is related to many down stream tasks such as Machine Translation, Dialog Generation, etc.</li>
</ul>

<h2 id="e2e-challenge">E2E Challenge</h2>

<p>Here, we will discuss an example application, which is the <strong>E2E challenge</strong>:</p>

<ul>
  <li><strong>domain</strong>: restaurant recommendation</li>
  <li><strong>task</strong>: we want to generate texts (one or more sentences) to recommend restaurants from an <strong>input</strong> <strong>meaning representation</strong> (MR)</li>
</ul>

<p>An example of meaning representation include</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Example MR</th>
      <th style="text-align: center">Labelled</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406162455714.png" alt="image-20220406162455714" style="zoom: 33%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406162446553.png" alt="image-20220406162446553" style="zoom: 33%;" /></td>
    </tr>
  </tbody>
</table>

<p>where essentially your output should fulfill the above requirement specified in the MR.</p>

<ul>
  <li>
    <p><strong>dialogue act</strong>: in this competition, <em>request</em> or <em>inform</em> (here we only have two)</p>
  </li>
  <li>
    <p><strong>attributes/values</strong>: unordered attributes of the generated text that you need to fulfill (all those attributes needs to be mentioned) this will be a fixed set, which is called ==domain ontology==:</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406163143626.png" alt="image-20220406163143626" style="zoom:33%;" /></p>

    <p>so in this task, there will only be 8 types.</p>
  </li>
</ul>

<p>An example output that fulfills the about MR would be</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406163005861.png" alt="image-20220406163005861" style="zoom:50%;" /></p>

<h3 id="e2e-datasets">E2E Datasets</h3>

<p>Finally, before we discuss how to construct a model, it is important to know <strong>how training data is collected</strong>:</p>

<ul>
  <li>Crowd sourcing on <strong>CrowdFlower</strong> (similar to Amazon Mechanical Turk)</li>
  <li>essentially it asks you to generate the text given the MR (either in a pure text format or pictorial)</li>
</ul>

<p>An example would be</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Pictorial</th>
      <th style="text-align: center">Text MR</th>
      <th style="text-align: center">Sample Training Text</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406212209031.png" alt="image-20220406212209031" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406212215241.png" alt="image-20220406212215241" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406212221398.png" alt="image-20220406212221398" /></td>
    </tr>
  </tbody>
</table>

<p>why did we also provided a pictorial representation to the CrowdFlower works?</p>

<ul>
  <li>The aim is to generate good training text from <strong>human workers</strong>.</li>
  <li>it turs out that they generate better texts if a picture is provided.</li>
</ul>

<p>Then, you get <strong>training dataset</strong>:</p>

<ul>
  <li>
    <p>6K MRs with average of 8.27 texts per MR</p>
  </li>
  <li>
    <p>5 slots (attribute-key pairs) per MR</p>
  </li>
</ul>

<h2 id="text-generation-modelling">Text Generation Modelling</h2>

<p>Traditionally, for conditional text generation tasks, you will need to consider</p>

<ul>
  <li><strong>Content selection</strong> (Done for us as MR in the E2E task)</li>
  <li><strong>Aggregation</strong>: which pieces of content go into which sentence? e.g. generate abstract syntax tree from selected content</li>
  <li><strong>Realization</strong>: tree to real sentence</li>
</ul>

<p>Which results in two paradigms:</p>

<ul>
  <li><strong>Two step generation</strong>: first find a sentence planning. Then, given a plan, realize it into natural language.</li>
  <li><strong>Joint one-step approach</strong>: usually use Seq-2-Seq model, where input sequence would be a string of the requirements (e.g. MR)</li>
</ul>

<p>For example:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Input MR</th>
      <th>Input MR into Tree</th>
      <th style="text-align: center">Realization</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406164446805.png" alt="image-20220406164446805" /></td>
      <td><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406164427972.png" alt="image-20220406164427972" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406164433839.png" alt="image-20220406164433839" /></td>
    </tr>
  </tbody>
</table>

<h3 id="generating-using-seq-2-seq">Generating using Seq-2-Seq</h3>

<p>This is often the architecture used today, where we essentially have:</p>

<ol>
  <li>
    <p>encode the input MR as as string</p>

    <ul>
      <li>
        <p>either make it a sequence of triples <code class="language-plaintext highlighter-rouge">(Dialogue Act, Slot, Value)</code>, so that you could get input like</p>

        <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406213200708.png" alt="image-20220406213200708" style="zoom: 50%;" /></p>
      </li>
      <li>
        <p>or find a syntax tree and then use the string flattened version of the tree</p>

        <table>
          <thead>
            <tr>
              <th style="text-align: center">Tree</th>
              <th style="text-align: center">String Version</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406213258926.png" alt="image-20220406213258926" style="zoom: 50%;" /></td>
              <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406213304043.png" alt="image-20220406213304043" style="zoom:50%;" /></td>
            </tr>
          </tbody>
        </table>
      </li>
    </ul>
  </li>
  <li>
    <p><strong>input</strong> the above string</p>
  </li>
  <li>
    <p><strong>output</strong> generated text</p>
  </li>
</ol>

<p>Then, the Seq-2-Seq model basically does</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406164807069.png" alt="image-20220406164807069" style="zoom: 50%;" /></p>

<p>which is <strong>basically a auto-regressive generation</strong>.</p>

<ul>
  <li>
    <p>of course, you could also replace LSTM blocks with transformers</p>
  </li>
  <li>
    <p>the output at each state is essentially $P(y_{t}\vert y_1,…,y_{t-1},h_x)$ where $y_i$ are the generated ones and $h_x$ is the hidden state representation of the input sequence. Here we are only outputting the <strong>single best word</strong> at a time, hence</p>

\[o_t = \arg\max_y P(y_{t}|y_1,...,y_{t-1},h_x)\]

    <p>but remember this is a ==greedy search==. In reality you can use <strong>beam search</strong> to allow for keeping more than one options.</p>
  </li>
</ul>

<h3 id="problems-with-seq-2-seq">Problems with Seq-2-Seq</h3>

<p>But, as we are using NN, there are some bigger problems. We <strong>will not be able to enforce constraints</strong> such as</p>

<ul>
  <li>Missing to fulfill an attribute</li>
  <li>Added an attribute/value that did not exist in MR</li>
  <li>Wrong value for an attribute (hallucination).</li>
</ul>

<p><em>For instance</em>: the red parts are the wrong values not mentioned in the MR</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Input MR</th>
      <th style="text-align: center">Seq-2-Seq output with Beam Search of width 3</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406214731888.png" alt="image-20220406214731888" style="zoom:50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406214756242.png" alt="image-20220406214756242" style="zoom:50%;" /></td>
    </tr>
  </tbody>
</table>

<p>some intuition of why, instead of <em>Burger King</em>, we get those random place names:</p>

<ul>
  <li>
    <p>essentially the network learns some hidden representation of the words in the MR. So suppose we have the following training data</p>

    <p>| <img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406215139282.png" alt="image-20220406215139282" style="zoom: 50%;" /> | <img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406215144295.png" alt="image-20220406215144295" style="zoom: 50%;" /> |
| :———————————————————-: | :———————————————————-: |</p>

    <p>then the model would have learnt a <strong>similar vector representation</strong> between “<em>Burger King</em>” and “<em>Yippee Noodle Bar</em>”</p>
  </li>
  <li>
    <p>then as what the models see are representations of “<em>Burger King</em>”, it is likely that “<em>Yippee Noodle Bar</em>” could be outputted</p>
  </li>
</ul>

<p>How do we deal with those problems?</p>

<ul>
  <li>
    <p><strong>Missing/Added value</strong>: use a <strong>Re-ranker</strong>, which is an additionally penalty using <strong>hamming distance</strong></p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406165243051.png" alt="image-20220406165243051" style="zoom: 33%;" /></p>

    <p>where the sequence <code class="language-plaintext highlighter-rouge">110100</code> will be the output of an additional classifier (which we hope is doing the correct job)</p>

    <ul>
      <li>it is called reranker as it adds the penalty and reranks the output</li>
      <li>since we need to rank outputs, we would use a <strong>beam search</strong></li>
      <li>of course, this does not solve the problem entirely, but does help a bit</li>
    </ul>
  </li>
  <li>
    <p><strong>Wrong Value</strong>: using data augmentation techniques - <strong>faithful speaker</strong></p>
  </li>
</ul>

<p>Results</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406170039892.png" alt="image-20220406170039892" style="zoom:33%;" /></p>

<p>where we see:</p>

<ul>
  <li>re-ranked + beam search does better than raw beam search</li>
  <li>raw string input does better than tree as it has more flexibilities.</li>
</ul>

<blockquote>
  <p><strong>However</strong>, on many hard constraint tasks, seq2seq often fail to correctly express a meaning representation hence can be outperformed by hand-engineered solutions. But the key advantage is that it is much less costly in time and money.</p>
</blockquote>

<h3 id="e2e-data-augmentation">E2E Data Augmentation</h3>

<p>Here, we discuss how to use data augmentation to solve the <strong>wrong value problem</strong>. We will discuss two approaches:</p>

<ul>
  <li><strong>delexicalization</strong>: simplest data augmentation without ML</li>
  <li><strong>faithful speaker</strong>: data augmentation using ML. Done by noise injection and self-training.</li>
</ul>

<h4 id="delexicalization">Delexicalization</h4>

<p>Basically we can</p>

<ol>
  <li>identify the lexical from the MR in the generated text</li>
  <li>remove (some of) those lexicals, hence we obtained a <strong>template</strong> from MR -&gt; text</li>
  <li>generate new MR -&gt; text using that template</li>
</ol>

<p>For example:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Train MR</th>
      <th style="text-align: center">Train Text</th>
      <th style="text-align: center">Delex Train Text Example</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406220208189.png" alt="image-20220406220208189" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406220221854.png" alt="image-20220406220221854" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406220237532.png" alt="image-20220406220237532" /></td>
    </tr>
  </tbody>
</table>

<h4 id="noise-injection-and-self-training">Noise Injection and Self-Training</h4>

<blockquote>
  <p>Aim: use data augmentation to create <strong>diverse MR/utterance pairs</strong> not seen in the training distribution</p>

  <ul>
    <li>the delexicalization technique would have created pairs of the same syntax/from same template</li>
  </ul>
</blockquote>

<p>Basically we would need two constraints for this to work:</p>

<ul>
  <li>text of a MR being diverse but is still related to the task (<strong>Base Speaker</strong>)</li>
  <li>the correct MR corresponding to the above text (<strong>MR Parser</strong>)</li>
</ul>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Without Noise</th>
      <th style="text-align: center">With Noise = Data Augmentation</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406170914463.png" alt="image-20220406170914463" style="zoom: 50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406224952166.png" alt="image-20220406224952166" style="zoom:50%;" /></td>
    </tr>
  </tbody>
</table>

<p>Hence we have a <strong>synthetic text and MR</strong> pair, but the pair is ==still faithful==! The overall algorithm looks like</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406171201842.png" alt="image-20220406171201842" style="zoom: 50%;" /></p>

<p>where</p>

<ul>
  <li>
    <p>to make sure the new pair is not too bad/unclean, we also added a filter.</p>
  </li>
  <li>
    <p>in the end you return $A$ which is the <strong>augmented dataset.</strong></p>
  </li>
</ul>

<blockquote>
  <p>Train new seq2seq model on training + synthetic data: $D \cup A$. The new trained model is the called the <strong>Faithful Speaker</strong></p>
</blockquote>

<hr />

<p><em>For example:</em></p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406171433324.png" alt="image-20220406171433324" style="zoom:50%;" /></p>

<hr />

<p>The advantage of this v.s. the <strong>delexicalization</strong> is that the generated text would have:</p>

<ul>
  <li>variety in <strong>words</strong> used (which delexicalization also can do)</li>
  <li>variety in <strong>sentence structure</strong> (which delexicalization cannot)</li>
</ul>

<h3 id="e2e-metrics-and-baseline">E2E Metrics and Baseline</h3>

<p>Some common metrics used include</p>

<ul>
  <li>
    <p><strong>Precision</strong>: want fulfilled tokens being correct</p>
  </li>
  <li>
    <p><strong>Recall</strong>: want to have fulfilled most of the tokens.</p>
  </li>
  <li>
    <p><strong>Semantic Error Rate</strong> (SER):</p>

\[\frac{\text{\# missing}+\text{\# incorrect}+\text{\# added}}{\text{\# attributes}}\]

    <p>basically the denominator is the sum of cases where the attributed was not fulfilled.</p>
  </li>
</ul>

<p><strong>Baselines</strong> used in this task</p>

<ul>
  <li><strong>SLUG</strong>: ensemble of seq2seq models (e.g. transformer based, LSTM based, etc)
    <ul>
      <li>pooled overgeneration+reranking</li>
    </ul>
  </li>
  <li><strong>DANGNT</strong> (Nguyen and Tran, 2018): rule-based model
    <ul>
      <li>basically from the corpus, extract statistically</li>
    </ul>
  </li>
  <li><strong>TUDA</strong> (Puzikov and Gurevych, 2018): template-based model</li>
</ul>

<p>With their performance being</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406225848342.png" alt="image-20220406225848342" style="zoom:67%;" /></p>

<p>where we see <strong>Faithful speakers</strong> are performing better.</p>

<h2 id="next-word-sampling">Next Word Sampling</h2>

<blockquote>
  <p><strong>Next Word Sampling</strong> means deciding <strong>how to pick the next word</strong> $w_t$ according to its <em>conditional probability distribution</em> $P(w_t\vert w_{1:t-1})$</p>
</blockquote>

<p>Here we will see:</p>

<ul>
  <li><strong>Greedy Search</strong>: what we do most of the time, so that at each time $t$ of decoding, we pick the single most probable words. However, the problem is that this ==might not generate the most probable sequence==</li>
  <li><strong>Beam Search</strong>: Beam search reduces the risk of missing hidden high probability word sequences by keeping the most likely num_beams of hypotheses at each time step and eventually choosing the hypothesis that has the overall highest probability. But still, it does not solve the problem.</li>
  <li><strong>Top-k Sampling</strong>: it is a <em>sampling</em> method (i.e. randomly choose) from the Top-$k$ most likely next word based on redistributing the probability mass only among those $k$ words</li>
  <li><strong>Temperature Sampling</strong>: essentially rescaling the probability by temperature $T$, such that with $T$ is low only high energy (probability) would be “survive”, and when $T$ is high, low energy states gets a greater chance than before to be sampled.</li>
</ul>

<p><em>Recap</em>:</p>

<p><strong>Beam Search</strong>: recall that the basic idea under beam search is that it keeps the $k$ most probable at each time step</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406230644107.png" alt="image-20220406230644107" style="zoom:67%;" /></p>

<p>which can be done by:</p>

<ul>
  <li>have $k$ decoders ready</li>
  <li>at each time step:
    <ul>
      <li>keep $k$ most probable choice</li>
      <li>generate the next word from the $k$ most probable using the decoders</li>
      <li><strong>prune down</strong> to the $k$ most probable and repeat</li>
    </ul>
  </li>
</ul>

<h3 id="top-k-sampling">Top-k Sampling</h3>

<p><strong>Top-k Sampling</strong>: at each time step we get $P(w_t\vert w_{1:t-1})$ from our model:</p>

<ul>
  <li>
    <p>sample from the Top-$k$ most likely next word based on <strong>redistributing the probability mass</strong> only among those $k$ words</p>
  </li>
  <li>
    <p>this is used in GPT-2</p>
  </li>
</ul>

<p>This works because notice that at $t=2$, the top-k choices would have included most of the probability distribution already:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220406231742503.png" alt="image-20220406231742503" style="zoom:67%;" /></p>

<h3 id="temperature-sampling">Temperature Sampling</h3>

<blockquote>
  <p><strong>Temperature sampling</strong> works by increasing the probability of the most likely words before sampling. The idea is borrowed from thermodynamics where essentially ==energy $\approx$ probability== so that:</p>

  <ul>
    <li>
      <p><em>high temperature</em> means low energy (probability) states are more likely (than the were before) to be encountered</p>
    </li>
    <li>
      <p><em>lowering the temperature</em> allows you to focus on higher energy (probability) state</p>
    </li>
  </ul>
</blockquote>

<p>So that given a probability distribution $P(x)$:</p>

<ul>
  <li>scaled probability by temperature $T$ is $z_i = \log P(x_i)/T$</li>
  <li>then get back probability using softmax $\exp(z_i)/\sum \exp(z_i)$</li>
</ul>

<p><em>For instance</em>, we can take $T=2$ being a low temperature:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">$P(x)$</th>
      <th style="text-align: center">$z_i$</th>
      <th style="text-align: center">Temperature Rescaled</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220407001537601.png" alt="image-20220407001537601" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220407001426680.png" alt="image-20220407001426680" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220407001432607.png" alt="image-20220407001432607" /></td>
    </tr>
  </tbody>
</table>

<p>where we see that with low temperature, only high probability terms “survives”. Result-wise:</p>

<ul>
  <li><strong>high temperature</strong> sample displays greater <strong>linguistic variety</strong></li>
  <li><strong>low temperature</strong> sample is more <strong>grammatically correct</strong></li>
</ul>

<h1 id="text-summarization">Text Summarization</h1>

<p>The high level task of summarization would include:</p>

<ul>
  <li><strong>input</strong>: a database, an image, texts, software traces, etc</li>
  <li><strong>output</strong>: a textual summary</li>
</ul>

<blockquote>
  <p><strong>Essentially</strong> those types of generation models can <strong>all be seen as next word generation</strong>, but conditioned on different things:</p>

  <ul>
    <li>
      <p><strong>pure next word generation</strong>:</p>

\[p(y_{i+1}|y_{i-L+1:i})\]

      <p>for a window size of $L$ (depending on your machine’s memory for NN models) and $y_{i-L+1:i}$ are the words generated so far. Note that this is basically ==language models==</p>

\[p(w_{i+1}|w_{i-L+1:i})\]

      <p>which we have learnt in the beginning of NLP.</p>
    </li>
    <li>
      <p><strong>next word generation conditioned</strong>/based on some input sentence $\vec{x}=x_1,…,x_n$ as well:</p>

\[p(y_{i+1}|\vec{x},y_{i-L+1:i})\]

      <p>which you will see is what ==summarization/conditional generation== is essentially about: modelling the above probability with some neural network.</p>
    </li>
  </ul>
</blockquote>

<p>Currently this field does not have the best performances. Why is this task hard?</p>

<ul>
  <li>require <strong>both interpretation and generation</strong> of text</li>
  <li>handle <strong>input</strong> documents from <strong>unrestricted domains</strong> robustly (e.g. trained on one domain but genearlize to news, military, entertainment)</li>
</ul>

<h2 id="types-of-summarization">Types of Summarization</h2>

<p>In general, we can have the following types of summarization tasks:</p>

<ul>
  <li><strong>informative</strong> v.s. <strong>indicative</strong>: generated content can replacing the document v.s. just describes the document</li>
  <li><strong>extractive</strong> v.s. <strong>abstractive</strong>: pick best $k$ words that most important v.s. generate $k$ words</li>
  <li><strong>single</strong> v.s. <strong>multi-document:</strong> many coming form different domains</li>
  <li><strong>generic</strong> v.s. <strong>user-focused</strong>: decides if we should use layman terms (e.g. commonly when in medical/legal domain, use professional terms)</li>
</ul>

<p>Here, we will focus on mainly doing ==informative== summarization and compare:</p>

<ul>
  <li>simple task of <strong>extractive</strong> summary</li>
  <li>using a NN model for <strong>abstractive</strong> summary</li>
</ul>

<h2 id="extractive-summarization">Extractive Summarization</h2>

<p>The formal definition of the task would be as follows.</p>

<ul>
  <li>
    <p><strong>given</strong>: a fixed vocabulary $V$</p>
  </li>
  <li>
    <p><strong>input</strong>: a sequence of $M$ words with $x_1,…,x_M$</p>
  </li>
  <li>
    <p><strong>output</strong>: a sequence of $N &lt; M$ words (e.g. known before generation) $x_{m_i} \in {x_1,…,x_M}$ such that</p>

\[\arg\max_{m \in \{1,...,M\}^N}s(\vec{x},\vec{x}_{m})\]

    <p>is largest for $\vec{x}=x_1,…,x_M$ and $\vec{x}<em>m=x</em>{m_1},x_{m_2},…,x_{m_N}$, and $s$ is a <strong>scoring function</strong> yuo can generally customize. The most common one you will see for LM are:</p>

\[s(\vec{x},\vec{x}_m) = \log p(\vec{x}_m | \vec{x})\]
  </li>
</ul>

<p>The common solution for this is to treat it as a <strong>classification task</strong>:</p>

<ul>
  <li>for input word $x_i$, should it be included in output list</li>
  <li>repeat, and output by <strong>concatenating</strong> those words</li>
</ul>

<p>In fact, for humans summary writes, they often do cut and paste</p>

<ul>
  <li>81% of the sentences were constructed by cutting and pasting</li>
</ul>

<h2 id="abstractive-summarization">Abstractive Summarization</h2>

<p>Not only pick $k$ words/phrase, but also <strong>generate</strong> words/phrase that summarizes the content.</p>

<ul>
  <li>if we just concatenate sentences as above, they might not be coherent</li>
</ul>

<p>Formally, such a task can be defined as</p>

<ul>
  <li>
    <p><strong>given</strong>: a fixed vocabulary $V$</p>
  </li>
  <li>
    <p><strong>input</strong>: a sequence of $M$ words with $x_1,…,x_M$</p>
  </li>
  <li>
    <p><strong>output</strong>: a sequence of $N &lt; M$ words (e.g. known before generation) $y_1,…,y_N$ such that</p>

\[\arg\max_{\vec{y}\in \mathcal{Y}}s(\vec{x},\vec{y})\]

    <p>basically for $y_i \in V$, and $s$ is a <strong>scoring function</strong> you can generally customize. The most common one you will see for LM are:</p>

\[s(\vec{x},\vec{y}) = \log p(\vec{y} | \vec{x})= \sum_{i=0}^{N-1} \log p(y_{i+1}|\vec{x},y_{1:i})\]

    <p>which is again(conditional) next word generation, and is often solved <strong>greedily using auto-regressive decoder</strong>.</p>
  </li>
</ul>

<p>You will soon seen in the <a href="#Attention Based Summarizer">Attention Based Summarizer</a> how this probability $\log p(\vec{y} \vert  \vec{x})$ can be ==modelled using a neural network==.</p>

<h3 id="attention-based-summarizer">Attention Based Summarizer</h3>

<p>Here we discuss essentially a model proposed here: https://arxiv.org/abs/1509.00685, which is used for <strong>headline generation</strong>:</p>

<table>
  <thead>
    <tr>
      <th>Input:</th>
      <th>A detained iranian-american academic accused of acting out against national security has been released from a tehran prison yesterday after a hefty bail was posted, a top judiciary official said Tuesday.</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Output:</td>
      <td>Detained iranian-american academic released from prison after hefty bail.</td>
    </tr>
  </tbody>
</table>

<p>Recall that we essentially need to model:</p>

\[s(\vec{x},\vec{y}) = \log p(\vec{y} | \vec{x})\]

<p>Since you will be using attention based model, the hidden representation for <strong>output</strong> will be applied over some attention layer. First, just like how we derived unigram/bigram/etc models:</p>

\[p_\theta(\vec{y}|\vec{x})=p_\theta(y_1,...,y_N|x_1,...,x_N) = \prod_{i=1}^{N-1}p_\theta(y_{i+1}|\vec{x},y_{1:i})\]

<p>being exactly true, but since for attention based model we need some <strong>predefined sequence length</strong> $C$ (as opposed to RNN type where you can encode a variable length by just looping it) such that:</p>

\[\prod_{i=1}^{N-1}p_\theta(y_{i+1}|\vec{x},y_{1:i}) \approx \prod_{i=1}^{N-1}p_\theta(y_{i+1}|\vec{x},y_{i-C+1:i})\]

<p>and hence for $s(\vec{x},\vec{y}) = \log p(\vec{y} \vert  \vec{x})$ we get:</p>

\[\log p(\vec{y}|\vec{x}) \approx \sum_{i=0}^{N-1} \log p_\theta(y_{i+1}|\vec{x},y_{i-C+1:i})\equiv  \sum_{i=0}^{N-1} \log p_\theta(y_{i+1}|\vec{x},\vec{y}_C)\]

<p>being our model.</p>

<blockquote>
  <p>Then for ==NN based model==, essentially the idea is to do:</p>

\[p_\theta(y_{i+1}|\vec{x},\vec{y}_C) = \text{Softmax}(W \, \text{repr}(\vec{x},\vec{y}_C)) \in \mathbb{R}^{|V|}\]

  <p>so that $W \in \mathbb{R}^{\vert V\vert  \times H}$ for $\text{repr}(\vec{x},\vec{y}_C)$ being some vector of hidden dimension $H$.</p>
</blockquote>

<p>For this paper, we consider:</p>

\[p_\theta(y_{i+1}|\vec{x},\vec{y}_C) = \text{Softmax}(V\vec{h} + W\,\text{enc}(\vec{x},\vec{y}_C)) \in \mathbb{R}^{|V|}\]

<p>for the first part being empirically useful to have as:</p>

<ul>
  <li>$\tilde{y}<em>C = [Ey</em>{i-C+1},…,Ey_{i}]$ are the <strong>embedded generated outputs</strong></li>
  <li>$h = \tanh(U \tilde{y}_C  )$ producing a single vector summarizing what we have so far</li>
</ul>

<p>So basically we have the <strong>general architecture of</strong> splitting this to an encoder-decoder architecture:</p>

<ul>
  <li>
    <p><strong>encoder</strong>: do the $\text{enc}(\vec{x},\vec{y}_C)$ part and ==get a vector of hidden dimension $H$==</p>
  </li>
  <li>
    <p><strong>decoder</strong>: do the $\text{Softmax}(V\vec{h} + W\,\text{enc}(\vec{x},\vec{y}_C))$ part with ==auto-regressive generation==</p>
  </li>
</ul>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220412010502499.png" alt="image-20220412010502499" style="zoom: 67%;" /></p>

<p>where:</p>

<ul>
  <li>for attention based summarizer, the encoder part is essentially an <strong>attention based encoder</strong></li>
  <li>however, of course you can customize what you do at that encoder</li>
</ul>

<h4 id="baseline-bow-encoder">Baseline BoW Encoder</h4>

<p>Consider the simple framework of doing:</p>

<ol>
  <li>
    <p>Encode all the input but <strong>ignoring generated context</strong>:</p>

\[\tilde{x} = [Fx_{1},...,Fx_{M}]\]

    <p>for $F \in \mathbb{R}^{H \times \vert V\vert }$</p>
  </li>
  <li>
    <p>Then we consider a uniform distribution</p>

\[\vec{p} = [1/M,...,1/M]\]

    <p>so that</p>

\[\text{enc}_1(\vec{x},\vec{y}_c) = \vec{p}^T \tilde{x}\]
  </li>
</ol>

<p>so then the entire encoder network only needs $\theta_{enc} = {F}$</p>

<h4 id="convolutional-encoder">Convolutional Encoder</h4>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220412011723758.png" alt="image-20220412011723758" style="zoom:80%;" /></p>

<h4 id="attention-based-encoder">Attention Based Encoder</h4>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Algorithm</th>
      <th style="text-align: center">Architecture</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220412011753872.png" alt="image-20220412011753872" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220412011804443.png" alt="image-20220412011804443" /></td>
    </tr>
  </tbody>
</table>

<p>which performs better than the others:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220411170238208.png" alt="image-20220411170238208" style="zoom: 67%;" /></p>

<h2 id="bart">BART</h2>

<p>Now, essentially for <strong>text generation</strong> we want some architecture that does:</p>

<ul>
  <li><strong>encoder</strong>: encode input $\vec{x}$</li>
  <li><strong>decoder</strong>: uses $\text{enc}(\vec{x})$ and some representation of $\vec{y}_C$ to generate:</li>
</ul>

<p>Hence we can use a classical architecture:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Idea</th>
      <th style="text-align: center">BART Pretrain</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220412015746372.png" alt="image-20220412015746372" style="zoom:67%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220412020010963.png" alt="image-20220412020010963" style="zoom:67%;" /></td>
    </tr>
  </tbody>
</table>

<p>which essentially does:</p>

\[p_\theta(y_{i+1}|\vec{x},\vec{y}_C) = \text{Softmax}( \text{repr}(\vec{x},\vec{y}_C)) \in \mathbb{R}^{|V|}\]

<p>where here $\text{repr}(\vec{x},\vec{y}_C)$ would come from weigths that does:</p>

<ul>
  <li>embedding of $\vec{x}, \vec{y}<em>c$ using ==two networks== $f</em>\theta(\vec{x}),g_\phi(\vec{y})$
    <ul>
      <li>in contrast to generation with <strong>GPT</strong>, which only has a single network for encoding $f_\theta(\vec{x}), f_\theta(\vec{y})$</li>
    </ul>
  </li>
  <li>doing multi-head attentions</li>
  <li>doing FFNN and others.</li>
</ul>

<blockquote>
  <p>But essentially we <strong>comes down to having some good encoding network</strong>. Therefore BART consider ==pre-train tasks== of corrupting documents and then optimizing a <strong>reconstruction</strong> loss:</p>

  <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220412020232001.png" alt="image-20220412020232001" style="zoom:50%;" /></p>

  <p>and notice that In the extreme case, where all information about the source is lost, BART is equivalent to a language model.</p>
</blockquote>

<p>Then, once trained, we <strong>fine-tune on a range of tasks</strong></p>

<ul>
  <li><strong>Sequence Classification</strong>: the same input is fed into the encoder and decoder, and the final hidden state of the final decoder token is fed into new multi-class linear classifier.
    <ul>
      <li>basically related to the <code class="language-plaintext highlighter-rouge">CLS  </code>token in BERT</li>
    </ul>
  </li>
  <li><strong>(Conditional) Sequence Generation</strong>: the encoder input is the input sequence (to be conditioned on), and the decoder generates outputs autoregressively</li>
</ul>

<h3 id="comparison-against-gpt-and-bert">Comparison Against GPT and BERT</h3>

<p>What is special about using both encoder-decoder for the task of generation? Recall that:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">BERT</th>
      <th style="text-align: center">GPT</th>
      <th style="text-align: center">BART</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220412021011283.png" alt="image-20220412021011283" style="zoom:67%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220412021017237.png" alt="image-20220412021017237" style="zoom:67%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220412021023236.png" alt="image-20220412021023236" style="zoom:67%;" /></td>
    </tr>
  </tbody>
</table>

<p>so that:</p>

<ul>
  <li><strong>BERT</strong>: Random tokens are replaced with masks, and the document is encoded bidirectionally. Missing tokens are predicted independently, so <strong>BERT cannot easily be used for generation</strong></li>
  <li><strong>GPT</strong>: Tokens are predicted auto-regressively, meaning GPT can be used for generation. However words can only <strong>condition on leftward context</strong>, so it cannot learn bidirectional interactions.
    <ul>
      <li>also it uses the same encoding network at all times</li>
    </ul>
  </li>
  <li><strong>BART</strong>: Inputs to the encoder need not be aligned with decoder outputs, ==allowing arbitrary noise transformations==, i.e. can generate “new words” for tasks such as summarization.
    <ul>
      <li>then the <em>likelihood of the original document</em> (right) is calculated with an autoregressive decoder</li>
      <li>notice that the <strong>order changed</strong> as this is allowed for encoder-decoder type model! We are using ==two networks== $f_\theta(\vec{x}),g_\phi(\vec{y})$ for encoding the input and the output generated differently, as their interaction could be complex</li>
    </ul>
  </li>
</ul>

<h1 id="chatbots--dialogue-systems">Chatbots &amp; Dialogue Systems</h1>

<p>This chapter introduces the <strong>fundamental</strong> algorithms of dialogue systems, or conversational agents. These programs communicate with users in natural language (text, speech, or both), and fall into two classes:</p>

<ul>
  <li>
    <p><strong>Task-oriented dialogue agents</strong> use conversation with users to help complete tasks. Examples include Siri, Alexa, Google Now/Home, Cortana, etc., which can give directions, control appliances, find restaurants, or make calls.</p>

    <ul>
      <li>
        <p>for those products, we also needed Automatic Speech Recognition and Text to Speech with an architetcure</p>

        <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220413161715955.png" alt="image-20220413161715955" style="zoom:33%;" /></p>

        <p>where basically dialogue manager decides what actions to take</p>
      </li>
    </ul>
  </li>
  <li>
    <p><strong>chatbots</strong> are systems designed for extended conversations, set up to mimic the unstructured conversations or ‘chats’ characteristic of human-human interaction</p>

    <ul>
      <li>mainly for entertainment</li>
      <li>but also for practical purposes like making task-oriented agents more <strong>natural</strong>.</li>
    </ul>
  </li>
</ul>

<p>we’ll discuss the :</p>

<ul>
  <li>three major <strong>chatbot</strong> architectures: rule-based systems, information retrieval systems, and encoder-decoder generators.</li>
  <li>for <strong>task-oriented agents</strong>, we introduce the frame-based architecture (the GUS architecture) that underlies most task-based systems</li>
</ul>

<h2 id="properties-of-human-conversation">Properties of Human Conversation</h2>

<p>Before we attempt to design a conversational agent to converse with humans, it is crucial to understand something about how humans converse with each other. For example:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220413234847649.png" alt="image-20220413234847649" style="zoom: 67%;" /></p>

<p>where <code class="language-plaintext highlighter-rouge">C </code>stands for client and <code class="language-plaintext highlighter-rouge">A </code>stands for Agent</p>

<ul>
  <li>
    <p>A dialogue is a sequence of <strong>turns</strong> (C1, A2, C3, and so on)</p>

    <ul>
      <li>
        <p>A system has to know when to <em>stop talking</em>; the client <em>interrupts</em> (in A16 and C17), so the system must know to stop talking</p>
      </li>
      <li>
        <p>A system also has to know when to <em>start talking</em>. e.g. Spoken dialogue systems must also detect whether a user is done speaking, so they can process the utterance and respond.</p>

        <p>This task is called endpointing or <strong>endpoint detection</strong></p>
      </li>
    </ul>
  </li>
  <li>
    <p><strong>Speech/Dialog Acts</strong>: each utterance in a dialogue is a kind of action being performed by the speaker. Basically expresses an important component of the ==intention of the speaker== (or writer) in saying what they said</p>
  </li>
  <li>
    <p><strong>Grounding</strong>: acknowledging that the hearer has understood the speaker (e.g. saying “OK”, as the agent does in A8 or A10.)</p>
  </li>
  <li>
    <p><strong>Sub-dialogues</strong> and <strong>Dialogue Structure</strong>: QUESTIONS and ANSQWE, PROPOSALS and ACCEPTANCE/REJECTION, etc. These pairs, called <strong>adjacency pairs</strong> are composed of a first pair part and a second pair part</p>

    <ul>
      <li>However, dialogue acts aren’t always followed immediately by their second pair <strong>side sequence</strong> part. The two parts can be separated by a side sequence</li>
      <li>e.g. utterances C17 to A20 constitute a correction subdialogue; another common one would be <strong>clarification questions</strong></li>
    </ul>
  </li>
  <li>
    <p><strong>Initiative</strong>: whoever is taking the lead in the conversation is taking initiative. In normal human-human dialogue, however, it’s more common for initiative to shift back and forth between the participants</p>

    <ul>
      <li><strong>Mixed initiative</strong>, when initiative shifts between the two people, is very difficult for dialogue systems to achieve.</li>
      <li>In contrast, the QA system would be a <strong>user-initiative</strong> system: user specifies a query, and the systems passively responds.</li>
      <li>It’s much easier to design dialogue systems to be <em>passive responders</em>.</li>
    </ul>
  </li>
  <li>
    <p><strong>Inference</strong> and <strong>Implicature</strong>: consider</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220413235809097.png" alt="image-20220413235809097" style="zoom:67%;" /></p>

    <p>Notice that the client does not in fact explicitly answer the agent’s question. We need to inference the answer.</p>
  </li>
</ul>

<h2 id="chatbots">Chatbots</h2>

<blockquote>
  <p>The simplest kinds of dialogue systems are <strong>chatbots</strong> systems that can carry on extended conversations with the goal of <strong>mimicking the unstructured conversations</strong> or characteristic of informal human-human interaction</p>
</blockquote>

<p>A recent example would be Facebook’s BlenderBot:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220414000102746.png" alt="image-20220414000102746" style="zoom:67%;" /></p>

<p>Like practically everything else in language processing, chatbot architectures fall into two classes: <strong>rule-based systems</strong> and <strong>corpus-based systems</strong></p>

<ul>
  <li><strong>Rule-based systems</strong> include the early influential ELIZA and PARRY systems</li>
  <li><strong>Corpus-based systems</strong> are more modern:
    <ol>
      <li>mine large datasets of human-human conversations,</li>
      <li>generate responses by either
        <ul>
          <li>using information retrieval to copy a human response from a previous conversation</li>
          <li>using an encoder-decoder system to generate a response from a user utterance</li>
        </ul>
      </li>
    </ol>
  </li>
</ul>

<h3 id="corpus-based-chatbots">Corpus-based Chatbots</h3>

<p><strong>Corpus-based chatbots</strong>, instead of using hand-built rules, mine conversations of human-human conversations. These systems are enormously <strong>data-intensive</strong>, requiring hundreds of millions or even billions of words for training.</p>

<p>Most corpus based chatbots <strong>produce their responses</strong> to a user’s turn in context either by</p>

<ul>
  <li><strong>retrieval</strong> methods: using information retrieval to grab a response from some corpus that is appropriate given the dialogue context</li>
  <li><strong>generation</strong> methods: using a language model or <em>encoder-decoder</em> to generate the response given the dialogue context</li>
</ul>

<p>Essentially the two architectures look like:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Retrieval Based</th>
      <th style="text-align: center">Generation Based</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220414001622581.png" alt="image-20220414001622581" style="zoom:80%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220414001637909.png" alt="image-20220414001637909" style="zoom:80%;" /></td>
    </tr>
  </tbody>
</table>

<p>So that given a training corpus $C$ which contains many conversations, and given a user’s query being $q$, we consider:</p>

<hr />

<p><strong>Retrieval based</strong>: return some appropriate turn $r$ as response by:</p>

\[r = \arg\max_{r \in C} \frac{q \cdot r}{|q||r|}\]

<p>where $q,r$ could be vectors computed by:</p>

<ul>
  <li>TF-IDF encoding</li>
  <li>train an <strong>encoder</strong> for query and one for response (left figure in the above)</li>
</ul>

<p>For instance, we could train two encoders by fine-tuning BERT so that we get $\text{BERT}_Q,\text{BERT}_R$:</p>

\[h_q = \text{BERT}_Q(q)[CLS]\\
h_r = \text{BERT}_R(r)[CLS]\]

<p>where recall that the <code class="language-plaintext highlighter-rouge">CLS</code> token is used to encode the entire sentence. Then:</p>

\[r = \arg\max_{r \in C} h_q \cdot h_r\]

<hr />

<p><strong>Generation Based</strong>: think of response production as an encoder-decoder task — ==transducing from the user’s prior turn to the system’s turn==. So basically can treat it as a kind of translation.</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220414002318125.png" alt="image-20220414002318125" style="zoom:50%;" /></p>

<p>Recall that for encoder-decoder models, it is auto-regressively generating but <strong>conditioned on the entire query $q$</strong>:</p>

\[\hat{r}_{t+1} = \arg\max_{w \ni V} P(w|q,r_1,...,r_{t})\]

<p>but sometimes instead of just user’s query, we can encode the <strong>entire conversation</strong> to be conditioned on.</p>

<hr />

<p>Other ideas for generation:</p>

<ul>
  <li>fine-tune a large language model/<strong>decoder only</strong> on a conversational dataset and use the language model directly as a response generator.</li>
  <li>https://arxiv.org/pdf/1606.01541.pdf using Deep Reinforcement Learning</li>
  <li>https://aclanthology.org/D17-1230.pdf using Adversarial Learning</li>
</ul>

<h2 id="gus-simple-frame-based-dialogue-systems">GUS: Simple Frame-based Dialogue Systems</h2>

<blockquote>
  <p>We turn now to <strong>task-based dialogue</strong>, in which a dialogue system has the goal of helping a user solve some task like making an airplane reservation</p>
</blockquote>

<p>First some terminologies:</p>

<ul>
  <li>A <strong>frame</strong> is a kind of knowledge structure representing the kinds of intentions the system can extract from user</li>
  <li>A frame consists of a collection of <strong>slots</strong>, each of which can take a set of possible <strong>values</strong>.
    <ul>
      <li>basically specifies what the system ==needs to know==</li>
    </ul>
  </li>
  <li>A set of frames is sometimes called a <strong>domain ontology</strong>.</li>
</ul>

<p>For example, in the travel domain:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220414003439552.png" alt="image-20220414003439552" style="zoom: 67%;" /></p>

<p>where:</p>

<ul>
  <li>
    <p>a lot might be of type <em>city</em>, <em>date</em>, <em>time</em></p>
  </li>
  <li>
    <p>this would be an <strong>example of a frame</strong></p>
  </li>
  <li>
    <p>technically, many <code class="language-plaintext highlighter-rouge">Types</code> in such a system is itself a frame. For instance</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220414003637003.png" alt="image-20220414003637003" style="zoom:67%;" /></p>
  </li>
</ul>

<h3 id="control-structure-for-frame-based-dialogue">Control structure for frame-based dialogue</h3>

<blockquote>
  <p>The system’s goal is to <strong>fill the slots</strong> in the frame with the fillers the user intends, and <strong>then perform the relevant action</strong> for the user (answering a question, or booking a flight).</p>
</blockquote>

<p>To do this, the system need to do:</p>

<ol>
  <li><strong>asks questions</strong> of the user (using pre-specified question templates associated with each slot of each frame)
    <ul>
      <li>If a user’s response fills multiple slots, the system fills all the relevant slots, and then continues asking questions to fill the remaining slots</li>
      <li>there are also <strong>condition-action rules</strong> attached to slots. For example: a rule attached to the <code class="language-plaintext highlighter-rouge">DESTINATION </code>slot for the plane booking frame, once the user has specified the destination, might automatically enter that city as the default <code class="language-plaintext highlighter-rouge">StayLocation </code>for the related hotel booking frame.</li>
    </ul>
  </li>
  <li>Many domains <strong>require multiple frames</strong>. Then this control system needs to disambiguate <strong>which slot</strong> of which frame a given input is supposed to fill</li>
  <li>Once the system has enough information it <strong>performs the necessary action</strong> (like querying a database of flights) and returns the result to the user</li>
</ol>

<p>Exactly how do we do step 1 and 2? This is in the section covered below.</p>

<h3 id="determining-domain-intent-and-slot-fillers-in-gus">Determining Domain, Intent, and Slot fillers in GUS</h3>

<p>How do we implement the above control system? We need to essentially do three things:</p>

<ul>
  <li>The first task is <strong>domain classification</strong>: is this user for example talking about airlines?</li>
  <li><strong>user intent determination</strong>: what general task or goal is the user trying to accomplish?</li>
  <li>Finally, we need to do <strong>slot filling</strong>: extract the particular slots and fillers that the user intends the system to understand</li>
</ul>

<blockquote>
  <p>The <strong>slot-filling</strong> method used in the original GUS system, and still quite common in industrial applications, is to use <strong>handwritten rules</strong></p>
</blockquote>

<h3 id="generation-in-gus">Generation in GUS</h3>

<p>Finally, once all information are collected and necessary actions are performed by the system, we <strong>perform language generation</strong> to respond to user.</p>

<ul>
  <li>Frame-based systems tend to use <strong>template-based generation</strong></li>
  <li>or <strong>encoder-decoder network</strong> with dependency on the dialogue state (i.e. the question user just asked)</li>
</ul>

<h2 id="the-dialogue-state-architecture">The Dialogue-State Architecture</h2>

<blockquote>
  <p>Modern research systems for task-based dialogue are based on a more sophisticated version of the frame-based architecture called the <strong>dialogue-state</strong> or or <strong>belief-state</strong> architecture.</p>
</blockquote>

<p>Moderm architecture looks like the following:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220414011150489.png" alt="image-20220414011150489" style="zoom:67%;" /></p>

<p>where:</p>

<ul>
  <li>for audio input/output, we had this extra two modules on the left</li>
  <li>the other four components are part of both spoken and textual dialogue systems
    <ul>
      <li>For example, like the GUS systems, the dialogue-state architecture has a component (<strong>Natural Language Understanding Module</strong>) for extracting slot fillers from the user’s utterance, but generally using machine learning rather than rules.</li>
      <li>The <strong>dialogue state tracker</strong> maintains the current state of the dialogue (which include the user’s most recent dialogue act, plus the entire set of slot-filler constraints the user has expressed so far).</li>
      <li><strong>dialogue policy</strong> decides what the system should do or say next: e.g. wen to ask clarification question, when to make a suggestion, etc.</li>
      <li><strong>natural language generation</strong>: condition on the exact context to produce turns that seem much more natural</li>
    </ul>
  </li>
</ul>

<h3 id="dialogue-acts">Dialogue Acts</h3>

<p>Different types of dialogue systems <strong>require labeling different kinds of acts</strong>, and so the tagset—defining what a dialogue act is exactly— tends to be designed for particular tasks. For example</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Dialogue Act</th>
      <th style="text-align: center">Labelled Conversation</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220414020147489.png" alt="image-20220414020147489" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220414020239096.png" alt="image-20220414020239096" style="zoom:80%;" /></td>
    </tr>
  </tbody>
</table>

<p>note that the above example also showed the content of each dialogue acts, which are the <strong>slot fillers</strong> being communicated</p>

<h3 id="slot-filling">Slot Filling</h3>

<blockquote>
  <p>Here, we discuss how the task of slot-filling, and the simpler tasks of domain and intent classification, are typically done. This is still part of the job of the <strong>Natural Language Understanding Module.</strong></p>
</blockquote>

<p>We consider the following situation:</p>

<ul>
  <li>
    <p><strong>input</strong>: <em>“I want to fly to San Francisco on Monday afternoon please”</em></p>
  </li>
  <li>
    <p><strong>output</strong>: domain is AIRLINE, intent is SHOWFLIGHT, and the fillers being</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220414020743955.png" alt="image-20220414020743955" style="zoom:67%;" /></p>
  </li>
</ul>

<p>A simple architecture that does is is simply:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220414020838190.png" alt="image-20220414020838190" style="zoom:67%;" /></p>

<p>which is basically a <strong>Sequence classification</strong> model such that:</p>

<ul>
  <li>we use BERT to embed each input</li>
  <li>then pass though FFNN with a softmax so that:
    <ul>
      <li>for each word, decide which tag it is</li>
      <li>for the last tag <code class="language-plaintext highlighter-rouge">&lt;EOS&gt;</code>, use SoftMax to classify which intent and domain it is</li>
    </ul>
  </li>
</ul>

<p>Then, once the sequence labeler has tagged the user utterance, a filler string can be extracted for each slot from the tags (e.g., “San Francisco”), and these word strings can then be normalized to the correct form in the ontology</p>

<h3 id="dialogue-state-tracking">Dialogue State Tracking</h3>

<blockquote>
  <p>The job of the dialogue-state tracker is to determine both the <strong>current state of the frame</strong> (the fillers of each slot), as well as the most <strong>recent dialogue act</strong>.</p>
</blockquote>

<p>Since dialogue acts place some constraints on the slots and values, the tasks of <strong>dialogue-act detection</strong> and <strong>slot-filling</strong> are often performed jointly.</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220414021745317.png" alt="image-20220414021745317" style="zoom:67%;" /></p>

<p>The simplest dialogue state tracker might just take the output of a slot-filling sequence-model. But more complicated cases include:</p>

<ul>
  <li>detecting correction acts</li>
  <li>value being changed in the current sentence or should be carried over from previous sentences</li>
</ul>

<p>Essentially it would be a <strong>condensed information</strong> that related to the entire conversation so far. This will be used in the next module to decide what policy to take.</p>

<h3 id="dialogue-policy">Dialogue Policy</h3>

<blockquote>
  <p>The goal of the <strong>dialogue policy</strong> is to decide <strong>what action the system should take next</strong>, that is, what dialogue act to generate.</p>
</blockquote>

<p>Formally, at turn $i+1$ we want to predict <strong>what action $a_{i+1}$ to take</strong>, which would be based on the entire sequence of dialogue:</p>

\[\hat{a}_{i+1} = \arg\max_{a_{i+1} \in A}P(a_{i+1}|s_i)\]

<p>for $s_i$ the state being encoded with representation of:</p>

<ul>
  <li>current state of Frame $i$</li>
  <li>previous user and system dialogue actions</li>
  <li>etc.</li>
</ul>

<p>Learning a <strong>best policy</strong> would be done by ==reinforcement learning== system gets a <strong>reward at the end of the dialogue</strong>, and uses that reward to train a policy to take actions.</p>

<p>Additionally, this module might need to take on task of choosing some attributes (slots and values) which plans on what to say to the user, before feeding into the NLG module.</p>

<h3 id="natural-language-generation-module">Natural Language Generation Module</h3>

<p>Once a dialogue act has been decided, we need to generate the text of the response to the user.</p>

<blockquote>
  <p>The task of natural language generation (NLG) in the information-state content architecture is often modeled in two stages:</p>

  <ul>
    <li><strong>content planning</strong> (what to say)</li>
    <li><strong>sentence sentence realization</strong> (how to say it).</li>
  </ul>
</blockquote>

<p>Here we assume that the previous module has chosen the dialogue act to generate, and chosen some attributes (slots and values) that the planner wants to say to the user.</p>

<p>Example input/output looks like</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220414023112417.png" alt="image-20220414023112417" style="zoom: 50%;" /></p>

<p>where In the first example:</p>

<ul>
  <li>the content planner has chosen the dialogue act <code class="language-plaintext highlighter-rouge">RECOMMEND </code>and some particular slots <code class="language-plaintext highlighter-rouge">(name, neighborhood, cuisine)</code> and their fillers</li>
  <li>The goal of the sentence realizer is to generate a sentence like lines 1 or 2 shown in the figure (here we have two samples as we can sample the generation module again and get a different output)</li>
</ul>

<p>However, the problem here is <strong>training data</strong>: it is hard ot get a good combination of every possible act/slots:</p>

<ul>
  <li>Therefore it is common in sentence realization to increase the generality of the training examples by <strong>delexicalization</strong> (basically remove the formal nouns, so we get a template)</li>
  <li>or any other <strong>data augmentation</strong> tricks such as <a href="#Noise Injection and Self-Training">Noise Injection and Self-Training</a></li>
</ul>

<h2 id="persuasive-system">Persuasive System</h2>

<p>This is a more advanced system, which is technically a task-oriented system but with the aim of <strong>persuading people to do something</strong>, So, to achieve that goal, certainly some social aspects of the conversation is needed.</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418162151114.png" alt="image-20220418162151114" style="zoom: 33%;" /></p>

<p>Some potential uses of this system include:</p>

<ul>
  <li>exercise persuation</li>
  <li>suisicde counseling (train counseller by acting as a visitor)</li>
  <li>social distancing</li>
</ul>

<p>Again, the aim is to <strong>change people’s belief and behavior</strong> (might have ethnical issues). How do we do that using machine learning?</p>

<h3 id="challenges-in-persuasion">Challenges in Persuasion</h3>

<p>The basics of data-driven methods for persuasion includes the following three modules:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418162626800.png" alt="image-20220418162626800" style="zoom: 50%;" /></p>

<p>where:</p>

<ul>
  <li>like all tasks, it is important to collect some good data</li>
  <li>then, we want our chatbot to be able to <strong>understand the semantics</strong> of user’s utterance (i.e. what they said)</li>
  <li>finally, it moves on to persuade by picking some <strong>strategy</strong> (and then generate text response)</li>
</ul>

<hr />

<p><strong>Data Challenges</strong></p>

<blockquote>
  <p>To start a good project/model, first we need to <strong>collect good data</strong>.</p>
</blockquote>

<p>Like many ML tasks, collecting good data is always important. But that is not easy because even chaning a single word in a sentence could have lead to an entire new utterance. Therefore, the set of <strong>conversation path</strong> with each node being a sentence is exponential</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418201834432.png" alt="image-20220418201834432" style="zoom:33%;" /></p>

<p>so ideally we want our training data to cover <em>all possible dialog trajectories</em>, but that is intractable. Hence some approaches include</p>

<ul>
  <li>learning a subset of the tree and hope for the best</li>
  <li>try to merge different branches to make the tree smaller</li>
  <li>etc.</li>
</ul>

<p>Additionally, as our aim is an <strong>optimization</strong> task, there could be different optimal path for a different user to be persuaded</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418202109304.png" alt="image-20220418202109304" style="zoom: 33%;" /></p>

<p>so that given some user information/background, the system needs to pick an optimal path down the tree <strong>for that particular user</strong></p>

<hr />

<p><strong>Semantic Challenges</strong></p>

<p>Many large models are able to make language generation fluent, but they often ==do not understand deep level semantics== of the language (e.g. Microsoft’s Tay AI), which can lead to unsafe systems.</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418202331875.png" alt="image-20220418202331875" style="zoom: 33%;" /></p>

<p>one potential task on this direction would be: how do we build a system that can “filter out” those dangerous generated languages?</p>

<hr />

<p><strong>Strategy Challenges</strong></p>

<p>In certain scenario, some persuasive strategy would be more effective than another.</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418202610174.png" alt="image-20220418202610174" style="zoom: 33%;" /></p>

<p>for instance, hearts and cakes could be more persuasive than pizzas in this scenario.</p>

<h3 id="dialog-data-collection">Dialog Data Collection</h3>

<p>How do we get dialog data?</p>

<ul>
  <li>production dialog (i.e. companies with their customers) are not available due to privacy issues.
    <ul>
      <li>a good source would be customer services, but again there are privacy issues</li>
    </ul>
  </li>
  <li>role-play persuasion would be ineffective if there is <strong>lack of incentives</strong>. So persuasive quality might not be good.</li>
</ul>

<p>Then people decided to <strong>use monetary incentive</strong> (i.e. using CrowdFlower/Mechanical Turks), with the persuasion task of donation:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418203147938.png" alt="image-20220418203147938" style="zoom:50%;" /></p>

<ul>
  <li>
    <p>persuaders receive bonus when persuadees donate</p>
  </li>
  <li>
    <p>persuadees donation sent to the charity</p>
  </li>
  <li>
    <p>also collect big-five personality of the persuadee (for personalization system)</p>
  </li>
</ul>

<p>Hence the overall work flow looks like:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418203304657.png" alt="image-20220418203304657" style="zoom: 50%;" /></p>

<hr />

<p>Some examples include: (Persuasion for Good dataset)</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418203511141.png" alt="image-20220418203511141" style="zoom: 33%;" /></p>

<p>where the person on the left will be the crowd-funded persuader.</p>

<h4 id="hierarchical-intent-annotation">Hierarchical Intent Annotation</h4>

<blockquote>
  <p>We also want to build a system that understand some <strong>semantics</strong> of the sentences/dialogs.</p>

  <ul>
    <li>so not just fluency, but also semantics</li>
  </ul>
</blockquote>

<p>The idea is to annotate each sentence an <strong>intent/dialog act</strong>, which can be hierarchical</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418163705297.png" alt="image-20220418163705297" style="zoom:50%;" /></p>

<p>where MIDAS were used for social chatbot annotation.</p>

<p>An example of <strong>annotated</strong> piece of dialog would be</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418163827199.png" alt="image-20220418163827199" style="zoom: 50%;" /></p>

<h3 id="classic-modular-dialog-system">Classic Modular Dialog System</h3>

<p>Recall that we had the framework for dialog system, usually it looks like</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418163940380.png" alt="image-20220418163940380" style="zoom: 50%;" /></p>

<p>where in particular:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Module Name</th>
      <th style="text-align: center">Input/Output</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">NLU</td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418204125487.png" alt="image-20220418204125487" style="zoom: 33%;" /></td>
    </tr>
    <tr>
      <td style="text-align: center">DST</td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418204220033.png" alt="image-20220418204220033" style="zoom: 33%;" /></td>
    </tr>
    <tr>
      <td style="text-align: center">DPL</td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418204457199.png" alt="image-20220418204457199" style="zoom: 33%;" /></td>
    </tr>
    <tr>
      <td style="text-align: center">NLG</td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418204555107.png" alt="image-20220418204555107" style="zoom: 33%;" /></td>
    </tr>
  </tbody>
</table>

<ul>
  <li><strong>NLU</strong>: will be to understand the user’s utterances (i.e. semantic intent of the sentence)
    <ul>
      <li>usually used for <strong>intent detection</strong>, then any Seq-classification model would work (as we have a limited intent)</li>
      <li>usually it is used per sentence based, which is why we needed some kind of accumulator later which is the DST</li>
    </ul>
  </li>
  <li><strong>DST</strong>: input dialog history, output <strong>slot and values</strong>
    <ul>
      <li>the aim is to track dialog state: sequence of <strong>information</strong> that is <strong>critical to remember</strong></li>
      <li>e.g. for restaurant domain: how much food you want, location of restaurant</li>
      <li>e.g. for donation persuasion: how much donation we got for far, etc.</li>
    </ul>
  </li>
  <li><strong>DPL</strong>: given the current state and user’s input, <strong>what policy/action should we take</strong> now?
    <ul>
      <li>e.g. maybe we should provide some facts now</li>
    </ul>
  </li>
  <li><strong>NLG</strong>: given the action we want to take, generate the output languages</li>
</ul>

<p>Now with a modular network, we can train it:</p>

<ul>
  <li>each module separately</li>
  <li>jointly/end-to-end</li>
  <li>some other way</li>
</ul>

<h4 id="modular-training-drawbacks">Modular Training Drawbacks</h4>

<p>The problem with this kind of training is that:</p>

<ul>
  <li>heavy expert involvement, to tune each module</li>
  <li>hard to tune individual modules, hence usualy need end-to-end trainng</li>
  <li>heavy manual annotation needed for training data
    <ul>
      <li>because each module needs different input/output</li>
    </ul>
  </li>
</ul>

<h4 id="end-to-end-drawbacks">End-to-End Drawbacks</h4>

<p>Avoiding the training/data annotation problem for modular training, we can train end-to-end:</p>

<ul>
  <li>which has been done on social chatbots a lot, such as GPT-2</li>
</ul>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418164610593.png" alt="image-20220418164610593" style="zoom:50%;" /></p>

<p>However, here we also have problems:</p>

<ul>
  <li>difficult for error analysis: you <strong>don’t know which module went wrong</strong>! (DST error? NLG error?)</li>
  <li>since they don’t have semantic controls, we nede a large amount of data to train</li>
</ul>

<h4 id="moss-a-combination">MOSS: A combination</h4>

<p>Here we combine the best of both types:</p>

<ul>
  <li>use one encoder (shared), but four decoders (separated)</li>
</ul>

<p>The aim is to build a system that is <strong>end-to-end trainable</strong> but also <strong>trainable in a modular fashion</strong> (without going out of sync):</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Architecture</th>
      <th style="text-align: center">Pipeline</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418205320854.png" alt="image-20220418205320854" style="zoom:33%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418205627564.png" alt="image-20220418205627564" style="zoom: 33%;" /></td>
    </tr>
  </tbody>
</table>

<p>where:</p>

<ul>
  <li>for end-to-end training, the shared encoder weights will only be updated once</li>
  <li>
    <p>for modular training, shared encoder will <strong>also be updated</strong> so its “knowledge” can still be used in other modules (in sync)</p>
  </li>
  <li>as you see in the pipeline, essentially each module uses output of the shared encoder but <strong>conditions/uses</strong> on the output of the previous module as well</li>
</ul>

<blockquote>
  <p>One key advantage of this architecture is that we can train it even if we only have <strong>partial labels</strong> (e.g. only have 30% fully labelled, or only 40% labelled with intent)</p>
</blockquote>

<p>For instance:</p>

<p>Fine-tuning on donation persuasion: we only have 300 labeled but 700 unlabeled data. We can</p>

<ol>
  <li>
    <p>first do <em>end-to-end training</em>: train all 1000 unlabeled on NLG, which does not need intent labeling</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418210339653.png" alt="image-20220418210339653" style="zoom:33%;" /></p>
  </li>
  <li>
    <p>then do <em>modular training</em>: we can tune all again with <strong>300 labelled</strong> to update the other three</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418210356822.png" alt="image-20220418210356822" style="zoom:50%;" /></p>
  </li>
</ol>

<p>One take-away here is that it kind of depends how much data you have:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418210805942.png" alt="image-20220418210805942" style="zoom: 33%;" /></p>

<p>where:</p>

<ul>
  <li>if you have a lot of training dialogs then you might not even need to label them and it could work</li>
  <li>if you don’t have much training dialogs, then having high quality labeled ones are needed</li>
</ul>

<hr />

<p>Other advantage of this kind of architecture is that:</p>

<ul>
  <li>easy to perform error analysis (we can decode the output for each module for a given input)</li>
  <li>can handle complex task</li>
</ul>

<h3 id="human-evaluation-on-persuasion">Human Evaluation on Persuasion</h3>

<p>To analyze the performance of the model simply:</p>

<ul>
  <li>compare against human persuaders: how many percent of persuadee did it succeed to persuade?</li>
  <li>build a baseline: take GPT-2 and just tune end-to-end on all 1000 data</li>
</ul>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418165357936.png" alt="image-20220418165357936" style="zoom:50%;" /></p>

<p>Why can human do so well? Where ==error analysis becomes important==!</p>

<h4 id="error-analysis-unfaithful-outputs">Error Analysis: Unfaithful Outputs</h4>

<p>Checking on some outputs, we see that sometimes chatbot lies when It has never seen an utterance.</p>

<ul>
  <li>it <strong>failed to understand the semantics</strong>, and generated something related some the training data without understanding it</li>
</ul>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418165535004.png" alt="image-20220418165535004" style="zoom:50%;" /></p>

<p>This can be dangerous in <strong>deployment</strong>. Therefore one approach is to have a ==safety net== that can <strong>rank</strong> which responses is better</p>

<ol>
  <li>
    <p>use beam search, nucleus sampling, temperature sampling, to get $N$ candidates</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418165726392.png" alt="image-20220418165726392" style="zoom:50%;" /></p>
  </li>
  <li>
    <p>gather training data by having <strong>humans</strong> ranking it</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418165846745.png" alt="image-20220418165846745" style="zoom:50%;" /></p>

    <p>given some sampled $N$ samples, with the intent and semantic slot, rank those responses by a human in the loop</p>
  </li>
  <li>
    <p>once we have samples of human ranking, ==train a classifier== to rank it</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418211910164.png" alt="image-20220418211910164" style="zoom: 33%;" /></p>
  </li>
</ol>

<p>Then, after this fix, we got a 10% boost from the MOSS architecture</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418170003541.png" alt="image-20220418170003541" style="zoom:50%;" /></p>

<p>but still a bit less than human performance.</p>

<h4 id="error-analysis-persuasion-strategies">Error Analysis: Persuasion Strategies</h4>

<p>Consider the following example</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Failed Cases</th>
      <th style="text-align: center">Success Cases</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418170147913.png" alt="image-20220418170147913" style="zoom: 50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418212225807.png" alt="image-20220418212225807" style="zoom: 33%;" /></td>
    </tr>
  </tbody>
</table>

<p>where we see that there is a wide variety of actions to take than <strong>credibility appeals</strong> when persuading people.</p>

<ul>
  <li>Therefore, we also need <strong>persuasion strategies</strong> (i.e. <em>how</em> to persuade), ==in addition== of the dialog act of <code class="language-plaintext highlighter-rouge">propose-donation</code> (by the DPL module, on <em>what</em> to do next)</li>
</ul>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418170330288.png" alt="image-20220418170330288" style="zoom: 50%;" /></p>

<ul>
  <li>
    <p>so we added this module of <strong>DSP: dialog strategy planning</strong>, into the pipeline</p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418170541413.png" alt="image-20220418170541413" style="zoom:50%;" /></p>

    <p>note that of course this module needs past trajectory of user’s intent/feedback as well as system’s intent to decide what is the best strategy to pick</p>
  </li>
</ul>

<p>Hence essentially this module will be learning the <strong>successful trajectories</strong></p>

<ul>
  <li>e.g. a finite state transducer, or any RL type algorithm</li>
</ul>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418170724440.png" alt="image-20220418170724440" style="zoom:50%;" /></p>

<hr />

<p>Finally, once added, this can further improve can be made</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418213013312.png" alt="image-20220418213013312" style="zoom: 33%;" /></p>

<h4 id="error-analysis-personality-adaptation">Error Analysis: Personality Adaptation</h4>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418213107004.png" alt="image-20220418213107004" style="zoom: 33%;" /></p>

<h3 id="dialogs-is-more-than-nlp">Dialogs is More than NLP</h3>

<p>For production use in reality, dialogs requires much more than just NLP:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418171011546.png" alt="image-20220418171011546" style="zoom:50%;" /></p>

<p>where the Language understanding, Dialog Management, and Language Generation would be handled by NLP. But we also need:</p>

<ul>
  <li>most of the time conversations are spoken: hence we have <strong>multi-modal data</strong> such as hand gestures and audio inputs
    <ul>
      <li>e.g. speeches have much noise. Can we still recover the intent with noises?</li>
      <li>e.g. given some emotion of the speaker, what is the best strategy?</li>
    </ul>
  </li>
  <li>need <strong>common senses</strong> to deal with out-of-distribution conversations (e.g. erratic inputs)</li>
  <li>other human factors used for judging the quality of conversations</li>
</ul>

<h2 id="ethnical-consideration-of-chatbots">Ethnical Consideration of Chatbots</h2>

<p>36% of the people thought that they are humans (but they are mechanical turkers, so it depends on the education level)</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418213919831.png" alt="image-20220418213919831" style="zoom: 33%;" /></p>

<p>which can be very dangerous</p>

<ul>
  <li>
    <p>e.g. scamming people for money.</p>
  </li>
  <li>
    <p>but you could also train a bot to depend against scammers as well</p>
  </li>
</ul>

<p>But anyway</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220418214009877.png" alt="image-20220418214009877" style="zoom: 33%;" /></p>

<p>though it is rarely exercised.</p>

<h1 id="meta-learning-in-nlp">Meta Learning in NLP</h1>

<p>Useful when you have <strong>low resource</strong> (training sets), but you still want to achieve some task. Commonly, the familar methods you might know include:</p>

<ul>
  <li>taking a pre-trained model then <strong>fine-tune</strong> on your limited resource task (transfer learning)</li>
  <li>but here, we will introduce a <strong>new method</strong> to solve this kind of problem</li>
</ul>

<h2 id="what-is-meta-learning">What is Meta-Learning</h2>

<p>To understand what meta-learning is doing, we will see how we got <strong>from the transfer learning to the meta-learning</strong> task</p>

<ul>
  <li>transfer learning</li>
  <li>multitask learning</li>
  <li>meta-learning</li>
</ul>

<hr />

<p><strong>Transfer Learning</strong></p>

<p>Assume we have learnt a network and is trained for english to french translation with enough data.</p>

<p>But now we have a new task, which <strong>does not have</strong> enough data. But notice that we could had a simliar architecture</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220420161918427.png" alt="image-20220420161918427" style="zoom: 40%;" /></p>

<p>so that:</p>

<ul>
  <li>encoder layers <strong>should work in both cases</strong> because they are used to “understand english”</li>
  <li>then, all we need to do is to <strong>fine-tune</strong> the decoder layers, which is essentially transfer learning.</li>
</ul>

<p>This works pretty well because in reality, because good models typiocally have large encoder layers but only few decoder layers.</p>

<hr />

<p><strong>Multitask learning</strong></p>

<p>Now suppose we are given a training dataset that have:</p>

<ul>
  <li>a lot of task (e.g. english to french, english to chinese, etc)</li>
  <li>ach task has only a few training data</li>
</ul>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Data</th>
      <th style="text-align: center">Architecture</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220420162059537.png" alt="image-20220420162059537" style="zoom: 40%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220420162320284.png" alt="image-20220420162320284" style="zoom:40%;" /></td>
    </tr>
  </tbody>
</table>

<p>the data for each language pair is too small, but it could be that <strong>all of them combined is enough</strong>. Then:</p>

<ul>
  <li>
    <p>you have the architecture on the right, which has a <strong>shared encoder</strong> which learns through all training data</p>
  </li>
  <li>
    <p>but what about the loss of that shared layer?</p>

    <ul>
      <li>
        <p>the loss will <strong>most often be a linear combination of $L_i$ for task $T_i$</strong></p>

\[\mathcal{L}(\theta^{sh}, \theta^1, ...,\theta^T) =\sum_{i=1}^T \alpha_i \mathcal{L}_i(\theta^{sh}, \theta^i, D_i)\]

        <p>so that each task essentially is $\mathcal{L}_i(\theta^{sh}, \theta^i, D_i)$ for having a dataset $D_i$</p>
      </li>
    </ul>
  </li>
</ul>

<hr />

<p><strong>Meta-Learning:</strong> two types of views of the task</p>

<ul>
  <li><strong>Mechanistic View</strong>:
    <ul>
      <li>normally we train by reading in the training dataset of samples, then inference on new sample</li>
      <li>here, we train with a dataset where <strong>each training sample is a dataset of a task $T_i$</strong>. This dataset will be called a <strong>meta-dataset</strong></li>
      <li>of course, the aim of this is to <strong>perform well on a new task $T$ with its dataset</strong></li>
    </ul>
  </li>
  <li><strong>Probabilistic View</strong>:
    <ul>
      <li>from the meta-dataset, we aim to extract a <strong>good prior</strong> that should be shared from those set of tasks</li>
      <li>then, doing a few-shot learning on a new task will <strong>use this prior</strong> and then train to infer posterior parameters</li>
    </ul>
  </li>
</ul>

<p>In general, on common application of this is to make it ==perform well under few-shot conditions==.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Typical View</th>
      <th style="text-align: center">Meta-Learning</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220420163130731.png" alt="image-20220420163130731" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220420163134630.png" alt="image-20220420163134630" /></td>
    </tr>
  </tbody>
</table>

<p>so essentially we have:</p>

<ul>
  <li>at training: train support, train query sets</li>
  <li>at testing: test support, test query sets</li>
  <li>we want the model to <strong>perform well in test support and test query</strong></li>
</ul>

<p>Therefore, we want to ==simulate the testing environment== during our training procedure</p>

<ul>
  <li>just like normal model training where our train/test environment are <strong>both classification</strong>, here our train/test environment should <strong>both be few-shot learning</strong></li>
  <li>how do we do this? Essentially see <a href="#Model Agnostic Meta Learning">Model Agnostic Meta Learning</a></li>
</ul>

<h2 id="meta-learning-algorithms">Meta-Learning Algorithms</h2>

<p>Broadly speaking, there are two types of meta-learning algorithms:</p>

<ul>
  <li><strong>Optimization Based</strong>: we still optimize over some loss of a model, but we introduce a <strong>new training paradigm</strong> that is suitable for donig few-shot learning at test time
    <ul>
      <li>i.e. at test time, we can <em>fine-tune</em> our model fast when only given a few-shot training samples</li>
    </ul>
  </li>
  <li><strong>Metric Based:</strong> learning a model that gives a <strong>good representation/embedding</strong> for each class $c_i$ (under few-shots), from which we can apply some metrics (e.g. distance) to measure, for a query sample $x_q$ which class $c_i$ is belongs to
    <ul>
      <li>i.e. at test time, we <em>directly use this model</em> (which learns some metrics) when only given a few-shot training samples</li>
    </ul>
  </li>
</ul>

<h3 id="model-agnostic-meta-learning">Model Agnostic Meta Learning</h3>

<p>Suppose we have some model $f_\theta$ we want to use, for example a CNN.</p>

<blockquote>
  <p>The goal of few-shot meta-learning is to train a model $f_\theta$ that can quickly adapt to a new task using only a few datapoints and training update iterations to $\theta$.</p>

  <ul>
    <li>in other words, we want some ==good initialization of $\theta_0$== (learnt from other tasks as a “warm start”) such that in a new task it learns fast with only few samples</li>
  </ul>
</blockquote>

<p>So how do we get such a handy $\theta_0$? In effect, the meta-learning problem <strong>treats entire tasks as training examples</strong>, i.e. we consider</p>

<ul>
  <li>==a distribution over tasks $p(T)$== that we want our model to adapt to</li>
  <li>for each task $T_i$ could have its own loss $\mathcal{L}_{T_i}$ and its training data distribution $q_i(x)$</li>
</ul>

<p>Then, during <strong>meta-training</strong> (in a $K$-shot learning setting), the idea is, given a model $f_\theta$:</p>

<ol>
  <li>
    <p>consider some random initialization of $\theta_0 \equiv \theta \equiv \phi$</p>
  </li>
  <li>
    <p>while not done:</p>

    <ol>
      <li>
        <p>sample a batch of tasks $T_{i}$s to train from $p(T_i)$:</p>

        <ol>
          <li>sample  a task $T_i$, e.g. compare “cat v.s. dog”</li>
          <li>draw $K$ samples from $q_i(x)$ for training, known as ==support set==</li>
          <li>compute its loss $L_{T_i}(f_\theta)$ using the $\theta$ initialization</li>
          <li>update/see how well this initialization works by doing a few descents:</li>
        </ol>

\[\theta_i' = \theta - \alpha \nabla_\theta L_{T_i}(f_\theta)\]

        <p>for that specific $T_i$.</p>
      </li>
      <li>
        <p>update the <strong>initialization $\theta\equiv \phi$</strong> as how the <strong>total loss over all tasks can be decreased if I have a better $\theta$</strong> to begin with</p>

\[\theta \leftarrow \theta - \beta \nabla_\theta\sum_{T_i} L_{T_i}(f_{\theta_i'})\]

        <p>where:</p>

        <ul>
          <li>
            <p>$f_{\theta_i’}$ is like the same model “fine-tuned” on task $T_i$.</p>
          </li>
          <li>
            <p>$L_{T_i}(f_{\theta_i’})$ will now be evaluated on the <strong>new samples</strong> from $q_i(x)$, known as the ==query set== to test its generalization ability as well</p>
          </li>
          <li>
            <p>since we are taking derivative w.r.t $\theta$, and we know (if only doing a single iteration)</p>

\[\theta_i' = \theta - \alpha \nabla_\theta L_{T_i}(f_\theta)\]

            <p>essentially this term include <strong>loss of losses</strong>.</p>
          </li>
        </ul>
      </li>
    </ol>
  </li>
  <li>
    <p>output the learnt $\theta$ being the ==better “initialization” parameters for your model $f_\theta$ which is ready for other tasks==</p>
  </li>
</ol>

<p>Hence the algorithm is</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Algorithm</th>
      <th style="text-align: center">Update Tree</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220331182301680.png" alt="image-20220331182301680" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220420163707807.png" alt="image-20220420163707807" style="zoom: 50%;" /></td>
    </tr>
  </tbody>
</table>

<p>which we know is agonistic of what model $f$ we picked.</p>

<ul>
  <li>so that essentially we update $\theta \to \theta’$, where the intermediate $\theta_i$ for each task will be only used for computing the loss for $\theta$ and updating it.</li>
  <li>
    <p>since $\theta_i$ comes from computing task loss $\mathcal{L}<em>i$ and doing $\nabla</em>{\theta_i}\mathcal{L}_i$, and the final $\mathcal{L}(\theta)$ will depend on $\theta_i$, we essentially would need to compute <strong>Hessian of $\nabla^2_{\theta_i} \mathcal{L}_i$</strong> when we update $\theta \to \theta’$. This is computationally expensive, and hence we had work such as the Amazon’s Reptile system that <strong>approximates the hessian</strong> and saves compute power.</p>
  </li>
  <li>resource https://arxiv.org/pdf/1703.03400.pdf</li>
</ul>

<h3 id="metric-based-network">Metric-Based Network</h3>

<p>The most notable example of this is the Siamese network, which has the generic task of classifing whether if the two images are the same.</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220420164128809.png" alt="image-20220420164128809" style="zoom: 50%;" /></p>

<p>however, the difference with normal training is:</p>

<ul>
  <li>
    <p>the two input image could come from <strong>any domain</strong>, e.g. kid’s drawings, signatures, facial photographs, etc.</p>
  </li>
  <li>
    <p>The idea of this network is to use a shared CNN backbone to get an embedding, then then compute probability by looking at the distance, so that the shared CNN backbone in the middle is generalizable.</p>
  </li>
</ul>

<blockquote>
  <p>In general, metric-based network aims at training a network that can produce <strong>good embeddings</strong> for a sample in a new domain (haven’t seen in training).</p>

  <ul>
    <li>with few-shots, then $K$ samples for each class in the domain</li>
  </ul>
</blockquote>

<p>Some other networks should should already know from the Deep Learning course notes:</p>

<ul>
  <li>
    <p><strong>Matching Network</strong></p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220420215419650.png" alt="image-20220420215419650" style="zoom:50%;" /></p>

    <p>which basically creates an embedding for each input $x_i$, then for the new test sample $x_q$:</p>

\[\hat{y} = \sum_{i}a(x_i,x_q)y_i\]

    <p>basically predicting by a weighted average.</p>
  </li>
  <li>
    <p><strong>Prototypical Network</strong></p>

    <p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220420215631978.png" alt="image-20220420215631978" style="zoom:50%;" /></p>

    <p>which basically produces a class prototype vector $c_k$, and then for the new sample $x$ classify the class by looking at the distance between its embedding $f_\phi(x)$ and the class vectors $c_k$</p>
  </li>
</ul>

<p>Basically they all tend to learn a metric/embedding to <strong>produce a good latent space representation</strong> of the class.</p>

<h2 id="applications-in-nlp">Applications in NLP</h2>

<p>How do we apply the idea of meta-learning in NLP applications?</p>

<h3 id="meta-leanring-for-dialog">Meta Leanring for Dialog</h3>

<p>Consider the task of</p>

<ul>
  <li>building a dialog system in domain $A, B, C$</li>
  <li>
    <p>training data of dialogs are in domain $A,E,D,F$</p>
  </li>
  <li>preparing a model $M$ that would work not only in $A,B,C$, but perhaps new domains as well</li>
</ul>

<p>Then essentially it becomes learning a model $M$ that <strong>performs well</strong> given a few-shot learning samples. Hence we consider utilizing MAML algorithm mentioned above:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220420165535700.png" alt="image-20220420165535700" style="zoom:50%;" /></p>

<p>where</p>

<ul>
  <li>$M_k’$ are the temporary models with weights $\theta_k$</li>
  <li>The aim is to update $M$ with $\theta \to \theta’$, such that the final $\theta^*$ would work well under few-shot learning</li>
</ul>

<p>The performance comparision:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220420165657359.png" alt="image-20220420165657359" style="zoom:50%;" /></p>

<p>where when the dialog system is trained with meta-learing is is better than just fine-tuning the model to another task</p>

<h3 id="meta-learning-for-machine-translatoin">Meta Learning for Machine Translatoin</h3>

<p>As mentioned before, it is common to have a MT task that, given a few samples of translating from language $A$ to language $B$, we want it to work even if our training data only contained $C\to D, A\to C, D\to F$, etc.</p>

<p>Graphically, the comparision between Meta-learning and other methods mentioend above is:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220420165920052.png" alt="image-20220420165920052" style="zoom: 50%;" /></p>

<p>so that:</p>

<ul>
  <li>
    <p>for transfer learning, we want to start with $\theta$ that works best in one domain and then <strong>move to others</strong></p>
  </li>
  <li>
    <p>for meta learning, you want to get $\theta$ such that it works ==best at adapation== (in all directions)</p>
  </li>
</ul>

<h3 id="meta-in-context-learning">Meta In Context Learning</h3>

<p>Some research has found that</p>

<blockquote>
  <p>(Large) Language models are <strong>few-shot learners</strong></p>

  <ul>
    <li>basically they seem to work well with few-shot even if the training procedure is just masked language/whatever that is used normally for a language model training</li>
  </ul>
</blockquote>

<p>An example in practice is GPT 3. GPT 3 has huge parameters, and is trained on huge text data.</p>

<ul>
  <li>
    <p>hard to fit in normal school GPUs</p>
  </li>
  <li>
    <p>also hard to fine-tune as the model is huge</p>
  </li>
</ul>

<p>Therefore a new procedure is needed for <strong>few-shot “training”</strong></p>

<ul>
  <li>normally you would imagine we update $\theta$ per step with each new (few-shot) traing data</li>
  <li>but as that is intractable, we can just dump all the examples along with the query as input</li>
</ul>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220420170504178.png" alt="image-20220420170504178" style="zoom: 67%;" /></p>

<p>where:</p>

<ul>
  <li>
    <p>the grey ones are the few-shot examples, the black texts are the machines’ output</p>
  </li>
  <li>
    <p>so that essentially it is few shot learning ==without updating weights==</p>
  </li>
</ul>

<p>How does that even work? As we have transformers in the model:</p>

<ul>
  <li>the model not only attends to the input, it also attends to the context</li>
  <li>therefore, we expect models to <strong>use the attention mechanism</strong> to understand the few-shot</li>
</ul>

<h4 id="in-context-tuning">In Context Tuning</h4>

<p>Recent results shown that, given that in-context learning works, we can also do the following (for smaller models such as GPT2):</p>

<ul>
  <li>instead of doing one step update for the intermediate weights $\theta_i$ in MAML</li>
  <li>we put all the task $T_i$ as a single input with context and fine-tune $\theta \to \theta’$ directly</li>
</ul>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220420171303276.png" alt="image-20220420171303276" style="zoom:67%;" /></p>

<p>so that essentially:</p>

<ul>
  <li>it is <strong>fine-tuning</strong> but the training set is a ==concatenation of support set and query set==</li>
  <li>since it is a concatenation, the problem becomes memory constraint.</li>
  <li>such an update method is also model agnostic</li>
</ul>

<h1 id="bias-in-nlp">Bias in NLP</h1>

<p>Related to ethics and safety of NLP models. Consider cases where:</p>

<ul>
  <li>Language models on Job description preferers/assigns better competency for male engineers over females</li>
  <li>Products such as Amazon Alexa outputting racist texts (just for example)</li>
</ul>

<p>Therefore, in this section we will talk about some methods on</p>

<ul>
  <li>how to <strong>detect biases</strong>
    <ul>
      <li>https://arxiv.org/abs/1608.07187</li>
      <li>https://www.aclweb.org/anthology/N19-1063.pdf</li>
    </ul>
  </li>
  <li>how do to <strong>de-biasing</strong>
    <ul>
      <li>https://www.aclweb.org/anthology/N19-1061.pdf</li>
    </ul>
  </li>
</ul>

<h2 id="bias-in-word-embeddings">Bias in Word Embeddings</h2>

<blockquote>
  <p>In machine learning, essentially bias refers to <strong>prior information/the priors</strong>. The are ==problematic when== such information is derived from aspects of human culture known to lead to harmful behavior</p>

  <ul>
    <li>e.g. Word2Vec: “Man is to computer programmer as woman is to homemaker.”</li>
  </ul>
</blockquote>

<p>Just as there are tests to measure implicit bias in humans, there can be parallel test to measure bias in machine, and today we mostly do this by looking at the <strong>learnt embeddings</strong>. Here, we can consider word level embeddings.</p>

<blockquote>
  <p>Word embedding representations, in addition to encoding semantic meaning, also encode <strong>semantic analogy</strong>.</p>

  <ul>
    <li>using that, we can analyze whether if certain words are gender/race neutral, for example.</li>
  </ul>
</blockquote>

<h3 id="implicit-association-test-and-weat">Implicit Association Test and WEAT</h3>

<p>A famous test by Harvard is useful to measure biases in Human: the Implicit Association Test</p>

<blockquote>
  <p>The IAT measures the <strong>strength of associations between concepts</strong> (e.g., black people, gay people) and evaluations (e.g., good, bad) or stereotypes (e.g., athletic, clumsy). The main idea is that making a <strong>response is easier when closely related</strong> items share the same response key.</p>
</blockquote>

<p>Some useful word pairs we will discuss are:</p>

<ul>
  <li>Flowers, insects - pleasant, unpleasant</li>
  <li>European American Names, African American Names - pleasant, unpleasant</li>
  <li>Female names, male names - family, career</li>
  <li>etc.</li>
</ul>

<p>This essentially inspires how we can perform a similar task for word embeddings</p>

<blockquote>
  <p><strong>Word-Embedding Association Test (WEAT)</strong> essentially computes such association of concepts with <strong>cosine similarity</strong> of the embeddings, and was able to replicate the stereotypes found in the IAT tests.</p>
</blockquote>

<p>The details are formalized as follows. Consider:</p>

<ul>
  <li>two sets of <strong>target</strong> words $X$ (e.g., programmer, engineer, scientist; and nurse, teacher, librarian)</li>
  <li>two sets of <strong>attribute</strong> words $Y$ (e.g., man, male; and woman, female).</li>
  <li>The <strong>null hypothesis</strong> is that there is no difference between the two sets of target words in terms of their relative similarity to the two sets of attribute words.</li>
  <li>The <strong>permutation test</strong> measures the (un)likelihood of the null hypothesis by computing the probability that <em>a random permutation of the attribute words would produce the observed (or greater) difference</em> in sample means.</li>
</ul>

<p>Therefore, the test statics of the <strong>differential association of the two sets of target words</strong> (so that it is highest when the two groups have a different association, e.g. $X \to A$ and $Y \to B$) computes:</p>

\[s(X,Y,A,B) = \sum_{x \in X}s(x,A,B) - \sum_{y \in Y}s(y,A,B)\]

<p>where</p>

\[s(w,A,B) = \text{mean}_{a \in A} \cos(\vec{w},\vec{a})-\text{mean}_{b \in B} \cos(\vec{w},\vec{b})\]

<p>essentially measure the association of words to attributes in $A$ v.s. attributes in $B$. So that this is large when the word $\vec{w}$ is <strong>biased</strong> towards a particular group of attributes.</p>

<p>From this we can also formulate the permutation test and the effective size (to reject the null hypothesis), for which we will skip here but can be found on https://www.science.org/doi/10.1126/science.aal4230</p>

<hr />

<p><em>Example of Biases Found in Word Embeddings (such as Word2Vec)</em></p>

<p>Racial Bias: African American names v.s. European American names</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Target</th>
      <th style="text-align: center">Attributes</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220425204324985.png" alt="image-20220425204324985" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220425204338074.png" alt="image-20220425204338074" /></td>
    </tr>
  </tbody>
</table>

<p>Gender Bias: Females are more associated with family, men with careers</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Target</th>
      <th style="text-align: center">Attributes</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220425204532048.png" alt="image-20220425204532048" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220425204541348.png" alt="image-20220425204541348" /></td>
    </tr>
  </tbody>
</table>

<p>Gender Bias: Female terms more associated with arts, male terms with mathematics</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Target</th>
      <th style="text-align: center">Attributes</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220425204629557.png" alt="image-20220425204629557" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220425204637821.png" alt="image-20220425204637821" /></td>
    </tr>
  </tbody>
</table>

<hr />

<p>Where does those bias come from? It is basically learnt from <strong>current world statistics</strong> (which is biased). For example</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220425204745622.png" alt="image-20220425204745622" style="zoom:50%;" /></p>

<p>where we see that:</p>

<ul>
  <li>it learns to output a high similarity score for occupations where there are more women</li>
  <li>but we want it to learn those occupations to be gender neutral even if this is the reality</li>
</ul>

<h3 id="effect-of-bias-on-nlp">Effect of Bias on NLP</h3>

<p>As we know that many laguage models are trained on a huge amount of text:</p>

<ul>
  <li>easily pick up biases from old documents/books, for example</li>
  <li>different languages might have different associations/biases</li>
</ul>

<blockquote>
  <p>Sapir-Whorf hypothesis: “real world” is to a large extent <strong>unconsciously built up on the language habits</strong> of the group</p>
</blockquote>

<p>Therefore, together with biases thise produces problems such as:</p>

<ul>
  <li>MT translation:
    <ul>
      <li>Chinese speeches do not distinguish between he/she</li>
      <li>to translate to English, we need he/she</li>
      <li>but we <strong>should not</strong> disambiguate those based on biases!</li>
    </ul>
  </li>
  <li>Dialog
    <ul>
      <li>e.g. implicitly using a pronoun such as “he” when referring to boss?</li>
    </ul>
  </li>
</ul>

<p>Both of which not only relates to biases in word level embeddings, but also perhaps <strong>bias in sentence level embeddings!</strong></p>

<h2 id="bias-in-sentence-embeddings">Bias in Sentence Embeddings</h2>

<p>The idea is the same as WEAT, where we want to know if the same bias exist for sentence embeddings. The only difference is:</p>

<ul>
  <li>we have sentences, hence added context</li>
  <li>the target and the attribute sets are sets of sentences</li>
</ul>

<blockquote>
  <p><strong>SEAT: Sentence Encoder Association Test</strong>. This basically does the same procedure as WEAT where you can:</p>

  <ul>
    <li>form a sentence from words by simple templates where the word has been inserted: “This is a <code class="language-plaintext highlighter-rouge">&lt;word&gt;</code>”.
      <ul>
        <li>this is often used to convert word attributes to sentence attributes.</li>
      </ul>
    </li>
    <li>or if you have sentences to tests as targets, use them directly</li>
  </ul>
</blockquote>

<p>For example:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Target</th>
      <th style="text-align: center">Attributes</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220425210430527.png" alt="image-20220425210430527" style="zoom:67%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220425210435664.png" alt="image-20220425210435664" style="zoom:67%;" /></td>
    </tr>
  </tbody>
</table>

<p>The upshot is that the same biases still exists.</p>

<h3 id="abw-and-double-bind">ABW and Double Bind</h3>

<p>Two traditional biases that were studied are:</p>

<ul>
  <li><strong>ABW</strong>:  “angry black woman” stereotype, basically black women are portrayed as loud, angry and imposing</li>
  <li><strong>Double Bind</strong>: women in professional settings treated with disadvantage v.s. man
    <ul>
      <li>If women succeed in a male dominated job, they are <em>perceived less likeable and more hostile</em> than similarly performing men</li>
      <li>If success not clear, they are perceived <em>less competent and achievement oriented</em> than men</li>
    </ul>
  </li>
</ul>

<hr />

<p><strong>ABW Study:</strong></p>

<ul>
  <li>Target: Black and white women names</li>
  <li>Attributes: adjectives presented in Collins and their antonyms</li>
</ul>

<p><strong>Double Bind Study</strong> (likeable):</p>

<ul>
  <li>Targets: male/female names. “Kathy is an engineer with superior technical skills”</li>
  <li>Attributes: likable and non-hostile terms: “the engineer is nice”</li>
</ul>

<p><strong>Double Bind Study</strong> (success):</p>

<ul>
  <li>Targets: “Kathy is an engineer”</li>
  <li>Attributes: competent/achievement-oriented terms: “The engineer is high performing.”</li>
</ul>

<p>Results:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220425211114721.png" alt="image-20220425211114721" style="zoom:67%;" /></p>

<p>Hence we see that:</p>

<ul>
  <li>
    <p>for word level, you can basically pass in the word itself as a sentence and take that as the mebdding</p>
  </li>
  <li>ELMo, GPT, and BERT seem to have bias when used with sentence level  but not when they are doing on a word level</li>
  <li>however, there are discrepancies as many results does not seem to agree even with same p-values</li>
</ul>

<hr />

<p>The conclusion is that:</p>

<ul>
  <li>SEAT can confirm that bias exists</li>
  <li>Cosine similarity may not be a suitable model of representational similarity in recent models (e.g., BERT)</li>
</ul>

<h2 id="debiasing">Debiasing</h2>

<blockquote>
  <p>Is it possible to <strong>remove the bias</strong> that is clearly present in real life statistics?</p>
</blockquote>

<p>It is still under active research, but we do have some approaches</p>

<ul>
  <li><strong>HARD-DEBIASED:</strong> remove the bias after training by <strong>post-processing</strong></li>
  <li><strong>GN-GLOVE:</strong> use a <strong>loss function</strong> during training that aims to <strong>reduce bias</strong></li>
</ul>

<p>However, the quick conclusion is that even those does remove surface level bias (the word embedding itself may not be biased), it does <strong>not</strong> reduce ==hidden biases== such as “doctor” and “boss” having a similar embedding v.s. “nurse” and “teacher”</p>

<h3 id="de-bias-via-post-processing">De-bias via Post Processing</h3>

<p>Given a word $\vec{w}$, we can define its gender bias (for example) by its projection on the “gender direction”:</p>

\[\vec{w} \cdot (\vec{he}-\vec{she})\]

<p>where $(\vec{he}-\vec{she})$ would be the gender direction. We can compute this in a more robust way by taking</p>

<ol>
  <li>taking 10 pairs of words that surely have gender differences</li>
  <li>take the principle components of the 10 pairs</li>
</ol>

<p>Then, when we have this gender direction</p>

<ol>
  <li>for all words that should not be inherently gendered</li>
  <li>Zero the gender projection for each word</li>
</ol>

<h3 id="de-bias-via-loss-function">De-bias via Loss Function</h3>

<p>Instead of removing/post processing the embedding, consider having loss such that</p>

<blockquote>
  <ul>
    <li>words in different groups to differ in last coordinate (as we know they exist in our data)</li>
    <li>neutral gender words to be orthogonal</li>
  </ul>
</blockquote>

<p>Then essentially:</p>

<ol>
  <li>Train debiased word embeddings from scratch</li>
  <li>Change the loss function for Glove as mentioned above
    <ul>
      <li>so essentially concentrate gender information in last coordinate</li>
    </ul>
  </li>
  <li>Once done, remove the last coordinate</li>
</ol>

<h3 id="hidden-bias-via-clustering">Hidden Bias via Clustering</h3>

<blockquote>
  <p>Essentialy the paper https://www.aclweb.org/anthology/N19-1061.pdf claims that the above does not remove the biases.</p>

  <p>They manage to hide the bias in their <strong>neighborhood relationship</strong>, even if their similarity to gender is removed.</p>

  <ul>
    <li>most word pairs maintain their previous similarity, despite their change in relation to the gender direction</li>
  </ul>
</blockquote>

<p>Consider</p>

<ol>
  <li>taking the most biased words in the vocabulary according to the original bias
    <ul>
      <li>500 male biased, 500 female biased</li>
    </ul>
  </li>
  <li>Cluster into 2 clusters using k-means
    <ul>
      <li>compare the result before de-biasing and after de-biasing</li>
    </ul>
  </li>
</ol>

<p>Results:</p>

<p><img src="/lectures/images/2022-03-30-COMS4705_NLP/image-20220425165851071.png" alt="image-20220425165851071" style="zoom: 50%;" /></p>

<p>where we see that</p>

<ul>
  <li>
    <p>Bias still manifested by the word being close to socially-marked feminine words</p>
  </li>
  <li>
    <p>i.e. although they are hiding their bias w.r.t gender, but their <strong>neighbor relationship</strong> is still apparent</p>
  </li>
</ul>

<p>Therefore, this introduces a new mechanism for measuring bias: % male/female socially-biased words among the k nearest neighbors of the target word.</p>

<hr />

<p>Another intuitive metric could be:</p>

<ol>
  <li>given 5000 most biased words according to original experiments</li>
  <li>Train an SVM on 1000 random sample, predict gender for remaining 4000</li>
</ol>

<p>So that if words embeddings still have biases, then models such as SVM will not be able to distinguish. However, in reality:</p>

<ul>
  <li>Hard-debiased: 88.8% accuracy vs 98.25% accuracy with non-debiased version</li>
  <li>GN-Glove: 96.53% accuracy vs. 98.65% accuracy with non-debiased version</li>
</ul>

<p>so, again those biases are hidden somewhere in the embeddings.</p>

<blockquote>
  <p>Idea: using GAN to perhaps remove the bias.</p>
</blockquote>]]></content><author><name></name></author><category term="2022@Columbia" /><summary type="html"><![CDATA[Continuation from: NLP_part_1]]></summary></entry><entry><title type="html">APPH3300 Applied Electromagnetism</title><link href="/lectures/2022@columbia/APPH3300_Applied_Electromagnetism.html/" rel="alternate" type="text/html" title="APPH3300 Applied Electromagnetism" /><published>2022-05-03T00:00:00-04:00</published><updated>2022-05-03T00:00:00-04:00</updated><id>/lectures/2022@columbia/APPH3300_Applied_Electromagnetism</id><content type="html" xml:base="/lectures/2022@columbia/APPH3300_Applied_Electromagnetism.html/"><![CDATA[<p>Applied EM Equations</p>

<h1 id="chapter-2">Chapter 2</h1>

<table>
  <thead>
    <tr>
      <th>Condition</th>
      <th>Equation</th>
      <th>Comments</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Discrete Charges $q_j \neq Q$</td>
      <td>$\vec{F} = Q\sum_{j} \frac{1}{4\pi \epsilon_0}\frac{q_j}{\vert \vec{r}-\vec{r}_j^{\prime}\vert ^2} \frac{\vec{r}-\vec{r}^\prime}{\vert \vec{r}-\vec{r}_j^{\prime}\vert } =QE(\vec{r})$</td>
      <td>Field comes from <strong>other charges only!</strong></td>
    </tr>
    <tr>
      <td>Continuous Charge distribution $\rho(\vec{r}^\prime)$</td>
      <td>$\vec{F} = Q\int \frac{1}{4\pi \epsilon_0}\frac{1}{\vert \vec{r}-\vec{r}^{\prime}\vert ^2} \frac{\vec{r}-\vec{r}^\prime}{\vert \vec{r}-\vec{r}^{\prime}\vert }\rho dV’ =QE(\vec{r})$</td>
      <td>Integrate over all space, so all $\rho(\vec{r}^\prime)$ is covered</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\oint \vec{E}\cdot d\vec{a} = \frac{Q_{enc}}{\epsilon_0}$</td>
      <td>Useful when there is symmetry, so that $\oint \vec{E}\cdot d\vec{a}$ is easy to figure out</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{\nabla } \cdot \vec{E} = \rho / \epsilon_0$</td>
      <td>Proof from <strong>divergence theorem</strong>: $\oint \vec{E}\cdot d\vec{a} = \int (\vec{\nabla}\cdot \vec{E})dV$</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{\nabla}\cdot\frac{\hat{r}}{r^2} = 4\pi \delta^3(r)$</td>
      <td>Proven from trying to recover the above: $\nabla \cdot \vec{E} = \frac{1}{4\pi \epsilon_0}\int \vec{\nabla}\cdot \frac{\hat{r}}{r^2}p(r’)d^3r’ = \rho(r’)/\epsilon_0$</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\int_{a&lt;0}^{b&gt;0} \delta(x)dx = \int_{a}^b \frac{d}{dx}H(x)dx$</td>
      <td>Useful for <strong>formally prove</strong> integral results with delta function</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{\nabla}\times \vec{E}=\vec{0}$</td>
      <td>Conservation of field/charge. Proven from showing that $\oint \vec{E}\cdot d\vec{l}=\int \vec{\nabla}\times \vec{E}\cdot d\vec{S}=0$ for a single point charge, then superposition.</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>A common approach to <strong>prove starting from a single point charge</strong>, then just use superposition</td>
    </tr>
    <tr>
      <td> </td>
      <td>$V(\vec{r}) = - \int_O^r \vec{E}\cdot d\vec{l}$</td>
      <td>Useful when you <strong>already know $\vec{ E}$</strong></td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>Careful for regions when $\vec{E}$ is <strong>not continuous</strong>. Then you may need to split your integral.</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{E}=-\vec{\nabla}V$</td>
      <td>Useful for <strong>finding</strong> out $\vec{E}$, since $V$ is easier to compute</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\nabla^2 V = \rho / \epsilon_0$</td>
      <td>Poisson’s equation. Useful to <strong>solve when inside vacuum region</strong> such that $\rho = 0$ globally in that region.</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>In side vacuum, $\nabla^2 V = 0$ is the Laplace Equation</td>
    </tr>
    <tr>
      <td> </td>
      <td>$V(\vec{r}) = \frac{1}{4\pi \epsilon_0} \int \frac{\rho(r’)}{\vert \vec{r} - \vec{r}’\vert }d^3r’$</td>
      <td>Useful to figure out potential hence the <strong>electric field</strong> when <strong>Gaussian surface</strong> <strong>cannot</strong> be used</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>derived from finding out the potential of a point charge using $V(\vec{r}) = - \int_O^r \vec{E}\cdot d\vec{l}$, then superposition.</td>
    </tr>
    <tr>
      <td>When evaluated <strong>right above/below the surface</strong></td>
      <td>$\vec{E}<em>{above}-\vec{E}</em>{below} = \frac{\sigma}{\epsilon_0}\hat{n}$</td>
      <td>Useful to figure out <strong>surface charge</strong> when we know field</td>
    </tr>
    <tr>
      <td>True for <strong>any surface charge</strong></td>
      <td> </td>
      <td>Field is discontinuous when we have <strong>surface charge</strong></td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>Proven from showing $(E^\perp_{above}-E^\perp_{below})A=\frac{Q_{enc}}{\epsilon_0}$ from Gaussian box near the surface, and $E^\parallel_{above}-E^\parallel_{below}=0$ from $\oint \vec{E}\cdot d\vec{l}=0$</td>
    </tr>
    <tr>
      <td> </td>
      <td>$V(b)-V(a) = W/Q$</td>
      <td>Work done to move charge $Q$ from $a$ to $b$</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>proven from the definition $W = \int_a^b \vec{F}\cdot d\vec{l}=-Q\int_a^b \vec{E}\cdot d\vec{l}=Q[V(b)-V(a)]$</td>
    </tr>
    <tr>
      <td> </td>
      <td>$W=\frac{1}{4\pi \epsilon_0}\sum_{i=1}^N\sum_{j &gt; i}^N \frac{q_iq_j}{r_{ij}}$</td>
      <td>Work done to <strong>assemble already-made charges</strong></td>
    </tr>
    <tr>
      <td> </td>
      <td>$W=\frac{1}{2}\sum_{i=1}^Nq_i\left(\sum_{j\neq i}^N \frac{1}{4\pi \epsilon_0} \frac{q_j}{r_{ij}}\right) = \frac{1}{2}\sum_{i=1}^n q_i V(\vec{r}_i)$</td>
      <td>$V(\vec{r}_i)$ is due to <strong>charges other than $q_i$</strong></td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>used when needed to compute energy of <strong>discrete charges</strong></td>
    </tr>
    <tr>
      <td>True for any space</td>
      <td>$W=\frac{1}{2}\int V(\vec{r}’)\rho(\vec{r}’)d^3r’$</td>
      <td>Continuous version of the above</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>used for energy contained in the <strong>entire distribution</strong>, not exactly the same as discrete case</td>
    </tr>
    <tr>
      <td>True for any space</td>
      <td>$W=\frac{\epsilon_0}{2}\left[\int \vert \vec{E}\vert ^2d^3r’ + \oint V\vec{E}\cdot d\vec{A}\right]$</td>
      <td>derived from above, using $\rho/\epsilon_0 = \vec{\nabla}\cdot \vec{E}$ and $\nabla{V}=-\vec{E}$</td>
    </tr>
    <tr>
      <td>Over <strong>all space</strong></td>
      <td>$W=\frac{\epsilon}{2}\int \vert \vec{E}\vert ^2d^3r’$</td>
      <td><strong>Easier to compute</strong>, often used.</td>
    </tr>
    <tr>
      <td>Perfect Conductor</td>
      <td>$\vec{E}<em>{meat}=0$, $\rho</em>{meat}=0$</td>
      <td>Charges free to move, will redistribute until $\vec{E}_{meat}=0$. Hence all charges are <strong>on the surface</strong></td>
    </tr>
    <tr>
      <td> </td>
      <td>$V_{surf}=V_0$, $\vec{E}_{surf}={E}^\perp \hat{n}$</td>
      <td>$V(b)-V(a)=-\int_a^b \vec{E}\cdot d\vec{l}=0$ if on the surface, since $\vec{E}=0$ inside</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>$V_{meat}=V_0$ as well since there is no field</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>Those conditions are often used as ==constraints== in a problem</td>
    </tr>
    <tr>
      <td>Capacitance</td>
      <td>$C \equiv \frac{Q}{\Delta V}$</td>
      <td>$Q=+Q$ of the <strong>two conductors,</strong> is the <strong>charge stored</strong></td>
    </tr>
    <tr>
      <td> </td>
      <td>$\Delta V =- \int_a^b \vec{E}\cdot d\vec{l}$ commonly used</td>
      <td>$\Delta V$ is the potential difference across the two conductor = <strong>how much $\Delta V$</strong> needed to store $Q$</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>Should be purely <strong>geometric</strong>, in unit $\epsilon \cdot \text{Length}$</td>
    </tr>
    <tr>
      <td>Energy Stored in Conductor</td>
      <td>$W=\frac{1}{2}\frac{Q^2}{C}=\frac{1}{2}CV^2$</td>
      <td>Think of it being same as energy needed to <strong>charge up conductor</strong> = <strong>work done</strong> to move all the charges over</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>Proven because $dW = \Delta V(q)dq$ to move a charge $dq$ over, and then since $C=\frac{q}{\Delta V(q)}$ is geometric, perform $W=\int dW$</td>
    </tr>
    <tr>
      <td> </td>
      <td>$W = \frac{\epsilon_0}{2}\int \vert \vec{E}\vert ^2 d^3r’$ over all space</td>
      <td>same result as above</td>
    </tr>
    <tr>
      <td>Current Density</td>
      <td>$\rho(r)\cdot v_e(r)\equiv J(r)$</td>
      <td>density times velocity</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{\nabla}\cdot \vec{J}  =0$</td>
      <td>at equilibrium, as otherwise charge accumulates</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\Delta U(x) = eV(x)=\frac{1}{2}m_e v_e(x)^2$</td>
      <td>conservation of energy, and change in potential $\Delta U$ can be simply measured by $qV$</td>
    </tr>
  </tbody>
</table>

<p><em>Electric Field from Coulomb’s Law:</em></p>

<p>Using superposition we can show</p>

\[\vec{F} = Q\int \frac{1}{4\pi \epsilon_0}\frac{1}{|\vec{r}-\vec{r}^{\prime}|^2} \frac{\vec{r}-\vec{r}^\prime}{|\vec{r}-\vec{r}^{\prime}|}\rho dV' =QE(\vec{r})\]

<p>Then, if we have a <strong>line charge</strong>, and we are interested in $E(\vec{r})=E(z\hat{z})$ due to symmetry</p>

<p><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220212154857740.png" alt="image-20220212154857740" style="zoom:50%;" /></p>

<p>Since we only need $z$, consider $\bar{r}=\vec{r}-\vec{r}^{\prime}$ in the above figure (red box)</p>

\[\begin{align*}
\vec{E}(\vec{r})
&amp;= \frac{1}{4\pi \epsilon_0} \int \frac{1}{\bar{r}^2}\frac{\bar{r}}{\sqrt{\bar{r}^2}}\, \rho \, dV'\\
&amp;=  \frac{1}{4\pi \epsilon_0} \int_{-L}^L \frac{1}{(z^2 + x'^2)}\frac{z\hat{z}-x'\hat{x}}{\sqrt{z^2 + x'^2}}\, \lambda \, dx'\\
\end{align*}\]

<p>essentially consider $\rho = \lambda \delta(y)\delta(z)$ since it is only on $x$-axis.</p>

<hr />

<p><em>Potential when You Know $\vec{E}$</em></p>

<p>Consider the potential for a <strong>shell charge</strong>, which you already know the field:</p>

\[\vec{E} = \begin{cases}
\frac{Q}{4\pi \epsilon_0 r^2}, &amp; r &gt; R\\
0, &amp; r &lt; R
\end{cases}\]

<p>which can be proven from Gaussian surface. Then, we consider the harder potential, <strong>for $r &lt; R$</strong>:</p>

\[\begin{align*}
V(r) 
&amp;= -\int_O^r\vec{E}\cdot d\vec{l} \\
&amp;= -\int_\infty^r \vec{E}\cdot d\vec{l}\\
&amp;= -\int_\infty^R \vec{E}\cdot d\vec{l}-\int_R^r \vec{E}\cdot d\vec{l}
\end{align*}\]

<p>then you substitute in the <strong>discontinuous field</strong>.</p>

<hr />

<p><em>Conversion between Potential, Field, and Charge</em></p>

<p><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220212164103943.png" alt="image-20220212164103943" /></p>

<p>where the highlighted ones are used most often.</p>

<hr />

<p><em>Induced Charges</em></p>

<p>Consider a charge <strong>neutral</strong> conductor, with $+q$ inside a <strong>cavity</strong>:</p>

<p><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220212175035891.png" alt="image-20220212175035891" /></p>

<p>we want to show that (if the drawing above is a sphere)</p>

\[\vec{E}_{outside} = \frac{q}{4\pi \epsilon_0}\frac{1}{r^2}\hat{r}\]

<p>which can be argued by:</p>

<ol>
  <li>
    <p>since $\vec{E}_{meat}=0$ for conductor, we draw the Gaussian surface around the cavity to show that:</p>

\[\oint \vec{E}\cdot d\vec{A} = 0 = \frac{Q_{enc}}{\epsilon_0}\]

    <p>hence <strong>negative charges distribute at surface of cavity</strong>, such that $E_{meat}=0$ maintains</p>
  </li>
  <li>
    <p>Then, since the negative charges effectively shielded off the $+q$, we can say that the remaining positive charge will have <strong>distributed uniformly</strong>. Hence outside the surface, we still have <strong>symmetry</strong>.</p>
  </li>
</ol>

<hr />

<p><em>Faraday Cage</em>:</p>

<p>If the <strong>cavity contains no charge</strong> inside a perfect conductor, then $\vec{E}_{\text{in cavity}}=0$</p>

<p><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220212175551629.png" alt="image-20220212175551629" /></p>

<p>This can be shown by drawing a <strong>closed loop</strong>, so that:</p>

<ul>
  <li>$\oint \vec{E}\cdot d\vec{l}=0$ since it is closed</li>
  <li>the part $\int \vec{E}\cdot d\vec{l}=0$ that covers path <strong>inside the conductor</strong> because $\vec{E}_{meat}=0$</li>
  <li>hence, this means $\int \vec{E}\cdot d\vec{l}=0$ for <strong>any path inside the cavity</strong> as well.</li>
</ul>

<h1 id="chapter-3">Chapter 3</h1>

<p>Here we are concerned with finding out $V$ (hence $\vec{E}$) when we technically don’t even know $\rho$ so that:</p>

\[V(\vec{r}) = \frac{1}{4\pi \epsilon_0} \int \frac{\rho(r')}{|\vec{r} - \vec{r}'|}d^3r'\]

<p>cannot be used.</p>

<table>
  <thead>
    <tr>
      <th>Condition</th>
      <th>Equation</th>
      <th>Comment</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>In vacuum region so that $\rho=0$ everywhere</td>
      <td>$\nabla^2 V = 0$</td>
      <td>essentially <strong>solving PDE</strong> to get $V$</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>using separation of variables</td>
    </tr>
    <tr>
      <td>Property for $V$ that solves $\nabla^2 V=0$</td>
      <td>$V(\vec{r})=\frac{1}{4\pi R^2}\oint_{B_R}VdA$</td>
      <td>Solution of $V$ value at $\vec{r}$ is the <strong>average of surrounding</strong> (mean value theorem)</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>(follows from the above) Extremum for $V$ only happens <strong>at the boundary</strong></td>
    </tr>
    <tr>
      <td>Earnshaw’s Theorem</td>
      <td>A charged particle cannot be held in stable equilibrium by electrostatic force</td>
      <td>If stable equilibrium, $V(r_{eq}) &gt; V(r_{surface})$ for a ball of radius $R$ around it.</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>But since $\nabla^2V=0$ holds, then from MV theorem this cannot be true.</td>
    </tr>
    <tr>
      <td>Uniqueness Theorem</td>
      <td>Solution to $\nabla^2V=0$ is unique</td>
      <td>Proven by $V_3 = V_2 - V_1$, and showing that $V_3=0$ is a must if $V_1,V_2$ solves both PDE and boundary condition</td>
    </tr>
    <tr>
      <td> </td>
      <td>Solution to $\nabla^2V = - \rho / \epsilon_0$ is also unique</td>
      <td>same idea as above</td>
    </tr>
    <tr>
      <td>Method of Images</td>
      <td> </td>
      <td>Figuring out $V$ is the same as solving $\nabla^2V=0$ with boundary condition. Use method of images to satisfy B.C. while making sure $\rho = 0$ in the interested region.</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>Works because of uniqueness theorem</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>Useful when you <strong>don’t</strong> want to actually solve $\nabla^2V=0$</td>
    </tr>
    <tr>
      <td>2D Cartesian Solution for Laplacian</td>
      <td>$V(x,y)=(Ae^{kx}+Be^{-kx})(C\sin(ky)+D\cos(ky))=X(x)Y(y)$</td>
      <td>General Solution, $k$ needs to be solved by looking at B.C.</td>
    </tr>
    <tr>
      <td> </td>
      <td>$k=n \pi /a$, solution $V(x,y) = \sum_n V_n(x,y)$</td>
      <td>sometimes you can tell what $n$ should be, e.g. $n=5$. Then solution is simply one term of the sum</td>
    </tr>
    <tr>
      <td>2D Cylindrical Solution for Laplacian</td>
      <td>$\nabla^2V = \frac{1}{r}\frac{\partial }{\partial r}(r \frac{\partial V}{\partial r})+\frac{1}{r^2}\frac{\partial^2 V}{\partial \phi^2}=0$</td>
      <td> </td>
    </tr>
    <tr>
      <td> </td>
      <td>$V(r,\phi) = (Ar^m + Br^{-m})(C\sin(m\phi)+D\cos(m\phi))$</td>
      <td>General solution, $m$ needs to be solved by looking at B.C.</td>
    </tr>
    <tr>
      <td>3D Spherical Solution without horizontal $\phi$</td>
      <td>$\nabla^2 V =  \frac{1}{r}\frac{\partial }{\partial r^2}(r^2 \frac{\partial V}{\partial r})+\frac{1}{r^2 \sin(\theta)}\frac{\partial^2 V}{\partial \theta^2}=0$</td>
      <td> </td>
    </tr>
    <tr>
      <td> </td>
      <td>$V(r,\theta, \phi)=(Ar^l + \frac{B}{r^{l+1}})P_l[\cos(\theta)]$</td>
      <td> </td>
    </tr>
    <tr>
      <td>Legendre Polynomial</td>
      <td>$P_0[\cos(\theta)]=1 \ P_1[\cos(\theta)]=\cos \theta \ P_2[\cos(\theta)]=(3\cos^2 \theta -1)/2$</td>
      <td>Good to remember</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\int_0^\pi P_i[\cos(\theta)]P_j[\cos(\theta)]\sin(\theta) \, d\theta = \begin{cases} 0, &amp; i \neq j\ \frac{2}{2i+1}, &amp; i = j \end{cases}$</td>
      <td>Orthogonality, use for non-homogenous boundary condition (if needed)</td>
    </tr>
    <tr>
      <td>Multipole Expansion</td>
      <td>$V(\vec{r}) = \frac{1}{4 \pi \epsilon_0} \sum_{l=0}^\infty \frac{1}{r^{l+1}} \int (r’)^l P_l[\cos(\theta)] \rho(r’)d^3r’$</td>
      <td>Approximation useful when we are far away. Proof from $V(\vec{r}) = \frac{1}{4 \pi \epsilon_0}\int \frac{\rho(r’)}{\vert \vert \vec{r}-\vec{r}’‘\vert \vert } d^3r’$ and using result below</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\frac{1}{\vert \vert \vec{r}-\vec{r}’\vert \vert } = \frac{1}{r}\sum_l^\infty \left( \frac{r’}{r} \right)^l P_l[\cos(\theta)]$</td>
      <td>for $r = \vert \vert \vec{r}\vert \vert , r’=\vert \vert \vec{r}’\vert \vert$, proven from binomial expansion of denominator taking out $R$.</td>
    </tr>
    <tr>
      <td> </td>
      <td>$V(\vec{r}) = \frac{1}{4 \pi \epsilon_0}\sum_{l=0}^\infty \frac{M_l}{r^{l+1}}P_l[\cos\theta]$, $M_l \equiv \int (r’)^l \rho(r’)d^3r’$</td>
      <td>assuming $P_l[\cos\theta]$ can be taken out from the integral</td>
    </tr>
    <tr>
      <td> </td>
      <td>$V_l = \frac{1}{4\pi \epsilon_0} \frac{M_l P_l[\cos\theta]}{r^{l+1}}$, so $V(\vec{r}) = \sum_{l=0}^\infty V_l$</td>
      <td>e.g. monopole potential take $l\to 0$, dipole potential take $l \to 1$, quadruple potential take $l\to 2$,…</td>
    </tr>
    <tr>
      <td>Multipole Terms</td>
      <td>$M_l \equiv \int (r’)^l \rho(r’)d^3r’$</td>
      <td>in continous case</td>
    </tr>
    <tr>
      <td> </td>
      <td>$M_l \equiv \sum_i (r_i’)^l q_i$</td>
      <td>in discrete case (both assume $\theta$ being a constant, otherwise $P_l[\cos \theta]$ will be included)</td>
    </tr>
    <tr>
      <td> </td>
      <td>$V_l = \frac{1}{4\pi \epsilon_0} \frac{M_l P_l[\cos\theta]}{r^{l+1}}$</td>
      <td> </td>
    </tr>
    <tr>
      <td>Dipole Moment</td>
      <td>$V_1(\vec{r}) = \frac{1}{4 \pi \epsilon_0} \frac{1}{r^{2}} \int r’ \cos(\theta )\rho(r’)d^3r’  = \frac{1}{4\pi \epsilon_0} \frac{1}{r^2} \int \hat{r}\cdot \vec{r}’ \rho(r’)d^3r’$</td>
      <td> </td>
    </tr>
    <tr>
      <td> </td>
      <td>$V_1(\vec{r}) = \frac{1}{4\pi\epsilon_0}\frac{1}{r^2}\hat{r}\cdot \vec{p}$, with $\vec{p} \equiv \int \vec{r}’ \rho(r’)d^3r’$</td>
      <td>Dipole Moment $\vec{p}$ without any assumption</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{p} = \sum_i \vec{r}’_i q_i$</td>
      <td>Dipole Moment in discrete case</td>
    </tr>
  </tbody>
</table>

<p><em>Method of Imaging</em></p>

<p>Consider finding $V$ in the following region where $z &gt; 0$:</p>

<p><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220212185301978.png" alt="image-20220212185301978" style="zoom:67%;" /></p>

<p>Notice that finding out $V$ in that region is the same as:</p>

<ul>
  <li>solving $\nabla^2 V=0$</li>
  <li>B.C.: $V=0$ when $z=0$ as it is <strong>grounded</strong></li>
  <li>B.C.: $V(r)\to 0$ if $r^2 » d^2$, i.e. when far away</li>
  <li>$\vec{E}$ is <strong>perpendicular to surface</strong> at $z=0$
    <ul>
      <li>good check to make sure ==if method of imaging setup is correct==</li>
    </ul>
  </li>
</ul>

<p>Then, realize that this is the same as <strong>solving for $V$ in Figure 3.11</strong>.</p>

<ul>
  <li>in the end we only take the solution for $z&gt;0$</li>
</ul>

<p>Since it is essentially two point charges, use <strong>superposition of potential from point charges</strong>:</p>

\[V(x,y,z) = \frac{1}{4\pi \epsilon_0} \left[ \frac{q}{\sqrt{x^2 + y^2 + (z-d)^2}} -\frac{q}{\sqrt{x^2 + y^2 + (z+d)^2}} \right]\]

<hr />

<p><em>Multipole Expansion Derivation Sketch</em></p>

<p>This comes from the motivation to <strong>approximate field</strong> when we are <strong>far from the charge density</strong>. Technically the approximation</p>

\[V(\vec{r}) \approx \frac{1}{4\pi \epsilon_0} \frac{Q_{total}}{r^2}\]

<p>could work in some cases, in other case you might have $Q_{total}=0$ then this is <strong>uninformative</strong>, i.e. we need higher order terms. Hence we first use binomial expansion to show that:</p>

\[\frac{1}{||\vec{r}-\vec{r}'||} = \frac{1}{r}\sum_l^\infty \left( \frac{r'}{r} \right)^l P_l[\cos(\theta)]\]

<p>from doing</p>

\[\frac{1}{||\vec{r}-\vec{r}'||} = \frac{1}{\sqrt{r^2 + r^{'2}-2rr'\cos \theta}} = \frac{1}{r}\frac{1}{\sqrt{1+\epsilon}}\]

<p>then expanding the $1/\sqrt{1+\epsilon}$ to get Legendre polynomial, which ==assumes small $\epsilon$== hence being far away from charges.</p>

<hr />

<p><em>Multipole Expansion Example</em></p>

<p>Consider a vertical line charge $\lambda (z’)$, and we are interested in finding $V(\vec{r})$ far away from it.</p>

<p><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220314110957682.png" alt="image-20220314110957682" style="zoom:80%;" /></p>

<p>Using the formula for expansion, we know:</p>

\[V(\vec{r}) = \frac{1}{4 \pi \epsilon_0} \sum_{l=0}^\infty \frac{1}{r^{l+1}} \int (r')^l P_l[\cos(\theta)] \rho(r')d^3r'\]

<p>then since $\rho(r’) = \lambda(z’)\delta(x’)\delta(y’)$, and since $\vec{r}’ = z’\hat{z}$, meaning $r’=z’$, then we get:</p>

\[\begin{align*}
V(\vec{r})
&amp;= \frac{1}{4 \pi \epsilon_0} \sum_{l=0}^\infty \frac{1}{r^{l+1}} \int (z')^l P_l[\cos \theta] \lambda(z')\delta(x')\delta(y')\,d^3r'\\
&amp;= \frac{1}{4 \pi \epsilon_0} \sum_{l=0}^\infty \frac{P_l[\cos\theta]}{r^{l+1}} \iiint (z')^l \lambda (z')\delta(x')\delta(y')\,dx'dy'dz'\\
&amp;= \frac{1}{4 \pi \epsilon_0} \sum_{l=0}^\infty \frac{P_l[\cos\theta]}{r^{l+1}} \int (z')^l \lambda (z')dz'
\end{align*}\]

<p>which is the furthest we can go, and the second equality comes from the fact that $\theta$ which is the <strong>angle between $\vec{r}$ and $\vec{r}’$</strong> is constant given a $\vec{r}$.</p>

<hr />

<p><em>Multipole Expansion Discrete case:</em></p>

<p>If you are dealing with a <strong>discrete</strong> case, you can then either:</p>

<ul>
  <li>
    <p>express $\rho(\vec{r}’)$ in terms of $\delta$ functions, hence point charges</p>
  </li>
  <li>
    <p>use the discrete formula for $M$. Since we assumed to be far away from the charges, usually $\theta_i$ between $\vec{r}$ and $\vec{r}_i’$ can be assumed constant hence:</p>

\[V(\vec{r}) = \frac{1}{4 \pi \epsilon_0}\sum_{l=0}^\infty \frac{M_l}{r^{l+1}}P_l[\cos\theta], \quad M_l \equiv \sum_i (r_i')^l q_i\]

    <p>otherwise you will need:</p>

\[V(\vec{r}) = \frac{1}{4 \pi \epsilon_0}\sum_{l=0}^\infty \frac{M_l}{r^{l+1}}, \quad M_l \equiv \sum_i (r_i')^l \, P_l[\cos\theta_i] \, q_i\]
  </li>
</ul>

<h1 id="chapter-4">Chapter 4</h1>

<p>This chapter discuss <strong>electric fields in matter (e.g. dielectric)</strong>, which is what happens when an electric field $\vec{E}_{app}$ is applied on the matter.</p>

<table>
  <thead>
    <tr>
      <th>Condition</th>
      <th>Equation</th>
      <th>Comment</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Atomic Polarization</td>
      <td>$\vec{p} = \alpha \vec{E}_{applied}$</td>
      <td>For molecules, $\alpha$ would be a function of “direction” if molecule is asymmetric (e.g. $H_2O$)</td>
    </tr>
    <tr>
      <td>Polarization</td>
      <td>$\vec{P}$=dipole moment per volume</td>
      <td>describes polarization of material due to some externel field</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{p} = \vec{P}\,dV’$</td>
      <td>Want to find field <strong>results</strong> from polarization $\vec{P}$</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>$\vec{P}(\vec{r}’)=0$ if $\vec{r}’$ is vacuum, for example</td>
    </tr>
    <tr>
      <td>Potential due to Polarization $\vec{P}$</td>
      <td>$V(\vec{r}) = \frac{1}{4\pi \epsilon_0} \oint_\Omega \frac{\sigma_b}{\vert \vert \vec{r} - \vec{r}’\vert \vert }dA’+ \frac{1}{4\pi \epsilon_0} \int_V \frac{\rho_b}{\vert \vert \vec{r} - \vec{r}’\vert \vert }dV’$</td>
      <td>derived from $V(\vec{r})$ ==only== consisting of dipole terms, which is defined by $\vec{P}(\vec{r})$</td>
    </tr>
    <tr>
      <td> </td>
      <td>$V(\vec{r})=V(\text{from$\sigma_b, \rho_b$})$</td>
      <td>i.e. you can <strong>treat</strong> the dielectric as having $\sigma_b$ on the surface and $\rho_b$ inside.</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>if $\rho_b = 0$, $V(\text{from$\sigma_b,\rho_b$})$ can be solved using <strong>Laplacian $\nabla^2 V = 0$</strong> with boundary of $\sigma_b$</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\sigma_b \equiv \vec{P}\cdot \hat{n}$</td>
      <td>$\hat{n}$ points from the surface having dielectric to vaccum/non-dielectric place</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\rho_b\equiv - \nabla \cdot \vec{P}$</td>
      <td> </td>
    </tr>
    <tr>
      <td>Interpretation of Bound Charge due to $\vec{P}$</td>
      <td>$\sigma_b \equiv \vec{P}\cdot \hat{n}$</td>
      <td>$\sigma_b$ comes from lining up dipoles so that only ends matter</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\rho_b\equiv - \nabla \cdot \vec{P}$</td>
      <td>$\rho_b$ considers if dipole in between is not cancelled out, then the flux of polarization would relate to charge: $-\oint \vec{P}\cdot d\vec{A} =\int_V \rho_b \,d^3r’$</td>
    </tr>
    <tr>
      <td>Electric Displacement Field</td>
      <td>$\vec{\nabla} \cdot \vec{D}= \rho_{free}$, and $\vec{D} \equiv \epsilon_0 \vec{E}_{total} + \vec{P}$</td>
      <td>differential form</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{\nabla}\cdot \vec{E}<em>{tot} = \frac{\rho</em>{free}+\rho_b}{\epsilon_0}$</td>
      <td>derivation, then using $\rho_b = -\vec{\nabla}\cdot \vec{P}$</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\oint \vec{D}\cdot d\vec{A} = Q_{free_{enc}}$</td>
      <td>integral form</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>if have symmetry can use <strong>Gaussian surfaces</strong></td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>used for proving boundary conditions for $\vec{D}$</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{\nabla} \times \vec{D} = \vec{\nabla} \times \vec{P}$</td>
      <td> </td>
    </tr>
    <tr>
      <td> </td>
      <td>$\oint \vec{D}\cdot d\vec{r}=\oint \vec{P}\cdot d\vec{r}$</td>
      <td>Stokes’ Theorem, derived from above</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>used for proving boundary conditions for $\vec{D}$</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>the above is <strong>true for any dielectric</strong></td>
    </tr>
    <tr>
      <td>$\vec{D}$ and $\vec{E}$ relation</td>
      <td>$\vec{\nabla}\cdot \vec{E}<em>{tot} = \rho</em>{tot} / \epsilon_0 \to \vec{E}<em>{tot} = \frac{1}{4\pi \epsilon_0} \int \frac{\rho</em>{tot}}{\symscr{r}} \hat{\symscr{r}}\,d^3r’$</td>
      <td>because $\vec{\nabla}\times \vec{E}_{tot} = 0$</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{\nabla}\cdot \vec{D}= \rho_{free} \not\to \vec{D} = \frac{1}{4\pi } \int \frac{\rho_{free}}{\symscr{r}} \hat{\symscr{r}}\,d^3r’$</td>
      <td>because $\vec{\nabla} \times \vec{D} \neq 0$ often, hence $\vec{D}$ might not have a potential</td>
    </tr>
    <tr>
      <td>Linear Dielectric</td>
      <td>$\vec{P} = \epsilon_0 \chi_e \vec{E}_{tot}$</td>
      <td>$\chi_e$ is electric susceptibility, $\epsilon_0$ is permittivity of free space</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>if $\vec{E}<em>{applied}$ is given, we are stuck because it will produce $\vec{P}$, which produces $\vec{E}</em>{resp}$ hence affects $\vec{E}_{tot}$, which relates to $\vec{P}$…</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{D} = \epsilon_0(1+\chi_e)\vec{E}<em>{tot}\equiv \epsilon \vec{E}</em>{tot}$</td>
      <td>$\epsilon$ is permittivity of material</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>can use this to <strong>break from the loop</strong> if we can find $\vec{D}$ from Gaussian surface</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\epsilon_r \equiv \epsilon / \epsilon_0 = 1+\chi_e$</td>
      <td>relative permittivity, $\chi_e=0$ in free space.</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>also called <strong>dielectric constant</strong></td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{\nabla}\times \vec{D} = \vec{\nabla} \times (\epsilon \vec{E}_{tot}) \neq 0$</td>
      <td>because $\epsilon$ could vary in different position</td>
    </tr>
    <tr>
      <td>Space filled with homogenous Linear Dielectric $\chi_e$</td>
      <td>$\vec{\nabla} \times \vec{D} = 0$, $\vec{\nabla} \cdot \vec{D}= \rho_{free}$</td>
      <td>inside the homogenous linear dielectric, $\epsilon$ is constant</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{D} = \epsilon_0 \vec{E}_{free}$</td>
      <td>$\vec{E}_{free}$ is field produced by free charges</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>because now $\vec{\nabla}\cdot \vec{D}= \rho_{free} \to \vec{D} = \frac{1}{4\pi } \int \frac{\rho_{free}}{\symscr{r}} \hat{\symscr{r}}\,d^3r’$ holds</td>
    </tr>
    <tr>
      <td>Happens when $\vec{\nabla} \times\vec{D} = \vec{\nabla} \times\vec{P}= 0$, commonly with a capacitor</td>
      <td>$\vec{E}<em>{tot} = \frac{1}{\epsilon_r}\vec{E}</em>{free}\equiv \frac{1}{\epsilon_r}\vec{E}_{vac}$</td>
      <td>for capacitor: derived if $\vec{D}$ has the same shape as $\vec{E}<em>{vac}$ , then use Gaussian to find $\vec{D}$ and use $\vec{D} = \epsilon \vec{E}</em>{tot}$</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>in general, $\vec{\nabla} \times\vec{D} = 0$ alone would work. See the relevant section below</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>note that this is a special case on top of having a linear dielectric</td>
    </tr>
    <tr>
      <td>Boundary Conditions for $\vec{D}$</td>
      <td>$D_{abv}^\perp - D_{below}^\perp = \sigma_{free}$</td>
      <td>derived from drawing Gaussian box just above/below the surface</td>
    </tr>
    <tr>
      <td> </td>
      <td>$D_{abv}^\parallel - D_{below}^\parallel= P_{abv}^\parallel - P_{below}^\parallel$</td>
      <td>derived from drawing loop just above/below the surface</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>True for any dielectric</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{E}<em>{above}-\vec{E}</em>{below} = (\sigma_{total}/\epsilon_0) \hat{n}$</td>
      <td>(note that those always/still hold)</td>
    </tr>
    <tr>
      <td> </td>
      <td>$E_{abv}^\parallel - E_{below}^\parallel= 0$</td>
      <td> </td>
    </tr>
    <tr>
      <td>Dielectric inside Capacitor</td>
      <td>$C = \epsilon_r C_{vac}$</td>
      <td>$C_{vac}$ is capacitance without dielectric</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>holds whenever $\vec{E}<em>{tot} = \frac{1}{\epsilon_r}\vec{E}</em>{free}$ holds inside the capacitance. Hence $\Delta V = \Delta V_{vac}/\epsilon_r$ while $Q$ is the same.</td>
    </tr>
    <tr>
      <td>Energy of setup with a Dielectric</td>
      <td>$W=\frac{1}{2}\int_{all\,space}\vec{D}\cdot\vec{E}\,d^3r$</td>
      <td>holds if you have a linear dielectric so that $\vec{D}=\epsilon \vec{E}$</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>derived from assuming bound charges fixed in place, we are only moving free charges into position</td>
    </tr>
    <tr>
      <td> </td>
      <td>$W = \frac{\epsilon_0}{2}\int \vert \vec{E}\vert ^2 d^3r$</td>
      <td>still holds if we are assembling <em>all charges</em> independently, i.e. we also bring in bound charges</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>this will be smaller than $W=\frac{1}{2}\int_{all\,space}\vec{D}\cdot\vec{E}\,d^3r$ as it does not include potential/spring energy within dipoles</td>
    </tr>
    <tr>
      <td>Force <em>on</em> Dielectric (due to capacitor)</td>
      <td>$-F_{on\,diel}=\frac{dW}{dx}=-\frac{1}{2}V(x)^2\frac{dC(x)}{dx}$</td>
      <td>True either fixing $Q$ or fixing $V$, in which case $V(x)=V_0$</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>sanity check: force should suck dielectric into capacitor</td>
    </tr>
    <tr>
      <td> </td>
      <td>$dW = F_{me}dx=-F_{on\,diel}dx$, and $W=\frac{1}{2}\frac{Q^2}{C(x)}$</td>
      <td>derivation. For $C(x)$ and $V=V(x)$ if fixed total charge $Q$</td>
    </tr>
    <tr>
      <td> </td>
      <td>$dW=-F_{on\, diel}dx + VdQ$, and $W=\frac{1}{2}C(x)V_0^2$</td>
      <td>derivation if fixing $V(x)=V_0$. Ended up the same formula for $W$ as above.</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{\nabla} W = -\vec{F}_{on\, diel}$</td>
      <td>If in problem we have some 3D movement. Then $W$ is still one of the two above cases.</td>
    </tr>
  </tbody>
</table>

<p><em>Atomic Polarization</em></p>

<p>This is derived/==approximated== by considering the nucleus with charge $+q$ sits in <strong>equilibrium</strong> due to cancellation of external field $\vec{E}_{app}$ and $\vec{E}_e$ with is field of electron cloud (volume):</p>

<p><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220314161623445.png" alt="image-20220314161623445" /></p>

<p>Then since field inside <em>uniform sphere of charge</em> is:</p>

\[\vec{E}_e = -\frac{q}{4\pi \epsilon_0} \frac{r}{a^3} \hat{r},\quad  r&lt;a\]

<p>hence if we obtained an equilibrium <em>at $r=d$</em>:</p>

\[\begin{align*}
\vec{E}_{app}(d) 
&amp;=\frac{q}{4\pi \epsilon_0} \frac{d}{a^3} \hat{r}\\
qd \hat{r} \equiv \vec{p} &amp;= (4\pi \epsilon_0 a^3)\vec{E}_{app}(d) 
\end{align*}\]

<p>hence the proportionality.</p>

<hr />

<p><em>Application of Bound Charges</em></p>

<p>Consider a slab of dielectric with thickness $d$ carrying polarization $\vec{P} = k[1+(x/d)]\hat{x}$ :</p>

<p><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220314163908686.png" alt="image-20220314163908686" /></p>

<p>we do not care yet what external field is needed to produce this polarization. We want to know the electric field <strong>produced by</strong> this given polarization.</p>

<p>First, we can find the bound charges to be:</p>

\[\sigma_b = \vec{P}\cdot \hat{n} = \begin{cases}
2k, &amp; x =d\\
-k, &amp; x=0
\end{cases}\\
\rho_b = -\nabla \cdot \vec{P} = -\frac{k}{d},\quad 0&lt;x&lt;d\]

<p>Then, we can <em>treat this as real charges</em> to compute $V(\vec{r})$ due to the correctness of:</p>

\[V(\vec{r}) = \frac{1}{4\pi \epsilon_0} \oint_\Omega \frac{\sigma_b}{||\vec{r} - \vec{r}'||}dA'+ \frac{1}{4\pi \epsilon_0} \int_V \frac{\rho_b}{||\vec{r} - \vec{r}'||}dV'\]

<p>Now, since we know the charge distribution, we can exploit the symmetry and save doing the above extra integrals:</p>

<ul>
  <li>
    <p>drawing Gaussian surfaces inside/outside the slab gives:</p>

\[\vec{E}_&lt; = \vec{E}_&gt;\\
(\vec{E}_{inside}-\vec{E}_{&lt;})\cdot \hat{x} = \frac{k}{\epsilon_0}\left(1+\frac{x}{d}\right)\]
  </li>
  <li>
    <p>but notice that the net charge is zero, hence:</p>

\[\vec{E}_&lt; = \vec{E}_&gt; = \vec{0}\\
\vec{E}_{inside} = -\frac{k}{\epsilon_0}\left( 1+ \frac{x}{d} \right)\]
  </li>
</ul>

<p>the result is consistent if you compute from $\vec{D}$ and use $\vec{D}=\epsilon \vec{E}_{tot}$.</p>

<hr />

<p><em>Homogenous Linear Dielectric</em>:</p>

<p>Find $\vec{E}_{tot}$ inside the dielectric with the following setup, $Q$ is free charge placed by us.</p>

<p><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220314173419462.png" alt="image-20220314173419462" /></p>

<p>First, a linear dieletric means $\vec{D} = \epsilon \vec{E}<em>{tot}$. Then, as $\epsilon$ is constant inside, we get $\vec{\nabla} \times\vec{D} = 0$. Then $\vec{\nabla}\cdot \vec{D}= \rho</em>{free}$ always hold, we <strong>can use</strong>:</p>

\[\vec{D} = \frac{1}{4\pi } \int \frac{\rho_{free}}{\symscr{r}} \hat{\symscr{r}}\,d^3r'\]

<p>meaning that:</p>

\[\vec{D} = \epsilon_0 \vec{E}_{free},\quad \vec{E}_{tot} = \frac{1}{\epsilon_r}\vec{E}_{free}\]

<p>since <em>inside the dielectric</em> we have $\vec{E}_{free} = q/(4\pi \epsilon_0 r^2) \hat{r}$, our final answer is:</p>

\[\vec{E}_{tot}^{inside} = \frac{1}{\epsilon_r} \left( \frac{q}{4\pi \epsilon_0 r^2} \right)\hat{r}\]

<p>which is intuitive because:</p>

<ul>
  <li>dielectric getting polarized = induced dipole opposes $\vec{E}<em>{app}$, hence $\vec{E}</em>{tot}^{inside}$ becomes smaller</li>
  <li>if conductor, then $\epsilon_r \to \infty$ since $\chi_e \to \infty$. Then naturally $\vec{E}_{tot}^{inside}=0$ inside conductor</li>
</ul>

<p>(can <strong>verify this result by starting with drawing Gaussian</strong> surface for finding $\vec{D}$)</p>

<hr />

<p><em>Treating $\sigma_b,\rho_b$ as real charges</em>:</p>

<p>Basically it works due to the proof that</p>

\[V(\vec{r}) = \frac{1}{4\pi \epsilon_0} \oint_\Omega \frac{\sigma_b}{||\vec{r} - \vec{r}'||}dA'+ \frac{1}{4\pi \epsilon_0} \int_V \frac{\rho_b}{||\vec{r} - \vec{r}'||}dV'\]

<p>Then, consider finding $V(r)$ for $r &lt; a$ in the setup below:</p>

<p><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220314173419462.png" alt="image-20220314173419462" /></p>

<p>where $Q$ is a point charge sitting at origin. Then, we first can easily figure out $\vec{D}$ by:</p>

\[\int \vec{D}\cdot d\vec{S} = Q_{free_{enc}} = Q,\quad \text{true for all space}\]

<p>hence we get:</p>

\[\vec{D} = \frac{Q}{4 \pi r^2}\hat{r}\to \vec{E}_{tot} = \frac{Q}{4\pi \epsilon r^2}\hat{r}\]

<p>for $\epsilon$ ==actually changes in regions==, so that:</p>

<ul>
  <li>$\epsilon=\epsilon_0$ in vacuum hence $r &lt; a$ or $r &gt; b$</li>
  <li>$\epsilon =\epsilon_r \epsilon_0$  inside dielectric</li>
</ul>

<p>Though we can proceed easily to find $V(\vec{r})$ now, but we can show that we obtain the same result if we <strong>treating $\sigma_b,\rho_b$ as real charges</strong>:</p>

<ul>
  <li>
    <p>to find $\sigma_b, \rho_b$, first we need to find $\vec{P}$:</p>

\[\vec{P} = \epsilon_0 \chi_e \vec{E}_{tot} = \frac{\epsilon_0 \chi_e  Q}{4\pi \epsilon r^2}\hat{r}\]
  </li>
  <li>
    <p>then find $\sigma_b, \rho_b$:</p>

\[\sigma_b =\vec{P}\cdot \hat{n} = \begin{cases}
-\frac{\epsilon_0 \chi_e  Q}{4\pi \epsilon a^2} , &amp; x =a\\
\frac{\epsilon_0 \chi_e  Q}{4\pi \epsilon b^2} , &amp; x =b
\end{cases}\\
\rho_b = -\nabla \cdot \vec{P} =0,\quad a&lt;x&lt;b\]
  </li>
</ul>

<p>Then we can consider $\vec{E}_{tot}$ from those charges while using symmetry:</p>

\[\begin{cases}
\vec{E}_{&lt;} = \frac{Q}{4 \pi \epsilon_0 r^2} \hat{r}, &amp; r &lt; a\\
\vec{E}_{inside} = \frac{Q+Q_b(a)}{4 \pi \epsilon_0 r^2} \hat{r}= \frac{Q}{4 \pi \epsilon_0(1+\chi_e) r^2} \hat{r}, &amp; a&lt;r &lt;b\\
\vec{E}_{&gt;} = \frac{Q}{4 \pi \epsilon_0 r^2} \hat{r}, &amp; r &gt; b
\end{cases}\]

<p>using $\oint \vec{E}\cdot d\vec{A} = Q_{enc}/\epsilon_0$, where:</p>

<ul>
  <li>$Q_b(a)$ is the bound charges at $r=a$, which is $4 \pi a^2 \sigma_b(a)$.</li>
  <li>this is consistent with $\vec{E}_{tot} = \frac{Q}{4\pi \epsilon r^2}\hat{r}$.</li>
</ul>

<p>Finally, finding $V(\vec{r})$ for $r &lt; a$ is just doing the integral:</p>

\[V(\vec{r}) = -\int_\infty^r \vec{E}\cdot d\vec{r} = -\int_\infty^b \vec{E}_&lt;\cdot d\vec{r}-\int_b^a \vec{E}_{inside}\cdot d\vec{r}-\int_a^r \vec{E}_&gt;\cdot d\vec{r}\]

<p>for $d\vec{r}=dr \hat{r}+ rd\theta \hat{\theta}$.</p>

<hr />

<p><em>Application of Force on Dielectric</em></p>

<p>In most cases the force is only in <strong>one direction</strong>, hence using this suffices:</p>

\[-F_{on\,diel}=\frac{dW}{dx}=-\frac{1}{2}V(x)^2\frac{dC(x)}{dx}\]

<p>Consider the setup of</p>

<p><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220327142501464.png" alt="image-20220327142501464" style="zoom: 50%;" /></p>

<p>where oil is the dielectric, with $\chi_e$ and $\rho_{oil}$. Here we assume the inner conductor is <strong>fixed on $V=V_0$</strong>, and the outer is grounded. We want to know the height of oil at equilibrium = at what $z$ we have $F_{on\,diel}$ cancels $F_{g}$</p>

<p>No matter fixing $V$ or fixing $Q$, we still have</p>

\[-F_{on\,diel}=\frac{dW}{dz}=-\frac{1}{2}V(z)^2\frac{dC(z)}{dz}=-\frac{1}{2}V_0^2\frac{dC(z)}{dz}\]

<p>Hence we just need to find out $C(z)$. Since $\Delta V=V_0$ is fixed, hence we just need to find out $Q(z)$ as we know:</p>

\[C(z) = \frac{Q(z)}{\Delta V}=\frac{Q(z)}{V_0}\]

<p>If we consider charges as line density $\lambda \cdot l$, then we know</p>

\[Q(z) = \lambda_{diel}z + \lambda_{vac}(l-z)\]

<p>Then $\lambda_{vac}$ can be easily calculated from $E_{vac}=V_0/(b-a)$ and using a Gaussian surface. Finding $\lambda_{diel}$ is similarly doing</p>

\[\int \vec{D}\cdot d\vec{S}=2\pi r l D=\lambda_{diel}l\quad \to \quad \vec{D} = \frac{\lambda_{diel}}{2\pi r}=\epsilon \vec{E}_{diel}\]

<p>Since we need $V_0$ to hold everywhere, we then can solve $\lambda_{diel}$:</p>

\[|\vec{E}_{diel}|\cdot (b-a)=|\vec{E}_{vac}|\cdot (b-a)\quad \to \quad \lambda_{diel}=\epsilon_r \lambda_{vac}\]

<p>which is a common result as we always had $\sigma_{diel}=\epsilon_r \sigma_{vac}$ whenever $\vec{D}$ and $\vec{E}$ has a similar shape + symmetry.</p>

<h1 id="chapter-5">Chapter 5</h1>

<p>Electrostatics studies essentially the force on some test charge $Q$ due to some <strong>static source charges</strong> $\rho(\vec{r})$.</p>

<p>Magnetostatics studies the force on some <strong>moving test charge</strong> $Q, v$, due to mangetic field produced by <strong>steady source current $J = \rho v$</strong>. The important difference between magnetostatics and electrostatics is:</p>

<p><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220423154819325.png" alt="image-20220423154819325" style="zoom:50%;" /></p>

<p>the wires are <strong>still charge neural</strong> hence no net electric field, but there is <strong>magnetric field</strong> due to moving charges and hence <strong>Lorentz force</strong> appears! Therefore, this chapter discusses</p>

<ul>
  <li>motion due to Lorentz force (e.g. cycltron motion)</li>
  <li>how to compute $\vec{B}$ in different scenarios (e.g. using $\vec{\nabla} \times \vec{A} = \vec{B}$)</li>
</ul>

<table>
  <thead>
    <tr>
      <th>Condition</th>
      <th>Equation</th>
      <th>Comment</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Force due to $B$</td>
      <td>$\vec{F}_{mag}= Q(\vec{v}\times \vec{B})$</td>
      <td>experienced by charge $Q$ moving with velocity $\vec{v}$</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{F}_{total}=Q(\vec{E}+\vec{v}\times \vec{B})$</td>
      <td>if there is also an electric field</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>Current</td>
      <td>$I = dq/dt$</td>
      <td>Useful for deriving $I$ when given 3D shapes</td>
    </tr>
    <tr>
      <td> </td>
      <td>$I = \lambda v$</td>
      <td>for currents since $dq = \lambda dl$</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>for instance, $dq = \rho dV=\rho Adl$</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>assumes it is the direction of <strong>positive charges</strong> moving</td>
    </tr>
    <tr>
      <td>Force due to B <em>on</em> a current wire</td>
      <td>$\vec{F}_{mag} = I \int d\vec{l}\times \vec{B}$</td>
      <td>For wire essentially it is a collection of moving charges with $dq= \lambda dl$</td>
    </tr>
    <tr>
      <td> </td>
      <td>$d\vec{F}_{mag} = dq(\vec{v}\times \vec{B}) = \lambda dl(\vec{v}\times \vec{B})=(\vec{I}\times \vec{B})dl$</td>
      <td>derivation of the above</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>basically still Lorentz force</td>
    </tr>
    <tr>
      <td>Work done by $B$</td>
      <td>$dW_{mag} = \vec{F}_{mag}\cdot{d\vec{l}}=0$</td>
      <td>Because $\vec{F}_{mag}= Q(\vec{v}\times \vec{B})$ but $d\vec{l}= \vec{v}dt$</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>Therefore, it <strong>only changes direction</strong> of velocity</td>
    </tr>
    <tr>
      <td>Charge density</td>
      <td>$J = \rho v = dI/da_{\perp}$</td>
      <td>The parallel of $\rho$ in electrostatstics</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>Used for Biot-Savart Law</td>
    </tr>
    <tr>
      <td> </td>
      <td>$I = \int \vec{J} \cdot d\vec{S}$</td>
      <td>current in a wire with $\vec{J}$</td>
    </tr>
    <tr>
      <td>Force due to $B$ on a current density</td>
      <td>$\vec{F}_{mag} = \int \vec{J}\times \vec{B}d\tau$</td>
      <td>essentially it is a collection of moving charges with $dq= \rho d\tau$</td>
    </tr>
    <tr>
      <td> </td>
      <td>$d\vec{F}_{mag} = \rho d\tau (\vec{v}\times \vec{B}) =(\vec{J}\times \vec{B})d\tau$</td>
      <td> </td>
    </tr>
    <tr>
      <td>Cycltron Drift Velocity</td>
      <td>$\vec{v}_{drift} = \frac{\vec{E}\times \vec{B}}{B^2}$</td>
      <td>a moving charge then there is both $E$ and $B$ field, it drifts in addition to looping</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>better to find this during solving ODEs</td>
    </tr>
    <tr>
      <td>Cycltron Rotation Frequency</td>
      <td>$w_c = \vert qB/m\vert$</td>
      <td>found by solving the ODE</td>
    </tr>
    <tr>
      <td>Cycltron Radius</td>
      <td>$R = (mv) / (qB)$</td>
      <td>because $R = v/\omega_c$ for $v$ being the orbital speed</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>works if we are only rotating</td>
    </tr>
    <tr>
      <td>Biot-Savart Law Generic</td>
      <td>$\vec{B}(\vec{r}) = \int \frac{\mu_0}{4\pi} \frac{\vec{J}(\vec{r}’)\times(\vec{r}-\vec{r’})}{\vert \vec{r}-\vec{r’}\vert ^3}\,d^3r’$</td>
      <td>True if $J$ is independent of time, i.e. steady</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{E}(\vec{r}) = \int \frac{1}{4\pi \epsilon_0} \frac{\vec{\rho}(\vec{r}’)\cdot(\vec{r}-\vec{r’})}{\vert \vec{r}-\vec{r’}\vert ^3}\,d^3r’$</td>
      <td>parallel to the $\vec{E}$ field, basically $J \to \rho$</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\mu_0 = 1/(\epsilon_0 c^2)$</td>
      <td> </td>
    </tr>
    <tr>
      <td>Biot-Savart if Steady current</td>
      <td>$\vec{B}(\vec{r}) = \frac{\mu_0 I}{4\pi} \int \frac{d\vec{l}(\vec{r}’)\times(\vec{r}-\vec{r}’)}{\vert \vec{r}-\vec{r}’\vert ^3}$</td>
      <td>basically we have here $\vec{J} = \vec{I}\delta^2(\vec{r}-\vec{r}’)$ and that $\vec{I}dl = Id\vec{l}$</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>works if constant current so $\vec{I}dl = Id\vec{l}$ holds</td>
    </tr>
    <tr>
      <td> </td>
      <td><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220423171201916.png" alt="image-20220423171201916" style="zoom: 67%;" /></td>
      <td>Integrates $dl’$ ==only== over where $\vec{r}’ \neq 0$</td>
    </tr>
    <tr>
      <td>Magnetric Field of a Straight line wire</td>
      <td>$\vec{B} = \frac{\mu_0 I}{2\pi r} \hat{e}_\phi$</td>
      <td>Found either using Biot-Savart for current, or using the symmetry hence $\oint \vec{B}\cdot d\vec{l} = \mu_0 I_{enc}$</td>
    </tr>
    <tr>
      <td> </td>
      <td><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220423171528461.png" alt="image-20220423171528461" style="zoom: 67%;" /></td>
      <td>Graphically it circulates the current</td>
    </tr>
    <tr>
      <td>Divregence of B</td>
      <td>$\vec{\nabla}_{\vec{r}} \cdot \vec{B}(\vec{r})=0$</td>
      <td>for E field we had $\vec{\nabla}\cdot \vec{E}= \rho/\epsilon_0$</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\oint \vec{B}\cdot d\vec{S}=0$</td>
      <td>for E field we had Gaussian surface $\oint \vec{E}\cdot d\vec{S}=Q_{enc}/\epsilon_0$!</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>derived using $\int \vec{\nabla}\cdot\vec{B} d\tau = \oint \vec{B}\cdot d\vec{S}$</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>not very useful for B field calculation</td>
    </tr>
    <tr>
      <td>Curl of B</td>
      <td>$\vec{\nabla}_{\vec{r}} \times \vec{B}(\vec{r})=\mu_0 \vec{J}(\vec{r})$</td>
      <td>for E field we had this is 0</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\oint \vec{B}\cdot d\vec{l}=\mu_0 I_{enc}$</td>
      <td>very useful for B field calculation if we have symmetry in $J$ or $I$ setup!</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>called <strong>Ampere Loops</strong></td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>derived using $\int \vec{\nabla}\times \vec{B}\cdot d\vec{S} = \oint \vec{B}\cdot d\vec{l}$</td>
    </tr>
    <tr>
      <td>Field of Solenoid with $n$ turns per unit legnth</td>
      <td>$\vec{B} = \mu_0 n I \hat{e}_z$</td>
      <td>if inside the solenoid</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{B}=0$</td>
      <td>if outside</td>
    </tr>
    <tr>
      <td> </td>
      <td><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220423174559253.png" alt="image-20220423174559253" style="zoom: 67%;" /></td>
      <td>Essentially solved by drawing Amphere loops</td>
    </tr>
    <tr>
      <td>Magnetic Vector Potential</td>
      <td>$\vec{\nabla}\times \vec{A} = \vec{B}$</td>
      <td>so that $\vec{A}$ is easier to compute</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>from $\vec{E}= - \vec{\nabla}V$ for $V$ is easier to compute</td>
    </tr>
    <tr>
      <td>Gauges for $\vec{A}$ due to above definition</td>
      <td>$\nabla(\nabla \cdot \vec{A})-\nabla^2\vec{A} = \mu_0 \vec{J}$</td>
      <td>if $\vec{\nabla}\times \vec{A} = \vec{B}$, and we know $\nabla \times \vec{B} = \mu_0 \vec{J}$</td>
    </tr>
    <tr>
      <td> </td>
      <td>if $\nabla \cdot \vec{A} = 0$</td>
      <td>Colomb’s Gauge, used by this course</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{A}’ = \vec{A}+ \nabla\lambda$ results in the same $B$ field</td>
      <td>therefore we can always force $\nabla \cdot \vec{A} = 0$ by choosing $\lambda$</td>
    </tr>
    <tr>
      <td>Magnetic Vector Potential Definition</td>
      <td>$\vec{A} = \frac{\mu_0}{4\pi}\int \frac{\vec{J}(\vec{r}’)}{\vert \vec{r}-\vec{r}’\vert }d^3r’$</td>
      <td>derived from the above with $\nabla^2 \vec{A}=-\mu_0 \vec{J}$, so that each compontent $A_x,A_y,A_z$ essentially is an analog version of $\nabla^2 V = - \rho / \epsilon_0$ and we know the solution $V$ from using $\rho$</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>this means that $\vec{A}$ is usually in the <strong>same direction</strong> as current!</td>
    </tr>
    <tr>
      <td> </td>
      <td>Technically $\vec{A} = \frac{\mu_0}{4\pi}\int \frac{\vec{J}(\vec{r}’)}{\vert \vec{r}-\vec{r}’\vert }d^3r’ + \vec{A}(0)$</td>
      <td>for $\vec{A}(0)$ is a reference point</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>usually use $\vec{A}(\infty)=0$</td>
    </tr>
    <tr>
      <td>Flux (open surface)</td>
      <td>$\Phi \equiv \int \vec{B}\cdot d\vec{A} = \oint \vec{A}\cdot d\vec{l}$</td>
      <td>non-zero because this is an open surface</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>don’t confuse against $\oint \vec{B}\cdot$</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>can be used to find $\vec{A}$ if we have symmetry and knows $\vec{B}$</td>
    </tr>
    <tr>
      <td>Multipole Expansion of $\vec{A}$</td>
      <td>$\vec{A}(\vec{r}) = \frac{\mu_0}{4\pi}\sum_{n=0}^\infty \frac{1}{r^{n+1}}\int \vec{J}(\vec{r}’)(r’)^n P_n[\cos \theta^*]d^3r’$</td>
      <td>we can no longer take $P_n[\cos \theta^<em>]$ for $\theta^</em>$ is the angle between $\vec{r}, \vec{r’}$ over any shaped wire!</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>derivation is simply the same as electrostatic case, taking $\frac{1}{\vert \vec{r}-\vec{r}’\vert }=\frac{1}{r}\sum_{n}^\infty (\frac{r’}{r})^n P_n[\cos \theta^*]$</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{A}(\vec{r})=\frac{\mu_0}{4\pi}\sum_{n=0}^\infty \frac{M_n}{r^{n+1}}$, for $M_n=\int \vec{J}(\vec{r}’)(r’)^n P_n[\cos \theta^*]d^3r’$</td>
      <td>$n$-th Moment term</td>
    </tr>
    <tr>
      <td> </td>
      <td>$V(\vec{r}) = \frac{1}{4 \pi \epsilon_0}\sum_{l=0}^\infty \frac{M_l}{r^{l+1}}P_l[\cos\theta]$, $M_l \equiv \int (r’)^l \rho(r’)d^3r’$</td>
      <td>electrostatic case where $\theta^*=\theta=\text{const}$</td>
    </tr>
    <tr>
      <td> </td>
      <td><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220423233826716.png" alt="image-20220423233826716" style="zoom: 67%;" /></td>
      <td>Grahpically we we are doing</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>Generic and true if far away</td>
    </tr>
    <tr>
      <td>Multipole Expansion of $\vec{A}$ with a wire</td>
      <td>$\vec{A}(\vec{r}) = \frac{\mu_0 I}{4\pi}\sum_{n=0}^\infty \frac{1}{r^{n+1}}\int (r’)^n P_n[\cos \theta^*]d\vec{l}’$</td>
      <td>Using $\vec{J} = \vec{I}\delta^2(\vec{r}-\vec{r}’)$ and then $\vec{I}dl = Id\vec{l}$</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{A}(\vec{r})=\frac{\mu_0}{4\pi}\sum_{n=0}^\infty \frac{M_n}{r^{n+1}}$, for $M_n=\int I(r’)^n P_n[\cos \theta^*]d\vec{l}’$</td>
      <td>$n$-th Moment term</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>use this if we have a wire with current $I$</td>
    </tr>
    <tr>
      <td>Monopole of $\vec{A}$ with a wire</td>
      <td>$\vec{A}_{mono} = \frac{\mu_0 I}{4 \pi}\frac{1}{r}\oint d\vec{l}=0$</td>
      <td>using the expansion formula above and taking $n=0$</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>always true if a <strong>closed loop</strong></td>
    </tr>
    <tr>
      <td>Dipole of $\vec{A}$ with a wire</td>
      <td>$\vec{A}_{dip} = \frac{\mu_0 I}{4 \pi}\frac{1}{r}\oint r’ \cos(\theta^*) d\vec{l}$</td>
      <td>using the above expansion with $n=1$</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{A}_{dip} = \frac{\mu_0 I}{4 \pi}\frac{(\oint I d\vec{A}’)\times \hat{r}}{r}=\frac{\mu_0 I}{4 \pi}\frac{\vec{m}\times \hat{r}}{r}$</td>
      <td>proven from $\hat{r}\cdot \vec{r}’ = r’ \cos(\theta^*)$</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>note that $\hat{r} = \vec{r}/\vert \vec{r}\vert ^2$ is not a coordinate vector</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{m}=\int I d\vec{A}’$</td>
      <td>Dipole moment alternative version</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>A closed curve but open surface</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>Won’t work if $I$ is over an entire surface instead of a wire</td>
    </tr>
    <tr>
      <td>Dipole of $\vec{A}$ of a loop wire with radius $a$</td>
      <td>$\vec{A}<em>{dip}(\vec{r}) = \frac{\mu_0 Ia^2}{4r^2}\sin \theta \hat{e}</em>\phi$</td>
      <td>$\theta$ is a constant when given $\vec{r}$</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>either find with the generic formula for $\vec{A}<em>{dip}$, or use the short cut of $\vec{A}</em>{dip}=\frac{\mu_0 I}{4 \pi}\frac{\vec{m}\times \hat{r}}{r}$ for $\vec{m}$ is easy here</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{A} \approx \vec{A}_{dip}$</td>
      <td>higher order terms drops very fast</td>
    </tr>
    <tr>
      <td> </td>
      <td><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220423235902806.png" alt="image-20220423235902806" /></td>
      <td>Graphical visualization</td>
    </tr>
    <tr>
      <td>$\vec{A}$ and $\vec{B}$ when given a dipole</td>
      <td>$\vec{A}(\vec{r}) = \frac{\mu_0}{4\pi} \frac{m_0 \sin\theta}{r^2}\hat{e}_\phi$</td>
      <td>if dipole is at origin $\vec{m} = m_0 \hat{e}_z$</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{B}(\vec{r}) = \frac{\mu_0 m_0}{4\pi r^2}(2 \cos \theta \hat{e}<em>\rho + \sin \theta \hat{e}</em>\phi)$</td>
      <td>taking $\nabla \times \vec{A}$ with spherical coordinates</td>
    </tr>
    <tr>
      <td> </td>
      <td><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220424001736659.png" alt="image-20220424001736659" style="zoom:80%;" /></td>
      <td>Visualizatoin of a “Dipole”</td>
    </tr>
    <tr>
      <td>$\vec{A}_{dip}$ of rotating charges</td>
      <td>$\vec{A}<em>{dip} = \int d\vec{A}</em>{dip}^{loop}$</td>
      <td>for we know that $d\vec{A}<em>{dip}^{loop}=\frac{\mu_0 a^2}{4r^2}\sin( \theta) dI\hat{e}</em>\phi$ for a loop current</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>basically suming over loops of wires. e.g. works by finding $dI = d\lambda \cdot v$ for $v = R\Omega$</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>once we found $\vec{A}<em>{dip}$ recover $\vec{m}$ with $\vec{A}</em>{dip}(\vec{r}) = \frac{\mu_0}{4\pi} \frac{m_0 \sin\theta}{r^2}\hat{e}_\phi$</td>
    </tr>
    <tr>
      <td> </td>
      <td><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220424001530883.png" alt="image-20220424001530883" style="zoom: 67%;" /></td>
      <td>cannot use $\vec{m}=\int I d\vec{A}’$ directly as we obviously don’t have a wire loop</td>
    </tr>
  </tbody>
</table>

<p><em>Cycltron Motion</em></p>

<p>In the generic case we have both $\vec{E}, \vec{B}$, we have both terms in the lorentz Force.</p>

\[\vec{E} = E \hat{x}\\
\vec{B} = B \hat{z}\]

<p>Since we know $\vec{B}$ only <strong>acts on $\vec{v}_{\perp}$</strong> to the field itself, we decompose the EoM into velocity perpendicular to $B$ and parallel to $B$:</p>

\[m \frac{d\vec{v}_{\perp}}{dt} = q (E_x + \vec{v}_{\perp}\times \vec{B})\\
m \frac{d\vec{v}_{\parallel}}{dt} = 0\]

<p>we notice that $\vec{E} \perp \vec{B}$ in this setup, hence $\vec{v}_{\parallel}$ is unaffected. Then we consider solving in <strong>cartesian coordiantes</strong>:</p>

\[\frac{d\vec{v}_{\perp}}{dt} = \frac{q}{m} (E_x + \vec{v}_{\perp}\times \vec{B})\to 
\begin{cases}
\dot{v}_x = \frac{q}{m} (E_x + Bv_y)\\
\dot{v}_y = -\frac{q}{m} (Bv_x)
\end{cases}\]

<p>which is a coupled equation and <strong>unsymmetric</strong> we can solve by:</p>

<ol>
  <li>
    <p>convert to symmetric equation with $v_y’ = v_y + (E_x/B)$, and $v_x’=v_x$ to get:</p>

\[\dot{v}_x' = \frac{q}{m} ( Bv_y')\\
\dot{v}_y' = -\frac{q}{m} (Bv_x')\]

    <p>essentially <strong>shifted a reference frame</strong> as if there is no more electric field. Then obviously the motion is a ==circular loop== in this frame.</p>
  </li>
  <li>
    <p>Solve and found that</p>

\[\ddot{v}_x' = -\frac{q^2B^2}{m^2} v_x'\\
\ddot{v}_y' = -\frac{q^2B^2}{m^2} v_y'\]

    <p>hence we get $w_c = \vert qB/m\vert$ being the rotating frequency, and solution for $v$s are obviously sines and cosines so we are looping.</p>
  </li>
</ol>

<p>Note that the drift velocity we fonud here is a specific case of:</p>

\[\vec{v}_{drift} = \frac{\vec{E}\times \vec{B}}{B^2}\]

<p>whenever we have both electric field and magnetic field for a moving charge.</p>

<p>(a good exercise here is to a) solve the motion with initial velocity zero, and b) solve the velocity at the bottom of the curve)</p>

<hr />

<p><em>Using Biot-Savart Law for Current</em></p>

<p>Consider using:</p>

\[\vec{B}(\vec{r}) = \frac{\mu_0 I}{4\pi} \int \frac{d\vec{l}(\vec{r}')\times(\vec{r}-\vec{r}')}{|\vec{r}-\vec{r}'|^3}\]

<p>to compute the magnetic field at $\vec{r}=(x,0,0)$ WLOG for this</p>

<p><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220423172057492.png" alt="image-20220423172057492" style="zoom: 67%;" /></p>

<p>Then:</p>

<ol>
  <li>
    <p>this <strong>only integrates over wire</strong>, so $d\vec{l}’ = dz’\, \hat{e}_z$ and $\vec{r}’ = (0,0,z’)$</p>
  </li>
  <li>
    <p>then you basically get</p>

\[\vec{B}(\vec{r}) = \frac{\mu_0 I}{4\pi} \int \frac{dz'\hat{e}_z\times(x\hat{e}_x - z'\hat{e}_z)}{[x^2+ z'^2]^{3/2}}\]

    <p>and yuo will be done</p>
  </li>
</ol>

<p>However, it would be wrong if you considered any of the following combination</p>

<ul>
  <li>$d\vec{l}’ = dz’\, \hat{e}_z$ and $\vec{r}’ = (x’,y’,z’)$</li>
  <li>$d\vec{l}’ = \delta(x’)\delta(y’)dz’\, \hat{e}_z$ and  $\vec{r}’ = (0,0,z’)$, which technically works but is wierd</li>
</ul>

<p>If you are unsure you can always go back to the generic expressoin with $J$, and then</p>

<ul>
  <li>taking $\vec{J} = \vec{I}(z’)\delta(x’)\delta(y’)$ in our case, then $\vec{I}dl = Id\vec{l}$</li>
  <li>since that is generic, use  $\vec{r}’ = (x’,y’,z’)$</li>
</ul>

<p>(as an exercise, find $B(z)$ for a loop current with radius $R$)</p>

<hr />

<p><em>Field of a Solenoid</em></p>

<p>Due to symmetry we know we can use Ampere’s loops.</p>

<p><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220423174841393.png" alt="image-20220423174841393" /></p>

<p>But first we need to show that <strong>there is no $B_r, B_\phi$ component</strong>. How do we argue this? Consider viewing the setup as</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">$B_\phi=0$</th>
      <th style="text-align: center">$B_r = 0$</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220423230418492.png" alt="image-20220423230418492" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220423230810409.png" alt="image-20220423230810409" /></td>
    </tr>
  </tbody>
</table>

<p>where the arguments are simple:</p>

<ul>
  <li>
    <p>for $B_\phi$, such a loop would have $2\pi B_\phi = 0$ using Ampere’s Law</p>
  </li>
  <li>
    <p>for $B_r$, we can suppose there is in the figure image with $B = B\hat{e}_r$</p>

    <ul>
      <li>reverse the current, we would have $-B\hat{e}_r$</li>
      <li>and then flip 180 degrees, still $- B\hat{e}_r$</li>
    </ul>

    <p>but the configuration is the same as the first image! Hence $B=0$</p>
  </li>
</ul>

<p>Therefore, $B=B_z\hat{e}_z$. So all we need to do is to draw loops that have $z$ component:</p>

<p><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220423231247879.png" alt="image-20220423231247879" style="zoom:67%;" /></p>

<p>where</p>

<ul>
  <li>for the second loop we have $B_z(a)L - B_z(b)L = 0$. Hence $B_z(a)=B_z(b)$. But we konw the field is finite so that $B_z(\infty)=0$. Therefore $B_z(r)=0, r&gt;R$</li>
  <li>then for the first lopo we get $B_z(r)L = \mu_0 (nL) I$, hence $B_z(r)=\mu_0 nL$ for $r &lt; R$</li>
</ul>

<hr />

<p><em>Magnetic Dipole of a Surface</em></p>

<p>Consider computing $\vec{m}$ of a rotating disk with charge density $\sigma$ and rotation speed $\Omega$:</p>

<p><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220424002154551.png" alt="image-20220424002154551" style="zoom:80%;" /></p>

<p>There are two ways to do it:</p>

<ul>
  <li>consider finding $A$ then match to find $\vec{m}$ (do it as an exercise)</li>
  <li>consider $\vec{m} = \int d\vec{m}^{loop}$
    <ul>
      <li>we know for a loop $d\vec{m}^{loop} = (dI)A = \pi r^2 dI$</li>
      <li>then we also know here that $dI = (d\lambda) v=(\sigma dr)(\Omega r)$</li>
      <li>the integral becomes $\int_0^R \sigma \Omega \pi r^3 dr$</li>
    </ul>
  </li>
</ul>

<hr />

<p><em>B Field of a rotating shell of charge</em></p>

<p>Essentially we integrate by summing over loop charges whose $\vec{A}_{dip}$ we already know</p>

<p><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220424003406867.png" alt="image-20220424003406867" style="zoom:67%;" /></p>

<p>so we consider</p>

\[\vec{A}_{dip} = \int d\vec{A}_{dip}^{loop}\]

<p>for which we know in this case the loop wires are the red ones highlighted:</p>

\[d\vec{A}_{dip}^{loop}=\frac{\mu_0 a^2}{4r^2}\sin( \theta) dI\hat{e}_\phi\]

<p>and</p>

<ul>
  <li>$a = R \sin(\theta’)$ in this case</li>
  <li>$dI = (d\lambda )v = (\sigma Rd\theta’)(\Omega R\sin(\theta’))$</li>
  <li>then just put everything together and find $\vec{A}_{dip}$</li>
</ul>

<p>Finally, we can use</p>

\[\vec{A}_{dip}(\vec{r}) = \frac{\mu_0}{4\pi} \frac{m_0 \sin\theta}{r^2}\hat{e}_\phi\]

<p>for $\vec{m} = m_o \hat{e}<em>z$ to easily find $\vec{m}$ of this corresponding $\vec{A}</em>{dip}$</p>

<hr />

<p>Summary of generic formulas</p>

<p><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220424003649546.png" alt="image-20220424003649546" style="zoom:67%;" /></p>

<h1 id="chapter-6">Chapter 6</h1>

<p>Magnetic fields in matter. Basically if we know a material is magnetized with $\vec{M}$ being the dipole per unit volume, what is the field $\vec{B}$ produced by such a magnetization.</p>

<ul>
  <li>remember that all magnetic effects are due to moving charges</li>
  <li>in a small scale, it can be produced by electrons orbiting = electrons cloud spinning = spinning charged sphere; or it can be electrons self-spin. Both of which basicity create magnetic dipoles and hence $\vec{M}$</li>
</ul>

<table>
  <thead>
    <tr>
      <th>Condition</th>
      <th>Equation</th>
      <th>Comment</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Paramagnetism due to uniform $\vec{B}$</td>
      <td>$\vec{N} = \vec{m}\times \vec{B}$</td>
      <td>dipole $\vec{m}$ not aligned with external field $\vec{B}$ will cause torque</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>consider electron self-spin as a dipole in this example</td>
    </tr>
    <tr>
      <td>Diamagnetism due to uniform $\vec{B}$</td>
      <td>$\Delta \vec{m}=-\frac{1}{2}e\Delta v R\vec{e}_z = - \frac{e^2R^2}{4m_e}\vec{B}$</td>
      <td>if $\vec{B}=B\hat{e}_z$ is perpendicular to orbit, then it affects centripetal force, hence changing speed</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{m}=I\int d\vec{a}=-\frac{1}{2}evR\hat{e}_z$</td>
      <td>without external field, $v$ solved from centripetal force being electrostatic attraction</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\frac{1}{4\pi \epsilon_0}\frac{e^2}{R^2}+ev’B = m_e\frac{v’^2}{R}$</td>
      <td>new speed $v’$ for same radius $R$ (due to quantum effect)</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\Delta \vec{m}=-\frac{1}{2}e\Delta v R\vec{e}_z = - \frac{e^2R^2}{4m_e}\vec{B}$</td>
      <td>opposes the applied field $\vec{B}$</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>Torque’s effect of aligning the dipole is little in this case.</td>
    </tr>
    <tr>
      <td>Magnetic Moment $\vec{M}(\vec{r})$</td>
      <td>$\vec{M}(\vec{r})\approx \sum \vec{m}$</td>
      <td>think of $\vec{M}$ as specifying a collection of tiny dipoles $\vec{m}$</td>
    </tr>
    <tr>
      <td>$\vec{A}$ from $\vec{M}$</td>
      <td>$\vec{A}=\frac{\mu_0}{4\pi} \sum_{i} \frac{\vec{m}\times \hat{r}}{\vert \vec{r}-\vec{r}_i’\vert }$</td>
      <td>discrete case</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{A}=\frac{\mu_0}{4\pi} \int \frac{\vec{m}\times \hat{r}}{\vert \vec{r}-\vec{r}’\vert }d^3r’$</td>
      <td>continuous case</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>note that $\hat{r}=\vec{r}/\vert \vec{r}\vert$</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{A}_{dip} = \frac{\mu_0}{4\pi} \frac{\vec{m}\times \hat{r}}{\vert \vec{r}-\vec{r}’\vert }$</td>
      <td>derived because we know the field of a single dipole</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>Most generic form of finding $\vec{B}$ from given $\vec{M}$</td>
    </tr>
    <tr>
      <td>$\vec{A}$ from $\vec{M}$ using bound currents</td>
      <td>$\vec{A}=\frac{\mu_0}{4\pi} \int_{all} \frac{\vec{J}_{b}}{\vert \vec{r}-\vec{r}’\vert }d^3r’+\frac{\mu_0}{4\pi}\oint \frac{\vec{K}_b}{\vert \vec{r} - \vec{r}’\vert }dA’$</td>
      <td>mathematically same as above</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{J}<em>b \equiv \nabla \times \vec{M},\quad \vec{K}</em>{b} \equiv \vec{M}\times \hat{n}$</td>
      <td>for $\hat{n}$ points from the magnetized material to vacuum</td>
    </tr>
    <tr>
      <td>Physical Interpretation of Bound Charges</td>
      <td>$\vec{K}_b = \vec{M}\times \hat{n}$</td>
      <td>imagine uniform magnetized material = uniform tiny current loops</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>Hence inner loops cancel, we only have net outer current</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{J}_b = \nabla \times \vec{M}$</td>
      <td>If non-uniform magnetized material, then net $\vec{J}_b$ comes from difference in current loops</td>
    </tr>
    <tr>
      <td>Auxiliary Field $\vec{H}$</td>
      <td>$\vec{H}=\frac{1}{\mu_0}\vec{B}-\vec{M}$</td>
      <td>more useful than $\vec{B}$ when we have magnetized material</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>$\vec{H}$ often in the <strong>same direction</strong> as $\vec{B}$ and $\vec{M}$</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>The magnetic parallel of $\vec{E}$ field. ($\vec{B}$ would be a parallel to $\vec{D}$ instead)</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\nabla \times \vec{B} = \mu_0 \vec{J}<em>{total} = \mu_0 (\vec{J}_b + \vec{J}</em>{free})$</td>
      <td>derivation from Ampere’s Law, then use $\vec{J}_b = \nabla \times \vec{M}$</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>true in general</td>
    </tr>
    <tr>
      <td>Differential and Integral form of $\vec{H}$</td>
      <td>$\nabla \times \vec{H} = \vec{J}_{free}$</td>
      <td>follows from the above</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\oint \vec{H}\cdot d\vec{l} =\int \vec{J}<em>{free} \cdot d\vec{A}=I</em>{free_{enc}}$</td>
      <td>very useful when we have symmetry</td>
    </tr>
    <tr>
      <td>Linear Material</td>
      <td>$\vec{M} \equiv \chi_m \vec{H}$</td>
      <td>$\vec{J}<em>{free} \to \vec{B}</em>{free}\to \vec{M}$ if material is magnetizable</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{B}= \mu_0 (1+ \chi_m)\vec{H}=\mu \vec{H}$</td>
      <td>derived from $\vec{H}=\frac{1}{\mu_0}\vec{B}-\vec{M}$</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\mu = \mu_r \mu_0 \equiv \mu_0(1 + \chi_m)$</td>
      <td> </td>
    </tr>
    <tr>
      <td>Boundary Conditions for $\vec{H}$</td>
      <td>$H^\perp_{above}-H^\perp_{below}=-(M^\perp_{above}-M^\perp_{below})$</td>
      <td>derived from Drawing a box on the surface and using $\oint \vec{H}\cdot d\vec{S}=-\int \vec{M}\cdot d\vec{S}$ (which comes from the definition of $\vec{H}$)</td>
    </tr>
    <tr>
      <td> </td>
      <td>$H^\parallel_{above}-H^\parallel_{below}=K^{\perp}_{free}$</td>
      <td>from below</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\vec{H}^\parallel_{above}-\vec{H}^\parallel_{below}=\vec{K}_{free}\times \hat{n}$</td>
      <td>derived from Drawling a loop on the surface and using $\oint \vec{H}\cdot d\vec{l}=I_{free_{enc}}$. In this case we have two directions for $\vec{H}^\parallel$, hence the RHS.</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>Useful for solving Laplacian with $\vec{H}=-\nabla W$</td>
    </tr>
    <tr>
      <td>Magnetic Scale Potential $W$</td>
      <td>$\vec{H}=-\nabla W$</td>
      <td>if $\vec{J}_{free}=0$ so that $\nabla \times \vec{H}=\vec{0}$</td>
    </tr>
    <tr>
      <td> </td>
      <td>$\nabla^2 W = \nabla \cdot \vec{M} = 0$</td>
      <td>if $\vec{\nabla}\cdot \vec{M}=0$, then it is Laplacian. True automatically if linear material.</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>Combine with B.C.to solve Laplacian as in electrostatics</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>With very restrictive condition it holds</td>
    </tr>
    <tr>
      <td>Field of Solenoid + Linear Material</td>
      <td>$\vec{B}<em>{in}=\mu_r \vec{B}</em>{vac_{in}}$</td>
      <td>putting a linear material inside solenoid further increases the field produced</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td>derived easily from drawing Ampere loops and using $\oint \vec{H}\cdot d\vec{l}=I_{free_{enc}}$</td>
    </tr>
  </tbody>
</table>

<p><em>Calculate $\vec{B}$ from Bound Currents</em></p>

<p>Suppose you are given a material with frozen in magnetization such that $\vec{M}=M\hat{e}_z$ inside the cylinder. The question is what is the magnetic field everywhere.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Setup</th>
      <th style="text-align: center">Setup with Bound Currents</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220503001559272.png" alt="image-20220503001559272" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220503001603605.png" alt="image-20220503001603605" /></td>
    </tr>
  </tbody>
</table>

<p>We know we can get $\vec{B}$ either:</p>

<ul>
  <li>calculate $\vec{A}$ then do $\vec{B}=\nabla \times \vec{A}$. You wil see that we have many ways to find $\vec{A}$
    <ul>
      <li>if finite currents to integrate through, consider treating them as rotating charge = current loops $\vec{A}<em>{dip} = \int d\vec{A}</em>{dip}^{loop}$</li>
      <li>or compute $\vec{A}$ from the bound charges using the generic formula above (a lot of work)</li>
    </ul>
  </li>
  <li>calculate $\vec{B}$ directly by treating bound currents as currents (faster here)</li>
  <li>calculate using $\vec{H}$ if linear material (not applicable here)
    <ul>
      <li>if $\vec{J}_b=0$ and $\nabla \cdot \vec{M}=0$, then can use $\vec{H}=-\nabla W$ and solve laplacian</li>
    </ul>
  </li>
</ul>

<p>We first compute the bound currents and notice that:</p>

\[\begin{align*}
\vec{J}_b &amp;= \nabla \times \vec{M} = \vec{0}\\
\vec{K}_b &amp;= \vec{M}(\vec{r})|_{surf}\times \hat{n} = \begin{cases}
0, &amp; \text{at top/bottom with }\hat{n} = \hat{e}_z\\
M\hat{e}_\phi &amp; \text{at sides with }\hat{n} = \hat{e}_r
\end{cases}
\end{align*}\]

<p>With this we have the graph on the right, for currents going around the cylinder. In this case, we know that $\vec{B}=B_z\hat{e}_z$, which makes the computation straightforward.</p>

<p>Then we can easily compute $\vec{B}$ given this current by drawing ampere loop:</p>

\[\oint \vec{B}\cdot d\vec{l} = \mu_0 I_{enc}\]

<p>Knowing that $\vec{B}_{outer}=\vec{0}$ from a solenoid, we have:</p>

\[B_z(r)L - 0 = \mu_0 L K_b = \mu_0LM\]

<p>Hence we obtain</p>

\[\vec{B}(\vec{r}) = \begin{cases}
\mu_0 M \hat{e}_z, &amp; r &lt; a\\
0, &amp; r &gt; a
\end{cases}\]

<p>which makes sense by right hand rule.</p>

<hr />

<p><em>Computing $\vec{A}$ given $\vec{M}$</em></p>

<p>Here we consider some finite bound currents with spherical symmetry, so that we have a spherical <strong>shell</strong> with given magnetization of $\vec{M}=M\hat{e}_z$:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Setup</th>
      <th style="text-align: center">Parallel with Rotating Charges</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220503010500922.png" alt="image-20220503010500922" style="zoom:67%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220503010504464.png" alt="image-20220503010504464" style="zoom:67%;" /></td>
    </tr>
  </tbody>
</table>

<p>First we compute the bound charges, and then decided what to do/which method to take:</p>

\[\begin{align*}
\vec{J}_b &amp;= \nabla \times \vec{M} = \vec{0}\\
\vec{K}_b &amp;= \vec{M}(\vec{r})|_{surf}\times \hat{n} = \vec{M}\times \hat{e}_\rho = M\sin \theta \hat{e}_\phi
\end{align*}\]

<p>So that essentially we have currents on the surface with $M\sin \theta$ dependence. This forbids us to use approaches with Ampere loops, but we realize that this is essentially integrating over many current loops = dipoles:</p>

\[\vec{A}_{dip} = \int d\vec{A}_{dip}^{loop}\]

<p>would be usable from previous chapter, which we basically know</p>

\[d\vec{A}_{dip}^{loop}=\frac{\mu_0 a^2}{4r^2}\sin( \theta) dI\hat{e}_\phi\]

<p>with $dI = (d\lambda )v = (\sigma Rd\theta’)(\Omega R\sin(\theta’))$. Hence all we need to do is to convert <strong>our $K$ to terms in $dI$</strong>:</p>

\[\vec{K} = \sigma \vec{v} = \sigma(\Omega R \sin \theta) \hat{e}_\phi = \vec{K}_b = M \sin \theta \hat{e}_\phi\]

<p>Then we just basically can find $\vec{A}$, from which we can find $\vec{B}$.</p>

<hr />

<p><em>Calculate field using $\vec{H}$ from given $\vec{M}$</em>:</p>

<p>Consider given that $\vec{M} = kr^2 \hat{e}_{\phi}$ inside a cynlinder</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Setup</th>
      <th style="text-align: center">Ampere Loop</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220503012829874.png" alt="image-20220503012829874" style="zoom:50%;" /></td>
      <td style="text-align: center"><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220503012834480.png" alt="image-20220503012834480" style="zoom:50%;" /></td>
    </tr>
  </tbody>
</table>

<p>Then we first know that the field $\vec{B},\vec{H}$ would therefore also be in $\hat{e}_{\phi}$ direction (do not confuse $\vec{M}$ with bound currents here). Hence drawing a Ampere loop inside:</p>

\[\oint \vec{H}\cdot d\vec{l} = 2\pi r H_\phi(r= I_{free_{enc}} = 0\]

<p>Hence we easily get $\vec{H}=0$ everywhere. Finally using $\vec{H}=\frac{1}{\mu_0}\vec{B}-\vec{M}$ we get back $\vec{B}$ field by:</p>

\[\vec{B} = \begin{cases}
\mu_0 kr^2 \hat{e}_\phi, &amp; r &lt; a\\
0, &amp; r &gt; a
\end{cases}\]

<p>since we know $\vec{M}$ as they are given.</p>

<ul>
  <li>an exercise of this would be to compute using bound currents and arrive at the same solution here.</li>
</ul>

<hr />

<p><em>When to use $\vec{H}$</em></p>

<p>In general, we can do ampere loops with $\vec{B}$ if we are sure we know all contributions (e.g. from current and from $\vec{M}<em>{induced}$). But consider the case where you have a <strong>magnetizable cylinder</strong> with some external currents $\vec{J}</em>{free} = I/(\pi R^2)\hat{e}_z$ following through</p>

<p><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220503013832964.png" alt="image-20220503013832964" style="zoom:67%;" /></p>

<p>The finding $\vec{B}$ naively using the loop above would give wrong result:</p>

\[2\pi B_\phi(r) = \mu_0 I \pi \left( \frac{r}{R}\right)^2\]

<p>but then yuo have ignored $\vec{M}_{induced}$ which could cause other components in $\vec{B}$. Therefore, the correct way is to consider $\vec{H}$:</p>

\[2\pi H_\phi(r) = I \pi \left( \frac{r}{R}\right)^2\]

<p>then using $\vec{H}=\frac{1}{\mu_0}\vec{B}-\vec{M}$ we get $\vec{B}$ (assuming $\vec{M}$ is linear)</p>

<hr />

<p><em>Parallels of $\vec{H}$ in Electrostatics</em>:</p>

<table>
  <thead>
    <tr>
      <th> </th>
      <th>Electrostatics</th>
      <th>Magnetostatics</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Linear Material</td>
      <td>$\vec{P}=\epsilon_0 \chi_e \vec{E}_{total}$</td>
      <td>$\vec{M} = \chi_m \vec{H}$</td>
    </tr>
    <tr>
      <td>Linear Material</td>
      <td>$\vec{D} = \epsilon \vec{E}_{total}$</td>
      <td>$\vec{B} = \mu \vec{H}$</td>
    </tr>
    <tr>
      <td>Generic</td>
      <td>$\vec{D} = \epsilon\vec{E}_{total} + \vec{P}$</td>
      <td>$\vec{B} = \mu_0 (\vec{H}+\vec{M})$</td>
    </tr>
  </tbody>
</table>

<p>so you see that the parallel of $\vec{E}$ is actually $\vec{H}$</p>

<hr />

<p><em>Magnetic Scalar Potential $W$</em></p>

<p>With very restrictive condition a problem can be formulated as a Laplacian. Consider the setup where you have an <strong>infinitely long</strong> cylinder with $\vec{M}=M\hat{e}_x$. We want to find $\vec{B}$ everywhere.</p>

<p><img src="/lectures/images/2022-05-03-APPH3300_Applied_Electromagnetism/image-20220503131136729.png" alt="image-20220503131136729" style="zoom:80%;" /></p>

<p>First, it is always a good idea to figure out the bound currents:</p>

\[\begin{align*}
\vec{J}_b &amp;= \nabla \times \vec{M} = \vec{0}\\
\vec{K}_b &amp;= \vec{M}(\vec{r})|_{surf}\times \hat{n} = \vec{M}\times \hat{e}_r = M\sin \phi \hat{e}_z
\end{align*}\]

<p>where we basically converted to cylindrical coordinate $\vec{M}=M(\cos \phi \hat{e}<em>r-\sin \phi \hat{e}</em>\phi)$, and we ignored the top/bottom surface of of the cylinder since it is infinitely long.</p>

<p>Notice that we cannot use Ampere loops here due to $\phi$ dependence, hence we consider Laplacian by realizing that</p>

\[\vec{J}_{free} = \vec{0}\\
\nabla \cdot \vec{M} = \nabla \cdot (M\hat{e}_x)=0\]

<p>Therefore Laplacian holds for $\vec{H}=-\nabla W$:</p>

\[\nabla^2 W = 0\]

<p>We know the solution for cylindrical Laplacian, but we need boundary conditions:</p>

\[\begin{cases}
W_{out}=W_{in},&amp; \text{continuity}\\
H^\perp_{above}-H^\perp_{below}=-(M^\perp_{above}-M^\perp_{below})=M\cos \phi, &amp; \text{B.C.} \\
W_{out}(r \to \infty) = 0\\
|W_{in}(r=0)| \le \infty
\end{cases}\]

<p>And the solution takes the form of</p>

\[W(r,\phi)=(F_mr^m+G_mr^{-m})[L_m\cos(m\phi)+N_m \sin(m \phi)]\]

<p>then solve in the same manner as in electrostatics.</p>]]></content><author><name></name></author><category term="2022@Columbia" /><summary type="html"><![CDATA[Applied EM Equations]]></summary></entry></feed>